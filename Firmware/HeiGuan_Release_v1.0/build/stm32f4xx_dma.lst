ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_dma.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DMA_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	DMA_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	DMA_DeInit:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "./Library/stm32f4xx_dma.c"
   1:./Library/stm32f4xx_dma.c **** /**
   2:./Library/stm32f4xx_dma.c ****   ******************************************************************************
   3:./Library/stm32f4xx_dma.c ****   * @file    stm32f4xx_dma.c
   4:./Library/stm32f4xx_dma.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_dma.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_dma.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_dma.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_dma.c ****   *          functionalities of the Direct Memory Access controller (DMA):           
   9:./Library/stm32f4xx_dma.c ****   *           + Initialization and Configuration
  10:./Library/stm32f4xx_dma.c ****   *           + Data Counter
  11:./Library/stm32f4xx_dma.c ****   *           + Double Buffer mode configuration and command  
  12:./Library/stm32f4xx_dma.c ****   *           + Interrupts and flags management
  13:./Library/stm32f4xx_dma.c ****   *           
  14:./Library/stm32f4xx_dma.c ****   @verbatim      
  15:./Library/stm32f4xx_dma.c ****  ===============================================================================      
  16:./Library/stm32f4xx_dma.c ****                        ##### How to use this driver #####
  17:./Library/stm32f4xx_dma.c ****  ===============================================================================
  18:./Library/stm32f4xx_dma.c ****     [..] 
  19:./Library/stm32f4xx_dma.c ****       (#) Enable The DMA controller clock using RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA1, ENABLE)
  20:./Library/stm32f4xx_dma.c ****           function for DMA1 or using RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA2, ENABLE)
  21:./Library/stm32f4xx_dma.c ****           function for DMA2.
  22:./Library/stm32f4xx_dma.c ****   
  23:./Library/stm32f4xx_dma.c ****       (#) Enable and configure the peripheral to be connected to the DMA Stream
  24:./Library/stm32f4xx_dma.c ****           (except for internal SRAM / FLASH memories: no initialization is 
  25:./Library/stm32f4xx_dma.c ****           necessary). 
  26:./Library/stm32f4xx_dma.c ****           
  27:./Library/stm32f4xx_dma.c ****       (#) For a given Stream, program the required configuration through following parameters:   
  28:./Library/stm32f4xx_dma.c ****           Source and Destination addresses, Transfer Direction, Transfer size, Source and Destinati
  29:./Library/stm32f4xx_dma.c ****           data formats, Circular or Normal mode, Stream Priority level, Source and Destination 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 2


  30:./Library/stm32f4xx_dma.c ****           Incrementation mode, FIFO mode and its Threshold (if needed), Burst 
  31:./Library/stm32f4xx_dma.c ****           mode for Source and/or Destination (if needed) using the DMA_Init() function.
  32:./Library/stm32f4xx_dma.c ****           To avoid filling unnecessary fields, you can call DMA_StructInit() function
  33:./Library/stm32f4xx_dma.c ****           to initialize a given structure with default values (reset values), the modify
  34:./Library/stm32f4xx_dma.c ****           only necessary fields 
  35:./Library/stm32f4xx_dma.c ****           (ie. Source and Destination addresses, Transfer size and Data Formats).
  36:./Library/stm32f4xx_dma.c ****   
  37:./Library/stm32f4xx_dma.c ****       (#) Enable the NVIC and the corresponding interrupt(s) using the function 
  38:./Library/stm32f4xx_dma.c ****           DMA_ITConfig() if you need to use DMA interrupts. 
  39:./Library/stm32f4xx_dma.c ****   
  40:./Library/stm32f4xx_dma.c ****       (#) Optionally, if the Circular mode is enabled, you can use the Double buffer mode by config
  41:./Library/stm32f4xx_dma.c ****           the second Memory address and the first Memory to be used through the function 
  42:./Library/stm32f4xx_dma.c ****           DMA_DoubleBufferModeConfig(). Then enable the Double buffer mode through the function
  43:./Library/stm32f4xx_dma.c ****           DMA_DoubleBufferModeCmd(). These operations must be done before step 6.
  44:./Library/stm32f4xx_dma.c ****       
  45:./Library/stm32f4xx_dma.c ****       (#) Enable the DMA stream using the DMA_Cmd() function. 
  46:./Library/stm32f4xx_dma.c ****                   
  47:./Library/stm32f4xx_dma.c ****       (#) Activate the needed Stream Request using PPP_DMACmd() function for
  48:./Library/stm32f4xx_dma.c ****           any PPP peripheral except internal SRAM and FLASH (ie. SPI, USART ...)
  49:./Library/stm32f4xx_dma.c ****           The function allowing this operation is provided in each PPP peripheral
  50:./Library/stm32f4xx_dma.c ****           driver (ie. SPI_DMACmd for SPI peripheral).
  51:./Library/stm32f4xx_dma.c ****           Once the Stream is enabled, it is not possible to modify its configuration
  52:./Library/stm32f4xx_dma.c ****           unless the stream is stopped and disabled.
  53:./Library/stm32f4xx_dma.c ****           After enabling the Stream, it is advised to monitor the EN bit status using
  54:./Library/stm32f4xx_dma.c ****           the function DMA_GetCmdStatus(). In case of configuration errors or bus errors
  55:./Library/stm32f4xx_dma.c ****           this bit will remain reset and all transfers on this Stream will remain on hold.      
  56:./Library/stm32f4xx_dma.c ****   
  57:./Library/stm32f4xx_dma.c ****       (#) Optionally, you can configure the number of data to be transferred
  58:./Library/stm32f4xx_dma.c ****           when the Stream is disabled (ie. after each Transfer Complete event
  59:./Library/stm32f4xx_dma.c ****           or when a Transfer Error occurs) using the function DMA_SetCurrDataCounter().
  60:./Library/stm32f4xx_dma.c ****           And you can get the number of remaining data to be transferred using 
  61:./Library/stm32f4xx_dma.c ****           the function DMA_GetCurrDataCounter() at run time (when the DMA Stream is
  62:./Library/stm32f4xx_dma.c ****           enabled and running).  
  63:./Library/stm32f4xx_dma.c ****                      
  64:./Library/stm32f4xx_dma.c ****       (#) To control DMA events you can use one of the following two methods:
  65:./Library/stm32f4xx_dma.c ****         (##) Check on DMA Stream flags using the function DMA_GetFlagStatus().  
  66:./Library/stm32f4xx_dma.c ****         (##) Use DMA interrupts through the function DMA_ITConfig() at initialization
  67:./Library/stm32f4xx_dma.c ****              phase and DMA_GetITStatus() function into interrupt routines in
  68:./Library/stm32f4xx_dma.c ****              communication phase.
  69:./Library/stm32f4xx_dma.c ****     [..]     
  70:./Library/stm32f4xx_dma.c ****           After checking on a flag you should clear it using DMA_ClearFlag()
  71:./Library/stm32f4xx_dma.c ****           function. And after checking on an interrupt event you should 
  72:./Library/stm32f4xx_dma.c ****           clear it using DMA_ClearITPendingBit() function.    
  73:./Library/stm32f4xx_dma.c ****                 
  74:./Library/stm32f4xx_dma.c ****       (#) Optionally, if Circular mode and Double Buffer mode are enabled, you can modify
  75:./Library/stm32f4xx_dma.c ****           the Memory Addresses using the function DMA_MemoryTargetConfig(). Make sure that
  76:./Library/stm32f4xx_dma.c ****           the Memory Address to be modified is not the one currently in use by DMA Stream.
  77:./Library/stm32f4xx_dma.c ****           This condition can be monitored using the function DMA_GetCurrentMemoryTarget().
  78:./Library/stm32f4xx_dma.c ****                 
  79:./Library/stm32f4xx_dma.c ****       (#) Optionally, Pause-Resume operations may be performed:
  80:./Library/stm32f4xx_dma.c ****           The DMA_Cmd() function may be used to perform Pause-Resume operation. 
  81:./Library/stm32f4xx_dma.c ****           When a transfer is ongoing, calling this function to disable the 
  82:./Library/stm32f4xx_dma.c ****           Stream will cause the transfer to be paused. All configuration registers 
  83:./Library/stm32f4xx_dma.c ****           and the number of remaining data will be preserved. When calling again 
  84:./Library/stm32f4xx_dma.c ****           this function to re-enable the Stream, the transfer will be resumed from 
  85:./Library/stm32f4xx_dma.c ****           the point where it was paused.          
  86:./Library/stm32f4xx_dma.c ****                    
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 3


  87:./Library/stm32f4xx_dma.c ****       -@- Memory-to-Memory transfer is possible by setting the address of the memory into
  88:./Library/stm32f4xx_dma.c ****            the Peripheral registers. In this mode, Circular mode and Double Buffer mode
  89:./Library/stm32f4xx_dma.c ****            are not allowed.
  90:./Library/stm32f4xx_dma.c ****     
  91:./Library/stm32f4xx_dma.c ****       -@- The FIFO is used mainly to reduce bus usage and to allow data 
  92:./Library/stm32f4xx_dma.c ****            packing/unpacking: it is possible to set different Data Sizes for 
  93:./Library/stm32f4xx_dma.c ****            the Peripheral and the Memory (ie. you can set Half-Word data size 
  94:./Library/stm32f4xx_dma.c ****            for the peripheral to access its data register and set Word data size
  95:./Library/stm32f4xx_dma.c ****            for the Memory to gain in access time. Each two Half-words will be 
  96:./Library/stm32f4xx_dma.c ****            packed and written in a single access to a Word in the Memory).
  97:./Library/stm32f4xx_dma.c ****       
  98:./Library/stm32f4xx_dma.c ****       -@- When FIFO is disabled, it is not allowed to configure different 
  99:./Library/stm32f4xx_dma.c ****            Data Sizes for Source and Destination. In this case the Peripheral 
 100:./Library/stm32f4xx_dma.c ****            Data Size will be applied to both Source and Destination.               
 101:./Library/stm32f4xx_dma.c ****   
 102:./Library/stm32f4xx_dma.c ****   @endverbatim
 103:./Library/stm32f4xx_dma.c ****   ******************************************************************************
 104:./Library/stm32f4xx_dma.c ****   * @attention
 105:./Library/stm32f4xx_dma.c ****   *
 106:./Library/stm32f4xx_dma.c ****   * Copyright (c) 2016 STMicroelectronics.
 107:./Library/stm32f4xx_dma.c ****   * All rights reserved.
 108:./Library/stm32f4xx_dma.c ****   *
 109:./Library/stm32f4xx_dma.c ****   * This software is licensed under terms that can be found in the LICENSE file
 110:./Library/stm32f4xx_dma.c ****   * in the root directory of this software component.
 111:./Library/stm32f4xx_dma.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 112:./Library/stm32f4xx_dma.c ****   *
 113:./Library/stm32f4xx_dma.c ****   ******************************************************************************
 114:./Library/stm32f4xx_dma.c ****   */
 115:./Library/stm32f4xx_dma.c **** 
 116:./Library/stm32f4xx_dma.c **** /* Includes ------------------------------------------------------------------*/
 117:./Library/stm32f4xx_dma.c **** #include "stm32f4xx_dma.h"
 118:./Library/stm32f4xx_dma.c **** #include "stm32f4xx_rcc.h"
 119:./Library/stm32f4xx_dma.c **** 
 120:./Library/stm32f4xx_dma.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 121:./Library/stm32f4xx_dma.c ****   * @{
 122:./Library/stm32f4xx_dma.c ****   */
 123:./Library/stm32f4xx_dma.c **** 
 124:./Library/stm32f4xx_dma.c **** /** @defgroup DMA 
 125:./Library/stm32f4xx_dma.c ****   * @brief DMA driver modules
 126:./Library/stm32f4xx_dma.c ****   * @{
 127:./Library/stm32f4xx_dma.c ****   */ 
 128:./Library/stm32f4xx_dma.c **** 
 129:./Library/stm32f4xx_dma.c **** /* Private typedef -----------------------------------------------------------*/
 130:./Library/stm32f4xx_dma.c **** /* Private define ------------------------------------------------------------*/
 131:./Library/stm32f4xx_dma.c **** 
 132:./Library/stm32f4xx_dma.c **** /* Masks Definition */
 133:./Library/stm32f4xx_dma.c **** #define TRANSFER_IT_ENABLE_MASK (uint32_t)(DMA_SxCR_TCIE | DMA_SxCR_HTIE | \
 134:./Library/stm32f4xx_dma.c ****                                            DMA_SxCR_TEIE | DMA_SxCR_DMEIE)
 135:./Library/stm32f4xx_dma.c **** 
 136:./Library/stm32f4xx_dma.c **** #define DMA_Stream0_IT_MASK     (uint32_t)(DMA_LISR_FEIF0 | DMA_LISR_DMEIF0 | \
 137:./Library/stm32f4xx_dma.c ****                                            DMA_LISR_TEIF0 | DMA_LISR_HTIF0 | \
 138:./Library/stm32f4xx_dma.c ****                                            DMA_LISR_TCIF0)
 139:./Library/stm32f4xx_dma.c **** 
 140:./Library/stm32f4xx_dma.c **** #define DMA_Stream1_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 6)
 141:./Library/stm32f4xx_dma.c **** #define DMA_Stream2_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 16)
 142:./Library/stm32f4xx_dma.c **** #define DMA_Stream3_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 22)
 143:./Library/stm32f4xx_dma.c **** #define DMA_Stream4_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK | (uint32_t)0x20000000)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 4


 144:./Library/stm32f4xx_dma.c **** #define DMA_Stream5_IT_MASK     (uint32_t)(DMA_Stream1_IT_MASK | (uint32_t)0x20000000)
 145:./Library/stm32f4xx_dma.c **** #define DMA_Stream6_IT_MASK     (uint32_t)(DMA_Stream2_IT_MASK | (uint32_t)0x20000000)
 146:./Library/stm32f4xx_dma.c **** #define DMA_Stream7_IT_MASK     (uint32_t)(DMA_Stream3_IT_MASK | (uint32_t)0x20000000)
 147:./Library/stm32f4xx_dma.c **** #define TRANSFER_IT_MASK        (uint32_t)0x0F3C0F3C
 148:./Library/stm32f4xx_dma.c **** #define HIGH_ISR_MASK           (uint32_t)0x20000000
 149:./Library/stm32f4xx_dma.c **** #define RESERVED_MASK           (uint32_t)0x0F7D0F7D  
 150:./Library/stm32f4xx_dma.c **** 
 151:./Library/stm32f4xx_dma.c **** /* Private macro -------------------------------------------------------------*/
 152:./Library/stm32f4xx_dma.c **** /* Private variables ---------------------------------------------------------*/
 153:./Library/stm32f4xx_dma.c **** /* Private function prototypes -----------------------------------------------*/
 154:./Library/stm32f4xx_dma.c **** /* Private functions ---------------------------------------------------------*/
 155:./Library/stm32f4xx_dma.c **** 
 156:./Library/stm32f4xx_dma.c **** 
 157:./Library/stm32f4xx_dma.c **** /** @defgroup DMA_Private_Functions
 158:./Library/stm32f4xx_dma.c ****   * @{
 159:./Library/stm32f4xx_dma.c ****   */
 160:./Library/stm32f4xx_dma.c **** 
 161:./Library/stm32f4xx_dma.c **** /** @defgroup DMA_Group1 Initialization and Configuration functions
 162:./Library/stm32f4xx_dma.c ****  *  @brief   Initialization and Configuration functions
 163:./Library/stm32f4xx_dma.c ****  *
 164:./Library/stm32f4xx_dma.c **** @verbatim   
 165:./Library/stm32f4xx_dma.c ****  ===============================================================================
 166:./Library/stm32f4xx_dma.c ****                 ##### Initialization and Configuration functions #####
 167:./Library/stm32f4xx_dma.c ****  ===============================================================================  
 168:./Library/stm32f4xx_dma.c ****     [..]
 169:./Library/stm32f4xx_dma.c ****     This subsection provides functions allowing to initialize the DMA Stream source
 170:./Library/stm32f4xx_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 171:./Library/stm32f4xx_dma.c ****     buffer size, circular/normal mode selection, memory-to-memory mode selection 
 172:./Library/stm32f4xx_dma.c ****     and Stream priority value.
 173:./Library/stm32f4xx_dma.c ****     [..]
 174:./Library/stm32f4xx_dma.c ****     The DMA_Init() function follows the DMA configuration procedures as described in
 175:./Library/stm32f4xx_dma.c ****     reference manual (RM0090) except the first point: waiting on EN bit to be reset.
 176:./Library/stm32f4xx_dma.c ****     This condition should be checked by user application using the function DMA_GetCmdStatus()
 177:./Library/stm32f4xx_dma.c ****     before calling the DMA_Init() function.
 178:./Library/stm32f4xx_dma.c **** 
 179:./Library/stm32f4xx_dma.c **** @endverbatim
 180:./Library/stm32f4xx_dma.c ****   * @{
 181:./Library/stm32f4xx_dma.c ****   */
 182:./Library/stm32f4xx_dma.c **** 
 183:./Library/stm32f4xx_dma.c **** /**
 184:./Library/stm32f4xx_dma.c ****   * @brief  Deinitialize the DMAy Streamx registers to their default reset values.
 185:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 186:./Library/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 187:./Library/stm32f4xx_dma.c ****   * @retval None
 188:./Library/stm32f4xx_dma.c ****   */
 189:./Library/stm32f4xx_dma.c **** void DMA_DeInit(DMA_Stream_TypeDef* DMAy_Streamx)
 190:./Library/stm32f4xx_dma.c **** {
  30              		.loc 1 190 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 191:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 192:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
  35              		.loc 1 192 3 view .LVU1
 193:./Library/stm32f4xx_dma.c **** 
 194:./Library/stm32f4xx_dma.c ****   /* Disable the selected DMAy Streamx */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 5


 195:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->CR &= ~((uint32_t)DMA_SxCR_EN);
  36              		.loc 1 195 3 view .LVU2
  37              		.loc 1 195 20 is_stmt 0 view .LVU3
  38 0000 0368     		ldr	r3, [r0]
  39 0002 23F00103 		bic	r3, r3, #1
  40 0006 0360     		str	r3, [r0]
 196:./Library/stm32f4xx_dma.c **** 
 197:./Library/stm32f4xx_dma.c ****   /* Reset DMAy Streamx control register */
 198:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->CR  = 0;
  41              		.loc 1 198 3 is_stmt 1 view .LVU4
  42              		.loc 1 198 21 is_stmt 0 view .LVU5
  43 0008 0023     		movs	r3, #0
  44 000a 0360     		str	r3, [r0]
 199:./Library/stm32f4xx_dma.c ****   
 200:./Library/stm32f4xx_dma.c ****   /* Reset DMAy Streamx Number of Data to Transfer register */
 201:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = 0;
  45              		.loc 1 201 3 is_stmt 1 view .LVU6
  46              		.loc 1 201 22 is_stmt 0 view .LVU7
  47 000c 4360     		str	r3, [r0, #4]
 202:./Library/stm32f4xx_dma.c ****   
 203:./Library/stm32f4xx_dma.c ****   /* Reset DMAy Streamx peripheral address register */
 204:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->PAR  = 0;
  48              		.loc 1 204 3 is_stmt 1 view .LVU8
  49              		.loc 1 204 22 is_stmt 0 view .LVU9
  50 000e 8360     		str	r3, [r0, #8]
 205:./Library/stm32f4xx_dma.c ****   
 206:./Library/stm32f4xx_dma.c ****   /* Reset DMAy Streamx memory 0 address register */
 207:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->M0AR = 0;
  51              		.loc 1 207 3 is_stmt 1 view .LVU10
  52              		.loc 1 207 22 is_stmt 0 view .LVU11
  53 0010 C360     		str	r3, [r0, #12]
 208:./Library/stm32f4xx_dma.c **** 
 209:./Library/stm32f4xx_dma.c ****   /* Reset DMAy Streamx memory 1 address register */
 210:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->M1AR = 0;
  54              		.loc 1 210 3 is_stmt 1 view .LVU12
  55              		.loc 1 210 22 is_stmt 0 view .LVU13
  56 0012 0361     		str	r3, [r0, #16]
 211:./Library/stm32f4xx_dma.c **** 
 212:./Library/stm32f4xx_dma.c ****   /* Reset DMAy Streamx FIFO control register */
 213:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->FCR = (uint32_t)0x00000021; 
  57              		.loc 1 213 3 is_stmt 1 view .LVU14
  58              		.loc 1 213 21 is_stmt 0 view .LVU15
  59 0014 2123     		movs	r3, #33
  60 0016 4361     		str	r3, [r0, #20]
 214:./Library/stm32f4xx_dma.c **** 
 215:./Library/stm32f4xx_dma.c ****   /* Reset interrupt pending bits for the selected stream */
 216:./Library/stm32f4xx_dma.c ****   if (DMAy_Streamx == DMA1_Stream0)
  61              		.loc 1 216 3 is_stmt 1 view .LVU16
  62              		.loc 1 216 6 is_stmt 0 view .LVU17
  63 0018 3C4B     		ldr	r3, .L34
  64 001a 9842     		cmp	r0, r3
  65 001c 2DD0     		beq	.L18
 217:./Library/stm32f4xx_dma.c ****   {
 218:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream0 */
 219:./Library/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream0_IT_MASK;
 220:./Library/stm32f4xx_dma.c ****   }
 221:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream1)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 6


  66              		.loc 1 221 8 is_stmt 1 view .LVU18
  67              		.loc 1 221 11 is_stmt 0 view .LVU19
  68 001e 3C4B     		ldr	r3, .L34+4
  69 0020 9842     		cmp	r0, r3
  70 0022 2ED0     		beq	.L19
 222:./Library/stm32f4xx_dma.c ****   {
 223:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream1 */
 224:./Library/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream1_IT_MASK;
 225:./Library/stm32f4xx_dma.c ****   }
 226:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream2)
  71              		.loc 1 226 8 is_stmt 1 view .LVU20
  72              		.loc 1 226 11 is_stmt 0 view .LVU21
  73 0024 3B4B     		ldr	r3, .L34+8
  74 0026 9842     		cmp	r0, r3
  75 0028 30D0     		beq	.L20
 227:./Library/stm32f4xx_dma.c ****   {
 228:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream2 */
 229:./Library/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream2_IT_MASK;
 230:./Library/stm32f4xx_dma.c ****   }
 231:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream3)
  76              		.loc 1 231 8 is_stmt 1 view .LVU22
  77              		.loc 1 231 11 is_stmt 0 view .LVU23
  78 002a 3B4B     		ldr	r3, .L34+12
  79 002c 9842     		cmp	r0, r3
  80 002e 32D0     		beq	.L21
 232:./Library/stm32f4xx_dma.c ****   {
 233:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream3 */
 234:./Library/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream3_IT_MASK;
 235:./Library/stm32f4xx_dma.c ****   }
 236:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream4)
  81              		.loc 1 236 8 is_stmt 1 view .LVU24
  82              		.loc 1 236 11 is_stmt 0 view .LVU25
  83 0030 3A4B     		ldr	r3, .L34+16
  84 0032 9842     		cmp	r0, r3
  85 0034 34D0     		beq	.L22
 237:./Library/stm32f4xx_dma.c ****   {
 238:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream4 */
 239:./Library/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream4_IT_MASK;
 240:./Library/stm32f4xx_dma.c ****   }
 241:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream5)
  86              		.loc 1 241 8 is_stmt 1 view .LVU26
  87              		.loc 1 241 11 is_stmt 0 view .LVU27
  88 0036 3A4B     		ldr	r3, .L34+20
  89 0038 9842     		cmp	r0, r3
  90 003a 35D0     		beq	.L23
 242:./Library/stm32f4xx_dma.c ****   {
 243:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream5 */
 244:./Library/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream5_IT_MASK;
 245:./Library/stm32f4xx_dma.c ****   }
 246:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream6)
  91              		.loc 1 246 8 is_stmt 1 view .LVU28
  92              		.loc 1 246 11 is_stmt 0 view .LVU29
  93 003c 394B     		ldr	r3, .L34+24
  94 003e 9842     		cmp	r0, r3
  95 0040 36D0     		beq	.L24
 247:./Library/stm32f4xx_dma.c ****   {
 248:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream6 */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 7


 249:./Library/stm32f4xx_dma.c ****     DMA1->HIFCR = (uint32_t)DMA_Stream6_IT_MASK;
 250:./Library/stm32f4xx_dma.c ****   }
 251:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream7)
  96              		.loc 1 251 8 is_stmt 1 view .LVU30
  97              		.loc 1 251 11 is_stmt 0 view .LVU31
  98 0042 394B     		ldr	r3, .L34+28
  99 0044 9842     		cmp	r0, r3
 100 0046 37D0     		beq	.L25
 252:./Library/stm32f4xx_dma.c ****   {
 253:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream7 */
 254:./Library/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream7_IT_MASK;
 255:./Library/stm32f4xx_dma.c ****   }
 256:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream0)
 101              		.loc 1 256 8 is_stmt 1 view .LVU32
 102              		.loc 1 256 11 is_stmt 0 view .LVU33
 103 0048 384B     		ldr	r3, .L34+32
 104 004a 9842     		cmp	r0, r3
 105 004c 39D0     		beq	.L26
 257:./Library/stm32f4xx_dma.c ****   {
 258:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream0 */
 259:./Library/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream0_IT_MASK;
 260:./Library/stm32f4xx_dma.c ****   }
 261:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream1)
 106              		.loc 1 261 8 is_stmt 1 view .LVU34
 107              		.loc 1 261 11 is_stmt 0 view .LVU35
 108 004e 384B     		ldr	r3, .L34+36
 109 0050 9842     		cmp	r0, r3
 110 0052 3AD0     		beq	.L27
 262:./Library/stm32f4xx_dma.c ****   {
 263:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream1 */
 264:./Library/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream1_IT_MASK;
 265:./Library/stm32f4xx_dma.c ****   }
 266:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream2)
 111              		.loc 1 266 8 is_stmt 1 view .LVU36
 112              		.loc 1 266 11 is_stmt 0 view .LVU37
 113 0054 374B     		ldr	r3, .L34+40
 114 0056 9842     		cmp	r0, r3
 115 0058 3CD0     		beq	.L28
 267:./Library/stm32f4xx_dma.c ****   {
 268:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream2 */
 269:./Library/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream2_IT_MASK;
 270:./Library/stm32f4xx_dma.c ****   }
 271:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream3)
 116              		.loc 1 271 8 is_stmt 1 view .LVU38
 117              		.loc 1 271 11 is_stmt 0 view .LVU39
 118 005a 374B     		ldr	r3, .L34+44
 119 005c 9842     		cmp	r0, r3
 120 005e 3ED0     		beq	.L29
 272:./Library/stm32f4xx_dma.c ****   {
 273:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream3 */
 274:./Library/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream3_IT_MASK;
 275:./Library/stm32f4xx_dma.c ****   }
 276:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream4)
 121              		.loc 1 276 8 is_stmt 1 view .LVU40
 122              		.loc 1 276 11 is_stmt 0 view .LVU41
 123 0060 364B     		ldr	r3, .L34+48
 124 0062 9842     		cmp	r0, r3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 8


 125 0064 40D0     		beq	.L30
 277:./Library/stm32f4xx_dma.c ****   {
 278:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream4 */
 279:./Library/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream4_IT_MASK;
 280:./Library/stm32f4xx_dma.c ****   }
 281:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream5)
 126              		.loc 1 281 8 is_stmt 1 view .LVU42
 127              		.loc 1 281 11 is_stmt 0 view .LVU43
 128 0066 364B     		ldr	r3, .L34+52
 129 0068 9842     		cmp	r0, r3
 130 006a 41D0     		beq	.L31
 282:./Library/stm32f4xx_dma.c ****   {
 283:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream5 */
 284:./Library/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream5_IT_MASK;
 285:./Library/stm32f4xx_dma.c ****   }
 286:./Library/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream6)
 131              		.loc 1 286 8 is_stmt 1 view .LVU44
 132              		.loc 1 286 11 is_stmt 0 view .LVU45
 133 006c 354B     		ldr	r3, .L34+56
 134 006e 9842     		cmp	r0, r3
 135 0070 42D0     		beq	.L32
 287:./Library/stm32f4xx_dma.c ****   {
 288:./Library/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream6 */
 289:./Library/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream6_IT_MASK;
 290:./Library/stm32f4xx_dma.c ****   }
 291:./Library/stm32f4xx_dma.c ****   else 
 292:./Library/stm32f4xx_dma.c ****   {
 293:./Library/stm32f4xx_dma.c ****     if (DMAy_Streamx == DMA2_Stream7)
 136              		.loc 1 293 5 is_stmt 1 view .LVU46
 137              		.loc 1 293 8 is_stmt 0 view .LVU47
 138 0072 354B     		ldr	r3, .L34+60
 139 0074 9842     		cmp	r0, r3
 140 0076 43D0     		beq	.L33
 141              	.L1:
 294:./Library/stm32f4xx_dma.c ****     {
 295:./Library/stm32f4xx_dma.c ****       /* Reset interrupt pending bits for DMA2 Stream7 */
 296:./Library/stm32f4xx_dma.c ****       DMA2->HIFCR = DMA_Stream7_IT_MASK;
 297:./Library/stm32f4xx_dma.c ****     }
 298:./Library/stm32f4xx_dma.c ****   }
 299:./Library/stm32f4xx_dma.c **** }
 142              		.loc 1 299 1 view .LVU48
 143 0078 7047     		bx	lr
 144              	.L18:
 219:./Library/stm32f4xx_dma.c ****   }
 145              		.loc 1 219 5 is_stmt 1 view .LVU49
 219:./Library/stm32f4xx_dma.c ****   }
 146              		.loc 1 219 17 is_stmt 0 view .LVU50
 147 007a 103B     		subs	r3, r3, #16
 148 007c 3D22     		movs	r2, #61
 149 007e 9A60     		str	r2, [r3, #8]
 150 0080 7047     		bx	lr
 151              	.L19:
 224:./Library/stm32f4xx_dma.c ****   }
 152              		.loc 1 224 5 is_stmt 1 view .LVU51
 224:./Library/stm32f4xx_dma.c ****   }
 153              		.loc 1 224 17 is_stmt 0 view .LVU52
 154 0082 283B     		subs	r3, r3, #40
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 9


 155 0084 4FF47462 		mov	r2, #3904
 156 0088 9A60     		str	r2, [r3, #8]
 157 008a 7047     		bx	lr
 158              	.L20:
 229:./Library/stm32f4xx_dma.c ****   }
 159              		.loc 1 229 5 is_stmt 1 view .LVU53
 229:./Library/stm32f4xx_dma.c ****   }
 160              		.loc 1 229 17 is_stmt 0 view .LVU54
 161 008c 403B     		subs	r3, r3, #64
 162 008e 4FF47412 		mov	r2, #3997696
 163 0092 9A60     		str	r2, [r3, #8]
 164 0094 7047     		bx	lr
 165              	.L21:
 234:./Library/stm32f4xx_dma.c ****   }
 166              		.loc 1 234 5 is_stmt 1 view .LVU55
 234:./Library/stm32f4xx_dma.c ****   }
 167              		.loc 1 234 17 is_stmt 0 view .LVU56
 168 0096 583B     		subs	r3, r3, #88
 169 0098 4FF07462 		mov	r2, #255852544
 170 009c 9A60     		str	r2, [r3, #8]
 171 009e 7047     		bx	lr
 172              	.L22:
 239:./Library/stm32f4xx_dma.c ****   }
 173              		.loc 1 239 5 is_stmt 1 view .LVU57
 239:./Library/stm32f4xx_dma.c ****   }
 174              		.loc 1 239 17 is_stmt 0 view .LVU58
 175 00a0 703B     		subs	r3, r3, #112
 176 00a2 2A4A     		ldr	r2, .L34+64
 177 00a4 DA60     		str	r2, [r3, #12]
 178 00a6 7047     		bx	lr
 179              	.L23:
 244:./Library/stm32f4xx_dma.c ****   }
 180              		.loc 1 244 5 is_stmt 1 view .LVU59
 244:./Library/stm32f4xx_dma.c ****   }
 181              		.loc 1 244 17 is_stmt 0 view .LVU60
 182 00a8 883B     		subs	r3, r3, #136
 183 00aa 294A     		ldr	r2, .L34+68
 184 00ac DA60     		str	r2, [r3, #12]
 185 00ae 7047     		bx	lr
 186              	.L24:
 249:./Library/stm32f4xx_dma.c ****   }
 187              		.loc 1 249 5 is_stmt 1 view .LVU61
 249:./Library/stm32f4xx_dma.c ****   }
 188              		.loc 1 249 17 is_stmt 0 view .LVU62
 189 00b0 A03B     		subs	r3, r3, #160
 190 00b2 284A     		ldr	r2, .L34+72
 191 00b4 DA60     		str	r2, [r3, #12]
 192 00b6 7047     		bx	lr
 193              	.L25:
 254:./Library/stm32f4xx_dma.c ****   }
 194              		.loc 1 254 5 is_stmt 1 view .LVU63
 254:./Library/stm32f4xx_dma.c ****   }
 195              		.loc 1 254 17 is_stmt 0 view .LVU64
 196 00b8 B83B     		subs	r3, r3, #184
 197 00ba 4FF03D52 		mov	r2, #792723456
 198 00be DA60     		str	r2, [r3, #12]
 199 00c0 7047     		bx	lr
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 10


 200              	.L26:
 259:./Library/stm32f4xx_dma.c ****   }
 201              		.loc 1 259 5 is_stmt 1 view .LVU65
 259:./Library/stm32f4xx_dma.c ****   }
 202              		.loc 1 259 17 is_stmt 0 view .LVU66
 203 00c2 103B     		subs	r3, r3, #16
 204 00c4 3D22     		movs	r2, #61
 205 00c6 9A60     		str	r2, [r3, #8]
 206 00c8 7047     		bx	lr
 207              	.L27:
 264:./Library/stm32f4xx_dma.c ****   }
 208              		.loc 1 264 5 is_stmt 1 view .LVU67
 264:./Library/stm32f4xx_dma.c ****   }
 209              		.loc 1 264 17 is_stmt 0 view .LVU68
 210 00ca 283B     		subs	r3, r3, #40
 211 00cc 4FF47462 		mov	r2, #3904
 212 00d0 9A60     		str	r2, [r3, #8]
 213 00d2 7047     		bx	lr
 214              	.L28:
 269:./Library/stm32f4xx_dma.c ****   }
 215              		.loc 1 269 5 is_stmt 1 view .LVU69
 269:./Library/stm32f4xx_dma.c ****   }
 216              		.loc 1 269 17 is_stmt 0 view .LVU70
 217 00d4 403B     		subs	r3, r3, #64
 218 00d6 4FF47412 		mov	r2, #3997696
 219 00da 9A60     		str	r2, [r3, #8]
 220 00dc 7047     		bx	lr
 221              	.L29:
 274:./Library/stm32f4xx_dma.c ****   }
 222              		.loc 1 274 5 is_stmt 1 view .LVU71
 274:./Library/stm32f4xx_dma.c ****   }
 223              		.loc 1 274 17 is_stmt 0 view .LVU72
 224 00de 583B     		subs	r3, r3, #88
 225 00e0 4FF07462 		mov	r2, #255852544
 226 00e4 9A60     		str	r2, [r3, #8]
 227 00e6 7047     		bx	lr
 228              	.L30:
 279:./Library/stm32f4xx_dma.c ****   }
 229              		.loc 1 279 5 is_stmt 1 view .LVU73
 279:./Library/stm32f4xx_dma.c ****   }
 230              		.loc 1 279 17 is_stmt 0 view .LVU74
 231 00e8 703B     		subs	r3, r3, #112
 232 00ea 184A     		ldr	r2, .L34+64
 233 00ec DA60     		str	r2, [r3, #12]
 234 00ee 7047     		bx	lr
 235              	.L31:
 284:./Library/stm32f4xx_dma.c ****   }
 236              		.loc 1 284 5 is_stmt 1 view .LVU75
 284:./Library/stm32f4xx_dma.c ****   }
 237              		.loc 1 284 17 is_stmt 0 view .LVU76
 238 00f0 883B     		subs	r3, r3, #136
 239 00f2 174A     		ldr	r2, .L34+68
 240 00f4 DA60     		str	r2, [r3, #12]
 241 00f6 7047     		bx	lr
 242              	.L32:
 289:./Library/stm32f4xx_dma.c ****   }
 243              		.loc 1 289 5 is_stmt 1 view .LVU77
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 11


 289:./Library/stm32f4xx_dma.c ****   }
 244              		.loc 1 289 17 is_stmt 0 view .LVU78
 245 00f8 A03B     		subs	r3, r3, #160
 246 00fa 164A     		ldr	r2, .L34+72
 247 00fc DA60     		str	r2, [r3, #12]
 248 00fe 7047     		bx	lr
 249              	.L33:
 296:./Library/stm32f4xx_dma.c ****     }
 250              		.loc 1 296 7 is_stmt 1 view .LVU79
 296:./Library/stm32f4xx_dma.c ****     }
 251              		.loc 1 296 19 is_stmt 0 view .LVU80
 252 0100 B83B     		subs	r3, r3, #184
 253 0102 4FF03D52 		mov	r2, #792723456
 254 0106 DA60     		str	r2, [r3, #12]
 255              		.loc 1 299 1 view .LVU81
 256 0108 B6E7     		b	.L1
 257              	.L35:
 258 010a 00BF     		.align	2
 259              	.L34:
 260 010c 10600240 		.word	1073897488
 261 0110 28600240 		.word	1073897512
 262 0114 40600240 		.word	1073897536
 263 0118 58600240 		.word	1073897560
 264 011c 70600240 		.word	1073897584
 265 0120 88600240 		.word	1073897608
 266 0124 A0600240 		.word	1073897632
 267 0128 B8600240 		.word	1073897656
 268 012c 10640240 		.word	1073898512
 269 0130 28640240 		.word	1073898536
 270 0134 40640240 		.word	1073898560
 271 0138 58640240 		.word	1073898584
 272 013c 70640240 		.word	1073898608
 273 0140 88640240 		.word	1073898632
 274 0144 A0640240 		.word	1073898656
 275 0148 B8640240 		.word	1073898680
 276 014c 3D000020 		.word	536870973
 277 0150 400F0020 		.word	536874816
 278 0154 00003D20 		.word	540868608
 279              		.cfi_endproc
 280              	.LFE123:
 282              		.section	.text.DMA_Init,"ax",%progbits
 283              		.align	1
 284              		.global	DMA_Init
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	DMA_Init:
 290              	.LVL1:
 291              	.LFB124:
 300:./Library/stm32f4xx_dma.c **** 
 301:./Library/stm32f4xx_dma.c **** /**
 302:./Library/stm32f4xx_dma.c ****   * @brief  Initializes the DMAy Streamx according to the specified parameters in 
 303:./Library/stm32f4xx_dma.c ****   *         the DMA_InitStruct structure.
 304:./Library/stm32f4xx_dma.c ****   * @note   Before calling this function, it is recommended to check that the Stream 
 305:./Library/stm32f4xx_dma.c ****   *         is actually disabled using the function DMA_GetCmdStatus().  
 306:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 307:./Library/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 12


 308:./Library/stm32f4xx_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that contains
 309:./Library/stm32f4xx_dma.c ****   *         the configuration information for the specified DMA Stream.  
 310:./Library/stm32f4xx_dma.c ****   * @retval None
 311:./Library/stm32f4xx_dma.c ****   */
 312:./Library/stm32f4xx_dma.c **** void DMA_Init(DMA_Stream_TypeDef* DMAy_Streamx, DMA_InitTypeDef* DMA_InitStruct)
 313:./Library/stm32f4xx_dma.c **** {
 292              		.loc 1 313 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297              		.loc 1 313 1 is_stmt 0 view .LVU83
 298 0000 10B4     		push	{r4}
 299              	.LCFI0:
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 4, -4
 314:./Library/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 302              		.loc 1 314 3 is_stmt 1 view .LVU84
 303              	.LVL2:
 315:./Library/stm32f4xx_dma.c **** 
 316:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 317:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 304              		.loc 1 317 3 view .LVU85
 318:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_CHANNEL(DMA_InitStruct->DMA_Channel));
 305              		.loc 1 318 3 view .LVU86
 319:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_DIRECTION(DMA_InitStruct->DMA_DIR));
 306              		.loc 1 319 3 view .LVU87
 320:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 307              		.loc 1 320 3 view .LVU88
 321:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 308              		.loc 1 321 3 view .LVU89
 322:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));
 309              		.loc 1 322 3 view .LVU90
 323:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 310              		.loc 1 323 3 view .LVU91
 324:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 311              		.loc 1 324 3 view .LVU92
 325:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 312              		.loc 1 325 3 view .LVU93
 326:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 313              		.loc 1 326 3 view .LVU94
 327:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(DMA_InitStruct->DMA_FIFOMode));
 314              		.loc 1 327 3 view .LVU95
 328:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_FIFO_THRESHOLD(DMA_InitStruct->DMA_FIFOThreshold));
 315              		.loc 1 328 3 view .LVU96
 329:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_BURST(DMA_InitStruct->DMA_MemoryBurst));
 316              		.loc 1 329 3 view .LVU97
 330:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_BURST(DMA_InitStruct->DMA_PeripheralBurst));
 317              		.loc 1 330 3 view .LVU98
 331:./Library/stm32f4xx_dma.c **** 
 332:./Library/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx CR Configuration ------------------*/
 333:./Library/stm32f4xx_dma.c ****   /* Get the DMAy_Streamx CR value */
 334:./Library/stm32f4xx_dma.c ****   tmpreg = DMAy_Streamx->CR;
 318              		.loc 1 334 3 view .LVU99
 319              		.loc 1 334 10 is_stmt 0 view .LVU100
 320 0002 0368     		ldr	r3, [r0]
 321              	.LVL3:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 13


 335:./Library/stm32f4xx_dma.c **** 
 336:./Library/stm32f4xx_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 337:./Library/stm32f4xx_dma.c ****   tmpreg &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 322              		.loc 1 337 3 is_stmt 1 view .LVU101
 323              		.loc 1 337 10 is_stmt 0 view .LVU102
 324 0004 134A     		ldr	r2, .L38
 325 0006 1A40     		ands	r2, r2, r3
 326              	.LVL4:
 338:./Library/stm32f4xx_dma.c ****                          DMA_SxCR_PL | DMA_SxCR_MSIZE | DMA_SxCR_PSIZE | \
 339:./Library/stm32f4xx_dma.c ****                          DMA_SxCR_MINC | DMA_SxCR_PINC | DMA_SxCR_CIRC | \
 340:./Library/stm32f4xx_dma.c ****                          DMA_SxCR_DIR));
 341:./Library/stm32f4xx_dma.c **** 
 342:./Library/stm32f4xx_dma.c ****   /* Configure DMAy Streamx: */
 343:./Library/stm32f4xx_dma.c ****   /* Set CHSEL bits according to DMA_CHSEL value */
 344:./Library/stm32f4xx_dma.c ****   /* Set DIR bits according to DMA_DIR value */
 345:./Library/stm32f4xx_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 346:./Library/stm32f4xx_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 347:./Library/stm32f4xx_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 348:./Library/stm32f4xx_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 349:./Library/stm32f4xx_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 350:./Library/stm32f4xx_dma.c ****   /* Set PL bits according to DMA_Priority value */
 351:./Library/stm32f4xx_dma.c ****   /* Set MBURST bits according to DMA_MemoryBurst value */
 352:./Library/stm32f4xx_dma.c ****   /* Set PBURST bits according to DMA_PeripheralBurst value */
 353:./Library/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_Channel | DMA_InitStruct->DMA_DIR |
 327              		.loc 1 353 3 is_stmt 1 view .LVU103
 328              		.loc 1 353 27 is_stmt 0 view .LVU104
 329 0008 0B68     		ldr	r3, [r1]
 330              		.loc 1 353 41 view .LVU105
 331 000a CC68     		ldr	r4, [r1, #12]
 332 000c 2343     		orrs	r3, r3, r4
 333              		.loc 1 353 67 view .LVU106
 334 000e 4C69     		ldr	r4, [r1, #20]
 335 0010 2343     		orrs	r3, r3, r4
 354:./Library/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 336              		.loc 1 354 47 view .LVU107
 337 0012 8C69     		ldr	r4, [r1, #24]
 338 0014 2343     		orrs	r3, r3, r4
 339              		.loc 1 354 79 view .LVU108
 340 0016 CC69     		ldr	r4, [r1, #28]
 341 0018 2343     		orrs	r3, r3, r4
 355:./Library/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 342              		.loc 1 355 52 view .LVU109
 343 001a 0C6A     		ldr	r4, [r1, #32]
 344 001c 2343     		orrs	r3, r3, r4
 345              		.loc 1 355 89 view .LVU110
 346 001e 4C6A     		ldr	r4, [r1, #36]
 347 0020 2343     		orrs	r3, r3, r4
 356:./Library/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_Mode | DMA_InitStruct->DMA_Priority |
 348              		.loc 1 356 38 view .LVU111
 349 0022 8C6A     		ldr	r4, [r1, #40]
 350 0024 2343     		orrs	r3, r3, r4
 351              		.loc 1 356 69 view .LVU112
 352 0026 4C6B     		ldr	r4, [r1, #52]
 353 0028 2343     		orrs	r3, r3, r4
 357:./Library/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_MemoryBurst | DMA_InitStruct->DMA_PeripheralBurst;
 354              		.loc 1 357 45 view .LVU113
 355 002a 8C6B     		ldr	r4, [r1, #56]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 14


 356 002c 2343     		orrs	r3, r3, r4
 353:./Library/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 357              		.loc 1 353 10 view .LVU114
 358 002e 1343     		orrs	r3, r3, r2
 359              	.LVL5:
 358:./Library/stm32f4xx_dma.c **** 
 359:./Library/stm32f4xx_dma.c ****   /* Write to DMAy Streamx CR register */
 360:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->CR = tmpreg;
 360              		.loc 1 360 3 is_stmt 1 view .LVU115
 361              		.loc 1 360 20 is_stmt 0 view .LVU116
 362 0030 0360     		str	r3, [r0]
 361:./Library/stm32f4xx_dma.c **** 
 362:./Library/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx FCR Configuration -----------------*/
 363:./Library/stm32f4xx_dma.c ****   /* Get the DMAy_Streamx FCR value */
 364:./Library/stm32f4xx_dma.c ****   tmpreg = DMAy_Streamx->FCR;
 363              		.loc 1 364 3 is_stmt 1 view .LVU117
 364              		.loc 1 364 10 is_stmt 0 view .LVU118
 365 0032 4269     		ldr	r2, [r0, #20]
 366              	.LVL6:
 365:./Library/stm32f4xx_dma.c **** 
 366:./Library/stm32f4xx_dma.c ****   /* Clear DMDIS and FTH bits */
 367:./Library/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 367              		.loc 1 367 3 is_stmt 1 view .LVU119
 368              		.loc 1 367 10 is_stmt 0 view .LVU120
 369 0034 22F00702 		bic	r2, r2, #7
 370              	.LVL7:
 368:./Library/stm32f4xx_dma.c **** 
 369:./Library/stm32f4xx_dma.c ****   /* Configure DMAy Streamx FIFO: 
 370:./Library/stm32f4xx_dma.c ****     Set DMDIS bits according to DMA_FIFOMode value 
 371:./Library/stm32f4xx_dma.c ****     Set FTH bits according to DMA_FIFOThreshold value */
 372:./Library/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_FIFOMode | DMA_InitStruct->DMA_FIFOThreshold;
 371              		.loc 1 372 3 is_stmt 1 view .LVU121
 372              		.loc 1 372 27 is_stmt 0 view .LVU122
 373 0038 CB6A     		ldr	r3, [r1, #44]
 374              		.loc 1 372 42 view .LVU123
 375 003a 0C6B     		ldr	r4, [r1, #48]
 376 003c 2343     		orrs	r3, r3, r4
 377              		.loc 1 372 10 view .LVU124
 378 003e 1343     		orrs	r3, r3, r2
 379              	.LVL8:
 373:./Library/stm32f4xx_dma.c **** 
 374:./Library/stm32f4xx_dma.c ****   /* Write to DMAy Streamx CR */
 375:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->FCR = tmpreg;
 380              		.loc 1 375 3 is_stmt 1 view .LVU125
 381              		.loc 1 375 21 is_stmt 0 view .LVU126
 382 0040 4361     		str	r3, [r0, #20]
 376:./Library/stm32f4xx_dma.c **** 
 377:./Library/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx NDTR Configuration ----------------*/
 378:./Library/stm32f4xx_dma.c ****   /* Write to DMAy Streamx NDTR register */
 379:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = DMA_InitStruct->DMA_BufferSize;
 383              		.loc 1 379 3 is_stmt 1 view .LVU127
 384              		.loc 1 379 38 is_stmt 0 view .LVU128
 385 0042 0B69     		ldr	r3, [r1, #16]
 386              	.LVL9:
 387              		.loc 1 379 22 view .LVU129
 388 0044 4360     		str	r3, [r0, #4]
 389              	.LVL10:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 15


 380:./Library/stm32f4xx_dma.c **** 
 381:./Library/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx PAR Configuration -----------------*/
 382:./Library/stm32f4xx_dma.c ****   /* Write to DMAy Streamx PAR */
 383:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->PAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 390              		.loc 1 383 3 is_stmt 1 view .LVU130
 391              		.loc 1 383 37 is_stmt 0 view .LVU131
 392 0046 4B68     		ldr	r3, [r1, #4]
 393              		.loc 1 383 21 view .LVU132
 394 0048 8360     		str	r3, [r0, #8]
 384:./Library/stm32f4xx_dma.c **** 
 385:./Library/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx M0AR Configuration ----------------*/
 386:./Library/stm32f4xx_dma.c ****   /* Write to DMAy Streamx M0AR */
 387:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->M0AR = DMA_InitStruct->DMA_Memory0BaseAddr;
 395              		.loc 1 387 3 is_stmt 1 view .LVU133
 396              		.loc 1 387 38 is_stmt 0 view .LVU134
 397 004a 8B68     		ldr	r3, [r1, #8]
 398              		.loc 1 387 22 view .LVU135
 399 004c C360     		str	r3, [r0, #12]
 388:./Library/stm32f4xx_dma.c **** }
 400              		.loc 1 388 1 view .LVU136
 401 004e 5DF8044B 		ldr	r4, [sp], #4
 402              	.LCFI1:
 403              		.cfi_restore 4
 404              		.cfi_def_cfa_offset 0
 405 0052 7047     		bx	lr
 406              	.L39:
 407              		.align	2
 408              	.L38:
 409 0054 3F801CF0 		.word	-266567617
 410              		.cfi_endproc
 411              	.LFE124:
 413              		.section	.text.DMA_StructInit,"ax",%progbits
 414              		.align	1
 415              		.global	DMA_StructInit
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	DMA_StructInit:
 421              	.LVL11:
 422              	.LFB125:
 389:./Library/stm32f4xx_dma.c **** 
 390:./Library/stm32f4xx_dma.c **** /**
 391:./Library/stm32f4xx_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 392:./Library/stm32f4xx_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will 
 393:./Library/stm32f4xx_dma.c ****   *         be initialized.
 394:./Library/stm32f4xx_dma.c ****   * @retval None
 395:./Library/stm32f4xx_dma.c ****   */
 396:./Library/stm32f4xx_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 397:./Library/stm32f4xx_dma.c **** {
 423              		.loc 1 397 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 398:./Library/stm32f4xx_dma.c ****   /*-------------- Reset DMA init structure parameters values ----------------*/
 399:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_Channel member */
 400:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Channel = 0;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 16


 428              		.loc 1 400 3 view .LVU138
 429              		.loc 1 400 31 is_stmt 0 view .LVU139
 430 0000 0023     		movs	r3, #0
 431 0002 0360     		str	r3, [r0]
 401:./Library/stm32f4xx_dma.c **** 
 402:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 403:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 432              		.loc 1 403 3 is_stmt 1 view .LVU140
 433              		.loc 1 403 42 is_stmt 0 view .LVU141
 434 0004 4360     		str	r3, [r0, #4]
 404:./Library/stm32f4xx_dma.c **** 
 405:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_Memory0BaseAddr member */
 406:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Memory0BaseAddr = 0;
 435              		.loc 1 406 3 is_stmt 1 view .LVU142
 436              		.loc 1 406 39 is_stmt 0 view .LVU143
 437 0006 8360     		str	r3, [r0, #8]
 407:./Library/stm32f4xx_dma.c **** 
 408:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_DIR member */
 409:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralToMemory;
 438              		.loc 1 409 3 is_stmt 1 view .LVU144
 439              		.loc 1 409 27 is_stmt 0 view .LVU145
 440 0008 C360     		str	r3, [r0, #12]
 410:./Library/stm32f4xx_dma.c **** 
 411:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_BufferSize member */
 412:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 441              		.loc 1 412 3 is_stmt 1 view .LVU146
 442              		.loc 1 412 34 is_stmt 0 view .LVU147
 443 000a 0361     		str	r3, [r0, #16]
 413:./Library/stm32f4xx_dma.c **** 
 414:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 415:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 444              		.loc 1 415 3 is_stmt 1 view .LVU148
 445              		.loc 1 415 37 is_stmt 0 view .LVU149
 446 000c 4361     		str	r3, [r0, #20]
 416:./Library/stm32f4xx_dma.c **** 
 417:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryInc member */
 418:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 447              		.loc 1 418 3 is_stmt 1 view .LVU150
 448              		.loc 1 418 33 is_stmt 0 view .LVU151
 449 000e 8361     		str	r3, [r0, #24]
 419:./Library/stm32f4xx_dma.c **** 
 420:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 421:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 450              		.loc 1 421 3 is_stmt 1 view .LVU152
 451              		.loc 1 421 42 is_stmt 0 view .LVU153
 452 0010 C361     		str	r3, [r0, #28]
 422:./Library/stm32f4xx_dma.c **** 
 423:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 424:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 453              		.loc 1 424 3 is_stmt 1 view .LVU154
 454              		.loc 1 424 38 is_stmt 0 view .LVU155
 455 0012 0362     		str	r3, [r0, #32]
 425:./Library/stm32f4xx_dma.c **** 
 426:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_Mode member */
 427:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 456              		.loc 1 427 3 is_stmt 1 view .LVU156
 457              		.loc 1 427 28 is_stmt 0 view .LVU157
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 17


 458 0014 4362     		str	r3, [r0, #36]
 428:./Library/stm32f4xx_dma.c **** 
 429:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_Priority member */
 430:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 459              		.loc 1 430 3 is_stmt 1 view .LVU158
 460              		.loc 1 430 32 is_stmt 0 view .LVU159
 461 0016 8362     		str	r3, [r0, #40]
 431:./Library/stm32f4xx_dma.c **** 
 432:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_FIFOMode member */
 433:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_FIFOMode = DMA_FIFOMode_Disable;
 462              		.loc 1 433 3 is_stmt 1 view .LVU160
 463              		.loc 1 433 32 is_stmt 0 view .LVU161
 464 0018 C362     		str	r3, [r0, #44]
 434:./Library/stm32f4xx_dma.c **** 
 435:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_FIFOThreshold member */
 436:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull;
 465              		.loc 1 436 3 is_stmt 1 view .LVU162
 466              		.loc 1 436 37 is_stmt 0 view .LVU163
 467 001a 0363     		str	r3, [r0, #48]
 437:./Library/stm32f4xx_dma.c **** 
 438:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryBurst member */
 439:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryBurst = DMA_MemoryBurst_Single;
 468              		.loc 1 439 3 is_stmt 1 view .LVU164
 469              		.loc 1 439 35 is_stmt 0 view .LVU165
 470 001c 4363     		str	r3, [r0, #52]
 440:./Library/stm32f4xx_dma.c **** 
 441:./Library/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralBurst member */
 442:./Library/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 471              		.loc 1 442 3 is_stmt 1 view .LVU166
 472              		.loc 1 442 39 is_stmt 0 view .LVU167
 473 001e 8363     		str	r3, [r0, #56]
 443:./Library/stm32f4xx_dma.c **** }
 474              		.loc 1 443 1 view .LVU168
 475 0020 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE125:
 479              		.section	.text.DMA_Cmd,"ax",%progbits
 480              		.align	1
 481              		.global	DMA_Cmd
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 486              	DMA_Cmd:
 487              	.LVL12:
 488              	.LFB126:
 444:./Library/stm32f4xx_dma.c **** 
 445:./Library/stm32f4xx_dma.c **** /**
 446:./Library/stm32f4xx_dma.c ****   * @brief  Enables or disables the specified DMAy Streamx.
 447:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 448:./Library/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 449:./Library/stm32f4xx_dma.c ****   * @param  NewState: new state of the DMAy Streamx. 
 450:./Library/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
 451:./Library/stm32f4xx_dma.c ****   *
 452:./Library/stm32f4xx_dma.c ****   * @note  This function may be used to perform Pause-Resume operation. When a
 453:./Library/stm32f4xx_dma.c ****   *        transfer is ongoing, calling this function to disable the Stream will
 454:./Library/stm32f4xx_dma.c ****   *        cause the transfer to be paused. All configuration registers and the
 455:./Library/stm32f4xx_dma.c ****   *        number of remaining data will be preserved. When calling again this
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 18


 456:./Library/stm32f4xx_dma.c ****   *        function to re-enable the Stream, the transfer will be resumed from
 457:./Library/stm32f4xx_dma.c ****   *        the point where it was paused.          
 458:./Library/stm32f4xx_dma.c ****   *    
 459:./Library/stm32f4xx_dma.c ****   * @note  After configuring the DMA Stream (DMA_Init() function) and enabling the
 460:./Library/stm32f4xx_dma.c ****   *        stream, it is recommended to check (or wait until) the DMA Stream is
 461:./Library/stm32f4xx_dma.c ****   *        effectively enabled. A Stream may remain disabled if a configuration 
 462:./Library/stm32f4xx_dma.c ****   *        parameter is wrong.
 463:./Library/stm32f4xx_dma.c ****   *        After disabling a DMA Stream, it is also recommended to check (or wait
 464:./Library/stm32f4xx_dma.c ****   *        until) the DMA Stream is effectively disabled. If a Stream is disabled 
 465:./Library/stm32f4xx_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 466:./Library/stm32f4xx_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 467:./Library/stm32f4xx_dma.c ****   *        this single data is finished.            
 468:./Library/stm32f4xx_dma.c ****   *    
 469:./Library/stm32f4xx_dma.c ****   * @retval None
 470:./Library/stm32f4xx_dma.c ****   */
 471:./Library/stm32f4xx_dma.c **** void DMA_Cmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState)
 472:./Library/stm32f4xx_dma.c **** {
 489              		.loc 1 472 1 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 473:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 474:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 494              		.loc 1 474 3 view .LVU170
 475:./Library/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 495              		.loc 1 475 3 view .LVU171
 476:./Library/stm32f4xx_dma.c **** 
 477:./Library/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 496              		.loc 1 477 3 view .LVU172
 497              		.loc 1 477 6 is_stmt 0 view .LVU173
 498 0000 21B1     		cbz	r1, .L42
 478:./Library/stm32f4xx_dma.c ****   {
 479:./Library/stm32f4xx_dma.c ****     /* Enable the selected DMAy Streamx by setting EN bit */
 480:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_EN;
 499              		.loc 1 480 5 is_stmt 1 view .LVU174
 500              		.loc 1 480 22 is_stmt 0 view .LVU175
 501 0002 0368     		ldr	r3, [r0]
 502 0004 43F00103 		orr	r3, r3, #1
 503 0008 0360     		str	r3, [r0]
 504 000a 7047     		bx	lr
 505              	.L42:
 481:./Library/stm32f4xx_dma.c ****   }
 482:./Library/stm32f4xx_dma.c ****   else
 483:./Library/stm32f4xx_dma.c ****   {
 484:./Library/stm32f4xx_dma.c ****     /* Disable the selected DMAy Streamx by clearing EN bit */
 485:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_EN;
 506              		.loc 1 485 5 is_stmt 1 view .LVU176
 507              		.loc 1 485 22 is_stmt 0 view .LVU177
 508 000c 0368     		ldr	r3, [r0]
 509 000e 23F00103 		bic	r3, r3, #1
 510 0012 0360     		str	r3, [r0]
 486:./Library/stm32f4xx_dma.c ****   }
 487:./Library/stm32f4xx_dma.c **** }
 511              		.loc 1 487 1 view .LVU178
 512 0014 7047     		bx	lr
 513              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 19


 514              	.LFE126:
 516              		.section	.text.DMA_PeriphIncOffsetSizeConfig,"ax",%progbits
 517              		.align	1
 518              		.global	DMA_PeriphIncOffsetSizeConfig
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 523              	DMA_PeriphIncOffsetSizeConfig:
 524              	.LVL13:
 525              	.LFB127:
 488:./Library/stm32f4xx_dma.c **** 
 489:./Library/stm32f4xx_dma.c **** /**
 490:./Library/stm32f4xx_dma.c ****   * @brief  Configures, when the PINC (Peripheral Increment address mode) bit is
 491:./Library/stm32f4xx_dma.c ****   *         set, if the peripheral address should be incremented with the data 
 492:./Library/stm32f4xx_dma.c ****   *         size (configured with PSIZE bits) or by a fixed offset equal to 4
 493:./Library/stm32f4xx_dma.c ****   *         (32-bit aligned addresses).
 494:./Library/stm32f4xx_dma.c ****   *   
 495:./Library/stm32f4xx_dma.c ****   * @note   This function has no effect if the Peripheral Increment mode is disabled.
 496:./Library/stm32f4xx_dma.c ****   *     
 497:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 498:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 499:./Library/stm32f4xx_dma.c ****   * @param  DMA_Pincos: specifies the Peripheral increment offset size.
 500:./Library/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 501:./Library/stm32f4xx_dma.c ****   *            @arg DMA_PINCOS_Psize: Peripheral address increment is done  
 502:./Library/stm32f4xx_dma.c ****   *                                   accordingly to PSIZE parameter.
 503:./Library/stm32f4xx_dma.c ****   *            @arg DMA_PINCOS_WordAligned: Peripheral address increment offset is 
 504:./Library/stm32f4xx_dma.c ****   *                                         fixed to 4 (32-bit aligned addresses). 
 505:./Library/stm32f4xx_dma.c ****   * @retval None
 506:./Library/stm32f4xx_dma.c ****   */
 507:./Library/stm32f4xx_dma.c **** void DMA_PeriphIncOffsetSizeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_Pincos)
 508:./Library/stm32f4xx_dma.c **** {
 526              		.loc 1 508 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 509:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 510:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 531              		.loc 1 510 3 view .LVU180
 511:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_PINCOS_SIZE(DMA_Pincos));
 532              		.loc 1 511 3 view .LVU181
 512:./Library/stm32f4xx_dma.c **** 
 513:./Library/stm32f4xx_dma.c ****   /* Check the needed Peripheral increment offset */
 514:./Library/stm32f4xx_dma.c ****   if(DMA_Pincos != DMA_PINCOS_Psize)
 533              		.loc 1 514 3 view .LVU182
 534              		.loc 1 514 5 is_stmt 0 view .LVU183
 535 0000 21B1     		cbz	r1, .L45
 515:./Library/stm32f4xx_dma.c ****   {
 516:./Library/stm32f4xx_dma.c ****     /* Configure DMA_SxCR_PINCOS bit with the input parameter */
 517:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_PINCOS;     
 536              		.loc 1 517 5 is_stmt 1 view .LVU184
 537              		.loc 1 517 22 is_stmt 0 view .LVU185
 538 0002 0368     		ldr	r3, [r0]
 539 0004 43F40043 		orr	r3, r3, #32768
 540 0008 0360     		str	r3, [r0]
 541 000a 7047     		bx	lr
 542              	.L45:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 20


 518:./Library/stm32f4xx_dma.c ****   }
 519:./Library/stm32f4xx_dma.c ****   else
 520:./Library/stm32f4xx_dma.c ****   {
 521:./Library/stm32f4xx_dma.c ****     /* Clear the PINCOS bit: Peripheral address incremented according to PSIZE */
 522:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_PINCOS;    
 543              		.loc 1 522 5 is_stmt 1 view .LVU186
 544              		.loc 1 522 22 is_stmt 0 view .LVU187
 545 000c 0368     		ldr	r3, [r0]
 546 000e 23F40043 		bic	r3, r3, #32768
 547 0012 0360     		str	r3, [r0]
 523:./Library/stm32f4xx_dma.c ****   }
 524:./Library/stm32f4xx_dma.c **** }
 548              		.loc 1 524 1 view .LVU188
 549 0014 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE127:
 553              		.section	.text.DMA_FlowControllerConfig,"ax",%progbits
 554              		.align	1
 555              		.global	DMA_FlowControllerConfig
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 560              	DMA_FlowControllerConfig:
 561              	.LVL14:
 562              	.LFB128:
 525:./Library/stm32f4xx_dma.c **** 
 526:./Library/stm32f4xx_dma.c **** /**
 527:./Library/stm32f4xx_dma.c ****   * @brief  Configures, when the DMAy Streamx is disabled, the flow controller for
 528:./Library/stm32f4xx_dma.c ****   *         the next transactions (Peripheral or Memory).
 529:./Library/stm32f4xx_dma.c ****   *       
 530:./Library/stm32f4xx_dma.c ****   * @note   Before enabling this feature, check if the used peripheral supports 
 531:./Library/stm32f4xx_dma.c ****   *         the Flow Controller mode or not.    
 532:./Library/stm32f4xx_dma.c ****   *  
 533:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 534:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 535:./Library/stm32f4xx_dma.c ****   * @param  DMA_FlowCtrl: specifies the DMA flow controller.
 536:./Library/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 537:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FlowCtrl_Memory: DMAy_Streamx transactions flow controller is 
 538:./Library/stm32f4xx_dma.c ****   *                                      the DMA controller.
 539:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FlowCtrl_Peripheral: DMAy_Streamx transactions flow controller 
 540:./Library/stm32f4xx_dma.c ****   *                                          is the peripheral.    
 541:./Library/stm32f4xx_dma.c ****   * @retval None
 542:./Library/stm32f4xx_dma.c ****   */
 543:./Library/stm32f4xx_dma.c **** void DMA_FlowControllerConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FlowCtrl)
 544:./Library/stm32f4xx_dma.c **** {
 563              		.loc 1 544 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 545:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 546:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 568              		.loc 1 546 3 view .LVU190
 547:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_FLOW_CTRL(DMA_FlowCtrl));
 569              		.loc 1 547 3 view .LVU191
 548:./Library/stm32f4xx_dma.c **** 
 549:./Library/stm32f4xx_dma.c ****   /* Check the needed flow controller  */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 21


 550:./Library/stm32f4xx_dma.c ****   if(DMA_FlowCtrl != DMA_FlowCtrl_Memory)
 570              		.loc 1 550 3 view .LVU192
 571              		.loc 1 550 5 is_stmt 0 view .LVU193
 572 0000 21B1     		cbz	r1, .L48
 551:./Library/stm32f4xx_dma.c ****   {
 552:./Library/stm32f4xx_dma.c ****     /* Configure DMA_SxCR_PFCTRL bit with the input parameter */
 553:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_PFCTRL;   
 573              		.loc 1 553 5 is_stmt 1 view .LVU194
 574              		.loc 1 553 22 is_stmt 0 view .LVU195
 575 0002 0368     		ldr	r3, [r0]
 576 0004 43F02003 		orr	r3, r3, #32
 577 0008 0360     		str	r3, [r0]
 578 000a 7047     		bx	lr
 579              	.L48:
 554:./Library/stm32f4xx_dma.c ****   }
 555:./Library/stm32f4xx_dma.c ****   else
 556:./Library/stm32f4xx_dma.c ****   {
 557:./Library/stm32f4xx_dma.c ****     /* Clear the PFCTRL bit: Memory is the flow controller */
 558:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_PFCTRL;    
 580              		.loc 1 558 5 is_stmt 1 view .LVU196
 581              		.loc 1 558 22 is_stmt 0 view .LVU197
 582 000c 0368     		ldr	r3, [r0]
 583 000e 23F02003 		bic	r3, r3, #32
 584 0012 0360     		str	r3, [r0]
 559:./Library/stm32f4xx_dma.c ****   }
 560:./Library/stm32f4xx_dma.c **** }
 585              		.loc 1 560 1 view .LVU198
 586 0014 7047     		bx	lr
 587              		.cfi_endproc
 588              	.LFE128:
 590              		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 591              		.align	1
 592              		.global	DMA_SetCurrDataCounter
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 597              	DMA_SetCurrDataCounter:
 598              	.LVL15:
 599              	.LFB129:
 561:./Library/stm32f4xx_dma.c **** /**
 562:./Library/stm32f4xx_dma.c ****   * @}
 563:./Library/stm32f4xx_dma.c ****   */
 564:./Library/stm32f4xx_dma.c **** 
 565:./Library/stm32f4xx_dma.c **** /** @defgroup DMA_Group2 Data Counter functions
 566:./Library/stm32f4xx_dma.c ****  *  @brief   Data Counter functions 
 567:./Library/stm32f4xx_dma.c ****  *
 568:./Library/stm32f4xx_dma.c **** @verbatim   
 569:./Library/stm32f4xx_dma.c ****  ===============================================================================
 570:./Library/stm32f4xx_dma.c ****                       ##### Data Counter functions #####
 571:./Library/stm32f4xx_dma.c ****  ===============================================================================  
 572:./Library/stm32f4xx_dma.c ****     [..]
 573:./Library/stm32f4xx_dma.c ****     This subsection provides function allowing to configure and read the buffer size
 574:./Library/stm32f4xx_dma.c ****     (number of data to be transferred). 
 575:./Library/stm32f4xx_dma.c ****     [..]
 576:./Library/stm32f4xx_dma.c ****     The DMA data counter can be written only when the DMA Stream is disabled 
 577:./Library/stm32f4xx_dma.c ****     (ie. after transfer complete event).
 578:./Library/stm32f4xx_dma.c ****     [..]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 22


 579:./Library/stm32f4xx_dma.c ****     The following function can be used to write the Stream data counter value:
 580:./Library/stm32f4xx_dma.c ****       (+) void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter);
 581:./Library/stm32f4xx_dma.c ****       -@- It is advised to use this function rather than DMA_Init() in situations 
 582:./Library/stm32f4xx_dma.c ****           where only the Data buffer needs to be reloaded.
 583:./Library/stm32f4xx_dma.c ****       -@- If the Source and Destination Data Sizes are different, then the value 
 584:./Library/stm32f4xx_dma.c ****           written in data counter, expressing the number of transfers, is relative 
 585:./Library/stm32f4xx_dma.c ****           to the number of transfers from the Peripheral point of view.
 586:./Library/stm32f4xx_dma.c ****           ie. If Memory data size is Word, Peripheral data size is Half-Words, 
 587:./Library/stm32f4xx_dma.c ****           then the value to be configured in the data counter is the number 
 588:./Library/stm32f4xx_dma.c ****           of Half-Words to be transferred from/to the peripheral.
 589:./Library/stm32f4xx_dma.c ****     [..]
 590:./Library/stm32f4xx_dma.c ****     The DMA data counter can be read to indicate the number of remaining transfers for
 591:./Library/stm32f4xx_dma.c ****     the relative DMA Stream. This counter is decremented at the end of each data 
 592:./Library/stm32f4xx_dma.c ****     transfer and when the transfer is complete: 
 593:./Library/stm32f4xx_dma.c ****       (+) If Normal mode is selected: the counter is set to 0.
 594:./Library/stm32f4xx_dma.c ****       (+) If Circular mode is selected: the counter is reloaded with the initial value
 595:./Library/stm32f4xx_dma.c ****           (configured before enabling the DMA Stream)
 596:./Library/stm32f4xx_dma.c ****      [..]
 597:./Library/stm32f4xx_dma.c ****      The following function can be used to read the Stream data counter value:
 598:./Library/stm32f4xx_dma.c ****        (+) uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx);
 599:./Library/stm32f4xx_dma.c **** 
 600:./Library/stm32f4xx_dma.c **** @endverbatim
 601:./Library/stm32f4xx_dma.c ****   * @{
 602:./Library/stm32f4xx_dma.c ****   */
 603:./Library/stm32f4xx_dma.c **** 
 604:./Library/stm32f4xx_dma.c **** /**
 605:./Library/stm32f4xx_dma.c ****   * @brief  Writes the number of data units to be transferred on the DMAy Streamx.
 606:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 607:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 608:./Library/stm32f4xx_dma.c ****   * @param  Counter: Number of data units to be transferred (from 0 to 65535) 
 609:./Library/stm32f4xx_dma.c ****   *          Number of data items depends only on the Peripheral data format.
 610:./Library/stm32f4xx_dma.c ****   *            
 611:./Library/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Bytes: number of data units is equal 
 612:./Library/stm32f4xx_dma.c ****   *         to total number of bytes to be transferred.
 613:./Library/stm32f4xx_dma.c ****   *           
 614:./Library/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Half-Word: number of data units is  
 615:./Library/stm32f4xx_dma.c ****   *         equal to total number of bytes to be transferred / 2.
 616:./Library/stm32f4xx_dma.c ****   *           
 617:./Library/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Word: number of data units is equal 
 618:./Library/stm32f4xx_dma.c ****   *         to total  number of bytes to be transferred / 4.
 619:./Library/stm32f4xx_dma.c ****   *      
 620:./Library/stm32f4xx_dma.c ****   * @note   In Memory-to-Memory transfer mode, the memory buffer pointed by 
 621:./Library/stm32f4xx_dma.c ****   *         DMAy_SxPAR register is considered as Peripheral.
 622:./Library/stm32f4xx_dma.c ****   *      
 623:./Library/stm32f4xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Streamx transfer.
 624:./Library/stm32f4xx_dma.c ****   */
 625:./Library/stm32f4xx_dma.c **** void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter)
 626:./Library/stm32f4xx_dma.c **** {
 600              		.loc 1 626 1 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 627:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 628:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 605              		.loc 1 628 3 view .LVU200
 629:./Library/stm32f4xx_dma.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 23


 630:./Library/stm32f4xx_dma.c ****   /* Write the number of data units to be transferred */
 631:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = (uint16_t)Counter;
 606              		.loc 1 631 3 view .LVU201
 607              		.loc 1 631 22 is_stmt 0 view .LVU202
 608 0000 4160     		str	r1, [r0, #4]
 632:./Library/stm32f4xx_dma.c **** }
 609              		.loc 1 632 1 view .LVU203
 610 0002 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE129:
 614              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 615              		.align	1
 616              		.global	DMA_GetCurrDataCounter
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 621              	DMA_GetCurrDataCounter:
 622              	.LVL16:
 623              	.LFB130:
 633:./Library/stm32f4xx_dma.c **** 
 634:./Library/stm32f4xx_dma.c **** /**
 635:./Library/stm32f4xx_dma.c ****   * @brief  Returns the number of remaining data units in the current DMAy Streamx transfer.
 636:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 637:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 638:./Library/stm32f4xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Streamx transfer.
 639:./Library/stm32f4xx_dma.c ****   */
 640:./Library/stm32f4xx_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx)
 641:./Library/stm32f4xx_dma.c **** {
 624              		.loc 1 641 1 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 642:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 643:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 629              		.loc 1 643 3 view .LVU205
 644:./Library/stm32f4xx_dma.c **** 
 645:./Library/stm32f4xx_dma.c ****   /* Return the number of remaining data units for DMAy Streamx */
 646:./Library/stm32f4xx_dma.c ****   return ((uint16_t)(DMAy_Streamx->NDTR));
 630              		.loc 1 646 3 view .LVU206
 631              		.loc 1 646 34 is_stmt 0 view .LVU207
 632 0000 4068     		ldr	r0, [r0, #4]
 633              	.LVL17:
 647:./Library/stm32f4xx_dma.c **** }
 634              		.loc 1 647 1 view .LVU208
 635 0002 80B2     		uxth	r0, r0
 636 0004 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE130:
 640              		.section	.text.DMA_DoubleBufferModeConfig,"ax",%progbits
 641              		.align	1
 642              		.global	DMA_DoubleBufferModeConfig
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	DMA_DoubleBufferModeConfig:
 648              	.LVL18:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 24


 649              	.LFB131:
 648:./Library/stm32f4xx_dma.c **** /**
 649:./Library/stm32f4xx_dma.c ****   * @}
 650:./Library/stm32f4xx_dma.c ****   */
 651:./Library/stm32f4xx_dma.c **** 
 652:./Library/stm32f4xx_dma.c **** /** @defgroup DMA_Group3 Double Buffer mode functions
 653:./Library/stm32f4xx_dma.c ****  *  @brief   Double Buffer mode functions 
 654:./Library/stm32f4xx_dma.c ****  *
 655:./Library/stm32f4xx_dma.c **** @verbatim   
 656:./Library/stm32f4xx_dma.c ****  ===============================================================================
 657:./Library/stm32f4xx_dma.c ****                     ##### Double Buffer mode functions #####
 658:./Library/stm32f4xx_dma.c ****  ===============================================================================  
 659:./Library/stm32f4xx_dma.c ****     [..]
 660:./Library/stm32f4xx_dma.c ****     This subsection provides function allowing to configure and control the double 
 661:./Library/stm32f4xx_dma.c ****     buffer mode parameters.
 662:./Library/stm32f4xx_dma.c ****     
 663:./Library/stm32f4xx_dma.c ****     [..]
 664:./Library/stm32f4xx_dma.c ****     The Double Buffer mode can be used only when Circular mode is enabled.
 665:./Library/stm32f4xx_dma.c ****     The Double Buffer mode cannot be used when transferring data from Memory to Memory.
 666:./Library/stm32f4xx_dma.c ****     
 667:./Library/stm32f4xx_dma.c ****     [..]
 668:./Library/stm32f4xx_dma.c ****     The Double Buffer mode allows to set two different Memory addresses from/to which
 669:./Library/stm32f4xx_dma.c ****     the DMA controller will access alternatively (after completing transfer to/from 
 670:./Library/stm32f4xx_dma.c ****     target memory 0, it will start transfer to/from target memory 1).
 671:./Library/stm32f4xx_dma.c ****     This allows to reduce software overhead for double buffering and reduce the CPU
 672:./Library/stm32f4xx_dma.c ****     access time.
 673:./Library/stm32f4xx_dma.c ****     
 674:./Library/stm32f4xx_dma.c ****     [..]
 675:./Library/stm32f4xx_dma.c ****     Two functions must be called before calling the DMA_Init() function:
 676:./Library/stm32f4xx_dma.c ****       (+) void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, 
 677:./Library/stm32f4xx_dma.c ****           uint32_t Memory1BaseAddr, uint32_t DMA_CurrentMemory);
 678:./Library/stm32f4xx_dma.c ****       (+) void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState);
 679:./Library/stm32f4xx_dma.c ****       
 680:./Library/stm32f4xx_dma.c ****     [..]
 681:./Library/stm32f4xx_dma.c ****     DMA_DoubleBufferModeConfig() is called to configure the Memory 1 base address 
 682:./Library/stm32f4xx_dma.c ****     and the first Memory target from/to which the transfer will start after 
 683:./Library/stm32f4xx_dma.c ****     enabling the DMA Stream. Then DMA_DoubleBufferModeCmd() must be called 
 684:./Library/stm32f4xx_dma.c ****     to enable the Double Buffer mode (or disable it when it should not be used).
 685:./Library/stm32f4xx_dma.c ****   
 686:./Library/stm32f4xx_dma.c ****     [..]
 687:./Library/stm32f4xx_dma.c ****     Two functions can be called dynamically when the transfer is ongoing (or when the DMA Stream is
 688:./Library/stm32f4xx_dma.c ****     stopped) to modify on of the target Memories addresses or to check which Memory target is curre
 689:./Library/stm32f4xx_dma.c ****     used:
 690:./Library/stm32f4xx_dma.c ****       (+) void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, 
 691:./Library/stm32f4xx_dma.c ****                 uint32_t MemoryBaseAddr, uint32_t DMA_MemoryTarget);
 692:./Library/stm32f4xx_dma.c ****       (+) uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx);
 693:./Library/stm32f4xx_dma.c ****       
 694:./Library/stm32f4xx_dma.c ****     [..]
 695:./Library/stm32f4xx_dma.c ****     DMA_MemoryTargetConfig() can be called to modify the base address of one of 
 696:./Library/stm32f4xx_dma.c ****     the two target Memories.
 697:./Library/stm32f4xx_dma.c ****     The Memory of which the base address will be modified must not be currently 
 698:./Library/stm32f4xx_dma.c ****     be used by the DMA Stream (ie. if the DMA Stream is currently transferring 
 699:./Library/stm32f4xx_dma.c ****     from Memory 1 then you can only modify base address of target Memory 0 and vice versa).
 700:./Library/stm32f4xx_dma.c ****     To check this condition, it is recommended to use the function DMA_GetCurrentMemoryTarget() whi
 701:./Library/stm32f4xx_dma.c ****     returns the index of the Memory target currently in use by the DMA Stream.
 702:./Library/stm32f4xx_dma.c **** 
 703:./Library/stm32f4xx_dma.c **** @endverbatim
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 25


 704:./Library/stm32f4xx_dma.c ****   * @{
 705:./Library/stm32f4xx_dma.c ****   */
 706:./Library/stm32f4xx_dma.c ****   
 707:./Library/stm32f4xx_dma.c **** /**
 708:./Library/stm32f4xx_dma.c ****   * @brief  Configures, when the DMAy Streamx is disabled, the double buffer mode 
 709:./Library/stm32f4xx_dma.c ****   *         and the current memory target.
 710:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 711:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 712:./Library/stm32f4xx_dma.c ****   * @param  Memory1BaseAddr: the base address of the second buffer (Memory 1)  
 713:./Library/stm32f4xx_dma.c ****   * @param  DMA_CurrentMemory: specifies which memory will be first buffer for
 714:./Library/stm32f4xx_dma.c ****   *         the transactions when the Stream will be enabled. 
 715:./Library/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 716:./Library/stm32f4xx_dma.c ****   *            @arg DMA_Memory_0: Memory 0 is the current buffer.
 717:./Library/stm32f4xx_dma.c ****   *            @arg DMA_Memory_1: Memory 1 is the current buffer.  
 718:./Library/stm32f4xx_dma.c ****   *       
 719:./Library/stm32f4xx_dma.c ****   * @note   Memory0BaseAddr is set by the DMA structure configuration in DMA_Init().
 720:./Library/stm32f4xx_dma.c ****   *   
 721:./Library/stm32f4xx_dma.c ****   * @retval None
 722:./Library/stm32f4xx_dma.c ****   */
 723:./Library/stm32f4xx_dma.c **** void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t Memory1BaseAddr,
 724:./Library/stm32f4xx_dma.c ****                                 uint32_t DMA_CurrentMemory)
 725:./Library/stm32f4xx_dma.c **** {  
 650              		.loc 1 725 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 726:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 727:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 655              		.loc 1 727 3 view .LVU210
 728:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_CURRENT_MEM(DMA_CurrentMemory));
 656              		.loc 1 728 3 view .LVU211
 729:./Library/stm32f4xx_dma.c **** 
 730:./Library/stm32f4xx_dma.c ****   if (DMA_CurrentMemory != DMA_Memory_0)
 657              		.loc 1 730 3 view .LVU212
 658              		.loc 1 730 6 is_stmt 0 view .LVU213
 659 0000 2AB1     		cbz	r2, .L53
 731:./Library/stm32f4xx_dma.c ****   {
 732:./Library/stm32f4xx_dma.c ****     /* Set Memory 1 as current memory address */
 733:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)(DMA_SxCR_CT);    
 660              		.loc 1 733 5 is_stmt 1 view .LVU214
 661              		.loc 1 733 22 is_stmt 0 view .LVU215
 662 0002 0368     		ldr	r3, [r0]
 663 0004 43F40023 		orr	r3, r3, #524288
 664 0008 0360     		str	r3, [r0]
 665              	.L54:
 734:./Library/stm32f4xx_dma.c ****   }
 735:./Library/stm32f4xx_dma.c ****   else
 736:./Library/stm32f4xx_dma.c ****   {
 737:./Library/stm32f4xx_dma.c ****     /* Set Memory 0 as current memory address */
 738:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)(DMA_SxCR_CT);    
 739:./Library/stm32f4xx_dma.c ****   }
 740:./Library/stm32f4xx_dma.c **** 
 741:./Library/stm32f4xx_dma.c ****   /* Write to DMAy Streamx M1AR */
 742:./Library/stm32f4xx_dma.c ****   DMAy_Streamx->M1AR = Memory1BaseAddr;
 666              		.loc 1 742 3 is_stmt 1 view .LVU216
 667              		.loc 1 742 22 is_stmt 0 view .LVU217
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 26


 668 000a 0161     		str	r1, [r0, #16]
 743:./Library/stm32f4xx_dma.c **** }
 669              		.loc 1 743 1 view .LVU218
 670 000c 7047     		bx	lr
 671              	.L53:
 738:./Library/stm32f4xx_dma.c ****   }
 672              		.loc 1 738 5 is_stmt 1 view .LVU219
 738:./Library/stm32f4xx_dma.c ****   }
 673              		.loc 1 738 22 is_stmt 0 view .LVU220
 674 000e 0368     		ldr	r3, [r0]
 675 0010 23F40023 		bic	r3, r3, #524288
 676 0014 0360     		str	r3, [r0]
 677 0016 F8E7     		b	.L54
 678              		.cfi_endproc
 679              	.LFE131:
 681              		.section	.text.DMA_DoubleBufferModeCmd,"ax",%progbits
 682              		.align	1
 683              		.global	DMA_DoubleBufferModeCmd
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 688              	DMA_DoubleBufferModeCmd:
 689              	.LVL19:
 690              	.LFB132:
 744:./Library/stm32f4xx_dma.c **** 
 745:./Library/stm32f4xx_dma.c **** /**
 746:./Library/stm32f4xx_dma.c ****   * @brief  Enables or disables the double buffer mode for the selected DMA stream.
 747:./Library/stm32f4xx_dma.c ****   * @note   This function can be called only when the DMA Stream is disabled.  
 748:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 749:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 750:./Library/stm32f4xx_dma.c ****   * @param  NewState: new state of the DMAy Streamx double buffer mode. 
 751:./Library/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
 752:./Library/stm32f4xx_dma.c ****   * @retval None
 753:./Library/stm32f4xx_dma.c ****   */
 754:./Library/stm32f4xx_dma.c **** void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState)
 755:./Library/stm32f4xx_dma.c **** {  
 691              		.loc 1 755 1 is_stmt 1 view -0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 756:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 757:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 696              		.loc 1 757 3 view .LVU222
 758:./Library/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 697              		.loc 1 758 3 view .LVU223
 759:./Library/stm32f4xx_dma.c **** 
 760:./Library/stm32f4xx_dma.c ****   /* Configure the Double Buffer mode */
 761:./Library/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 698              		.loc 1 761 3 view .LVU224
 699              		.loc 1 761 6 is_stmt 0 view .LVU225
 700 0000 21B1     		cbz	r1, .L56
 762:./Library/stm32f4xx_dma.c ****   {
 763:./Library/stm32f4xx_dma.c ****     /* Enable the Double buffer mode */
 764:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_DBM;
 701              		.loc 1 764 5 is_stmt 1 view .LVU226
 702              		.loc 1 764 22 is_stmt 0 view .LVU227
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 27


 703 0002 0368     		ldr	r3, [r0]
 704 0004 43F48023 		orr	r3, r3, #262144
 705 0008 0360     		str	r3, [r0]
 706 000a 7047     		bx	lr
 707              	.L56:
 765:./Library/stm32f4xx_dma.c ****   }
 766:./Library/stm32f4xx_dma.c ****   else
 767:./Library/stm32f4xx_dma.c ****   {
 768:./Library/stm32f4xx_dma.c ****     /* Disable the Double buffer mode */
 769:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_DBM;
 708              		.loc 1 769 5 is_stmt 1 view .LVU228
 709              		.loc 1 769 22 is_stmt 0 view .LVU229
 710 000c 0368     		ldr	r3, [r0]
 711 000e 23F48023 		bic	r3, r3, #262144
 712 0012 0360     		str	r3, [r0]
 770:./Library/stm32f4xx_dma.c ****   }
 771:./Library/stm32f4xx_dma.c **** }
 713              		.loc 1 771 1 view .LVU230
 714 0014 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE132:
 718              		.section	.text.DMA_MemoryTargetConfig,"ax",%progbits
 719              		.align	1
 720              		.global	DMA_MemoryTargetConfig
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	DMA_MemoryTargetConfig:
 726              	.LVL20:
 727              	.LFB133:
 772:./Library/stm32f4xx_dma.c **** 
 773:./Library/stm32f4xx_dma.c **** /**
 774:./Library/stm32f4xx_dma.c ****   * @brief  Configures the Memory address for the next buffer transfer in double
 775:./Library/stm32f4xx_dma.c ****   *         buffer mode (for dynamic use). This function can be called when the
 776:./Library/stm32f4xx_dma.c ****   *         DMA Stream is enabled and when the transfer is ongoing.  
 777:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 778:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 779:./Library/stm32f4xx_dma.c ****   * @param  MemoryBaseAddr: The base address of the target memory buffer
 780:./Library/stm32f4xx_dma.c ****   * @param  DMA_MemoryTarget: Next memory target to be used. 
 781:./Library/stm32f4xx_dma.c ****   *         This parameter can be one of the following values:
 782:./Library/stm32f4xx_dma.c ****   *            @arg DMA_Memory_0: To use the memory address 0
 783:./Library/stm32f4xx_dma.c ****   *            @arg DMA_Memory_1: To use the memory address 1
 784:./Library/stm32f4xx_dma.c ****   * 
 785:./Library/stm32f4xx_dma.c ****   * @note    It is not allowed to modify the Base Address of a target Memory when
 786:./Library/stm32f4xx_dma.c ****   *          this target is involved in the current transfer. ie. If the DMA Stream
 787:./Library/stm32f4xx_dma.c ****   *          is currently transferring to/from Memory 1, then it not possible to
 788:./Library/stm32f4xx_dma.c ****   *          modify Base address of Memory 1, but it is possible to modify Base
 789:./Library/stm32f4xx_dma.c ****   *          address of Memory 0.
 790:./Library/stm32f4xx_dma.c ****   *          To know which Memory is currently used, you can use the function
 791:./Library/stm32f4xx_dma.c ****   *          DMA_GetCurrentMemoryTarget().             
 792:./Library/stm32f4xx_dma.c ****   *  
 793:./Library/stm32f4xx_dma.c ****   * @retval None
 794:./Library/stm32f4xx_dma.c ****   */
 795:./Library/stm32f4xx_dma.c **** void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t MemoryBaseAddr,
 796:./Library/stm32f4xx_dma.c ****                            uint32_t DMA_MemoryTarget)
 797:./Library/stm32f4xx_dma.c **** {
 728              		.loc 1 797 1 is_stmt 1 view -0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 28


 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 798:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 799:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 733              		.loc 1 799 3 view .LVU232
 800:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_CURRENT_MEM(DMA_MemoryTarget));
 734              		.loc 1 800 3 view .LVU233
 801:./Library/stm32f4xx_dma.c ****     
 802:./Library/stm32f4xx_dma.c ****   /* Check the Memory target to be configured */
 803:./Library/stm32f4xx_dma.c ****   if (DMA_MemoryTarget != DMA_Memory_0)
 735              		.loc 1 803 3 view .LVU234
 736              		.loc 1 803 6 is_stmt 0 view .LVU235
 737 0000 0AB1     		cbz	r2, .L59
 804:./Library/stm32f4xx_dma.c ****   {
 805:./Library/stm32f4xx_dma.c ****     /* Write to DMAy Streamx M1AR */
 806:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->M1AR = MemoryBaseAddr;    
 738              		.loc 1 806 5 is_stmt 1 view .LVU236
 739              		.loc 1 806 24 is_stmt 0 view .LVU237
 740 0002 0161     		str	r1, [r0, #16]
 741 0004 7047     		bx	lr
 742              	.L59:
 807:./Library/stm32f4xx_dma.c ****   }  
 808:./Library/stm32f4xx_dma.c ****   else
 809:./Library/stm32f4xx_dma.c ****   {
 810:./Library/stm32f4xx_dma.c ****     /* Write to DMAy Streamx M0AR */
 811:./Library/stm32f4xx_dma.c ****     DMAy_Streamx->M0AR = MemoryBaseAddr;  
 743              		.loc 1 811 5 is_stmt 1 view .LVU238
 744              		.loc 1 811 24 is_stmt 0 view .LVU239
 745 0006 C160     		str	r1, [r0, #12]
 812:./Library/stm32f4xx_dma.c ****   }
 813:./Library/stm32f4xx_dma.c **** }
 746              		.loc 1 813 1 view .LVU240
 747 0008 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE133:
 751              		.section	.text.DMA_GetCurrentMemoryTarget,"ax",%progbits
 752              		.align	1
 753              		.global	DMA_GetCurrentMemoryTarget
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	DMA_GetCurrentMemoryTarget:
 759              	.LVL21:
 760              	.LFB134:
 814:./Library/stm32f4xx_dma.c **** 
 815:./Library/stm32f4xx_dma.c **** /**
 816:./Library/stm32f4xx_dma.c ****   * @brief  Returns the current memory target used by double buffer transfer.
 817:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 818:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 819:./Library/stm32f4xx_dma.c ****   * @retval The memory target number: 0 for Memory0 or 1 for Memory1. 
 820:./Library/stm32f4xx_dma.c ****   */
 821:./Library/stm32f4xx_dma.c **** uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx)
 822:./Library/stm32f4xx_dma.c **** {
 761              		.loc 1 822 1 is_stmt 1 view -0
 762              		.cfi_startproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 29


 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 823:./Library/stm32f4xx_dma.c ****   uint32_t tmp = 0;
 766              		.loc 1 823 3 view .LVU242
 824:./Library/stm32f4xx_dma.c ****   
 825:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 826:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 767              		.loc 1 826 3 view .LVU243
 827:./Library/stm32f4xx_dma.c **** 
 828:./Library/stm32f4xx_dma.c ****   /* Get the current memory target */
 829:./Library/stm32f4xx_dma.c ****   if ((DMAy_Streamx->CR & DMA_SxCR_CT) != 0)
 768              		.loc 1 829 3 view .LVU244
 769              		.loc 1 829 20 is_stmt 0 view .LVU245
 770 0000 0068     		ldr	r0, [r0]
 771              	.LVL22:
 772              		.loc 1 829 6 view .LVU246
 773 0002 10F40020 		ands	r0, r0, #524288
 774 0006 00D0     		beq	.L61
 830:./Library/stm32f4xx_dma.c ****   {
 831:./Library/stm32f4xx_dma.c ****     /* Current memory buffer used is Memory 1 */
 832:./Library/stm32f4xx_dma.c ****     tmp = 1;
 775              		.loc 1 832 9 view .LVU247
 776 0008 0120     		movs	r0, #1
 777              	.LVL23:
 833:./Library/stm32f4xx_dma.c ****   }  
 834:./Library/stm32f4xx_dma.c ****   else
 835:./Library/stm32f4xx_dma.c ****   {
 836:./Library/stm32f4xx_dma.c ****     /* Current memory buffer used is Memory 0 */
 837:./Library/stm32f4xx_dma.c ****     tmp = 0;    
 838:./Library/stm32f4xx_dma.c ****   }
 839:./Library/stm32f4xx_dma.c ****   return tmp;
 778              		.loc 1 839 3 is_stmt 1 view .LVU248
 779              	.L61:
 840:./Library/stm32f4xx_dma.c **** }
 780              		.loc 1 840 1 is_stmt 0 view .LVU249
 781 000a 7047     		bx	lr
 782              		.cfi_endproc
 783              	.LFE134:
 785              		.section	.text.DMA_GetCmdStatus,"ax",%progbits
 786              		.align	1
 787              		.global	DMA_GetCmdStatus
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 792              	DMA_GetCmdStatus:
 793              	.LVL24:
 794              	.LFB135:
 841:./Library/stm32f4xx_dma.c **** /**
 842:./Library/stm32f4xx_dma.c ****   * @}
 843:./Library/stm32f4xx_dma.c ****   */
 844:./Library/stm32f4xx_dma.c **** 
 845:./Library/stm32f4xx_dma.c **** /** @defgroup DMA_Group4 Interrupts and flags management functions
 846:./Library/stm32f4xx_dma.c ****  *  @brief   Interrupts and flags management functions 
 847:./Library/stm32f4xx_dma.c ****  *
 848:./Library/stm32f4xx_dma.c **** @verbatim   
 849:./Library/stm32f4xx_dma.c ****  ===============================================================================
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 30


 850:./Library/stm32f4xx_dma.c ****               ##### Interrupts and flags management functions #####
 851:./Library/stm32f4xx_dma.c ****  ===============================================================================  
 852:./Library/stm32f4xx_dma.c ****     [..]
 853:./Library/stm32f4xx_dma.c ****     This subsection provides functions allowing to
 854:./Library/stm32f4xx_dma.c ****       (+) Check the DMA enable status
 855:./Library/stm32f4xx_dma.c ****       (+) Check the FIFO status 
 856:./Library/stm32f4xx_dma.c ****       (+) Configure the DMA Interrupts sources and check or clear the flags or 
 857:./Library/stm32f4xx_dma.c ****           pending bits status.  
 858:./Library/stm32f4xx_dma.c ****            
 859:./Library/stm32f4xx_dma.c ****     [..]
 860:./Library/stm32f4xx_dma.c ****       (#) DMA Enable status:
 861:./Library/stm32f4xx_dma.c ****           After configuring the DMA Stream (DMA_Init() function) and enabling 
 862:./Library/stm32f4xx_dma.c ****           the stream, it is recommended to check (or wait until) the DMA Stream 
 863:./Library/stm32f4xx_dma.c ****           is effectively enabled. A Stream may remain disabled if a configuration 
 864:./Library/stm32f4xx_dma.c ****           parameter is wrong. After disabling a DMA Stream, it is also recommended 
 865:./Library/stm32f4xx_dma.c ****           to check (or wait until) the DMA Stream is effectively disabled. 
 866:./Library/stm32f4xx_dma.c ****           If a Stream is disabled while a data transfer is ongoing, the current 
 867:./Library/stm32f4xx_dma.c ****           data will be transferred and the Stream will be effectively disabled 
 868:./Library/stm32f4xx_dma.c ****           only after this data transfer completion.
 869:./Library/stm32f4xx_dma.c ****           To monitor this state it is possible to use the following function:
 870:./Library/stm32f4xx_dma.c ****         (++) FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx); 
 871:./Library/stm32f4xx_dma.c ****  
 872:./Library/stm32f4xx_dma.c ****       (#) FIFO Status:
 873:./Library/stm32f4xx_dma.c ****           It is possible to monitor the FIFO status when a transfer is ongoing 
 874:./Library/stm32f4xx_dma.c ****           using the following function:
 875:./Library/stm32f4xx_dma.c ****         (++) uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx); 
 876:./Library/stm32f4xx_dma.c ****  
 877:./Library/stm32f4xx_dma.c ****       (#) DMA Interrupts and Flags:
 878:./Library/stm32f4xx_dma.c ****           The user should identify which mode will be used in his application 
 879:./Library/stm32f4xx_dma.c ****           to manage the DMA controller events: Polling mode or Interrupt mode. 
 880:./Library/stm32f4xx_dma.c ****     
 881:./Library/stm32f4xx_dma.c ****     *** Polling Mode ***
 882:./Library/stm32f4xx_dma.c ****     ====================
 883:./Library/stm32f4xx_dma.c ****     [..]
 884:./Library/stm32f4xx_dma.c ****     Each DMA stream can be managed through 4 event Flags:
 885:./Library/stm32f4xx_dma.c ****     (x : DMA Stream number )
 886:./Library/stm32f4xx_dma.c ****       (#) DMA_FLAG_FEIFx  : to indicate that a FIFO Mode Transfer Error event occurred.
 887:./Library/stm32f4xx_dma.c ****       (#) DMA_FLAG_DMEIFx : to indicate that a Direct Mode Transfer Error event occurred.
 888:./Library/stm32f4xx_dma.c ****       (#) DMA_FLAG_TEIFx  : to indicate that a Transfer Error event occurred.
 889:./Library/stm32f4xx_dma.c ****       (#) DMA_FLAG_HTIFx  : to indicate that a Half-Transfer Complete event occurred.
 890:./Library/stm32f4xx_dma.c ****       (#) DMA_FLAG_TCIFx  : to indicate that a Transfer Complete event occurred .       
 891:./Library/stm32f4xx_dma.c ****     [..]
 892:./Library/stm32f4xx_dma.c ****     In this Mode it is advised to use the following functions:
 893:./Library/stm32f4xx_dma.c ****       (+) FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
 894:./Library/stm32f4xx_dma.c ****       (+) void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
 895:./Library/stm32f4xx_dma.c **** 
 896:./Library/stm32f4xx_dma.c ****     *** Interrupt Mode ***
 897:./Library/stm32f4xx_dma.c ****     ======================
 898:./Library/stm32f4xx_dma.c ****     [..]
 899:./Library/stm32f4xx_dma.c ****     Each DMA Stream can be managed through 4 Interrupts:
 900:./Library/stm32f4xx_dma.c **** 
 901:./Library/stm32f4xx_dma.c ****     *** Interrupt Source ***
 902:./Library/stm32f4xx_dma.c ****     ========================
 903:./Library/stm32f4xx_dma.c ****     [..]
 904:./Library/stm32f4xx_dma.c ****       (#) DMA_IT_FEIFx  : specifies the interrupt source for the  FIFO Mode Transfer Error event.
 905:./Library/stm32f4xx_dma.c ****       (#) DMA_IT_DMEIFx : specifies the interrupt source for the Direct Mode Transfer Error event.
 906:./Library/stm32f4xx_dma.c ****       (#) DMA_IT_TEIFx  : specifies the interrupt source for the Transfer Error event.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 31


 907:./Library/stm32f4xx_dma.c ****       (#) DMA_IT_HTIFx  : specifies the interrupt source for the Half-Transfer Complete event.
 908:./Library/stm32f4xx_dma.c ****       (#) DMA_IT_TCIFx  : specifies the interrupt source for the a Transfer Complete event. 
 909:./Library/stm32f4xx_dma.c ****     [..]
 910:./Library/stm32f4xx_dma.c ****     In this Mode it is advised to use the following functions:
 911:./Library/stm32f4xx_dma.c ****       (+) void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewS
 912:./Library/stm32f4xx_dma.c ****       (+) ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 913:./Library/stm32f4xx_dma.c ****       (+) void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 914:./Library/stm32f4xx_dma.c **** 
 915:./Library/stm32f4xx_dma.c **** @endverbatim
 916:./Library/stm32f4xx_dma.c ****   * @{
 917:./Library/stm32f4xx_dma.c ****   */
 918:./Library/stm32f4xx_dma.c **** 
 919:./Library/stm32f4xx_dma.c **** /**
 920:./Library/stm32f4xx_dma.c ****   * @brief  Returns the status of EN bit for the specified DMAy Streamx.
 921:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 922:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 923:./Library/stm32f4xx_dma.c ****   *   
 924:./Library/stm32f4xx_dma.c ****   * @note    After configuring the DMA Stream (DMA_Init() function) and enabling
 925:./Library/stm32f4xx_dma.c ****   *          the stream, it is recommended to check (or wait until) the DMA Stream
 926:./Library/stm32f4xx_dma.c ****   *          is effectively enabled. A Stream may remain disabled if a configuration
 927:./Library/stm32f4xx_dma.c ****   *          parameter is wrong.
 928:./Library/stm32f4xx_dma.c ****   *          After disabling a DMA Stream, it is also recommended to check (or wait 
 929:./Library/stm32f4xx_dma.c ****   *          until) the DMA Stream is effectively disabled. If a Stream is disabled
 930:./Library/stm32f4xx_dma.c ****   *          while a data transfer is ongoing, the current data will be transferred
 931:./Library/stm32f4xx_dma.c ****   *          and the Stream will be effectively disabled only after the transfer
 932:./Library/stm32f4xx_dma.c ****   *          of this single data is finished.  
 933:./Library/stm32f4xx_dma.c ****   *      
 934:./Library/stm32f4xx_dma.c ****   * @retval Current state of the DMAy Streamx (ENABLE or DISABLE).
 935:./Library/stm32f4xx_dma.c ****   */
 936:./Library/stm32f4xx_dma.c **** FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx)
 937:./Library/stm32f4xx_dma.c **** {
 795              		.loc 1 937 1 is_stmt 1 view -0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 938:./Library/stm32f4xx_dma.c ****   FunctionalState state = DISABLE;
 800              		.loc 1 938 3 view .LVU251
 939:./Library/stm32f4xx_dma.c **** 
 940:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 941:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 801              		.loc 1 941 3 view .LVU252
 942:./Library/stm32f4xx_dma.c **** 
 943:./Library/stm32f4xx_dma.c ****   if ((DMAy_Streamx->CR & (uint32_t)DMA_SxCR_EN) != 0)
 802              		.loc 1 943 3 view .LVU253
 803              		.loc 1 943 20 is_stmt 0 view .LVU254
 804 0000 0368     		ldr	r3, [r0]
 805              		.loc 1 943 6 view .LVU255
 806 0002 13F0010F 		tst	r3, #1
 807 0006 01D0     		beq	.L65
 944:./Library/stm32f4xx_dma.c ****   {
 945:./Library/stm32f4xx_dma.c ****     /* The selected DMAy Streamx EN bit is set (DMA is still transferring) */
 946:./Library/stm32f4xx_dma.c ****     state = ENABLE;
 808              		.loc 1 946 11 view .LVU256
 809 0008 0120     		movs	r0, #1
 810              	.LVL25:
 811              		.loc 1 946 11 view .LVU257
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 32


 812 000a 7047     		bx	lr
 813              	.LVL26:
 814              	.L65:
 947:./Library/stm32f4xx_dma.c ****   }
 948:./Library/stm32f4xx_dma.c ****   else
 949:./Library/stm32f4xx_dma.c ****   {
 950:./Library/stm32f4xx_dma.c ****     /* The selected DMAy Streamx EN bit is cleared (DMA is disabled and 
 951:./Library/stm32f4xx_dma.c ****         all transfers are complete) */
 952:./Library/stm32f4xx_dma.c ****     state = DISABLE;
 815              		.loc 1 952 11 view .LVU258
 816 000c 0020     		movs	r0, #0
 817              	.LVL27:
 953:./Library/stm32f4xx_dma.c ****   }
 954:./Library/stm32f4xx_dma.c ****   return state;
 818              		.loc 1 954 3 is_stmt 1 view .LVU259
 955:./Library/stm32f4xx_dma.c **** }
 819              		.loc 1 955 1 is_stmt 0 view .LVU260
 820 000e 7047     		bx	lr
 821              		.cfi_endproc
 822              	.LFE135:
 824              		.section	.text.DMA_GetFIFOStatus,"ax",%progbits
 825              		.align	1
 826              		.global	DMA_GetFIFOStatus
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	DMA_GetFIFOStatus:
 832              	.LVL28:
 833              	.LFB136:
 956:./Library/stm32f4xx_dma.c **** 
 957:./Library/stm32f4xx_dma.c **** /**
 958:./Library/stm32f4xx_dma.c ****   * @brief  Returns the current DMAy Streamx FIFO filled level.
 959:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0 
 960:./Library/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 961:./Library/stm32f4xx_dma.c ****   * @retval The FIFO filling state.
 962:./Library/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Less1QuarterFull: when FIFO is less than 1 quarter-full 
 963:./Library/stm32f4xx_dma.c ****   *                                               and not empty.
 964:./Library/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_1QuarterFull: if more than 1 quarter-full.
 965:./Library/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_HalfFull: if more than 1 half-full.
 966:./Library/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_3QuartersFull: if more than 3 quarters-full.
 967:./Library/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Empty: when FIFO is empty
 968:./Library/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Full: when FIFO is full
 969:./Library/stm32f4xx_dma.c ****   */
 970:./Library/stm32f4xx_dma.c **** uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx)
 971:./Library/stm32f4xx_dma.c **** {
 834              		.loc 1 971 1 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 972:./Library/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 839              		.loc 1 972 3 view .LVU262
 973:./Library/stm32f4xx_dma.c ****  
 974:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
 975:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 840              		.loc 1 975 3 view .LVU263
 976:./Library/stm32f4xx_dma.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 33


 977:./Library/stm32f4xx_dma.c ****   /* Get the FIFO level bits */
 978:./Library/stm32f4xx_dma.c ****   tmpreg = (uint32_t)((DMAy_Streamx->FCR & DMA_SxFCR_FS));
 841              		.loc 1 978 3 view .LVU264
 842              		.loc 1 978 36 is_stmt 0 view .LVU265
 843 0000 4069     		ldr	r0, [r0, #20]
 844              	.LVL29:
 979:./Library/stm32f4xx_dma.c ****   
 980:./Library/stm32f4xx_dma.c ****   return tmpreg;
 845              		.loc 1 980 3 is_stmt 1 view .LVU266
 981:./Library/stm32f4xx_dma.c **** }
 846              		.loc 1 981 1 is_stmt 0 view .LVU267
 847 0002 00F03800 		and	r0, r0, #56
 848              	.LVL30:
 849              		.loc 1 981 1 view .LVU268
 850 0006 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE136:
 854              		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 855              		.align	1
 856              		.global	DMA_GetFlagStatus
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 861              	DMA_GetFlagStatus:
 862              	.LVL31:
 863              	.LFB137:
 982:./Library/stm32f4xx_dma.c **** 
 983:./Library/stm32f4xx_dma.c **** /**
 984:./Library/stm32f4xx_dma.c ****   * @brief  Checks whether the specified DMAy Streamx flag is set or not.
 985:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 986:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 987:./Library/stm32f4xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to check.
 988:./Library/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 989:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TCIFx:  Streamx transfer complete flag
 990:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_HTIFx:  Streamx half transfer complete flag
 991:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TEIFx:  Streamx transfer error flag
 992:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_DMEIFx: Streamx direct mode error flag
 993:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_FEIFx:  Streamx FIFO error flag
 994:./Library/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
 995:./Library/stm32f4xx_dma.c ****   * @retval The new state of DMA_FLAG (SET or RESET).
 996:./Library/stm32f4xx_dma.c ****   */
 997:./Library/stm32f4xx_dma.c **** FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG)
 998:./Library/stm32f4xx_dma.c **** {
 864              		.loc 1 998 1 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 999:./Library/stm32f4xx_dma.c ****   FlagStatus bitstatus = RESET;
 869              		.loc 1 999 3 view .LVU270
1000:./Library/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
 870              		.loc 1 1000 3 view .LVU271
1001:./Library/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 871              		.loc 1 1001 3 view .LVU272
1002:./Library/stm32f4xx_dma.c **** 
1003:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
1004:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 34


 872              		.loc 1 1004 3 view .LVU273
1005:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMA_FLAG));
 873              		.loc 1 1005 3 view .LVU274
1006:./Library/stm32f4xx_dma.c **** 
1007:./Library/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1008:./Library/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 874              		.loc 1 1008 3 view .LVU275
 875              		.loc 1 1008 6 is_stmt 0 view .LVU276
 876 0000 0B4B     		ldr	r3, .L74
 877 0002 9842     		cmp	r0, r3
 878 0004 0DD8     		bhi	.L72
1009:./Library/stm32f4xx_dma.c ****   {
1010:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1011:./Library/stm32f4xx_dma.c ****     DMAy = DMA1; 
 879              		.loc 1 1011 10 view .LVU277
 880 0006 A3F20F43 		subw	r3, r3, #1039
 881              	.L68:
 882              	.LVL32:
1012:./Library/stm32f4xx_dma.c ****   } 
1013:./Library/stm32f4xx_dma.c ****   else 
1014:./Library/stm32f4xx_dma.c ****   {
1015:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1016:./Library/stm32f4xx_dma.c ****     DMAy = DMA2; 
1017:./Library/stm32f4xx_dma.c ****   }
1018:./Library/stm32f4xx_dma.c **** 
1019:./Library/stm32f4xx_dma.c ****   /* Check if the flag is in HISR or LISR */
1020:./Library/stm32f4xx_dma.c ****   if ((DMA_FLAG & HIGH_ISR_MASK) != (uint32_t)RESET)
 883              		.loc 1 1020 3 is_stmt 1 view .LVU278
 884              		.loc 1 1020 6 is_stmt 0 view .LVU279
 885 000a 11F0005F 		tst	r1, #536870912
 886 000e 0AD0     		beq	.L69
1021:./Library/stm32f4xx_dma.c ****   {
1022:./Library/stm32f4xx_dma.c ****     /* Get DMAy HISR register value */
1023:./Library/stm32f4xx_dma.c ****     tmpreg = DMAy->HISR;
 887              		.loc 1 1023 5 is_stmt 1 view .LVU280
 888              		.loc 1 1023 12 is_stmt 0 view .LVU281
 889 0010 5B68     		ldr	r3, [r3, #4]
 890              	.LVL33:
 891              	.L70:
1024:./Library/stm32f4xx_dma.c ****   }
1025:./Library/stm32f4xx_dma.c ****   else
1026:./Library/stm32f4xx_dma.c ****   {
1027:./Library/stm32f4xx_dma.c ****     /* Get DMAy LISR register value */
1028:./Library/stm32f4xx_dma.c ****     tmpreg = DMAy->LISR;
1029:./Library/stm32f4xx_dma.c ****   }   
1030:./Library/stm32f4xx_dma.c ****  
1031:./Library/stm32f4xx_dma.c ****   /* Mask the reserved bits */
1032:./Library/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)RESERVED_MASK;
 892              		.loc 1 1032 3 is_stmt 1 view .LVU282
 893              		.loc 1 1032 10 is_stmt 0 view .LVU283
 894 0012 23F0F023 		bic	r3, r3, #-268374016
 895              	.LVL34:
 896              		.loc 1 1032 10 view .LVU284
 897 0016 23F08213 		bic	r3, r3, #8519810
 898              	.LVL35:
1033:./Library/stm32f4xx_dma.c **** 
1034:./Library/stm32f4xx_dma.c ****   /* Check the status of the specified DMA flag */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 35


1035:./Library/stm32f4xx_dma.c ****   if ((tmpreg & DMA_FLAG) != (uint32_t)RESET)
 899              		.loc 1 1035 3 is_stmt 1 view .LVU285
 900              		.loc 1 1035 6 is_stmt 0 view .LVU286
 901 001a 1942     		tst	r1, r3
 902 001c 05D0     		beq	.L73
1036:./Library/stm32f4xx_dma.c ****   {
1037:./Library/stm32f4xx_dma.c ****     /* DMA_FLAG is set */
1038:./Library/stm32f4xx_dma.c ****     bitstatus = SET;
 903              		.loc 1 1038 15 view .LVU287
 904 001e 0120     		movs	r0, #1
 905              	.LVL36:
 906              		.loc 1 1038 15 view .LVU288
 907 0020 7047     		bx	lr
 908              	.LVL37:
 909              	.L72:
1016:./Library/stm32f4xx_dma.c ****   }
 910              		.loc 1 1016 10 view .LVU289
 911 0022 044B     		ldr	r3, .L74+4
 912 0024 F1E7     		b	.L68
 913              	.LVL38:
 914              	.L69:
1028:./Library/stm32f4xx_dma.c ****   }   
 915              		.loc 1 1028 5 is_stmt 1 view .LVU290
1028:./Library/stm32f4xx_dma.c ****   }   
 916              		.loc 1 1028 12 is_stmt 0 view .LVU291
 917 0026 1B68     		ldr	r3, [r3]
 918              	.LVL39:
1028:./Library/stm32f4xx_dma.c ****   }   
 919              		.loc 1 1028 12 view .LVU292
 920 0028 F3E7     		b	.L70
 921              	.L73:
1039:./Library/stm32f4xx_dma.c ****   }
1040:./Library/stm32f4xx_dma.c ****   else
1041:./Library/stm32f4xx_dma.c ****   {
1042:./Library/stm32f4xx_dma.c ****     /* DMA_FLAG is reset */
1043:./Library/stm32f4xx_dma.c ****     bitstatus = RESET;
 922              		.loc 1 1043 15 view .LVU293
 923 002a 0020     		movs	r0, #0
 924              	.LVL40:
1044:./Library/stm32f4xx_dma.c ****   }
1045:./Library/stm32f4xx_dma.c **** 
1046:./Library/stm32f4xx_dma.c ****   /* Return the DMA_FLAG status */
1047:./Library/stm32f4xx_dma.c ****   return  bitstatus;
 925              		.loc 1 1047 3 is_stmt 1 view .LVU294
1048:./Library/stm32f4xx_dma.c **** }
 926              		.loc 1 1048 1 is_stmt 0 view .LVU295
 927 002c 7047     		bx	lr
 928              	.L75:
 929 002e 00BF     		.align	2
 930              	.L74:
 931 0030 0F640240 		.word	1073898511
 932 0034 00640240 		.word	1073898496
 933              		.cfi_endproc
 934              	.LFE137:
 936              		.section	.text.DMA_ClearFlag,"ax",%progbits
 937              		.align	1
 938              		.global	DMA_ClearFlag
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 36


 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 943              	DMA_ClearFlag:
 944              	.LVL41:
 945              	.LFB138:
1049:./Library/stm32f4xx_dma.c **** 
1050:./Library/stm32f4xx_dma.c **** /**
1051:./Library/stm32f4xx_dma.c ****   * @brief  Clears the DMAy Streamx's pending flags.
1052:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1053:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1054:./Library/stm32f4xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to clear.
1055:./Library/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1056:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TCIFx:  Streamx transfer complete flag
1057:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_HTIFx:  Streamx half transfer complete flag
1058:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TEIFx:  Streamx transfer error flag
1059:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_DMEIFx: Streamx direct mode error flag
1060:./Library/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_FEIFx:  Streamx FIFO error flag
1061:./Library/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.   
1062:./Library/stm32f4xx_dma.c ****   * @retval None
1063:./Library/stm32f4xx_dma.c ****   */
1064:./Library/stm32f4xx_dma.c **** void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG)
1065:./Library/stm32f4xx_dma.c **** {
 946              		.loc 1 1065 1 is_stmt 1 view -0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		@ link register save eliminated.
1066:./Library/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
 951              		.loc 1 1066 3 view .LVU297
1067:./Library/stm32f4xx_dma.c **** 
1068:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
1069:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 952              		.loc 1 1069 3 view .LVU298
1070:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMA_FLAG));
 953              		.loc 1 1070 3 view .LVU299
1071:./Library/stm32f4xx_dma.c **** 
1072:./Library/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1073:./Library/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 954              		.loc 1 1073 3 view .LVU300
 955              		.loc 1 1073 6 is_stmt 0 view .LVU301
 956 0000 0A4B     		ldr	r3, .L81
 957 0002 9842     		cmp	r0, r3
 958 0004 0AD8     		bhi	.L80
1074:./Library/stm32f4xx_dma.c ****   {
1075:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1076:./Library/stm32f4xx_dma.c ****     DMAy = DMA1; 
 959              		.loc 1 1076 10 view .LVU302
 960 0006 A3F20F43 		subw	r3, r3, #1039
 961              	.L77:
 962              	.LVL42:
1077:./Library/stm32f4xx_dma.c ****   } 
1078:./Library/stm32f4xx_dma.c ****   else 
1079:./Library/stm32f4xx_dma.c ****   {
1080:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1081:./Library/stm32f4xx_dma.c ****     DMAy = DMA2; 
1082:./Library/stm32f4xx_dma.c ****   }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 37


1083:./Library/stm32f4xx_dma.c **** 
1084:./Library/stm32f4xx_dma.c ****   /* Check if LIFCR or HIFCR register is targeted */
1085:./Library/stm32f4xx_dma.c ****   if ((DMA_FLAG & HIGH_ISR_MASK) != (uint32_t)RESET)
 963              		.loc 1 1085 3 is_stmt 1 view .LVU303
 964              		.loc 1 1085 6 is_stmt 0 view .LVU304
 965 000a 11F0005F 		tst	r1, #536870912
 966 000e 07D0     		beq	.L78
1086:./Library/stm32f4xx_dma.c ****   {
1087:./Library/stm32f4xx_dma.c ****     /* Set DMAy HIFCR register clear flag bits */
1088:./Library/stm32f4xx_dma.c ****     DMAy->HIFCR = (uint32_t)(DMA_FLAG & RESERVED_MASK);
 967              		.loc 1 1088 5 is_stmt 1 view .LVU305
 968              		.loc 1 1088 19 is_stmt 0 view .LVU306
 969 0010 21F0F021 		bic	r1, r1, #-268374016
 970              	.LVL43:
 971              		.loc 1 1088 19 view .LVU307
 972 0014 21F08211 		bic	r1, r1, #8519810
 973              		.loc 1 1088 17 view .LVU308
 974 0018 D960     		str	r1, [r3, #12]
 975 001a 7047     		bx	lr
 976              	.LVL44:
 977              	.L80:
1081:./Library/stm32f4xx_dma.c ****   }
 978              		.loc 1 1081 10 view .LVU309
 979 001c 044B     		ldr	r3, .L81+4
 980 001e F4E7     		b	.L77
 981              	.LVL45:
 982              	.L78:
1089:./Library/stm32f4xx_dma.c ****   }
1090:./Library/stm32f4xx_dma.c ****   else 
1091:./Library/stm32f4xx_dma.c ****   {
1092:./Library/stm32f4xx_dma.c ****     /* Set DMAy LIFCR register clear flag bits */
1093:./Library/stm32f4xx_dma.c ****     DMAy->LIFCR = (uint32_t)(DMA_FLAG & RESERVED_MASK);
 983              		.loc 1 1093 5 is_stmt 1 view .LVU310
 984              		.loc 1 1093 19 is_stmt 0 view .LVU311
 985 0020 21F0F021 		bic	r1, r1, #-268374016
 986              	.LVL46:
 987              		.loc 1 1093 19 view .LVU312
 988 0024 21F08211 		bic	r1, r1, #8519810
 989              		.loc 1 1093 17 view .LVU313
 990 0028 9960     		str	r1, [r3, #8]
1094:./Library/stm32f4xx_dma.c ****   }    
1095:./Library/stm32f4xx_dma.c **** }
 991              		.loc 1 1095 1 view .LVU314
 992 002a 7047     		bx	lr
 993              	.L82:
 994              		.align	2
 995              	.L81:
 996 002c 0F640240 		.word	1073898511
 997 0030 00640240 		.word	1073898496
 998              		.cfi_endproc
 999              	.LFE138:
 1001              		.section	.text.DMA_ITConfig,"ax",%progbits
 1002              		.align	1
 1003              		.global	DMA_ITConfig
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 38


 1008              	DMA_ITConfig:
 1009              	.LVL47:
 1010              	.LFB139:
1096:./Library/stm32f4xx_dma.c **** 
1097:./Library/stm32f4xx_dma.c **** /**
1098:./Library/stm32f4xx_dma.c ****   * @brief  Enables or disables the specified DMAy Streamx interrupts.
1099:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1100:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1101:./Library/stm32f4xx_dma.c ****   * @param DMA_IT: specifies the DMA interrupt sources to be enabled or disabled. 
1102:./Library/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1103:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_TC:  Transfer complete interrupt mask
1104:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_HT:  Half transfer complete interrupt mask
1105:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_TE:  Transfer error interrupt mask
1106:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_FE:  FIFO error interrupt mask
1107:./Library/stm32f4xx_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
1108:./Library/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
1109:./Library/stm32f4xx_dma.c ****   * @retval None
1110:./Library/stm32f4xx_dma.c ****   */
1111:./Library/stm32f4xx_dma.c **** void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewState)
1112:./Library/stm32f4xx_dma.c **** {
 1011              		.loc 1 1112 1 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
1113:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
1114:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1016              		.loc 1 1114 3 view .LVU316
1115:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 1017              		.loc 1 1115 3 view .LVU317
1116:./Library/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1018              		.loc 1 1116 3 view .LVU318
1117:./Library/stm32f4xx_dma.c **** 
1118:./Library/stm32f4xx_dma.c ****   /* Check if the DMA_IT parameter contains a FIFO interrupt */
1119:./Library/stm32f4xx_dma.c ****   if ((DMA_IT & DMA_IT_FE) != 0)
 1019              		.loc 1 1119 3 view .LVU319
 1020              		.loc 1 1119 6 is_stmt 0 view .LVU320
 1021 0000 11F0800F 		tst	r1, #128
 1022 0004 04D0     		beq	.L84
1120:./Library/stm32f4xx_dma.c ****   {
1121:./Library/stm32f4xx_dma.c ****     if (NewState != DISABLE)
 1023              		.loc 1 1121 5 is_stmt 1 view .LVU321
 1024              		.loc 1 1121 8 is_stmt 0 view .LVU322
 1025 0006 62B1     		cbz	r2, .L85
1122:./Library/stm32f4xx_dma.c ****     {
1123:./Library/stm32f4xx_dma.c ****       /* Enable the selected DMA FIFO interrupts */
1124:./Library/stm32f4xx_dma.c ****       DMAy_Streamx->FCR |= (uint32_t)DMA_IT_FE;
 1026              		.loc 1 1124 7 is_stmt 1 view .LVU323
 1027              		.loc 1 1124 25 is_stmt 0 view .LVU324
 1028 0008 4369     		ldr	r3, [r0, #20]
 1029 000a 43F08003 		orr	r3, r3, #128
 1030 000e 4361     		str	r3, [r0, #20]
 1031              	.L84:
1125:./Library/stm32f4xx_dma.c ****     }    
1126:./Library/stm32f4xx_dma.c ****     else 
1127:./Library/stm32f4xx_dma.c ****     {
1128:./Library/stm32f4xx_dma.c ****       /* Disable the selected DMA FIFO interrupts */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 39


1129:./Library/stm32f4xx_dma.c ****       DMAy_Streamx->FCR &= ~(uint32_t)DMA_IT_FE;  
1130:./Library/stm32f4xx_dma.c ****     }
1131:./Library/stm32f4xx_dma.c ****   }
1132:./Library/stm32f4xx_dma.c **** 
1133:./Library/stm32f4xx_dma.c ****   /* Check if the DMA_IT parameter contains a Transfer interrupt */
1134:./Library/stm32f4xx_dma.c ****   if (DMA_IT != DMA_IT_FE)
 1032              		.loc 1 1134 3 is_stmt 1 view .LVU325
 1033              		.loc 1 1134 6 is_stmt 0 view .LVU326
 1034 0010 8029     		cmp	r1, #128
 1035 0012 11D0     		beq	.L83
1135:./Library/stm32f4xx_dma.c ****   {
1136:./Library/stm32f4xx_dma.c ****     if (NewState != DISABLE)
 1036              		.loc 1 1136 5 is_stmt 1 view .LVU327
 1037              		.loc 1 1136 8 is_stmt 0 view .LVU328
 1038 0014 52B1     		cbz	r2, .L87
1137:./Library/stm32f4xx_dma.c ****     {
1138:./Library/stm32f4xx_dma.c ****       /* Enable the selected DMA transfer interrupts */
1139:./Library/stm32f4xx_dma.c ****       DMAy_Streamx->CR |= (uint32_t)(DMA_IT  & TRANSFER_IT_ENABLE_MASK);
 1039              		.loc 1 1139 7 is_stmt 1 view .LVU329
 1040              		.loc 1 1139 24 is_stmt 0 view .LVU330
 1041 0016 0368     		ldr	r3, [r0]
 1042              		.loc 1 1139 27 view .LVU331
 1043 0018 01F01E01 		and	r1, r1, #30
 1044              	.LVL48:
 1045              		.loc 1 1139 24 view .LVU332
 1046 001c 1943     		orrs	r1, r1, r3
 1047 001e 0160     		str	r1, [r0]
 1048 0020 7047     		bx	lr
 1049              	.LVL49:
 1050              	.L85:
1129:./Library/stm32f4xx_dma.c ****     }
 1051              		.loc 1 1129 7 is_stmt 1 view .LVU333
1129:./Library/stm32f4xx_dma.c ****     }
 1052              		.loc 1 1129 25 is_stmt 0 view .LVU334
 1053 0022 4369     		ldr	r3, [r0, #20]
 1054 0024 23F08003 		bic	r3, r3, #128
 1055 0028 4361     		str	r3, [r0, #20]
 1056 002a F1E7     		b	.L84
 1057              	.L87:
1140:./Library/stm32f4xx_dma.c ****     }
1141:./Library/stm32f4xx_dma.c ****     else
1142:./Library/stm32f4xx_dma.c ****     {
1143:./Library/stm32f4xx_dma.c ****       /* Disable the selected DMA transfer interrupts */
1144:./Library/stm32f4xx_dma.c ****       DMAy_Streamx->CR &= ~(uint32_t)(DMA_IT & TRANSFER_IT_ENABLE_MASK);
 1058              		.loc 1 1144 7 is_stmt 1 view .LVU335
 1059              		.loc 1 1144 24 is_stmt 0 view .LVU336
 1060 002c 0368     		ldr	r3, [r0]
 1061              		.loc 1 1144 28 view .LVU337
 1062 002e 01F01E01 		and	r1, r1, #30
 1063              	.LVL50:
 1064              		.loc 1 1144 24 view .LVU338
 1065 0032 23EA0101 		bic	r1, r3, r1
 1066 0036 0160     		str	r1, [r0]
 1067              	.L83:
1145:./Library/stm32f4xx_dma.c ****     }    
1146:./Library/stm32f4xx_dma.c ****   }
1147:./Library/stm32f4xx_dma.c **** }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 40


 1068              		.loc 1 1147 1 view .LVU339
 1069 0038 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE139:
 1073              		.section	.text.DMA_GetITStatus,"ax",%progbits
 1074              		.align	1
 1075              		.global	DMA_GetITStatus
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1080              	DMA_GetITStatus:
 1081              	.LVL51:
 1082              	.LFB140:
1148:./Library/stm32f4xx_dma.c **** 
1149:./Library/stm32f4xx_dma.c **** /**
1150:./Library/stm32f4xx_dma.c ****   * @brief  Checks whether the specified DMAy Streamx interrupt has occurred or not.
1151:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1152:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1153:./Library/stm32f4xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt source to check.
1154:./Library/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
1155:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_TCIFx:  Streamx transfer complete interrupt
1156:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_HTIFx:  Streamx half transfer complete interrupt
1157:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_TEIFx:  Streamx transfer error interrupt
1158:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_DMEIFx: Streamx direct mode error interrupt
1159:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_FEIFx:  Streamx FIFO error interrupt
1160:./Library/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
1161:./Library/stm32f4xx_dma.c ****   * @retval The new state of DMA_IT (SET or RESET).
1162:./Library/stm32f4xx_dma.c ****   */
1163:./Library/stm32f4xx_dma.c **** ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT)
1164:./Library/stm32f4xx_dma.c **** {
 1083              		.loc 1 1164 1 is_stmt 1 view -0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              		.loc 1 1164 1 is_stmt 0 view .LVU341
 1089 0000 10B4     		push	{r4}
 1090              	.LCFI2:
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 4, -4
1165:./Library/stm32f4xx_dma.c ****   ITStatus bitstatus = RESET;
 1093              		.loc 1 1165 3 is_stmt 1 view .LVU342
 1094              	.LVL52:
1166:./Library/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
 1095              		.loc 1 1166 3 view .LVU343
1167:./Library/stm32f4xx_dma.c ****   uint32_t tmpreg = 0, enablestatus = 0;
 1096              		.loc 1 1167 3 view .LVU344
1168:./Library/stm32f4xx_dma.c **** 
1169:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
1170:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1097              		.loc 1 1170 3 view .LVU345
1171:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_GET_IT(DMA_IT));
 1098              		.loc 1 1171 3 view .LVU346
1172:./Library/stm32f4xx_dma.c ****  
1173:./Library/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1174:./Library/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 1099              		.loc 1 1174 3 view .LVU347
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 41


 1100              		.loc 1 1174 6 is_stmt 0 view .LVU348
 1101 0002 144B     		ldr	r3, .L99
 1102 0004 9842     		cmp	r0, r3
 1103 0006 17D8     		bhi	.L95
1175:./Library/stm32f4xx_dma.c ****   {
1176:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1177:./Library/stm32f4xx_dma.c ****     DMAy = DMA1; 
 1104              		.loc 1 1177 10 view .LVU349
 1105 0008 134C     		ldr	r4, .L99+4
 1106              	.L89:
 1107              	.LVL53:
1178:./Library/stm32f4xx_dma.c ****   } 
1179:./Library/stm32f4xx_dma.c ****   else 
1180:./Library/stm32f4xx_dma.c ****   {
1181:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1182:./Library/stm32f4xx_dma.c ****     DMAy = DMA2; 
1183:./Library/stm32f4xx_dma.c ****   }
1184:./Library/stm32f4xx_dma.c **** 
1185:./Library/stm32f4xx_dma.c ****   /* Check if the interrupt enable bit is in the CR or FCR register */
1186:./Library/stm32f4xx_dma.c ****   if ((DMA_IT & TRANSFER_IT_MASK) != (uint32_t)RESET)
 1108              		.loc 1 1186 3 is_stmt 1 view .LVU350
 1109              		.loc 1 1186 15 is_stmt 0 view .LVU351
 1110 000a 21F0F023 		bic	r3, r1, #-268374016
 1111 000e 23F0C313 		bic	r3, r3, #12779715
 1112              		.loc 1 1186 6 view .LVU352
 1113 0012 9BB1     		cbz	r3, .L90
1187:./Library/stm32f4xx_dma.c ****   {
1188:./Library/stm32f4xx_dma.c ****     /* Get the interrupt enable position mask in CR register */
1189:./Library/stm32f4xx_dma.c ****     tmpreg = (uint32_t)((DMA_IT >> 11) & TRANSFER_IT_ENABLE_MASK);   
 1114              		.loc 1 1189 5 is_stmt 1 view .LVU353
 1115              		.loc 1 1189 33 is_stmt 0 view .LVU354
 1116 0014 CA0A     		lsrs	r2, r1, #11
 1117              		.loc 1 1189 12 view .LVU355
 1118 0016 02F01E03 		and	r3, r2, #30
 1119              	.LVL54:
1190:./Library/stm32f4xx_dma.c ****     
1191:./Library/stm32f4xx_dma.c ****     /* Check the enable bit in CR register */
1192:./Library/stm32f4xx_dma.c ****     enablestatus = (uint32_t)(DMAy_Streamx->CR & tmpreg);
 1120              		.loc 1 1192 5 is_stmt 1 view .LVU356
 1121              		.loc 1 1192 43 is_stmt 0 view .LVU357
 1122 001a 0268     		ldr	r2, [r0]
 1123              		.loc 1 1192 18 view .LVU358
 1124 001c 1A40     		ands	r2, r2, r3
 1125              	.LVL55:
 1126              	.L91:
1193:./Library/stm32f4xx_dma.c ****   }
1194:./Library/stm32f4xx_dma.c ****   else 
1195:./Library/stm32f4xx_dma.c ****   {
1196:./Library/stm32f4xx_dma.c ****     /* Check the enable bit in FCR register */
1197:./Library/stm32f4xx_dma.c ****     enablestatus = (uint32_t)(DMAy_Streamx->FCR & DMA_IT_FE); 
1198:./Library/stm32f4xx_dma.c ****   }
1199:./Library/stm32f4xx_dma.c ****  
1200:./Library/stm32f4xx_dma.c ****   /* Check if the interrupt pending flag is in LISR or HISR */
1201:./Library/stm32f4xx_dma.c ****   if ((DMA_IT & HIGH_ISR_MASK) != (uint32_t)RESET)
 1127              		.loc 1 1201 3 is_stmt 1 view .LVU359
 1128              		.loc 1 1201 6 is_stmt 0 view .LVU360
 1129 001e 11F0005F 		tst	r1, #536870912
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 42


 1130 0022 0FD0     		beq	.L92
1202:./Library/stm32f4xx_dma.c ****   {
1203:./Library/stm32f4xx_dma.c ****     /* Get DMAy HISR register value */
1204:./Library/stm32f4xx_dma.c ****     tmpreg = DMAy->HISR ;
 1131              		.loc 1 1204 5 is_stmt 1 view .LVU361
 1132              		.loc 1 1204 12 is_stmt 0 view .LVU362
 1133 0024 6368     		ldr	r3, [r4, #4]
 1134              	.LVL56:
 1135              	.L93:
1205:./Library/stm32f4xx_dma.c ****   }
1206:./Library/stm32f4xx_dma.c ****   else
1207:./Library/stm32f4xx_dma.c ****   {
1208:./Library/stm32f4xx_dma.c ****     /* Get DMAy LISR register value */
1209:./Library/stm32f4xx_dma.c ****     tmpreg = DMAy->LISR ;
1210:./Library/stm32f4xx_dma.c ****   } 
1211:./Library/stm32f4xx_dma.c **** 
1212:./Library/stm32f4xx_dma.c ****   /* mask all reserved bits */
1213:./Library/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)RESERVED_MASK;
 1136              		.loc 1 1213 3 is_stmt 1 view .LVU363
 1137              		.loc 1 1213 10 is_stmt 0 view .LVU364
 1138 0026 23F0F023 		bic	r3, r3, #-268374016
 1139              	.LVL57:
 1140              		.loc 1 1213 10 view .LVU365
 1141 002a 23F08213 		bic	r3, r3, #8519810
 1142              	.LVL58:
1214:./Library/stm32f4xx_dma.c **** 
1215:./Library/stm32f4xx_dma.c ****   /* Check the status of the specified DMA interrupt */
1216:./Library/stm32f4xx_dma.c ****   if (((tmpreg & DMA_IT) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 1143              		.loc 1 1216 3 is_stmt 1 view .LVU366
 1144              		.loc 1 1216 6 is_stmt 0 view .LVU367
 1145 002e 1942     		tst	r1, r3
 1146 0030 0AD0     		beq	.L96
 1147              		.loc 1 1216 46 discriminator 1 view .LVU368
 1148 0032 6AB9     		cbnz	r2, .L97
1217:./Library/stm32f4xx_dma.c ****   {
1218:./Library/stm32f4xx_dma.c ****     /* DMA_IT is set */
1219:./Library/stm32f4xx_dma.c ****     bitstatus = SET;
1220:./Library/stm32f4xx_dma.c ****   }
1221:./Library/stm32f4xx_dma.c ****   else
1222:./Library/stm32f4xx_dma.c ****   {
1223:./Library/stm32f4xx_dma.c ****     /* DMA_IT is reset */
1224:./Library/stm32f4xx_dma.c ****     bitstatus = RESET;
 1149              		.loc 1 1224 15 view .LVU369
 1150 0034 0020     		movs	r0, #0
 1151              	.LVL59:
 1152              		.loc 1 1224 15 view .LVU370
 1153 0036 08E0     		b	.L94
 1154              	.LVL60:
 1155              	.L95:
1182:./Library/stm32f4xx_dma.c ****   }
 1156              		.loc 1 1182 10 view .LVU371
 1157 0038 084C     		ldr	r4, .L99+8
 1158 003a E6E7     		b	.L89
 1159              	.LVL61:
 1160              	.L90:
1197:./Library/stm32f4xx_dma.c ****   }
 1161              		.loc 1 1197 5 is_stmt 1 view .LVU372
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 43


1197:./Library/stm32f4xx_dma.c ****   }
 1162              		.loc 1 1197 43 is_stmt 0 view .LVU373
 1163 003c 4269     		ldr	r2, [r0, #20]
1197:./Library/stm32f4xx_dma.c ****   }
 1164              		.loc 1 1197 18 view .LVU374
 1165 003e 02F08002 		and	r2, r2, #128
 1166              	.LVL62:
1197:./Library/stm32f4xx_dma.c ****   }
 1167              		.loc 1 1197 18 view .LVU375
 1168 0042 ECE7     		b	.L91
 1169              	.LVL63:
 1170              	.L92:
1209:./Library/stm32f4xx_dma.c ****   } 
 1171              		.loc 1 1209 5 is_stmt 1 view .LVU376
1209:./Library/stm32f4xx_dma.c ****   } 
 1172              		.loc 1 1209 12 is_stmt 0 view .LVU377
 1173 0044 2368     		ldr	r3, [r4]
 1174              	.LVL64:
1209:./Library/stm32f4xx_dma.c ****   } 
 1175              		.loc 1 1209 12 view .LVU378
 1176 0046 EEE7     		b	.L93
 1177              	.L96:
 1178              		.loc 1 1224 15 view .LVU379
 1179 0048 0020     		movs	r0, #0
 1180              	.LVL65:
 1181              	.L94:
1225:./Library/stm32f4xx_dma.c ****   }
1226:./Library/stm32f4xx_dma.c **** 
1227:./Library/stm32f4xx_dma.c ****   /* Return the DMA_IT status */
1228:./Library/stm32f4xx_dma.c ****   return  bitstatus;
 1182              		.loc 1 1228 3 is_stmt 1 view .LVU380
1229:./Library/stm32f4xx_dma.c **** }
 1183              		.loc 1 1229 1 is_stmt 0 view .LVU381
 1184 004a 5DF8044B 		ldr	r4, [sp], #4
 1185              	.LCFI3:
 1186              		.cfi_remember_state
 1187              		.cfi_restore 4
 1188              		.cfi_def_cfa_offset 0
 1189              	.LVL66:
 1190              		.loc 1 1229 1 view .LVU382
 1191 004e 7047     		bx	lr
 1192              	.LVL67:
 1193              	.L97:
 1194              	.LCFI4:
 1195              		.cfi_restore_state
1219:./Library/stm32f4xx_dma.c ****   }
 1196              		.loc 1 1219 15 view .LVU383
 1197 0050 0120     		movs	r0, #1
 1198              	.LVL68:
1219:./Library/stm32f4xx_dma.c ****   }
 1199              		.loc 1 1219 15 view .LVU384
 1200 0052 FAE7     		b	.L94
 1201              	.L100:
 1202              		.align	2
 1203              	.L99:
 1204 0054 0F640240 		.word	1073898511
 1205 0058 00600240 		.word	1073897472
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 44


 1206 005c 00640240 		.word	1073898496
 1207              		.cfi_endproc
 1208              	.LFE140:
 1210              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 1211              		.align	1
 1212              		.global	DMA_ClearITPendingBit
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	DMA_ClearITPendingBit:
 1218              	.LVL69:
 1219              	.LFB141:
1230:./Library/stm32f4xx_dma.c **** 
1231:./Library/stm32f4xx_dma.c **** /**
1232:./Library/stm32f4xx_dma.c ****   * @brief  Clears the DMAy Streamx's interrupt pending bits.
1233:./Library/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1234:./Library/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1235:./Library/stm32f4xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt pending bit to clear.
1236:./Library/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1237:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_TCIFx:  Streamx transfer complete interrupt
1238:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_HTIFx:  Streamx half transfer complete interrupt
1239:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_TEIFx:  Streamx transfer error interrupt
1240:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_DMEIFx: Streamx direct mode error interrupt
1241:./Library/stm32f4xx_dma.c ****   *            @arg DMA_IT_FEIFx:  Streamx FIFO error interrupt
1242:./Library/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
1243:./Library/stm32f4xx_dma.c ****   * @retval None
1244:./Library/stm32f4xx_dma.c ****   */
1245:./Library/stm32f4xx_dma.c **** void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT)
1246:./Library/stm32f4xx_dma.c **** {
 1220              		.loc 1 1246 1 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
1247:./Library/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
 1225              		.loc 1 1247 3 view .LVU386
1248:./Library/stm32f4xx_dma.c **** 
1249:./Library/stm32f4xx_dma.c ****   /* Check the parameters */
1250:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1226              		.loc 1 1250 3 view .LVU387
1251:./Library/stm32f4xx_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMA_IT));
 1227              		.loc 1 1251 3 view .LVU388
1252:./Library/stm32f4xx_dma.c **** 
1253:./Library/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1254:./Library/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 1228              		.loc 1 1254 3 view .LVU389
 1229              		.loc 1 1254 6 is_stmt 0 view .LVU390
 1230 0000 0A4B     		ldr	r3, .L106
 1231 0002 9842     		cmp	r0, r3
 1232 0004 0AD8     		bhi	.L105
1255:./Library/stm32f4xx_dma.c ****   {
1256:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1257:./Library/stm32f4xx_dma.c ****     DMAy = DMA1; 
 1233              		.loc 1 1257 10 view .LVU391
 1234 0006 A3F20F43 		subw	r3, r3, #1039
 1235              	.L102:
 1236              	.LVL70:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 45


1258:./Library/stm32f4xx_dma.c ****   } 
1259:./Library/stm32f4xx_dma.c ****   else 
1260:./Library/stm32f4xx_dma.c ****   {
1261:./Library/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1262:./Library/stm32f4xx_dma.c ****     DMAy = DMA2; 
1263:./Library/stm32f4xx_dma.c ****   }
1264:./Library/stm32f4xx_dma.c **** 
1265:./Library/stm32f4xx_dma.c ****   /* Check if LIFCR or HIFCR register is targeted */
1266:./Library/stm32f4xx_dma.c ****   if ((DMA_IT & HIGH_ISR_MASK) != (uint32_t)RESET)
 1237              		.loc 1 1266 3 is_stmt 1 view .LVU392
 1238              		.loc 1 1266 6 is_stmt 0 view .LVU393
 1239 000a 11F0005F 		tst	r1, #536870912
 1240 000e 07D0     		beq	.L103
1267:./Library/stm32f4xx_dma.c ****   {
1268:./Library/stm32f4xx_dma.c ****     /* Set DMAy HIFCR register clear interrupt bits */
1269:./Library/stm32f4xx_dma.c ****     DMAy->HIFCR = (uint32_t)(DMA_IT & RESERVED_MASK);
 1241              		.loc 1 1269 5 is_stmt 1 view .LVU394
 1242              		.loc 1 1269 19 is_stmt 0 view .LVU395
 1243 0010 21F0F021 		bic	r1, r1, #-268374016
 1244              	.LVL71:
 1245              		.loc 1 1269 19 view .LVU396
 1246 0014 21F08211 		bic	r1, r1, #8519810
 1247              		.loc 1 1269 17 view .LVU397
 1248 0018 D960     		str	r1, [r3, #12]
 1249 001a 7047     		bx	lr
 1250              	.LVL72:
 1251              	.L105:
1262:./Library/stm32f4xx_dma.c ****   }
 1252              		.loc 1 1262 10 view .LVU398
 1253 001c 044B     		ldr	r3, .L106+4
 1254 001e F4E7     		b	.L102
 1255              	.LVL73:
 1256              	.L103:
1270:./Library/stm32f4xx_dma.c ****   }
1271:./Library/stm32f4xx_dma.c ****   else 
1272:./Library/stm32f4xx_dma.c ****   {
1273:./Library/stm32f4xx_dma.c ****     /* Set DMAy LIFCR register clear interrupt bits */
1274:./Library/stm32f4xx_dma.c ****     DMAy->LIFCR = (uint32_t)(DMA_IT & RESERVED_MASK);
 1257              		.loc 1 1274 5 is_stmt 1 view .LVU399
 1258              		.loc 1 1274 19 is_stmt 0 view .LVU400
 1259 0020 21F0F021 		bic	r1, r1, #-268374016
 1260              	.LVL74:
 1261              		.loc 1 1274 19 view .LVU401
 1262 0024 21F08211 		bic	r1, r1, #8519810
 1263              		.loc 1 1274 17 view .LVU402
 1264 0028 9960     		str	r1, [r3, #8]
1275:./Library/stm32f4xx_dma.c ****   }   
1276:./Library/stm32f4xx_dma.c **** }
 1265              		.loc 1 1276 1 view .LVU403
 1266 002a 7047     		bx	lr
 1267              	.L107:
 1268              		.align	2
 1269              	.L106:
 1270 002c 0F640240 		.word	1073898511
 1271 0030 00640240 		.word	1073898496
 1272              		.cfi_endproc
 1273              	.LFE141:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 46


 1275              		.text
 1276              	.Letext0:
 1277              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 1278              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 1279              		.file 4 "./CORE/stm32f4xx.h"
 1280              		.file 5 "./Library/stm32f4xx_dma.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dma.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:20     .text.DMA_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:26     .text.DMA_DeInit:0000000000000000 DMA_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:260    .text.DMA_DeInit:000000000000010c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:283    .text.DMA_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:289    .text.DMA_Init:0000000000000000 DMA_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:409    .text.DMA_Init:0000000000000054 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:414    .text.DMA_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:420    .text.DMA_StructInit:0000000000000000 DMA_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:480    .text.DMA_Cmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:486    .text.DMA_Cmd:0000000000000000 DMA_Cmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:517    .text.DMA_PeriphIncOffsetSizeConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:523    .text.DMA_PeriphIncOffsetSizeConfig:0000000000000000 DMA_PeriphIncOffsetSizeConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:554    .text.DMA_FlowControllerConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:560    .text.DMA_FlowControllerConfig:0000000000000000 DMA_FlowControllerConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:591    .text.DMA_SetCurrDataCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:597    .text.DMA_SetCurrDataCounter:0000000000000000 DMA_SetCurrDataCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:615    .text.DMA_GetCurrDataCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:621    .text.DMA_GetCurrDataCounter:0000000000000000 DMA_GetCurrDataCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:641    .text.DMA_DoubleBufferModeConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:647    .text.DMA_DoubleBufferModeConfig:0000000000000000 DMA_DoubleBufferModeConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:682    .text.DMA_DoubleBufferModeCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:688    .text.DMA_DoubleBufferModeCmd:0000000000000000 DMA_DoubleBufferModeCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:719    .text.DMA_MemoryTargetConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:725    .text.DMA_MemoryTargetConfig:0000000000000000 DMA_MemoryTargetConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:752    .text.DMA_GetCurrentMemoryTarget:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:758    .text.DMA_GetCurrentMemoryTarget:0000000000000000 DMA_GetCurrentMemoryTarget
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:786    .text.DMA_GetCmdStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:792    .text.DMA_GetCmdStatus:0000000000000000 DMA_GetCmdStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:825    .text.DMA_GetFIFOStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:831    .text.DMA_GetFIFOStatus:0000000000000000 DMA_GetFIFOStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:855    .text.DMA_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:861    .text.DMA_GetFlagStatus:0000000000000000 DMA_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:931    .text.DMA_GetFlagStatus:0000000000000030 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:937    .text.DMA_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:943    .text.DMA_ClearFlag:0000000000000000 DMA_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:996    .text.DMA_ClearFlag:000000000000002c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1002   .text.DMA_ITConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1008   .text.DMA_ITConfig:0000000000000000 DMA_ITConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1074   .text.DMA_GetITStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1080   .text.DMA_GetITStatus:0000000000000000 DMA_GetITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1204   .text.DMA_GetITStatus:0000000000000054 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1211   .text.DMA_ClearITPendingBit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1217   .text.DMA_ClearITPendingBit:0000000000000000 DMA_ClearITPendingBit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccoPvkPu.s:1270   .text.DMA_ClearITPendingBit:000000000000002c $d

NO UNDEFINED SYMBOLS
