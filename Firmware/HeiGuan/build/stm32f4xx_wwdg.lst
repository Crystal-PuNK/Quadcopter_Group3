ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_wwdg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.WWDG_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	WWDG_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	WWDG_DeInit:
  27              	.LFB123:
  28              		.file 1 "./Library/stm32f4xx_wwdg.c"
   1:./Library/stm32f4xx_wwdg.c **** /**
   2:./Library/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:./Library/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:./Library/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_wwdg.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_wwdg.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:./Library/stm32f4xx_wwdg.c ****   *           + Prescaler, Refresh window and Counter configuration
  10:./Library/stm32f4xx_wwdg.c ****   *           + WWDG activation
  11:./Library/stm32f4xx_wwdg.c ****   *           + Interrupts and flags management
  12:./Library/stm32f4xx_wwdg.c ****   *             
  13:./Library/stm32f4xx_wwdg.c ****  @verbatim    
  14:./Library/stm32f4xx_wwdg.c ****  ===============================================================================
  15:./Library/stm32f4xx_wwdg.c ****                            ##### WWDG features #####
  16:./Library/stm32f4xx_wwdg.c ****  ===============================================================================
  17:./Library/stm32f4xx_wwdg.c ****     [..]                                      
  18:./Library/stm32f4xx_wwdg.c ****         Once enabled the WWDG generates a system reset on expiry of a programmed
  19:./Library/stm32f4xx_wwdg.c ****         time period, unless the program refreshes the counter (downcounter) 
  20:./Library/stm32f4xx_wwdg.c ****         before to reach 0x3F value (i.e. a reset is generated when the counter
  21:./Library/stm32f4xx_wwdg.c ****         value rolls over from 0x40 to 0x3F). 
  22:./Library/stm32f4xx_wwdg.c ****         An MCU reset is also generated if the counter value is refreshed
  23:./Library/stm32f4xx_wwdg.c ****         before the counter has reached the refresh window value. This 
  24:./Library/stm32f4xx_wwdg.c ****         implies that the counter must be refreshed in a limited window.
  25:./Library/stm32f4xx_wwdg.c ****               
  26:./Library/stm32f4xx_wwdg.c ****         Once enabled the WWDG cannot be disabled except by a system reset.
  27:./Library/stm32f4xx_wwdg.c ****           
  28:./Library/stm32f4xx_wwdg.c ****         WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  29:./Library/stm32f4xx_wwdg.c ****         reset occurs.
  30:./Library/stm32f4xx_wwdg.c ****              
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 2


  31:./Library/stm32f4xx_wwdg.c ****         The WWDG counter input clock is derived from the APB clock divided 
  32:./Library/stm32f4xx_wwdg.c ****         by a programmable prescaler.
  33:./Library/stm32f4xx_wwdg.c ****                 
  34:./Library/stm32f4xx_wwdg.c ****         WWDG counter clock = PCLK1 / Prescaler
  35:./Library/stm32f4xx_wwdg.c ****         WWDG timeout = (WWDG counter clock) * (counter value)
  36:./Library/stm32f4xx_wwdg.c ****                        
  37:./Library/stm32f4xx_wwdg.c ****         Min-max timeout value @42 MHz(PCLK1): ~97.5 us / ~49.9 ms
  38:./Library/stm32f4xx_wwdg.c ****                              
  39:./Library/stm32f4xx_wwdg.c ****                       ##### How to use this driver #####
  40:./Library/stm32f4xx_wwdg.c ****  ===============================================================================
  41:./Library/stm32f4xx_wwdg.c ****     [..]
  42:./Library/stm32f4xx_wwdg.c ****       (#) Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) function
  43:./Library/stm32f4xx_wwdg.c ****               
  44:./Library/stm32f4xx_wwdg.c ****       (#) Configure the WWDG prescaler using WWDG_SetPrescaler() function
  45:./Library/stm32f4xx_wwdg.c ****                              
  46:./Library/stm32f4xx_wwdg.c ****       (#) Configure the WWDG refresh window using WWDG_SetWindowValue() function
  47:./Library/stm32f4xx_wwdg.c ****               
  48:./Library/stm32f4xx_wwdg.c ****       (#) Set the WWDG counter value and start it using WWDG_Enable() function.
  49:./Library/stm32f4xx_wwdg.c ****           When the WWDG is enabled the counter value should be configured to 
  50:./Library/stm32f4xx_wwdg.c ****           a value greater than 0x40 to prevent generating an immediate reset.     
  51:./Library/stm32f4xx_wwdg.c ****               
  52:./Library/stm32f4xx_wwdg.c ****       (#) Optionally you can enable the Early wakeup interrupt which is 
  53:./Library/stm32f4xx_wwdg.c ****           generated when the counter reach 0x40.
  54:./Library/stm32f4xx_wwdg.c ****           Once enabled this interrupt cannot be disabled except by a system reset.
  55:./Library/stm32f4xx_wwdg.c ****                   
  56:./Library/stm32f4xx_wwdg.c ****       (#) Then the application program must refresh the WWDG counter at regular
  57:./Library/stm32f4xx_wwdg.c ****           intervals during normal operation to prevent an MCU reset, using
  58:./Library/stm32f4xx_wwdg.c ****           WWDG_SetCounter() function. This operation must occur only when
  59:./Library/stm32f4xx_wwdg.c ****           the counter value is lower than the refresh window value, 
  60:./Library/stm32f4xx_wwdg.c ****           programmed using WWDG_SetWindowValue().         
  61:./Library/stm32f4xx_wwdg.c ****   
  62:./Library/stm32f4xx_wwdg.c ****     @endverbatim
  63:./Library/stm32f4xx_wwdg.c ****   ******************************************************************************
  64:./Library/stm32f4xx_wwdg.c ****   * @attention
  65:./Library/stm32f4xx_wwdg.c ****   *
  66:./Library/stm32f4xx_wwdg.c ****   * Copyright (c) 2016 STMicroelectronics.
  67:./Library/stm32f4xx_wwdg.c ****   * All rights reserved.
  68:./Library/stm32f4xx_wwdg.c ****   *
  69:./Library/stm32f4xx_wwdg.c ****   * This software is licensed under terms that can be found in the LICENSE file
  70:./Library/stm32f4xx_wwdg.c ****   * in the root directory of this software component.
  71:./Library/stm32f4xx_wwdg.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  72:./Library/stm32f4xx_wwdg.c ****   *
  73:./Library/stm32f4xx_wwdg.c ****   ******************************************************************************
  74:./Library/stm32f4xx_wwdg.c ****   */
  75:./Library/stm32f4xx_wwdg.c **** 
  76:./Library/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  77:./Library/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  78:./Library/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
  79:./Library/stm32f4xx_wwdg.c **** 
  80:./Library/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  81:./Library/stm32f4xx_wwdg.c ****   * @{
  82:./Library/stm32f4xx_wwdg.c ****   */
  83:./Library/stm32f4xx_wwdg.c **** 
  84:./Library/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  85:./Library/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  86:./Library/stm32f4xx_wwdg.c ****   * @{
  87:./Library/stm32f4xx_wwdg.c ****   */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 3


  88:./Library/stm32f4xx_wwdg.c **** 
  89:./Library/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  90:./Library/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
  91:./Library/stm32f4xx_wwdg.c **** 
  92:./Library/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  93:./Library/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  94:./Library/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  95:./Library/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  96:./Library/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
  97:./Library/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
  98:./Library/stm32f4xx_wwdg.c **** 
  99:./Library/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 100:./Library/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 101:./Library/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 102:./Library/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 103:./Library/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 104:./Library/stm32f4xx_wwdg.c **** 
 105:./Library/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 106:./Library/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 107:./Library/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 108:./Library/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 109:./Library/stm32f4xx_wwdg.c **** 
 110:./Library/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 111:./Library/stm32f4xx_wwdg.c ****   * @{
 112:./Library/stm32f4xx_wwdg.c ****   */
 113:./Library/stm32f4xx_wwdg.c **** 
 114:./Library/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 115:./Library/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 116:./Library/stm32f4xx_wwdg.c ****  *
 117:./Library/stm32f4xx_wwdg.c **** @verbatim   
 118:./Library/stm32f4xx_wwdg.c ****  ===============================================================================
 119:./Library/stm32f4xx_wwdg.c ****     ##### Prescaler, Refresh window and Counter configuration functions #####
 120:./Library/stm32f4xx_wwdg.c ****  ===============================================================================  
 121:./Library/stm32f4xx_wwdg.c **** 
 122:./Library/stm32f4xx_wwdg.c **** @endverbatim
 123:./Library/stm32f4xx_wwdg.c ****   * @{
 124:./Library/stm32f4xx_wwdg.c ****   */
 125:./Library/stm32f4xx_wwdg.c **** 
 126:./Library/stm32f4xx_wwdg.c **** /**
 127:./Library/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 128:./Library/stm32f4xx_wwdg.c ****   * @param  None
 129:./Library/stm32f4xx_wwdg.c ****   * @retval None
 130:./Library/stm32f4xx_wwdg.c ****   */
 131:./Library/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 132:./Library/stm32f4xx_wwdg.c **** {
  29              		.loc 1 132 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 133:./Library/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  38              		.loc 1 133 3 view .LVU1
  39 0002 0121     		movs	r1, #1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 4


  40 0004 4FF40060 		mov	r0, #2048
  41 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  42              	.LVL0:
 134:./Library/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  43              		.loc 1 134 3 view .LVU2
  44 000c 0021     		movs	r1, #0
  45 000e 4FF40060 		mov	r0, #2048
  46 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  47              	.LVL1:
 135:./Library/stm32f4xx_wwdg.c **** }
  48              		.loc 1 135 1 is_stmt 0 view .LVU3
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.WWDG_SetPrescaler,"ax",%progbits
  54              		.align	1
  55              		.global	WWDG_SetPrescaler
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	WWDG_SetPrescaler:
  61              	.LVL2:
  62              	.LFB124:
 136:./Library/stm32f4xx_wwdg.c **** 
 137:./Library/stm32f4xx_wwdg.c **** /**
 138:./Library/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 139:./Library/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 140:./Library/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 141:./Library/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 142:./Library/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 143:./Library/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 144:./Library/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 145:./Library/stm32f4xx_wwdg.c ****   * @retval None
 146:./Library/stm32f4xx_wwdg.c ****   */
 147:./Library/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 148:./Library/stm32f4xx_wwdg.c **** {
  63              		.loc 1 148 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 149:./Library/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  68              		.loc 1 149 3 view .LVU5
 150:./Library/stm32f4xx_wwdg.c ****   /* Check the parameters */
 151:./Library/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
  69              		.loc 1 151 3 view .LVU6
 152:./Library/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 153:./Library/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  70              		.loc 1 153 3 view .LVU7
  71              		.loc 1 153 16 is_stmt 0 view .LVU8
  72 0000 034A     		ldr	r2, .L4
  73 0002 5368     		ldr	r3, [r2, #4]
  74              		.loc 1 153 10 view .LVU9
  75 0004 23F4C073 		bic	r3, r3, #384
  76              	.LVL3:
 154:./Library/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 155:./Library/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 5


  77              		.loc 1 155 3 is_stmt 1 view .LVU10
  78              		.loc 1 155 10 is_stmt 0 view .LVU11
  79 0008 0343     		orrs	r3, r3, r0
  80              	.LVL4:
 156:./Library/stm32f4xx_wwdg.c ****   /* Store the new value */
 157:./Library/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
  81              		.loc 1 157 3 is_stmt 1 view .LVU12
  82              		.loc 1 157 13 is_stmt 0 view .LVU13
  83 000a 5360     		str	r3, [r2, #4]
 158:./Library/stm32f4xx_wwdg.c **** }
  84              		.loc 1 158 1 view .LVU14
  85 000c 7047     		bx	lr
  86              	.L5:
  87 000e 00BF     		.align	2
  88              	.L4:
  89 0010 002C0040 		.word	1073753088
  90              		.cfi_endproc
  91              	.LFE124:
  93              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
  94              		.align	1
  95              		.global	WWDG_SetWindowValue
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	WWDG_SetWindowValue:
 101              	.LVL5:
 102              	.LFB125:
 159:./Library/stm32f4xx_wwdg.c **** 
 160:./Library/stm32f4xx_wwdg.c **** /**
 161:./Library/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 162:./Library/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 163:./Library/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 164:./Library/stm32f4xx_wwdg.c ****   * @retval None
 165:./Library/stm32f4xx_wwdg.c ****   */
 166:./Library/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 167:./Library/stm32f4xx_wwdg.c **** {
 103              		.loc 1 167 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 8
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              		.loc 1 167 1 is_stmt 0 view .LVU16
 109 0000 82B0     		sub	sp, sp, #8
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 168:./Library/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 112              		.loc 1 168 3 is_stmt 1 view .LVU17
 113              		.loc 1 168 17 is_stmt 0 view .LVU18
 114 0002 0023     		movs	r3, #0
 115 0004 0193     		str	r3, [sp, #4]
 169:./Library/stm32f4xx_wwdg.c **** 
 170:./Library/stm32f4xx_wwdg.c ****   /* Check the parameters */
 171:./Library/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 116              		.loc 1 171 3 is_stmt 1 view .LVU19
 172:./Library/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 173:./Library/stm32f4xx_wwdg.c **** 
 174:./Library/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 6


 117              		.loc 1 174 3 view .LVU20
 118              		.loc 1 174 16 is_stmt 0 view .LVU21
 119 0006 074A     		ldr	r2, .L8
 120 0008 5368     		ldr	r3, [r2, #4]
 121              		.loc 1 174 22 view .LVU22
 122 000a 23F07F03 		bic	r3, r3, #127
 123              		.loc 1 174 10 view .LVU23
 124 000e 0193     		str	r3, [sp, #4]
 175:./Library/stm32f4xx_wwdg.c **** 
 176:./Library/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 177:./Library/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 125              		.loc 1 177 3 is_stmt 1 view .LVU24
 126              		.loc 1 177 25 is_stmt 0 view .LVU25
 127 0010 00F07F00 		and	r0, r0, #127
 128              	.LVL6:
 129              		.loc 1 177 10 view .LVU26
 130 0014 019B     		ldr	r3, [sp, #4]
 131 0016 1843     		orrs	r0, r0, r3
 132 0018 0190     		str	r0, [sp, #4]
 178:./Library/stm32f4xx_wwdg.c **** 
 179:./Library/stm32f4xx_wwdg.c ****   /* Store the new value */
 180:./Library/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 133              		.loc 1 180 3 is_stmt 1 view .LVU27
 134              		.loc 1 180 13 is_stmt 0 view .LVU28
 135 001a 019B     		ldr	r3, [sp, #4]
 136 001c 5360     		str	r3, [r2, #4]
 181:./Library/stm32f4xx_wwdg.c **** }
 137              		.loc 1 181 1 view .LVU29
 138 001e 02B0     		add	sp, sp, #8
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 0
 141              		@ sp needed
 142 0020 7047     		bx	lr
 143              	.L9:
 144 0022 00BF     		.align	2
 145              	.L8:
 146 0024 002C0040 		.word	1073753088
 147              		.cfi_endproc
 148              	.LFE125:
 150              		.section	.text.WWDG_EnableIT,"ax",%progbits
 151              		.align	1
 152              		.global	WWDG_EnableIT
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	WWDG_EnableIT:
 158              	.LFB126:
 182:./Library/stm32f4xx_wwdg.c **** 
 183:./Library/stm32f4xx_wwdg.c **** /**
 184:./Library/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 185:./Library/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 186:./Library/stm32f4xx_wwdg.c ****   * @param  None
 187:./Library/stm32f4xx_wwdg.c ****   * @retval None
 188:./Library/stm32f4xx_wwdg.c ****   */
 189:./Library/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 190:./Library/stm32f4xx_wwdg.c **** {
 159              		.loc 1 190 1 is_stmt 1 view -0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 7


 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 191:./Library/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 164              		.loc 1 191 3 view .LVU31
 165              		.loc 1 191 33 is_stmt 0 view .LVU32
 166 0000 024B     		ldr	r3, .L11
 167 0002 0122     		movs	r2, #1
 168 0004 C3F8A420 		str	r2, [r3, #164]
 192:./Library/stm32f4xx_wwdg.c **** }
 169              		.loc 1 192 1 view .LVU33
 170 0008 7047     		bx	lr
 171              	.L12:
 172 000a 00BF     		.align	2
 173              	.L11:
 174 000c 00800542 		.word	1107656704
 175              		.cfi_endproc
 176              	.LFE126:
 178              		.section	.text.WWDG_SetCounter,"ax",%progbits
 179              		.align	1
 180              		.global	WWDG_SetCounter
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	WWDG_SetCounter:
 186              	.LVL7:
 187              	.LFB127:
 193:./Library/stm32f4xx_wwdg.c **** 
 194:./Library/stm32f4xx_wwdg.c **** /**
 195:./Library/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 196:./Library/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 197:./Library/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 198:./Library/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 199:./Library/stm32f4xx_wwdg.c ****   * @retval None
 200:./Library/stm32f4xx_wwdg.c ****   */
 201:./Library/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 202:./Library/stm32f4xx_wwdg.c **** {
 188              		.loc 1 202 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 203:./Library/stm32f4xx_wwdg.c ****   /* Check the parameters */
 204:./Library/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 193              		.loc 1 204 3 view .LVU35
 205:./Library/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 206:./Library/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 207:./Library/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 194              		.loc 1 207 3 view .LVU36
 195              		.loc 1 207 22 is_stmt 0 view .LVU37
 196 0000 00F07F00 		and	r0, r0, #127
 197              	.LVL8:
 198              		.loc 1 207 12 view .LVU38
 199 0004 014B     		ldr	r3, .L14
 200 0006 1860     		str	r0, [r3]
 208:./Library/stm32f4xx_wwdg.c **** }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 8


 201              		.loc 1 208 1 view .LVU39
 202 0008 7047     		bx	lr
 203              	.L15:
 204 000a 00BF     		.align	2
 205              	.L14:
 206 000c 002C0040 		.word	1073753088
 207              		.cfi_endproc
 208              	.LFE127:
 210              		.section	.text.WWDG_Enable,"ax",%progbits
 211              		.align	1
 212              		.global	WWDG_Enable
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	WWDG_Enable:
 218              	.LVL9:
 219              	.LFB128:
 209:./Library/stm32f4xx_wwdg.c **** /**
 210:./Library/stm32f4xx_wwdg.c ****   * @}
 211:./Library/stm32f4xx_wwdg.c ****   */
 212:./Library/stm32f4xx_wwdg.c **** 
 213:./Library/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 214:./Library/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 215:./Library/stm32f4xx_wwdg.c ****  *
 216:./Library/stm32f4xx_wwdg.c **** @verbatim   
 217:./Library/stm32f4xx_wwdg.c ****  ===============================================================================
 218:./Library/stm32f4xx_wwdg.c ****                     ##### WWDG activation function #####
 219:./Library/stm32f4xx_wwdg.c ****  ===============================================================================  
 220:./Library/stm32f4xx_wwdg.c **** 
 221:./Library/stm32f4xx_wwdg.c **** @endverbatim
 222:./Library/stm32f4xx_wwdg.c ****   * @{
 223:./Library/stm32f4xx_wwdg.c ****   */
 224:./Library/stm32f4xx_wwdg.c **** 
 225:./Library/stm32f4xx_wwdg.c **** /**
 226:./Library/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 227:./Library/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 228:./Library/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 229:./Library/stm32f4xx_wwdg.c ****   *   an immediate reset)
 230:./Library/stm32f4xx_wwdg.c ****   * @retval None
 231:./Library/stm32f4xx_wwdg.c ****   */
 232:./Library/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 233:./Library/stm32f4xx_wwdg.c **** {
 220              		.loc 1 233 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 234:./Library/stm32f4xx_wwdg.c ****   /* Check the parameters */
 235:./Library/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 225              		.loc 1 235 3 view .LVU41
 236:./Library/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 226              		.loc 1 236 3 view .LVU42
 227              		.loc 1 236 27 is_stmt 0 view .LVU43
 228 0000 40F08000 		orr	r0, r0, #128
 229              	.LVL10:
 230              		.loc 1 236 12 view .LVU44
 231 0004 014B     		ldr	r3, .L17
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 9


 232 0006 1860     		str	r0, [r3]
 237:./Library/stm32f4xx_wwdg.c **** }
 233              		.loc 1 237 1 view .LVU45
 234 0008 7047     		bx	lr
 235              	.L18:
 236 000a 00BF     		.align	2
 237              	.L17:
 238 000c 002C0040 		.word	1073753088
 239              		.cfi_endproc
 240              	.LFE128:
 242              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 243              		.align	1
 244              		.global	WWDG_GetFlagStatus
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	WWDG_GetFlagStatus:
 250              	.LFB129:
 238:./Library/stm32f4xx_wwdg.c **** /**
 239:./Library/stm32f4xx_wwdg.c ****   * @}
 240:./Library/stm32f4xx_wwdg.c ****   */
 241:./Library/stm32f4xx_wwdg.c **** 
 242:./Library/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 243:./Library/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 244:./Library/stm32f4xx_wwdg.c ****  *
 245:./Library/stm32f4xx_wwdg.c **** @verbatim   
 246:./Library/stm32f4xx_wwdg.c ****  ===============================================================================
 247:./Library/stm32f4xx_wwdg.c ****             ##### Interrupts and flags management functions #####
 248:./Library/stm32f4xx_wwdg.c ****  ===============================================================================  
 249:./Library/stm32f4xx_wwdg.c **** 
 250:./Library/stm32f4xx_wwdg.c **** @endverbatim
 251:./Library/stm32f4xx_wwdg.c ****   * @{
 252:./Library/stm32f4xx_wwdg.c ****   */
 253:./Library/stm32f4xx_wwdg.c **** 
 254:./Library/stm32f4xx_wwdg.c **** /**
 255:./Library/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 256:./Library/stm32f4xx_wwdg.c ****   * @param  None
 257:./Library/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 258:./Library/stm32f4xx_wwdg.c ****   */
 259:./Library/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 260:./Library/stm32f4xx_wwdg.c **** {
 251              		.loc 1 260 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 261:./Library/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 256              		.loc 1 261 3 view .LVU47
 257              	.LVL11:
 262:./Library/stm32f4xx_wwdg.c ****     
 263:./Library/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 258              		.loc 1 263 3 view .LVU48
 259              		.loc 1 263 12 is_stmt 0 view .LVU49
 260 0000 034B     		ldr	r3, .L22
 261 0002 9B68     		ldr	r3, [r3, #8]
 262              		.loc 1 263 6 view .LVU50
 263 0004 0BB1     		cbz	r3, .L21
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 10


 264:./Library/stm32f4xx_wwdg.c ****   {
 265:./Library/stm32f4xx_wwdg.c ****     bitstatus = SET;
 264              		.loc 1 265 15 view .LVU51
 265 0006 0120     		movs	r0, #1
 266 0008 7047     		bx	lr
 267              	.L21:
 266:./Library/stm32f4xx_wwdg.c ****   }
 267:./Library/stm32f4xx_wwdg.c ****   else
 268:./Library/stm32f4xx_wwdg.c ****   {
 269:./Library/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 268              		.loc 1 269 15 view .LVU52
 269 000a 0020     		movs	r0, #0
 270              	.LVL12:
 270:./Library/stm32f4xx_wwdg.c ****   }
 271:./Library/stm32f4xx_wwdg.c ****   return bitstatus;
 271              		.loc 1 271 3 is_stmt 1 view .LVU53
 272:./Library/stm32f4xx_wwdg.c **** }
 272              		.loc 1 272 1 is_stmt 0 view .LVU54
 273 000c 7047     		bx	lr
 274              	.L23:
 275 000e 00BF     		.align	2
 276              	.L22:
 277 0010 002C0040 		.word	1073753088
 278              		.cfi_endproc
 279              	.LFE129:
 281              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 282              		.align	1
 283              		.global	WWDG_ClearFlag
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	WWDG_ClearFlag:
 289              	.LFB130:
 273:./Library/stm32f4xx_wwdg.c **** 
 274:./Library/stm32f4xx_wwdg.c **** /**
 275:./Library/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 276:./Library/stm32f4xx_wwdg.c ****   * @param  None
 277:./Library/stm32f4xx_wwdg.c ****   * @retval None
 278:./Library/stm32f4xx_wwdg.c ****   */
 279:./Library/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 280:./Library/stm32f4xx_wwdg.c **** {
 290              		.loc 1 280 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 281:./Library/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 295              		.loc 1 281 3 view .LVU56
 296              		.loc 1 281 12 is_stmt 0 view .LVU57
 297 0000 014B     		ldr	r3, .L25
 298 0002 0022     		movs	r2, #0
 299 0004 9A60     		str	r2, [r3, #8]
 282:./Library/stm32f4xx_wwdg.c **** }
 300              		.loc 1 282 1 view .LVU58
 301 0006 7047     		bx	lr
 302              	.L26:
 303              		.align	2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 11


 304              	.L25:
 305 0008 002C0040 		.word	1073753088
 306              		.cfi_endproc
 307              	.LFE130:
 309              		.text
 310              	.Letext0:
 311              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 312              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 313              		.file 4 "./CORE/stm32f4xx.h"
 314              		.file 5 "./Library/stm32f4xx_rcc.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_wwdg.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:20     .text.WWDG_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:26     .text.WWDG_DeInit:0000000000000000 WWDG_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:54     .text.WWDG_SetPrescaler:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:60     .text.WWDG_SetPrescaler:0000000000000000 WWDG_SetPrescaler
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:89     .text.WWDG_SetPrescaler:0000000000000010 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:94     .text.WWDG_SetWindowValue:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:100    .text.WWDG_SetWindowValue:0000000000000000 WWDG_SetWindowValue
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:146    .text.WWDG_SetWindowValue:0000000000000024 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:151    .text.WWDG_EnableIT:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:157    .text.WWDG_EnableIT:0000000000000000 WWDG_EnableIT
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:174    .text.WWDG_EnableIT:000000000000000c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:179    .text.WWDG_SetCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:185    .text.WWDG_SetCounter:0000000000000000 WWDG_SetCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:206    .text.WWDG_SetCounter:000000000000000c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:211    .text.WWDG_Enable:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:217    .text.WWDG_Enable:0000000000000000 WWDG_Enable
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:238    .text.WWDG_Enable:000000000000000c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:243    .text.WWDG_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:249    .text.WWDG_GetFlagStatus:0000000000000000 WWDG_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:277    .text.WWDG_GetFlagStatus:0000000000000010 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:282    .text.WWDG_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:288    .text.WWDG_ClearFlag:0000000000000000 WWDG_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccn4HdC3.s:305    .text.WWDG_ClearFlag:0000000000000008 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
