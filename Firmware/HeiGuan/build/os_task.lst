ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"os_task.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OSTaskChangePrio,"ax",%progbits
  20              		.align	1
  21              		.global	OSTaskChangePrio
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	OSTaskChangePrio:
  27              	.LFB3:
  28              		.file 1 "./ucOSII/Core/os_task.c"
   1:./ucOSII/Core/os_task.c **** /*
   2:./ucOSII/Core/os_task.c **** ***************************************************************************************************
   3:./ucOSII/Core/os_task.c **** *                                              uC/OS-II
   4:./ucOSII/Core/os_task.c **** *                                        The Real-Time Kernel
   5:./ucOSII/Core/os_task.c **** *
   6:./ucOSII/Core/os_task.c **** *                    Copyright 1992-2021 Silicon Laboratories Inc. www.silabs.com
   7:./ucOSII/Core/os_task.c **** *
   8:./ucOSII/Core/os_task.c **** *                                 SPDX-License-Identifier: APACHE-2.0
   9:./ucOSII/Core/os_task.c **** *
  10:./ucOSII/Core/os_task.c **** *               This software is subject to an open source license and is distributed by
  11:./ucOSII/Core/os_task.c **** *                Silicon Laboratories Inc. pursuant to the terms of the Apache License,
  12:./ucOSII/Core/os_task.c **** *                    Version 2.0 available at www.apache.org/licenses/LICENSE-2.0.
  13:./ucOSII/Core/os_task.c **** *
  14:./ucOSII/Core/os_task.c **** ***************************************************************************************************
  15:./ucOSII/Core/os_task.c **** */
  16:./ucOSII/Core/os_task.c **** 
  17:./ucOSII/Core/os_task.c **** 
  18:./ucOSII/Core/os_task.c **** /*
  19:./ucOSII/Core/os_task.c **** ***************************************************************************************************
  20:./ucOSII/Core/os_task.c **** *
  21:./ucOSII/Core/os_task.c **** *                                            TASK MANAGEMENT
  22:./ucOSII/Core/os_task.c **** *
  23:./ucOSII/Core/os_task.c **** * Filename : os_task.c
  24:./ucOSII/Core/os_task.c **** * Version  : V2.93.01
  25:./ucOSII/Core/os_task.c **** ***************************************************************************************************
  26:./ucOSII/Core/os_task.c **** */
  27:./ucOSII/Core/os_task.c **** 
  28:./ucOSII/Core/os_task.c **** #ifndef  OS_TASK_C
  29:./ucOSII/Core/os_task.c **** #define  OS_TASK_C
  30:./ucOSII/Core/os_task.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 2


  31:./ucOSII/Core/os_task.c **** #define  MICRIUM_SOURCE
  32:./ucOSII/Core/os_task.c **** 
  33:./ucOSII/Core/os_task.c **** #ifndef  OS_MASTER_FILE
  34:./ucOSII/Core/os_task.c **** #include <ucos_ii.h>
  35:./ucOSII/Core/os_task.c **** #endif
  36:./ucOSII/Core/os_task.c **** 
  37:./ucOSII/Core/os_task.c **** 
  38:./ucOSII/Core/os_task.c **** /*
  39:./ucOSII/Core/os_task.c **** ***************************************************************************************************
  40:./ucOSII/Core/os_task.c **** *                                      CHANGE PRIORITY OF A TASK
  41:./ucOSII/Core/os_task.c **** *
  42:./ucOSII/Core/os_task.c **** * Description: This function allows you to change the priority of a task dynamically.  Note that th
  43:./ucOSII/Core/os_task.c **** *              priority MUST be available.
  44:./ucOSII/Core/os_task.c **** *
  45:./ucOSII/Core/os_task.c **** * Arguments  : oldp     is the old priority
  46:./ucOSII/Core/os_task.c **** *
  47:./ucOSII/Core/os_task.c **** *              newp     is the new priority
  48:./ucOSII/Core/os_task.c **** *
  49:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE            is the call was successful
  50:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
  51:./ucOSII/Core/os_task.c **** *                                     (i.e. >= OS_LOWEST_PRIO)
  52:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_EXIST      if the new priority already exist.
  53:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO            there is no task with the specified OLD priority (i.e. the OL
  54:./ucOSII/Core/os_task.c **** *                                     not exist.
  55:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task is assigned to a Mutex PIP.
  56:./ucOSII/Core/os_task.c **** ***************************************************************************************************
  57:./ucOSII/Core/os_task.c **** */
  58:./ucOSII/Core/os_task.c **** 
  59:./ucOSII/Core/os_task.c **** #if OS_TASK_CHANGE_PRIO_EN > 0u
  60:./ucOSII/Core/os_task.c **** INT8U  OSTaskChangePrio (INT8U  oldprio,
  61:./ucOSII/Core/os_task.c ****                          INT8U  newprio)
  62:./ucOSII/Core/os_task.c **** {
  29              		.loc 1 62 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 88B0     		sub	sp, sp, #32
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 0346     		mov	r3, r0
  45 0008 0A46     		mov	r2, r1
  46 000a FB71     		strb	r3, [r7, #7]
  47 000c 1346     		mov	r3, r2
  48 000e BB71     		strb	r3, [r7, #6]
  63:./ucOSII/Core/os_task.c **** #if (OS_EVENT_EN)
  64:./ucOSII/Core/os_task.c ****     OS_EVENT  *pevent;
  65:./ucOSII/Core/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
  66:./ucOSII/Core/os_task.c ****     OS_EVENT **pevents;
  67:./ucOSII/Core/os_task.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 3


  68:./ucOSII/Core/os_task.c **** #endif
  69:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
  70:./ucOSII/Core/os_task.c ****     INT8U      y_new;
  71:./ucOSII/Core/os_task.c ****     INT8U      x_new;
  72:./ucOSII/Core/os_task.c ****     INT8U      y_old;
  73:./ucOSII/Core/os_task.c ****     OS_PRIO    bity_new;
  74:./ucOSII/Core/os_task.c ****     OS_PRIO    bitx_new;
  75:./ucOSII/Core/os_task.c ****     OS_PRIO    bity_old;
  76:./ucOSII/Core/os_task.c ****     OS_PRIO    bitx_old;
  77:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u
  78:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;                                 /* Storage for CPU status register     
  49              		.loc 1 78 16
  50 0010 0023     		movs	r3, #0
  51 0012 7B61     		str	r3, [r7, #20]
  79:./ucOSII/Core/os_task.c **** #endif
  80:./ucOSII/Core/os_task.c **** 
  81:./ucOSII/Core/os_task.c **** 
  82:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
  83:./ucOSII/Core/os_task.c ****     if (oldprio >= OS_LOWEST_PRIO) {
  52              		.loc 1 83 8
  53 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  54 0016 3E2B     		cmp	r3, #62
  55 0018 04D9     		bls	.L2
  84:./ucOSII/Core/os_task.c ****         if (oldprio != OS_PRIO_SELF) {
  56              		.loc 1 84 12
  57 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  58 001c FF2B     		cmp	r3, #255
  59 001e 01D0     		beq	.L2
  85:./ucOSII/Core/os_task.c ****             return (OS_ERR_PRIO_INVALID);
  60              		.loc 1 85 20
  61 0020 2A23     		movs	r3, #42
  62 0022 20E1     		b	.L3
  63              	.L2:
  86:./ucOSII/Core/os_task.c ****         }
  87:./ucOSII/Core/os_task.c ****     }
  88:./ucOSII/Core/os_task.c ****     if (newprio >= OS_LOWEST_PRIO) {
  64              		.loc 1 88 8
  65 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  66 0026 3E2B     		cmp	r3, #62
  67 0028 01D9     		bls	.L4
  89:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO_INVALID);
  68              		.loc 1 89 16
  69 002a 2A23     		movs	r3, #42
  70 002c 1BE1     		b	.L3
  71              	.L4:
  90:./ucOSII/Core/os_task.c ****     }
  91:./ucOSII/Core/os_task.c **** #endif
  92:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
  72              		.loc 1 92 5
  73 002e 4020     		movs	r0, #64
  74 0030 FFF7FEFF 		bl	OS_CPU_SR_Save
  75 0034 7861     		str	r0, [r7, #20]
  93:./ucOSII/Core/os_task.c ****     if (OSTCBPrioTbl[newprio] != (OS_TCB *)0) {             /* New priority must not already exist 
  76              		.loc 1 93 21
  77 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  78 0038 8D4A     		ldr	r2, .L18
  79 003a 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 4


  80              		.loc 1 93 8
  81 003e 002B     		cmp	r3, #0
  82 0040 04D0     		beq	.L5
  94:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
  83              		.loc 1 94 9
  84 0042 7869     		ldr	r0, [r7, #20]
  85 0044 FFF7FEFF 		bl	OS_CPU_SR_Restore
  95:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO_EXIST);
  86              		.loc 1 95 16
  87 0048 2823     		movs	r3, #40
  88 004a 0CE1     		b	.L3
  89              	.L5:
  96:./ucOSII/Core/os_task.c ****     }
  97:./ucOSII/Core/os_task.c ****     if (oldprio == OS_PRIO_SELF) {                          /* See if changing self                
  90              		.loc 1 97 8
  91 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  92 004e FF2B     		cmp	r3, #255
  93 0050 04D1     		bne	.L6
  98:./ucOSII/Core/os_task.c ****         oldprio = OSTCBCur->OSTCBPrio;                      /* Yes, get priority                   
  94              		.loc 1 98 27
  95 0052 884B     		ldr	r3, .L18+4
  96 0054 1B68     		ldr	r3, [r3]
  97              		.loc 1 98 17
  98 0056 93F83A30 		ldrb	r3, [r3, #58]
  99 005a FB71     		strb	r3, [r7, #7]
 100              	.L6:
  99:./ucOSII/Core/os_task.c ****     }
 100:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[oldprio];
 101              		.loc 1 100 24
 102 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 103              		.loc 1 100 10
 104 005e 844A     		ldr	r2, .L18
 105 0060 52F82330 		ldr	r3, [r2, r3, lsl #2]
 106 0064 3B61     		str	r3, [r7, #16]
 101:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                              /* Does task to change exist?          
 107              		.loc 1 101 8
 108 0066 3B69     		ldr	r3, [r7, #16]
 109 0068 002B     		cmp	r3, #0
 110 006a 04D1     		bne	.L7
 102:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();                                 /* No, can't change its priority!      
 111              		.loc 1 102 9
 112 006c 7869     		ldr	r0, [r7, #20]
 113 006e FFF7FEFF 		bl	OS_CPU_SR_Restore
 103:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO);
 114              		.loc 1 103 16
 115 0072 2923     		movs	r3, #41
 116 0074 F7E0     		b	.L3
 117              	.L7:
 104:./ucOSII/Core/os_task.c ****     }
 105:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                          /* Is task assigned to Mutex           
 118              		.loc 1 105 8
 119 0076 3B69     		ldr	r3, [r7, #16]
 120 0078 012B     		cmp	r3, #1
 121 007a 04D1     		bne	.L8
 106:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();                                 /* No, can't change its priority!      
 122              		.loc 1 106 9
 123 007c 7869     		ldr	r0, [r7, #20]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 5


 124 007e FFF7FEFF 		bl	OS_CPU_SR_Restore
 107:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 125              		.loc 1 107 16
 126 0082 4323     		movs	r3, #67
 127 0084 EFE0     		b	.L3
 128              	.L8:
 108:./ucOSII/Core/os_task.c ****     }
 109:./ucOSII/Core/os_task.c **** #if OS_LOWEST_PRIO <= 63u
 110:./ucOSII/Core/os_task.c ****     y_new                 = (INT8U)(newprio >> 3u);         /* Yes, compute new TCB fields         
 129              		.loc 1 110 27
 130 0086 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 131 0088 DB08     		lsrs	r3, r3, #3
 132 008a FB73     		strb	r3, [r7, #15]
 111:./ucOSII/Core/os_task.c ****     x_new                 = (INT8U)(newprio & 0x07u);
 133              		.loc 1 111 27
 134 008c BB79     		ldrb	r3, [r7, #6]
 135 008e 03F00703 		and	r3, r3, #7
 136 0092 BB73     		strb	r3, [r7, #14]
 112:./ucOSII/Core/os_task.c **** #else
 113:./ucOSII/Core/os_task.c ****     y_new                 = (INT8U)((INT8U)(newprio >> 4u) & 0x0Fu);
 114:./ucOSII/Core/os_task.c ****     x_new                 = (INT8U)(newprio & 0x0Fu);
 115:./ucOSII/Core/os_task.c **** #endif
 116:./ucOSII/Core/os_task.c ****     bity_new              = (OS_PRIO)(1uL << y_new);
 137              		.loc 1 116 43
 138 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 139 0096 0122     		movs	r2, #1
 140 0098 02FA03F3 		lsl	r3, r2, r3
 141              		.loc 1 116 27
 142 009c 7B73     		strb	r3, [r7, #13]
 117:./ucOSII/Core/os_task.c ****     bitx_new              = (OS_PRIO)(1uL << x_new);
 143              		.loc 1 117 43
 144 009e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 145 00a0 0122     		movs	r2, #1
 146 00a2 02FA03F3 		lsl	r3, r2, r3
 147              		.loc 1 117 27
 148 00a6 3B73     		strb	r3, [r7, #12]
 118:./ucOSII/Core/os_task.c **** 
 119:./ucOSII/Core/os_task.c ****     OSTCBPrioTbl[oldprio] = (OS_TCB *)0;                    /* Remove TCB from old priority        
 149              		.loc 1 119 17
 150 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 151              		.loc 1 119 27
 152 00aa 714A     		ldr	r2, .L18
 153 00ac 0021     		movs	r1, #0
 154 00ae 42F82310 		str	r1, [r2, r3, lsl #2]
 120:./ucOSII/Core/os_task.c ****     OSTCBPrioTbl[newprio] =  ptcb;                          /* Place pointer to TCB @ new priority 
 155              		.loc 1 120 17
 156 00b2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 157              		.loc 1 120 27
 158 00b4 6E49     		ldr	r1, .L18
 159 00b6 3A69     		ldr	r2, [r7, #16]
 160 00b8 41F82320 		str	r2, [r1, r3, lsl #2]
 121:./ucOSII/Core/os_task.c ****     y_old                 =  ptcb->OSTCBY;
 161              		.loc 1 121 27
 162 00bc 3B69     		ldr	r3, [r7, #16]
 163 00be 93F83C30 		ldrb	r3, [r3, #60]
 164 00c2 FB72     		strb	r3, [r7, #11]
 122:./ucOSII/Core/os_task.c ****     bity_old              =  ptcb->OSTCBBitY;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 6


 165              		.loc 1 122 27
 166 00c4 3B69     		ldr	r3, [r7, #16]
 167 00c6 93F83E30 		ldrb	r3, [r3, #62]
 168 00ca BB72     		strb	r3, [r7, #10]
 123:./ucOSII/Core/os_task.c ****     bitx_old              =  ptcb->OSTCBBitX;
 169              		.loc 1 123 27
 170 00cc 3B69     		ldr	r3, [r7, #16]
 171 00ce 93F83D30 		ldrb	r3, [r3, #61]
 172 00d2 7B72     		strb	r3, [r7, #9]
 124:./ucOSII/Core/os_task.c ****     if ((OSRdyTbl[y_old] &   bitx_old) != 0u) {             /* If task is ready make it not        
 173              		.loc 1 124 18
 174 00d4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 175 00d6 684A     		ldr	r2, .L18+8
 176 00d8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 177              		.loc 1 124 40
 178 00da 7B7A     		ldrb	r3, [r7, #9]
 179 00dc 1340     		ands	r3, r3, r2
 180 00de DBB2     		uxtb	r3, r3
 181              		.loc 1 124 8
 182 00e0 002B     		cmp	r3, #0
 183 00e2 28D0     		beq	.L9
 125:./ucOSII/Core/os_task.c ****          OSRdyTbl[y_old] &= (OS_PRIO)~bitx_old;
 184              		.loc 1 125 26
 185 00e4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 186 00e6 644A     		ldr	r2, .L18+8
 187 00e8 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 188              		.loc 1 125 29
 189 00ea 7B7A     		ldrb	r3, [r7, #9]
 190 00ec DB43     		mvns	r3, r3
 191 00ee DAB2     		uxtb	r2, r3
 192              		.loc 1 125 26
 193 00f0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 194 00f2 0A40     		ands	r2, r2, r1
 195 00f4 D1B2     		uxtb	r1, r2
 196 00f6 604A     		ldr	r2, .L18+8
 197 00f8 D154     		strb	r1, [r2, r3]
 126:./ucOSII/Core/os_task.c ****          if (OSRdyTbl[y_old] == 0u) {
 198              		.loc 1 126 22
 199 00fa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 200 00fc 5E4A     		ldr	r2, .L18+8
 201 00fe D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 202              		.loc 1 126 13
 203 0100 002B     		cmp	r3, #0
 204 0102 08D1     		bne	.L10
 127:./ucOSII/Core/os_task.c ****              OSRdyGrp &= (OS_PRIO)~bity_old;
 205              		.loc 1 127 26
 206 0104 BB7A     		ldrb	r3, [r7, #10]
 207 0106 DB43     		mvns	r3, r3
 208 0108 DAB2     		uxtb	r2, r3
 209              		.loc 1 127 23
 210 010a 5C4B     		ldr	r3, .L18+12
 211 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 212 010e 1340     		ands	r3, r3, r2
 213 0110 DAB2     		uxtb	r2, r3
 214 0112 5A4B     		ldr	r3, .L18+12
 215 0114 1A70     		strb	r2, [r3]
 216              	.L10:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 7


 128:./ucOSII/Core/os_task.c ****          }
 129:./ucOSII/Core/os_task.c ****          OSRdyGrp        |= bity_new;                       /* Make new priority ready to run      
 217              		.loc 1 129 26
 218 0116 594B     		ldr	r3, .L18+12
 219 0118 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 220 011a 7B7B     		ldrb	r3, [r7, #13]
 221 011c 1343     		orrs	r3, r3, r2
 222 011e DAB2     		uxtb	r2, r3
 223 0120 564B     		ldr	r3, .L18+12
 224 0122 1A70     		strb	r2, [r3]
 130:./ucOSII/Core/os_task.c ****          OSRdyTbl[y_new] |= bitx_new;
 225              		.loc 1 130 26
 226 0124 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 227 0126 544A     		ldr	r2, .L18+8
 228 0128 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 229 012a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 230 012c 3A7B     		ldrb	r2, [r7, #12]
 231 012e 0A43     		orrs	r2, r2, r1
 232 0130 D1B2     		uxtb	r1, r2
 233 0132 514A     		ldr	r2, .L18+8
 234 0134 D154     		strb	r1, [r2, r3]
 235              	.L9:
 131:./ucOSII/Core/os_task.c ****          OS_TRACE_TASK_READY(ptcb);
 132:./ucOSII/Core/os_task.c ****     }
 133:./ucOSII/Core/os_task.c **** 
 134:./ucOSII/Core/os_task.c **** #if (OS_EVENT_EN)
 135:./ucOSII/Core/os_task.c ****     pevent = ptcb->OSTCBEventPtr;
 236              		.loc 1 135 12
 237 0136 3B69     		ldr	r3, [r7, #16]
 238 0138 DB69     		ldr	r3, [r3, #28]
 239 013a FB61     		str	r3, [r7, #28]
 136:./ucOSII/Core/os_task.c ****     if (pevent != (OS_EVENT *)0) {
 240              		.loc 1 136 8
 241 013c FB69     		ldr	r3, [r7, #28]
 242 013e 002B     		cmp	r3, #0
 243 0140 2FD0     		beq	.L11
 137:./ucOSII/Core/os_task.c ****         pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;    /* Remove old task prio from wait list 
 244              		.loc 1 137 35
 245 0142 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 246 0144 FA69     		ldr	r2, [r7, #28]
 247 0146 1344     		add	r3, r3, r2
 248 0148 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 249              		.loc 1 137 38
 250 014a 7B7A     		ldrb	r3, [r7, #9]
 251 014c DB43     		mvns	r3, r3
 252 014e DAB2     		uxtb	r2, r3
 253              		.loc 1 137 35
 254 0150 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 255 0152 0A40     		ands	r2, r2, r1
 256 0154 D1B2     		uxtb	r1, r2
 257 0156 FA69     		ldr	r2, [r7, #28]
 258 0158 1344     		add	r3, r3, r2
 259 015a 0A46     		mov	r2, r1
 260 015c DA72     		strb	r2, [r3, #11]
 138:./ucOSII/Core/os_task.c ****         if (pevent->OSEventTbl[y_old] == 0u) {
 261              		.loc 1 138 31
 262 015e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 8


 263 0160 FA69     		ldr	r2, [r7, #28]
 264 0162 1344     		add	r3, r3, r2
 265 0164 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 266              		.loc 1 138 12
 267 0166 002B     		cmp	r3, #0
 268 0168 08D1     		bne	.L12
 139:./ucOSII/Core/os_task.c ****             pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 269              		.loc 1 139 35
 270 016a FB69     		ldr	r3, [r7, #28]
 271 016c 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 272              		.loc 1 139 38
 273 016e BB7A     		ldrb	r3, [r7, #10]
 274 0170 DB43     		mvns	r3, r3
 275 0172 DBB2     		uxtb	r3, r3
 276              		.loc 1 139 35
 277 0174 1340     		ands	r3, r3, r2
 278 0176 DAB2     		uxtb	r2, r3
 279 0178 FB69     		ldr	r3, [r7, #28]
 280 017a 9A72     		strb	r2, [r3, #10]
 281              	.L12:
 140:./ucOSII/Core/os_task.c ****         }
 141:./ucOSII/Core/os_task.c ****         pevent->OSEventGrp        |= bity_new;              /* Add    new task prio to   wait list 
 282              		.loc 1 141 35
 283 017c FB69     		ldr	r3, [r7, #28]
 284 017e 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 285 0180 7B7B     		ldrb	r3, [r7, #13]
 286 0182 1343     		orrs	r3, r3, r2
 287 0184 DAB2     		uxtb	r2, r3
 288 0186 FB69     		ldr	r3, [r7, #28]
 289 0188 9A72     		strb	r2, [r3, #10]
 142:./ucOSII/Core/os_task.c ****         pevent->OSEventTbl[y_new] |= bitx_new;
 290              		.loc 1 142 35
 291 018a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 292 018c FA69     		ldr	r2, [r7, #28]
 293 018e 1344     		add	r3, r3, r2
 294 0190 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 295 0192 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 296 0194 3A7B     		ldrb	r2, [r7, #12]
 297 0196 0A43     		orrs	r2, r2, r1
 298 0198 D1B2     		uxtb	r1, r2
 299 019a FA69     		ldr	r2, [r7, #28]
 300 019c 1344     		add	r3, r3, r2
 301 019e 0A46     		mov	r2, r1
 302 01a0 DA72     		strb	r2, [r3, #11]
 303              	.L11:
 143:./ucOSII/Core/os_task.c ****     }
 144:./ucOSII/Core/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
 145:./ucOSII/Core/os_task.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
 304              		.loc 1 145 13
 305 01a2 3B69     		ldr	r3, [r7, #16]
 306 01a4 1B6A     		ldr	r3, [r3, #32]
 307              		.loc 1 145 8
 308 01a6 002B     		cmp	r3, #0
 309 01a8 3FD0     		beq	.L13
 146:./ucOSII/Core/os_task.c ****         pevents =  ptcb->OSTCBEventMultiPtr;
 310              		.loc 1 146 17
 311 01aa 3B69     		ldr	r3, [r7, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 9


 312 01ac 1B6A     		ldr	r3, [r3, #32]
 313 01ae BB61     		str	r3, [r7, #24]
 147:./ucOSII/Core/os_task.c ****         pevent  = *pevents;
 314              		.loc 1 147 17
 315 01b0 BB69     		ldr	r3, [r7, #24]
 316 01b2 1B68     		ldr	r3, [r3]
 317 01b4 FB61     		str	r3, [r7, #28]
 148:./ucOSII/Core/os_task.c ****         while (pevent != (OS_EVENT *)0) {
 318              		.loc 1 148 15
 319 01b6 35E0     		b	.L14
 320              	.L16:
 149:./ucOSII/Core/os_task.c ****             pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;   /* Remove old task prio from wait li
 321              		.loc 1 149 39
 322 01b8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 323 01ba FA69     		ldr	r2, [r7, #28]
 324 01bc 1344     		add	r3, r3, r2
 325 01be D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 326              		.loc 1 149 42
 327 01c0 7B7A     		ldrb	r3, [r7, #9]
 328 01c2 DB43     		mvns	r3, r3
 329 01c4 DAB2     		uxtb	r2, r3
 330              		.loc 1 149 39
 331 01c6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 332 01c8 0A40     		ands	r2, r2, r1
 333 01ca D1B2     		uxtb	r1, r2
 334 01cc FA69     		ldr	r2, [r7, #28]
 335 01ce 1344     		add	r3, r3, r2
 336 01d0 0A46     		mov	r2, r1
 337 01d2 DA72     		strb	r2, [r3, #11]
 150:./ucOSII/Core/os_task.c ****             if (pevent->OSEventTbl[y_old] == 0u) {
 338              		.loc 1 150 35
 339 01d4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 340 01d6 FA69     		ldr	r2, [r7, #28]
 341 01d8 1344     		add	r3, r3, r2
 342 01da DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 343              		.loc 1 150 16
 344 01dc 002B     		cmp	r3, #0
 345 01de 08D1     		bne	.L15
 151:./ucOSII/Core/os_task.c ****                 pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 346              		.loc 1 151 39
 347 01e0 FB69     		ldr	r3, [r7, #28]
 348 01e2 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 349              		.loc 1 151 42
 350 01e4 BB7A     		ldrb	r3, [r7, #10]
 351 01e6 DB43     		mvns	r3, r3
 352 01e8 DBB2     		uxtb	r3, r3
 353              		.loc 1 151 39
 354 01ea 1340     		ands	r3, r3, r2
 355 01ec DAB2     		uxtb	r2, r3
 356 01ee FB69     		ldr	r3, [r7, #28]
 357 01f0 9A72     		strb	r2, [r3, #10]
 358              	.L15:
 152:./ucOSII/Core/os_task.c ****             }
 153:./ucOSII/Core/os_task.c ****             pevent->OSEventGrp        |= bity_new;          /* Add    new task prio to   wait lists
 359              		.loc 1 153 39
 360 01f2 FB69     		ldr	r3, [r7, #28]
 361 01f4 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 10


 362 01f6 7B7B     		ldrb	r3, [r7, #13]
 363 01f8 1343     		orrs	r3, r3, r2
 364 01fa DAB2     		uxtb	r2, r3
 365 01fc FB69     		ldr	r3, [r7, #28]
 366 01fe 9A72     		strb	r2, [r3, #10]
 154:./ucOSII/Core/os_task.c ****             pevent->OSEventTbl[y_new] |= bitx_new;
 367              		.loc 1 154 39
 368 0200 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 369 0202 FA69     		ldr	r2, [r7, #28]
 370 0204 1344     		add	r3, r3, r2
 371 0206 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 372 0208 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 373 020a 3A7B     		ldrb	r2, [r7, #12]
 374 020c 0A43     		orrs	r2, r2, r1
 375 020e D1B2     		uxtb	r1, r2
 376 0210 FA69     		ldr	r2, [r7, #28]
 377 0212 1344     		add	r3, r3, r2
 378 0214 0A46     		mov	r2, r1
 379 0216 DA72     		strb	r2, [r3, #11]
 155:./ucOSII/Core/os_task.c ****             pevents++;
 380              		.loc 1 155 20
 381 0218 BB69     		ldr	r3, [r7, #24]
 382 021a 0433     		adds	r3, r3, #4
 383 021c BB61     		str	r3, [r7, #24]
 156:./ucOSII/Core/os_task.c ****             pevent                     = *pevents;
 384              		.loc 1 156 40
 385 021e BB69     		ldr	r3, [r7, #24]
 386 0220 1B68     		ldr	r3, [r3]
 387 0222 FB61     		str	r3, [r7, #28]
 388              	.L14:
 148:./ucOSII/Core/os_task.c ****             pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;   /* Remove old task prio from wait li
 389              		.loc 1 148 15
 390 0224 FB69     		ldr	r3, [r7, #28]
 391 0226 002B     		cmp	r3, #0
 392 0228 C6D1     		bne	.L16
 393              	.L13:
 157:./ucOSII/Core/os_task.c ****         }
 158:./ucOSII/Core/os_task.c ****     }
 159:./ucOSII/Core/os_task.c **** #endif
 160:./ucOSII/Core/os_task.c **** #endif
 161:./ucOSII/Core/os_task.c **** 
 162:./ucOSII/Core/os_task.c ****     ptcb->OSTCBPrio = newprio;                              /* Set new task priority               
 394              		.loc 1 162 21
 395 022a 3B69     		ldr	r3, [r7, #16]
 396 022c BA79     		ldrb	r2, [r7, #6]
 397 022e 83F83A20 		strb	r2, [r3, #58]
 163:./ucOSII/Core/os_task.c ****     ptcb->OSTCBY    = y_new;
 398              		.loc 1 163 21
 399 0232 3B69     		ldr	r3, [r7, #16]
 400 0234 FA7B     		ldrb	r2, [r7, #15]
 401 0236 83F83C20 		strb	r2, [r3, #60]
 164:./ucOSII/Core/os_task.c ****     ptcb->OSTCBX    = x_new;
 402              		.loc 1 164 21
 403 023a 3B69     		ldr	r3, [r7, #16]
 404 023c BA7B     		ldrb	r2, [r7, #14]
 405 023e 83F83B20 		strb	r2, [r3, #59]
 165:./ucOSII/Core/os_task.c ****     ptcb->OSTCBBitY = bity_new;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 11


 406              		.loc 1 165 21
 407 0242 3B69     		ldr	r3, [r7, #16]
 408 0244 7A7B     		ldrb	r2, [r7, #13]
 409 0246 83F83E20 		strb	r2, [r3, #62]
 166:./ucOSII/Core/os_task.c ****     ptcb->OSTCBBitX = bitx_new;
 410              		.loc 1 166 21
 411 024a 3B69     		ldr	r3, [r7, #16]
 412 024c 3A7B     		ldrb	r2, [r7, #12]
 413 024e 83F83D20 		strb	r2, [r3, #61]
 167:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 414              		.loc 1 167 5
 415 0252 7869     		ldr	r0, [r7, #20]
 416 0254 FFF7FEFF 		bl	OS_CPU_SR_Restore
 168:./ucOSII/Core/os_task.c ****     if (OSRunning == OS_TRUE) {
 417              		.loc 1 168 19
 418 0258 094B     		ldr	r3, .L18+16
 419 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 420              		.loc 1 168 8
 421 025c 012B     		cmp	r3, #1
 422 025e 01D1     		bne	.L17
 169:./ucOSII/Core/os_task.c ****         OS_Sched();                                         /* Find new highest priority task      
 423              		.loc 1 169 9
 424 0260 FFF7FEFF 		bl	OS_Sched
 425              	.L17:
 170:./ucOSII/Core/os_task.c ****     }
 171:./ucOSII/Core/os_task.c ****     return (OS_ERR_NONE);
 426              		.loc 1 171 12
 427 0264 0023     		movs	r3, #0
 428              	.L3:
 172:./ucOSII/Core/os_task.c **** }
 429              		.loc 1 172 1
 430 0266 1846     		mov	r0, r3
 431 0268 2037     		adds	r7, r7, #32
 432              	.LCFI3:
 433              		.cfi_def_cfa_offset 8
 434 026a BD46     		mov	sp, r7
 435              	.LCFI4:
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 026c 80BD     		pop	{r7, pc}
 439              	.L19:
 440 026e 00BF     		.align	2
 441              	.L18:
 442 0270 00000000 		.word	OSTCBPrioTbl
 443 0274 00000000 		.word	OSTCBCur
 444 0278 00000000 		.word	OSRdyTbl
 445 027c 00000000 		.word	OSRdyGrp
 446 0280 00000000 		.word	OSRunning
 447              		.cfi_endproc
 448              	.LFE3:
 450              		.section	.text.OSTaskCreate,"ax",%progbits
 451              		.align	1
 452              		.global	OSTaskCreate
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	OSTaskCreate:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 12


 458              	.LFB4:
 173:./ucOSII/Core/os_task.c **** #endif
 174:./ucOSII/Core/os_task.c **** 
 175:./ucOSII/Core/os_task.c **** 
 176:./ucOSII/Core/os_task.c **** /*
 177:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 178:./ucOSII/Core/os_task.c **** *                                            CREATE A TASK
 179:./ucOSII/Core/os_task.c **** *
 180:./ucOSII/Core/os_task.c **** * Description: This function is used to have uC/OS-II manage the execution of a task.  Tasks can ei
 181:./ucOSII/Core/os_task.c **** *              be created prior to the start of multitasking or by a running task.  A task cannot b
 182:./ucOSII/Core/os_task.c **** *              created by an ISR.
 183:./ucOSII/Core/os_task.c **** *
 184:./ucOSII/Core/os_task.c **** * Arguments  : task     is a pointer to the task's code
 185:./ucOSII/Core/os_task.c **** *
 186:./ucOSII/Core/os_task.c **** *              p_arg    is a pointer to an optional data area which can be used to pass parameters 
 187:./ucOSII/Core/os_task.c **** *                       the task when the task first executes.  Where the task is concerned it thin
 188:./ucOSII/Core/os_task.c **** *                       it was invoked and passed the argument 'p_arg' as follows:
 189:./ucOSII/Core/os_task.c **** *
 190:./ucOSII/Core/os_task.c **** *                           void Task (void *p_arg)
 191:./ucOSII/Core/os_task.c **** *                           {
 192:./ucOSII/Core/os_task.c **** *                               for (;;) {
 193:./ucOSII/Core/os_task.c **** *                                   Task code;
 194:./ucOSII/Core/os_task.c **** *                               }
 195:./ucOSII/Core/os_task.c **** *                           }
 196:./ucOSII/Core/os_task.c **** *
 197:./ucOSII/Core/os_task.c **** *              ptos     is a pointer to the task's top of stack.  If the configuration constant
 198:./ucOSII/Core/os_task.c **** *                       OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. from
 199:./ucOSII/Core/os_task.c **** *                       memory to low memory).  'pstk' will thus point to the highest (valid) memor
 200:./ucOSII/Core/os_task.c **** *                       location of the stack.  If OS_STK_GROWTH is set to 0, 'pstk' will point to 
 201:./ucOSII/Core/os_task.c **** *                       lowest memory location of the stack and the stack will grow with increasing
 202:./ucOSII/Core/os_task.c **** *                       memory locations.
 203:./ucOSII/Core/os_task.c **** *
 204:./ucOSII/Core/os_task.c **** *              prio     is the task's priority.  A unique priority MUST be assigned to each task an
 205:./ucOSII/Core/os_task.c **** *                       lower the number, the higher the priority.
 206:./ucOSII/Core/os_task.c **** *
 207:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE                     if the function was successful.
 208:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_EXIST               if the task priority already exist
 209:./ucOSII/Core/os_task.c **** *                                              (each task MUST have a unique priority).
 210:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID             if the priority you specify is higher that the maxim
 211:./ucOSII/Core/os_task.c **** *                                              allowed (i.e. >= OS_LOWEST_PRIO)
 212:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_CREATE_ISR          if you tried to create a task from an ISR.
 213:./ucOSII/Core/os_task.c **** *              OS_ERR_ILLEGAL_CREATE_RUN_TIME  if you tried to create a task after safety critical
 214:./ucOSII/Core/os_task.c **** *                                              operation started.
 215:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 216:./ucOSII/Core/os_task.c **** */
 217:./ucOSII/Core/os_task.c **** 
 218:./ucOSII/Core/os_task.c **** #if OS_TASK_CREATE_EN > 0u
 219:./ucOSII/Core/os_task.c **** INT8U  OSTaskCreate (void   (*task)(void *p_arg),
 220:./ucOSII/Core/os_task.c ****                      void    *p_arg,
 221:./ucOSII/Core/os_task.c ****                      OS_STK  *ptos,
 222:./ucOSII/Core/os_task.c ****                      INT8U    prio)
 223:./ucOSII/Core/os_task.c **** {
 459              		.loc 1 223 1
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 32
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 13


 464              	.LCFI5:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 8CB0     		sub	sp, sp, #48
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 56
 471 0004 04AF     		add	r7, sp, #16
 472              	.LCFI7:
 473              		.cfi_def_cfa 7, 40
 474 0006 F860     		str	r0, [r7, #12]
 475 0008 B960     		str	r1, [r7, #8]
 476 000a 7A60     		str	r2, [r7, #4]
 477 000c FB70     		strb	r3, [r7, #3]
 224:./ucOSII/Core/os_task.c ****     OS_STK     *psp;
 225:./ucOSII/Core/os_task.c ****     INT8U       err;
 226:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 227:./ucOSII/Core/os_task.c ****     OS_CPU_SR   cpu_sr = 0u;
 478              		.loc 1 227 17
 479 000e 0023     		movs	r3, #0
 480 0010 FB61     		str	r3, [r7, #28]
 228:./ucOSII/Core/os_task.c **** #endif
 229:./ucOSII/Core/os_task.c **** 
 230:./ucOSII/Core/os_task.c **** 
 231:./ucOSII/Core/os_task.c **** 
 232:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 233:./ucOSII/Core/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 234:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 235:./ucOSII/Core/os_task.c ****         return (OS_ERR_ILLEGAL_CREATE_RUN_TIME);
 236:./ucOSII/Core/os_task.c ****     }
 237:./ucOSII/Core/os_task.c **** #endif
 238:./ucOSII/Core/os_task.c **** 
 239:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 240:./ucOSII/Core/os_task.c ****     if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range       
 481              		.loc 1 240 8
 482 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 483 0014 3F2B     		cmp	r3, #63
 484 0016 01D9     		bls	.L21
 241:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 485              		.loc 1 241 16
 486 0018 2A23     		movs	r3, #42
 487 001a 4BE0     		b	.L22
 488              	.L21:
 242:./ucOSII/Core/os_task.c ****     }
 243:./ucOSII/Core/os_task.c **** #endif
 244:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 489              		.loc 1 244 5
 490 001c 4020     		movs	r0, #64
 491 001e FFF7FEFF 		bl	OS_CPU_SR_Save
 492 0022 F861     		str	r0, [r7, #28]
 245:./ucOSII/Core/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 493              		.loc 1 245 22
 494 0024 254B     		ldr	r3, .L27
 495 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496              		.loc 1 245 8
 497 0028 002B     		cmp	r3, #0
 498 002a 04D0     		beq	.L23
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 14


 246:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 499              		.loc 1 246 9
 500 002c F869     		ldr	r0, [r7, #28]
 501 002e FFF7FEFF 		bl	OS_CPU_SR_Restore
 247:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 502              		.loc 1 247 16
 503 0032 3C23     		movs	r3, #60
 504 0034 3EE0     		b	.L22
 505              	.L23:
 248:./ucOSII/Core/os_task.c ****     }
 249:./ucOSII/Core/os_task.c ****     if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priori
 506              		.loc 1 249 21
 507 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 508 0038 214A     		ldr	r2, .L27+4
 509 003a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 510              		.loc 1 249 8
 511 003e 002B     		cmp	r3, #0
 512 0040 34D1     		bne	.L24
 250:./ucOSII/Core/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 513              		.loc 1 250 21
 514 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 515              		.loc 1 250 28
 516 0044 1E4A     		ldr	r2, .L27+4
 517 0046 0121     		movs	r1, #1
 518 0048 42F82310 		str	r1, [r2, r3, lsl #2]
 251:./ucOSII/Core/os_task.c ****                                              /* ... the same thing until task is created.          
 252:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 519              		.loc 1 252 9
 520 004c F869     		ldr	r0, [r7, #28]
 521 004e FFF7FEFF 		bl	OS_CPU_SR_Restore
 253:./ucOSII/Core/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, 0u);             /* Initialize the task's stack     
 522              		.loc 1 253 15
 523 0052 0023     		movs	r3, #0
 524 0054 7A68     		ldr	r2, [r7, #4]
 525 0056 B968     		ldr	r1, [r7, #8]
 526 0058 F868     		ldr	r0, [r7, #12]
 527 005a FFF7FEFF 		bl	OSTaskStkInit
 528 005e B861     		str	r0, [r7, #24]
 254:./ucOSII/Core/os_task.c ****         err = OS_TCBInit(prio, psp, (OS_STK *)0, 0u, 0u, (void *)0, 0u);
 529              		.loc 1 254 15
 530 0060 F878     		ldrb	r0, [r7, #3]	@ zero_extendqisi2
 531 0062 0023     		movs	r3, #0
 532 0064 0293     		str	r3, [sp, #8]
 533 0066 0023     		movs	r3, #0
 534 0068 0193     		str	r3, [sp, #4]
 535 006a 0023     		movs	r3, #0
 536 006c 0093     		str	r3, [sp]
 537 006e 0023     		movs	r3, #0
 538 0070 0022     		movs	r2, #0
 539 0072 B969     		ldr	r1, [r7, #24]
 540 0074 FFF7FEFF 		bl	OS_TCBInit
 541 0078 0346     		mov	r3, r0
 542 007a FB75     		strb	r3, [r7, #23]
 255:./ucOSII/Core/os_task.c ****         if (err == OS_ERR_NONE) {
 543              		.loc 1 255 12
 544 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 545 007e 002B     		cmp	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 15


 546 0080 06D1     		bne	.L25
 256:./ucOSII/Core/os_task.c ****             OS_TRACE_TASK_CREATE(OSTCBPrioTbl[prio]);
 257:./ucOSII/Core/os_task.c ****             if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has star
 547              		.loc 1 257 27
 548 0082 104B     		ldr	r3, .L27+8
 549 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550              		.loc 1 257 16
 551 0086 012B     		cmp	r3, #1
 552 0088 0ED1     		bne	.L26
 258:./ucOSII/Core/os_task.c ****                 OS_Sched();
 553              		.loc 1 258 17
 554 008a FFF7FEFF 		bl	OS_Sched
 555 008e 0BE0     		b	.L26
 556              	.L25:
 259:./ucOSII/Core/os_task.c ****             }
 260:./ucOSII/Core/os_task.c ****         } else {
 261:./ucOSII/Core/os_task.c ****             OS_TRACE_TASK_CREATE_FAILED(OSTCBPrioTbl[prio]);
 262:./ucOSII/Core/os_task.c ****             OS_ENTER_CRITICAL();
 557              		.loc 1 262 13
 558 0090 4020     		movs	r0, #64
 559 0092 FFF7FEFF 		bl	OS_CPU_SR_Save
 560 0096 F861     		str	r0, [r7, #28]
 263:./ucOSII/Core/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others             
 561              		.loc 1 263 25
 562 0098 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 563              		.loc 1 263 32
 564 009a 094A     		ldr	r2, .L27+4
 565 009c 0021     		movs	r1, #0
 566 009e 42F82310 		str	r1, [r2, r3, lsl #2]
 264:./ucOSII/Core/os_task.c ****             OS_EXIT_CRITICAL();
 567              		.loc 1 264 13
 568 00a2 F869     		ldr	r0, [r7, #28]
 569 00a4 FFF7FEFF 		bl	OS_CPU_SR_Restore
 570              	.L26:
 265:./ucOSII/Core/os_task.c ****         }
 266:./ucOSII/Core/os_task.c ****         return (err);
 571              		.loc 1 266 16
 572 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 573 00aa 03E0     		b	.L22
 574              	.L24:
 267:./ucOSII/Core/os_task.c ****     }
 268:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 575              		.loc 1 268 5
 576 00ac F869     		ldr	r0, [r7, #28]
 577 00ae FFF7FEFF 		bl	OS_CPU_SR_Restore
 269:./ucOSII/Core/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 578              		.loc 1 269 12
 579 00b2 2823     		movs	r3, #40
 580              	.L22:
 270:./ucOSII/Core/os_task.c **** }
 581              		.loc 1 270 1
 582 00b4 1846     		mov	r0, r3
 583 00b6 2037     		adds	r7, r7, #32
 584              	.LCFI8:
 585              		.cfi_def_cfa_offset 8
 586 00b8 BD46     		mov	sp, r7
 587              	.LCFI9:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 16


 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 00ba 80BD     		pop	{r7, pc}
 591              	.L28:
 592              		.align	2
 593              	.L27:
 594 00bc 00000000 		.word	OSIntNesting
 595 00c0 00000000 		.word	OSTCBPrioTbl
 596 00c4 00000000 		.word	OSRunning
 597              		.cfi_endproc
 598              	.LFE4:
 600              		.section	.text.OSTaskCreateExt,"ax",%progbits
 601              		.align	1
 602              		.global	OSTaskCreateExt
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 607              	OSTaskCreateExt:
 608              	.LFB5:
 271:./ucOSII/Core/os_task.c **** #endif
 272:./ucOSII/Core/os_task.c **** 
 273:./ucOSII/Core/os_task.c **** 
 274:./ucOSII/Core/os_task.c **** /*
 275:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 276:./ucOSII/Core/os_task.c **** *                                  CREATE A TASK (Extended Version)
 277:./ucOSII/Core/os_task.c **** *
 278:./ucOSII/Core/os_task.c **** * Description: This function is used to have uC/OS-II manage the execution of a task.  Tasks can ei
 279:./ucOSII/Core/os_task.c **** *              be created prior to the start of multitasking or by a running task.  A task cannot b
 280:./ucOSII/Core/os_task.c **** *              created by an ISR.  This function is similar to OSTaskCreate() except that it allows
 281:./ucOSII/Core/os_task.c **** *              additional information about a task to be specified.
 282:./ucOSII/Core/os_task.c **** *
 283:./ucOSII/Core/os_task.c **** * Arguments  : task      is a pointer to the task's code
 284:./ucOSII/Core/os_task.c **** *
 285:./ucOSII/Core/os_task.c **** *              p_arg     is a pointer to an optional data area which can be used to pass parameters
 286:./ucOSII/Core/os_task.c **** *                        the task when the task first executes.  Where the task is concerned it thi
 287:./ucOSII/Core/os_task.c **** *                        it was invoked and passed the argument 'p_arg' as follows:
 288:./ucOSII/Core/os_task.c **** *
 289:./ucOSII/Core/os_task.c **** *                            void Task (void *p_arg)
 290:./ucOSII/Core/os_task.c **** *                            {
 291:./ucOSII/Core/os_task.c **** *                                for (;;) {
 292:./ucOSII/Core/os_task.c **** *                                    Task code;
 293:./ucOSII/Core/os_task.c **** *                                }
 294:./ucOSII/Core/os_task.c **** *                            }
 295:./ucOSII/Core/os_task.c **** *
 296:./ucOSII/Core/os_task.c **** *              ptos      is a pointer to the task's top of stack.  If the configuration constant
 297:./ucOSII/Core/os_task.c **** *                        OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. fro
 298:./ucOSII/Core/os_task.c **** *                        memory to low memory).  'ptos' will thus point to the highest (valid) memo
 299:./ucOSII/Core/os_task.c **** *                        location of the stack.  If OS_STK_GROWTH is set to 0, 'ptos' will point to
 300:./ucOSII/Core/os_task.c **** *                        lowest memory location of the stack and the stack will grow with increasin
 301:./ucOSII/Core/os_task.c **** *                        memory locations.  'ptos' MUST point to a valid 'free' data item.
 302:./ucOSII/Core/os_task.c **** *
 303:./ucOSII/Core/os_task.c **** *              prio      is the task's priority.  A unique priority MUST be assigned to each task a
 304:./ucOSII/Core/os_task.c **** *                        lower the number, the higher the priority.
 305:./ucOSII/Core/os_task.c **** *
 306:./ucOSII/Core/os_task.c **** *              id        is the task's ID (0..65535)
 307:./ucOSII/Core/os_task.c **** *
 308:./ucOSII/Core/os_task.c **** *              pbos      is a pointer to the task's bottom of stack.  If the configuration constant
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 17


 309:./ucOSII/Core/os_task.c **** *                        OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. fro
 310:./ucOSII/Core/os_task.c **** *                        memory to low memory).  'pbos' will thus point to the LOWEST (valid) memor
 311:./ucOSII/Core/os_task.c **** *                        location of the stack.  If OS_STK_GROWTH is set to 0, 'pbos' will point to
 312:./ucOSII/Core/os_task.c **** *                        HIGHEST memory location of the stack and the stack will grow with increasi
 313:./ucOSII/Core/os_task.c **** *                        memory locations.  'pbos' MUST point to a valid 'free' data item.
 314:./ucOSII/Core/os_task.c **** *
 315:./ucOSII/Core/os_task.c **** *              stk_size  is the size of the stack in number of elements.  If OS_STK is set to INT8U
 316:./ucOSII/Core/os_task.c **** *                        'stk_size' corresponds to the number of bytes available.  If OS_STK is set
 317:./ucOSII/Core/os_task.c **** *                        INT16U, 'stk_size' contains the number of 16-bit entries available.  Final
 318:./ucOSII/Core/os_task.c **** *                        OS_STK is set to INT32U, 'stk_size' contains the number of 32-bit entries
 319:./ucOSII/Core/os_task.c **** *                        available on the stack.
 320:./ucOSII/Core/os_task.c **** *
 321:./ucOSII/Core/os_task.c **** *              pext      is a pointer to a user supplied memory location which is used as a TCB ext
 322:./ucOSII/Core/os_task.c **** *                        For example, this user memory can hold the contents of floating-point regi
 323:./ucOSII/Core/os_task.c **** *                        during a context switch, the time each task takes to execute, the number o
 324:./ucOSII/Core/os_task.c **** *                        the task has been switched-in, etc.
 325:./ucOSII/Core/os_task.c **** *
 326:./ucOSII/Core/os_task.c **** *              opt       contains additional information (or options) about the behavior of the tas
 327:./ucOSII/Core/os_task.c **** *                        LOWER 8-bits are reserved by uC/OS-II while the upper 8 bits can be applic
 328:./ucOSII/Core/os_task.c **** *                        specific.  See OS_TASK_OPT_??? in uCOS-II.H.  Current choices are:
 329:./ucOSII/Core/os_task.c **** *
 330:./ucOSII/Core/os_task.c **** *                        OS_TASK_OPT_STK_CHK      Stack checking to be allowed for the task
 331:./ucOSII/Core/os_task.c **** *                        OS_TASK_OPT_STK_CLR      Clear the stack when the task is created
 332:./ucOSII/Core/os_task.c **** *                        OS_TASK_OPT_SAVE_FP      If the CPU has floating-point registers, save the
 333:./ucOSII/Core/os_task.c **** *                                                 during a context switch.
 334:./ucOSII/Core/os_task.c **** *
 335:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE                     if the function was successful.
 336:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_EXIST               if the task priority already exist
 337:./ucOSII/Core/os_task.c **** *                                              (each task MUST have a unique priority).
 338:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID             if the priority you specify is higher that the maxim
 339:./ucOSII/Core/os_task.c **** *                                              allowed (i.e. > OS_LOWEST_PRIO)
 340:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_CREATE_ISR          if you tried to create a task from an ISR.
 341:./ucOSII/Core/os_task.c **** *              OS_ERR_ILLEGAL_CREATE_RUN_TIME  if you tried to create a task after safety critical
 342:./ucOSII/Core/os_task.c **** *                                              operation started.
 343:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 344:./ucOSII/Core/os_task.c **** */
 345:./ucOSII/Core/os_task.c **** 
 346:./ucOSII/Core/os_task.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 347:./ucOSII/Core/os_task.c **** INT8U  OSTaskCreateExt (void   (*task)(void *p_arg),
 348:./ucOSII/Core/os_task.c ****                         void    *p_arg,
 349:./ucOSII/Core/os_task.c ****                         OS_STK  *ptos,
 350:./ucOSII/Core/os_task.c ****                         INT8U    prio,
 351:./ucOSII/Core/os_task.c ****                         INT16U   id,
 352:./ucOSII/Core/os_task.c ****                         OS_STK  *pbos,
 353:./ucOSII/Core/os_task.c ****                         INT32U   stk_size,
 354:./ucOSII/Core/os_task.c ****                         void    *pext,
 355:./ucOSII/Core/os_task.c ****                         INT16U   opt)
 356:./ucOSII/Core/os_task.c **** {
 609              		.loc 1 356 1
 610              		.cfi_startproc
 611              		@ args = 20, pretend = 0, frame = 32
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613 0000 80B5     		push	{r7, lr}
 614              	.LCFI10:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 18


 618 0002 8CB0     		sub	sp, sp, #48
 619              	.LCFI11:
 620              		.cfi_def_cfa_offset 56
 621 0004 04AF     		add	r7, sp, #16
 622              	.LCFI12:
 623              		.cfi_def_cfa 7, 40
 624 0006 F860     		str	r0, [r7, #12]
 625 0008 B960     		str	r1, [r7, #8]
 626 000a 7A60     		str	r2, [r7, #4]
 627 000c FB70     		strb	r3, [r7, #3]
 357:./ucOSII/Core/os_task.c ****     OS_STK     *psp;
 358:./ucOSII/Core/os_task.c ****     INT8U       err;
 359:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 360:./ucOSII/Core/os_task.c ****     OS_CPU_SR   cpu_sr = 0u;
 628              		.loc 1 360 17
 629 000e 0023     		movs	r3, #0
 630 0010 FB61     		str	r3, [r7, #28]
 361:./ucOSII/Core/os_task.c **** #endif
 362:./ucOSII/Core/os_task.c **** 
 363:./ucOSII/Core/os_task.c **** 
 364:./ucOSII/Core/os_task.c **** 
 365:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 366:./ucOSII/Core/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 367:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 368:./ucOSII/Core/os_task.c ****         return (OS_ERR_ILLEGAL_CREATE_RUN_TIME);
 369:./ucOSII/Core/os_task.c ****     }
 370:./ucOSII/Core/os_task.c **** #endif
 371:./ucOSII/Core/os_task.c **** 
 372:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 373:./ucOSII/Core/os_task.c ****     if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range       
 631              		.loc 1 373 8
 632 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 633 0014 3F2B     		cmp	r3, #63
 634 0016 01D9     		bls	.L30
 374:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 635              		.loc 1 374 16
 636 0018 2A23     		movs	r3, #42
 637 001a 52E0     		b	.L31
 638              	.L30:
 375:./ucOSII/Core/os_task.c ****     }
 376:./ucOSII/Core/os_task.c **** #endif
 377:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 639              		.loc 1 377 5
 640 001c 4020     		movs	r0, #64
 641 001e FFF7FEFF 		bl	OS_CPU_SR_Save
 642 0022 F861     		str	r0, [r7, #28]
 378:./ucOSII/Core/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 643              		.loc 1 378 22
 644 0024 294B     		ldr	r3, .L36
 645 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646              		.loc 1 378 8
 647 0028 002B     		cmp	r3, #0
 648 002a 04D0     		beq	.L32
 379:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 649              		.loc 1 379 9
 650 002c F869     		ldr	r0, [r7, #28]
 651 002e FFF7FEFF 		bl	OS_CPU_SR_Restore
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 19


 380:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 652              		.loc 1 380 16
 653 0032 3C23     		movs	r3, #60
 654 0034 45E0     		b	.L31
 655              	.L32:
 381:./ucOSII/Core/os_task.c ****     }
 382:./ucOSII/Core/os_task.c ****     if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priori
 656              		.loc 1 382 21
 657 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 658 0038 254A     		ldr	r2, .L36+4
 659 003a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 660              		.loc 1 382 8
 661 003e 002B     		cmp	r3, #0
 662 0040 3BD1     		bne	.L33
 383:./ucOSII/Core/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 663              		.loc 1 383 21
 664 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 665              		.loc 1 383 28
 666 0044 224A     		ldr	r2, .L36+4
 667 0046 0121     		movs	r1, #1
 668 0048 42F82310 		str	r1, [r2, r3, lsl #2]
 384:./ucOSII/Core/os_task.c ****                                              /* ... the same thing until task is created.          
 385:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 669              		.loc 1 385 9
 670 004c F869     		ldr	r0, [r7, #28]
 671 004e FFF7FEFF 		bl	OS_CPU_SR_Restore
 386:./ucOSII/Core/os_task.c **** 
 387:./ucOSII/Core/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u)
 388:./ucOSII/Core/os_task.c ****         OS_TaskStkClr(pbos, stk_size, opt);                    /* Clear the task stack (if needed) 
 672              		.loc 1 388 9
 673 0052 3B8F     		ldrh	r3, [r7, #56]
 674 0054 1A46     		mov	r2, r3
 675 0056 396B     		ldr	r1, [r7, #48]
 676 0058 F86A     		ldr	r0, [r7, #44]
 677 005a FFF7FEFF 		bl	OS_TaskStkClr
 389:./ucOSII/Core/os_task.c **** #endif
 390:./ucOSII/Core/os_task.c **** 
 391:./ucOSII/Core/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, opt);           /* Initialize the task's stack      
 678              		.loc 1 391 15
 679 005e 3B8F     		ldrh	r3, [r7, #56]
 680 0060 7A68     		ldr	r2, [r7, #4]
 681 0062 B968     		ldr	r1, [r7, #8]
 682 0064 F868     		ldr	r0, [r7, #12]
 683 0066 FFF7FEFF 		bl	OSTaskStkInit
 684 006a B861     		str	r0, [r7, #24]
 392:./ucOSII/Core/os_task.c ****         err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
 685              		.loc 1 392 15
 686 006c 3A8D     		ldrh	r2, [r7, #40]
 687 006e F878     		ldrb	r0, [r7, #3]	@ zero_extendqisi2
 688 0070 3B8F     		ldrh	r3, [r7, #56]
 689 0072 0293     		str	r3, [sp, #8]
 690 0074 7B6B     		ldr	r3, [r7, #52]
 691 0076 0193     		str	r3, [sp, #4]
 692 0078 3B6B     		ldr	r3, [r7, #48]
 693 007a 0093     		str	r3, [sp]
 694 007c 1346     		mov	r3, r2
 695 007e FA6A     		ldr	r2, [r7, #44]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 20


 696 0080 B969     		ldr	r1, [r7, #24]
 697 0082 FFF7FEFF 		bl	OS_TCBInit
 698 0086 0346     		mov	r3, r0
 699 0088 FB75     		strb	r3, [r7, #23]
 393:./ucOSII/Core/os_task.c ****         if (err == OS_ERR_NONE) {
 700              		.loc 1 393 12
 701 008a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 702 008c 002B     		cmp	r3, #0
 703 008e 06D1     		bne	.L34
 394:./ucOSII/Core/os_task.c ****             OS_TRACE_TASK_CREATE(OSTCBPrioTbl[prio]);
 395:./ucOSII/Core/os_task.c ****             if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has star
 704              		.loc 1 395 27
 705 0090 104B     		ldr	r3, .L36+8
 706 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707              		.loc 1 395 16
 708 0094 012B     		cmp	r3, #1
 709 0096 0ED1     		bne	.L35
 396:./ucOSII/Core/os_task.c ****                 OS_Sched();
 710              		.loc 1 396 17
 711 0098 FFF7FEFF 		bl	OS_Sched
 712 009c 0BE0     		b	.L35
 713              	.L34:
 397:./ucOSII/Core/os_task.c ****             }
 398:./ucOSII/Core/os_task.c ****         } else {
 399:./ucOSII/Core/os_task.c ****             OS_ENTER_CRITICAL();
 714              		.loc 1 399 13
 715 009e 4020     		movs	r0, #64
 716 00a0 FFF7FEFF 		bl	OS_CPU_SR_Save
 717 00a4 F861     		str	r0, [r7, #28]
 400:./ucOSII/Core/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to othe
 718              		.loc 1 400 25
 719 00a6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 720              		.loc 1 400 32
 721 00a8 094A     		ldr	r2, .L36+4
 722 00aa 0021     		movs	r1, #0
 723 00ac 42F82310 		str	r1, [r2, r3, lsl #2]
 401:./ucOSII/Core/os_task.c ****             OS_EXIT_CRITICAL();
 724              		.loc 1 401 13
 725 00b0 F869     		ldr	r0, [r7, #28]
 726 00b2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 727              	.L35:
 402:./ucOSII/Core/os_task.c ****         }
 403:./ucOSII/Core/os_task.c ****         return (err);
 728              		.loc 1 403 16
 729 00b6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 730 00b8 03E0     		b	.L31
 731              	.L33:
 404:./ucOSII/Core/os_task.c ****     }
 405:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 732              		.loc 1 405 5
 733 00ba F869     		ldr	r0, [r7, #28]
 734 00bc FFF7FEFF 		bl	OS_CPU_SR_Restore
 406:./ucOSII/Core/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 735              		.loc 1 406 12
 736 00c0 2823     		movs	r3, #40
 737              	.L31:
 407:./ucOSII/Core/os_task.c **** }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 21


 738              		.loc 1 407 1
 739 00c2 1846     		mov	r0, r3
 740 00c4 2037     		adds	r7, r7, #32
 741              	.LCFI13:
 742              		.cfi_def_cfa_offset 8
 743 00c6 BD46     		mov	sp, r7
 744              	.LCFI14:
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 00c8 80BD     		pop	{r7, pc}
 748              	.L37:
 749 00ca 00BF     		.align	2
 750              	.L36:
 751 00cc 00000000 		.word	OSIntNesting
 752 00d0 00000000 		.word	OSTCBPrioTbl
 753 00d4 00000000 		.word	OSRunning
 754              		.cfi_endproc
 755              	.LFE5:
 757              		.section	.rodata
 758              		.align	2
 759              	.LC0:
 760 0000 3F00     		.ascii	"?\000"
 761              		.section	.text.OSTaskDel,"ax",%progbits
 762              		.align	1
 763              		.global	OSTaskDel
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 768              	OSTaskDel:
 769              	.LFB6:
 408:./ucOSII/Core/os_task.c **** #endif
 409:./ucOSII/Core/os_task.c **** 
 410:./ucOSII/Core/os_task.c **** 
 411:./ucOSII/Core/os_task.c **** /*
 412:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 413:./ucOSII/Core/os_task.c **** *                                            DELETE A TASK
 414:./ucOSII/Core/os_task.c **** *
 415:./ucOSII/Core/os_task.c **** * Description: This function allows you to delete a task.  The calling task can delete itself by
 416:./ucOSII/Core/os_task.c **** *              its own priority number.  The deleted task is returned to the dormant state and can 
 417:./ucOSII/Core/os_task.c **** *              re-activated by creating the deleted task again.
 418:./ucOSII/Core/os_task.c **** *
 419:./ucOSII/Core/os_task.c **** * Arguments  : prio    is the priority of the task to delete.  Note that you can explicitly delete
 420:./ucOSII/Core/os_task.c **** *                      the current task without knowing its priority level by setting 'prio' to
 421:./ucOSII/Core/os_task.c **** *                      OS_PRIO_SELF.
 422:./ucOSII/Core/os_task.c **** *
 423:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE                  if the call is successful
 424:./ucOSII/Core/os_task.c **** *              OS_ERR_ILLEGAL_DEL_RUN_TIME  if you tried to delete a task after safety critical ope
 425:./ucOSII/Core/os_task.c **** *                                           started.
 426:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_DEL_IDLE         if you attempted to delete uC/OS-II's idle task
 427:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID          if the priority you specify is higher that the maximum 
 428:./ucOSII/Core/os_task.c **** *                                           (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_
 429:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_DEL              if the task is assigned to a Mutex PIP.
 430:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST        if the task you want to delete does not exist.
 431:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_DEL_ISR          if you tried to delete a task from an ISR
 432:./ucOSII/Core/os_task.c **** *
 433:./ucOSII/Core/os_task.c **** * Notes      : 1) To reduce interrupt latency, OSTaskDel() 'disables' the task:
 434:./ucOSII/Core/os_task.c **** *                    a) by making it not ready
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 22


 435:./ucOSII/Core/os_task.c **** *                    b) by removing it from any wait lists
 436:./ucOSII/Core/os_task.c **** *                    c) by preventing OSTimeTick() from making the task ready to run.
 437:./ucOSII/Core/os_task.c **** *                 The task can then be 'unlinked' from the miscellaneous structures in uC/OS-II.
 438:./ucOSII/Core/os_task.c **** *              2) The function OS_Dummy() is called after OS_EXIT_CRITICAL() because, on most proce
 439:./ucOSII/Core/os_task.c **** *                 the next instruction following the enable interrupt instruction is ignored.
 440:./ucOSII/Core/os_task.c **** *              3) An ISR cannot delete a task.
 441:./ucOSII/Core/os_task.c **** *              4) The lock nesting counter is incremented because, for a brief instant, if the curr
 442:./ucOSII/Core/os_task.c **** *                 task is being deleted, the current task would not be able to be rescheduled becau
 443:./ucOSII/Core/os_task.c **** *                 is removed from the ready list.  Incrementing the nesting counter prevents anothe
 444:./ucOSII/Core/os_task.c **** *                 from being schedule.  This means that an ISR would return to the current task whi
 445:./ucOSII/Core/os_task.c **** *                 being deleted.  The rest of the deletion would thus be able to be completed.
 446:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 447:./ucOSII/Core/os_task.c **** */
 448:./ucOSII/Core/os_task.c **** 
 449:./ucOSII/Core/os_task.c **** #if OS_TASK_DEL_EN > 0u
 450:./ucOSII/Core/os_task.c **** INT8U  OSTaskDel (INT8U prio)
 451:./ucOSII/Core/os_task.c **** {
 770              		.loc 1 451 1
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 24
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 80B5     		push	{r7, lr}
 775              	.LCFI15:
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 86B0     		sub	sp, sp, #24
 780              	.LCFI16:
 781              		.cfi_def_cfa_offset 32
 782 0004 00AF     		add	r7, sp, #0
 783              	.LCFI17:
 784              		.cfi_def_cfa_register 7
 785 0006 0346     		mov	r3, r0
 786 0008 FB71     		strb	r3, [r7, #7]
 452:./ucOSII/Core/os_task.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 453:./ucOSII/Core/os_task.c ****     OS_FLAG_NODE *pnode;
 454:./ucOSII/Core/os_task.c **** #endif
 455:./ucOSII/Core/os_task.c ****     OS_TCB       *ptcb;
 456:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                            /* Allocate storage for CPU status register
 457:./ucOSII/Core/os_task.c ****     OS_CPU_SR     cpu_sr = 0u;
 787              		.loc 1 457 19
 788 000a 0023     		movs	r3, #0
 789 000c 7B61     		str	r3, [r7, #20]
 458:./ucOSII/Core/os_task.c **** #endif
 459:./ucOSII/Core/os_task.c **** 
 460:./ucOSII/Core/os_task.c **** 
 461:./ucOSII/Core/os_task.c **** 
 462:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 463:./ucOSII/Core/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 464:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 465:./ucOSII/Core/os_task.c ****         return (OS_ERR_ILLEGAL_DEL_RUN_TIME);
 466:./ucOSII/Core/os_task.c ****     }
 467:./ucOSII/Core/os_task.c **** #endif
 468:./ucOSII/Core/os_task.c **** 
 469:./ucOSII/Core/os_task.c ****     if (OSIntNesting > 0u) {                            /* See if trying to delete from ISR        
 790              		.loc 1 469 22
 791 000e 6D4B     		ldr	r3, .L55
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 23


 792 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793              		.loc 1 469 8
 794 0012 002B     		cmp	r3, #0
 795 0014 01D0     		beq	.L39
 470:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_DEL_ISR);
 796              		.loc 1 470 16
 797 0016 4023     		movs	r3, #64
 798 0018 D0E0     		b	.L40
 799              	.L39:
 471:./ucOSII/Core/os_task.c ****     }
 472:./ucOSII/Core/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                    /* Not allowed to delete idle task         
 800              		.loc 1 472 8
 801 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 802 001c 3F2B     		cmp	r3, #63
 803 001e 01D1     		bne	.L41
 473:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_DEL_IDLE);
 804              		.loc 1 473 16
 805 0020 3E23     		movs	r3, #62
 806 0022 CBE0     		b	.L40
 807              	.L41:
 474:./ucOSII/Core/os_task.c ****     }
 475:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 476:./ucOSII/Core/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                       /* Task priority valid ?                   
 808              		.loc 1 476 8
 809 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 810 0026 3E2B     		cmp	r3, #62
 811 0028 04D9     		bls	.L42
 477:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 812              		.loc 1 477 12
 813 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 814 002c FF2B     		cmp	r3, #255
 815 002e 01D0     		beq	.L42
 478:./ucOSII/Core/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 816              		.loc 1 478 20
 817 0030 2A23     		movs	r3, #42
 818 0032 C3E0     		b	.L40
 819              	.L42:
 479:./ucOSII/Core/os_task.c ****         }
 480:./ucOSII/Core/os_task.c ****     }
 481:./ucOSII/Core/os_task.c **** #endif
 482:./ucOSII/Core/os_task.c **** 
 483:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 820              		.loc 1 483 5
 821 0034 4020     		movs	r0, #64
 822 0036 FFF7FEFF 		bl	OS_CPU_SR_Save
 823 003a 7861     		str	r0, [r7, #20]
 484:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                         /* See if requesting to delete self        
 824              		.loc 1 484 8
 825 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 826 003e FF2B     		cmp	r3, #255
 827 0040 04D1     		bne	.L43
 485:./ucOSII/Core/os_task.c ****         prio = OSTCBCur->OSTCBPrio;                     /* Set priority to delete to current       
 828              		.loc 1 485 24
 829 0042 614B     		ldr	r3, .L55+4
 830 0044 1B68     		ldr	r3, [r3]
 831              		.loc 1 485 14
 832 0046 93F83A30 		ldrb	r3, [r3, #58]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 24


 833 004a FB71     		strb	r3, [r7, #7]
 834              	.L43:
 486:./ucOSII/Core/os_task.c ****     }
 487:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 835              		.loc 1 487 24
 836 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 837              		.loc 1 487 10
 838 004e 5F4A     		ldr	r2, .L55+8
 839 0050 52F82330 		ldr	r3, [r2, r3, lsl #2]
 840 0054 3B61     		str	r3, [r7, #16]
 488:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                          /* Task to delete must exist               
 841              		.loc 1 488 8
 842 0056 3B69     		ldr	r3, [r7, #16]
 843 0058 002B     		cmp	r3, #0
 844 005a 04D1     		bne	.L44
 489:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 845              		.loc 1 489 9
 846 005c 7869     		ldr	r0, [r7, #20]
 847 005e FFF7FEFF 		bl	OS_CPU_SR_Restore
 490:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 848              		.loc 1 490 16
 849 0062 4323     		movs	r3, #67
 850 0064 AAE0     		b	.L40
 851              	.L44:
 491:./ucOSII/Core/os_task.c ****     }
 492:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                      /* Must not be assigned to Mutex           
 852              		.loc 1 492 8
 853 0066 3B69     		ldr	r3, [r7, #16]
 854 0068 012B     		cmp	r3, #1
 855 006a 04D1     		bne	.L45
 493:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 856              		.loc 1 493 9
 857 006c 7869     		ldr	r0, [r7, #20]
 858 006e FFF7FEFF 		bl	OS_CPU_SR_Restore
 494:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_DEL);
 859              		.loc 1 494 16
 860 0072 3D23     		movs	r3, #61
 861 0074 A2E0     		b	.L40
 862              	.L45:
 495:./ucOSII/Core/os_task.c ****     }
 496:./ucOSII/Core/os_task.c **** 
 497:./ucOSII/Core/os_task.c ****     OSRdyTbl[ptcb->OSTCBY] &= (OS_PRIO)~ptcb->OSTCBBitX;
 863              		.loc 1 497 18
 864 0076 3B69     		ldr	r3, [r7, #16]
 865 0078 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 866              		.loc 1 497 28
 867 007c 1A46     		mov	r2, r3
 868 007e 544B     		ldr	r3, .L55+12
 869 0080 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 870              		.loc 1 497 45
 871 0082 3B69     		ldr	r3, [r7, #16]
 872 0084 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 873              		.loc 1 497 31
 874 0088 DB43     		mvns	r3, r3
 875 008a DBB2     		uxtb	r3, r3
 876              		.loc 1 497 18
 877 008c 3969     		ldr	r1, [r7, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 25


 878 008e 91F83C10 		ldrb	r1, [r1, #60]	@ zero_extendqisi2
 879              		.loc 1 497 28
 880 0092 1340     		ands	r3, r3, r2
 881 0094 DAB2     		uxtb	r2, r3
 882 0096 4E4B     		ldr	r3, .L55+12
 883 0098 5A54     		strb	r2, [r3, r1]
 498:./ucOSII/Core/os_task.c ****     OS_TRACE_TASK_SUSPENDED(ptcb);
 499:./ucOSII/Core/os_task.c ****     if (OSRdyTbl[ptcb->OSTCBY] == 0u) {                 /* Make task not ready                     
 884              		.loc 1 499 22
 885 009a 3B69     		ldr	r3, [r7, #16]
 886 009c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 887 00a0 1A46     		mov	r2, r3
 888              		.loc 1 499 17
 889 00a2 4B4B     		ldr	r3, .L55+12
 890 00a4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 891              		.loc 1 499 8
 892 00a6 002B     		cmp	r3, #0
 893 00a8 0AD1     		bne	.L46
 500:./ucOSII/Core/os_task.c ****         OSRdyGrp           &= (OS_PRIO)~ptcb->OSTCBBitY;
 894              		.loc 1 500 45
 895 00aa 3B69     		ldr	r3, [r7, #16]
 896 00ac 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 897              		.loc 1 500 31
 898 00b0 DB43     		mvns	r3, r3
 899 00b2 DAB2     		uxtb	r2, r3
 900              		.loc 1 500 28
 901 00b4 474B     		ldr	r3, .L55+16
 902 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 903 00b8 1340     		ands	r3, r3, r2
 904 00ba DAB2     		uxtb	r2, r3
 905 00bc 454B     		ldr	r3, .L55+16
 906 00be 1A70     		strb	r2, [r3]
 907              	.L46:
 501:./ucOSII/Core/os_task.c ****     }
 502:./ucOSII/Core/os_task.c **** 
 503:./ucOSII/Core/os_task.c **** #if (OS_EVENT_EN)
 504:./ucOSII/Core/os_task.c ****     if (ptcb->OSTCBEventPtr != (OS_EVENT *)0) {
 908              		.loc 1 504 13
 909 00c0 3B69     		ldr	r3, [r7, #16]
 910 00c2 DB69     		ldr	r3, [r3, #28]
 911              		.loc 1 504 8
 912 00c4 002B     		cmp	r3, #0
 913 00c6 05D0     		beq	.L47
 505:./ucOSII/Core/os_task.c ****         OS_EventTaskRemove(ptcb, ptcb->OSTCBEventPtr);  /* Remove this task from any event   wait l
 914              		.loc 1 505 9
 915 00c8 3B69     		ldr	r3, [r7, #16]
 916 00ca DB69     		ldr	r3, [r3, #28]
 917 00cc 1946     		mov	r1, r3
 918 00ce 3869     		ldr	r0, [r7, #16]
 919 00d0 FFF7FEFF 		bl	OS_EventTaskRemove
 920              	.L47:
 506:./ucOSII/Core/os_task.c ****     }
 507:./ucOSII/Core/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
 508:./ucOSII/Core/os_task.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from any events' wait l
 921              		.loc 1 508 13
 922 00d4 3B69     		ldr	r3, [r7, #16]
 923 00d6 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 26


 924              		.loc 1 508 8
 925 00d8 002B     		cmp	r3, #0
 926 00da 05D0     		beq	.L48
 509:./ucOSII/Core/os_task.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 927              		.loc 1 509 9
 928 00dc 3B69     		ldr	r3, [r7, #16]
 929 00de 1B6A     		ldr	r3, [r3, #32]
 930 00e0 1946     		mov	r1, r3
 931 00e2 3869     		ldr	r0, [r7, #16]
 932 00e4 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 933              	.L48:
 510:./ucOSII/Core/os_task.c ****     }
 511:./ucOSII/Core/os_task.c **** #endif
 512:./ucOSII/Core/os_task.c **** #endif
 513:./ucOSII/Core/os_task.c **** 
 514:./ucOSII/Core/os_task.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 515:./ucOSII/Core/os_task.c ****     pnode = ptcb->OSTCBFlagNode;
 934              		.loc 1 515 11
 935 00e8 3B69     		ldr	r3, [r7, #16]
 936 00ea DB6A     		ldr	r3, [r3, #44]
 937 00ec FB60     		str	r3, [r7, #12]
 516:./ucOSII/Core/os_task.c ****     if (pnode != (OS_FLAG_NODE *)0) {                   /* If task is waiting on event flag        
 938              		.loc 1 516 8
 939 00ee FB68     		ldr	r3, [r7, #12]
 940 00f0 002B     		cmp	r3, #0
 941 00f2 02D0     		beq	.L49
 517:./ucOSII/Core/os_task.c ****         OS_FlagUnlink(pnode);                           /* Remove from wait list                   
 942              		.loc 1 517 9
 943 00f4 F868     		ldr	r0, [r7, #12]
 944 00f6 FFF7FEFF 		bl	OS_FlagUnlink
 945              	.L49:
 518:./ucOSII/Core/os_task.c ****     }
 519:./ucOSII/Core/os_task.c **** #endif
 520:./ucOSII/Core/os_task.c **** 
 521:./ucOSII/Core/os_task.c ****     ptcb->OSTCBDly      = 0u;                           /* Prevent OSTimeTick() from updating      
 946              		.loc 1 521 25
 947 00fa 3B69     		ldr	r3, [r7, #16]
 948 00fc 0022     		movs	r2, #0
 949 00fe 5A63     		str	r2, [r3, #52]
 522:./ucOSII/Core/os_task.c ****     ptcb->OSTCBStat     = OS_STAT_RDY;                  /* Prevent task from being resumed         
 950              		.loc 1 522 25
 951 0100 3B69     		ldr	r3, [r7, #16]
 952 0102 0022     		movs	r2, #0
 953 0104 83F83820 		strb	r2, [r3, #56]
 523:./ucOSII/Core/os_task.c ****     ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
 954              		.loc 1 523 25
 955 0108 3B69     		ldr	r3, [r7, #16]
 956 010a 0022     		movs	r2, #0
 957 010c 83F83920 		strb	r2, [r3, #57]
 524:./ucOSII/Core/os_task.c ****     if (OSLockNesting < 255u) {                         /* Make sure we don't context switch       
 958              		.loc 1 524 23
 959 0110 314B     		ldr	r3, .L55+20
 960 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961              		.loc 1 524 8
 962 0114 FF2B     		cmp	r3, #255
 963 0116 05D0     		beq	.L50
 525:./ucOSII/Core/os_task.c ****         OSLockNesting++;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 27


 964              		.loc 1 525 22
 965 0118 2F4B     		ldr	r3, .L55+20
 966 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 967 011c 0133     		adds	r3, r3, #1
 968 011e DAB2     		uxtb	r2, r3
 969 0120 2D4B     		ldr	r3, .L55+20
 970 0122 1A70     		strb	r2, [r3]
 971              	.L50:
 526:./ucOSII/Core/os_task.c ****     }
 527:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();                                 /* Enabling INT. ignores next instruc.     
 972              		.loc 1 527 5
 973 0124 7869     		ldr	r0, [r7, #20]
 974 0126 FFF7FEFF 		bl	OS_CPU_SR_Restore
 528:./ucOSII/Core/os_task.c ****     OS_Dummy();                                         /* ... Dummy ensures that INTs will be     
 975              		.loc 1 528 5
 976 012a FFF7FEFF 		bl	OS_Dummy
 529:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();                                /* ... disabled HERE!                      
 977              		.loc 1 529 5
 978 012e 4020     		movs	r0, #64
 979 0130 FFF7FEFF 		bl	OS_CPU_SR_Save
 980 0134 7861     		str	r0, [r7, #20]
 530:./ucOSII/Core/os_task.c ****     if (OSLockNesting > 0u) {                           /* Remove context switch lock              
 981              		.loc 1 530 23
 982 0136 284B     		ldr	r3, .L55+20
 983 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984              		.loc 1 530 8
 985 013a 002B     		cmp	r3, #0
 986 013c 05D0     		beq	.L51
 531:./ucOSII/Core/os_task.c ****         OSLockNesting--;
 987              		.loc 1 531 22
 988 013e 264B     		ldr	r3, .L55+20
 989 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 0142 013B     		subs	r3, r3, #1
 991 0144 DAB2     		uxtb	r2, r3
 992 0146 244B     		ldr	r3, .L55+20
 993 0148 1A70     		strb	r2, [r3]
 994              	.L51:
 532:./ucOSII/Core/os_task.c ****     }
 533:./ucOSII/Core/os_task.c ****     OSTaskDelHook(ptcb);                                /* Call user defined hook                  
 995              		.loc 1 533 5
 996 014a 3869     		ldr	r0, [r7, #16]
 997 014c FFF7FEFF 		bl	OSTaskDelHook
 534:./ucOSII/Core/os_task.c **** 
 535:./ucOSII/Core/os_task.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 536:./ucOSII/Core/os_task.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 537:./ucOSII/Core/os_task.c ****     OS_TLS_TaskDel(ptcb);                               /* Call TLS hook                           
 538:./ucOSII/Core/os_task.c **** #endif
 539:./ucOSII/Core/os_task.c **** #endif
 540:./ucOSII/Core/os_task.c **** 
 541:./ucOSII/Core/os_task.c ****     OSTaskCtr--;                                        /* One less task being managed             
 998              		.loc 1 541 14
 999 0150 224B     		ldr	r3, .L55+24
 1000 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 0154 013B     		subs	r3, r3, #1
 1002 0156 DAB2     		uxtb	r2, r3
 1003 0158 204B     		ldr	r3, .L55+24
 1004 015a 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 28


 542:./ucOSII/Core/os_task.c ****     OSTCBPrioTbl[prio] = (OS_TCB *)0;                   /* Clear old priority entry                
 1005              		.loc 1 542 17
 1006 015c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1007              		.loc 1 542 24
 1008 015e 1B4A     		ldr	r2, .L55+8
 1009 0160 0021     		movs	r1, #0
 1010 0162 42F82310 		str	r1, [r2, r3, lsl #2]
 543:./ucOSII/Core/os_task.c ****     if (ptcb->OSTCBPrev == (OS_TCB *)0) {               /* Remove from TCB chain                   
 1011              		.loc 1 543 13
 1012 0166 3B69     		ldr	r3, [r7, #16]
 1013 0168 9B69     		ldr	r3, [r3, #24]
 1014              		.loc 1 543 8
 1015 016a 002B     		cmp	r3, #0
 1016 016c 08D1     		bne	.L52
 544:./ucOSII/Core/os_task.c ****         ptcb->OSTCBNext->OSTCBPrev = (OS_TCB *)0;
 1017              		.loc 1 544 13
 1018 016e 3B69     		ldr	r3, [r7, #16]
 1019 0170 5B69     		ldr	r3, [r3, #20]
 1020              		.loc 1 544 36
 1021 0172 0022     		movs	r2, #0
 1022 0174 9A61     		str	r2, [r3, #24]
 545:./ucOSII/Core/os_task.c ****         OSTCBList                  = ptcb->OSTCBNext;
 1023              		.loc 1 545 42
 1024 0176 3B69     		ldr	r3, [r7, #16]
 1025 0178 5B69     		ldr	r3, [r3, #20]
 1026              		.loc 1 545 36
 1027 017a 194A     		ldr	r2, .L55+28
 1028 017c 1360     		str	r3, [r2]
 1029 017e 09E0     		b	.L53
 1030              	.L52:
 546:./ucOSII/Core/os_task.c ****     } else {
 547:./ucOSII/Core/os_task.c ****         ptcb->OSTCBPrev->OSTCBNext = ptcb->OSTCBNext;
 1031              		.loc 1 547 13
 1032 0180 3B69     		ldr	r3, [r7, #16]
 1033 0182 9B69     		ldr	r3, [r3, #24]
 1034              		.loc 1 547 42
 1035 0184 3A69     		ldr	r2, [r7, #16]
 1036 0186 5269     		ldr	r2, [r2, #20]
 1037              		.loc 1 547 36
 1038 0188 5A61     		str	r2, [r3, #20]
 548:./ucOSII/Core/os_task.c ****         ptcb->OSTCBNext->OSTCBPrev = ptcb->OSTCBPrev;
 1039              		.loc 1 548 13
 1040 018a 3B69     		ldr	r3, [r7, #16]
 1041 018c 5B69     		ldr	r3, [r3, #20]
 1042              		.loc 1 548 42
 1043 018e 3A69     		ldr	r2, [r7, #16]
 1044 0190 9269     		ldr	r2, [r2, #24]
 1045              		.loc 1 548 36
 1046 0192 9A61     		str	r2, [r3, #24]
 1047              	.L53:
 549:./ucOSII/Core/os_task.c ****     }
 550:./ucOSII/Core/os_task.c ****     ptcb->OSTCBNext     = OSTCBFreeList;                /* Return TCB to free TCB list             
 1048              		.loc 1 550 25
 1049 0194 134B     		ldr	r3, .L55+32
 1050 0196 1A68     		ldr	r2, [r3]
 1051 0198 3B69     		ldr	r3, [r7, #16]
 1052 019a 5A61     		str	r2, [r3, #20]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 29


 551:./ucOSII/Core/os_task.c ****     OSTCBFreeList       = ptcb;
 1053              		.loc 1 551 25
 1054 019c 114A     		ldr	r2, .L55+32
 1055 019e 3B69     		ldr	r3, [r7, #16]
 1056 01a0 1360     		str	r3, [r2]
 552:./ucOSII/Core/os_task.c **** #if OS_TASK_NAME_EN > 0u
 553:./ucOSII/Core/os_task.c ****     ptcb->OSTCBTaskName = (INT8U *)(void *)"?";
 1057              		.loc 1 553 25
 1058 01a2 3B69     		ldr	r3, [r7, #16]
 1059 01a4 104A     		ldr	r2, .L55+36
 1060 01a6 5A65     		str	r2, [r3, #84]
 554:./ucOSII/Core/os_task.c **** #endif
 555:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 1061              		.loc 1 555 5
 1062 01a8 7869     		ldr	r0, [r7, #20]
 1063 01aa FFF7FEFF 		bl	OS_CPU_SR_Restore
 556:./ucOSII/Core/os_task.c ****     if (OSRunning == OS_TRUE) {
 1064              		.loc 1 556 19
 1065 01ae 0F4B     		ldr	r3, .L55+40
 1066 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067              		.loc 1 556 8
 1068 01b2 012B     		cmp	r3, #1
 1069 01b4 01D1     		bne	.L54
 557:./ucOSII/Core/os_task.c ****         OS_Sched();                                     /* Find new highest priority task          
 1070              		.loc 1 557 9
 1071 01b6 FFF7FEFF 		bl	OS_Sched
 1072              	.L54:
 558:./ucOSII/Core/os_task.c ****     }
 559:./ucOSII/Core/os_task.c ****     return (OS_ERR_NONE);
 1073              		.loc 1 559 12
 1074 01ba 0023     		movs	r3, #0
 1075              	.L40:
 560:./ucOSII/Core/os_task.c **** }
 1076              		.loc 1 560 1
 1077 01bc 1846     		mov	r0, r3
 1078 01be 1837     		adds	r7, r7, #24
 1079              	.LCFI18:
 1080              		.cfi_def_cfa_offset 8
 1081 01c0 BD46     		mov	sp, r7
 1082              	.LCFI19:
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 01c2 80BD     		pop	{r7, pc}
 1086              	.L56:
 1087              		.align	2
 1088              	.L55:
 1089 01c4 00000000 		.word	OSIntNesting
 1090 01c8 00000000 		.word	OSTCBCur
 1091 01cc 00000000 		.word	OSTCBPrioTbl
 1092 01d0 00000000 		.word	OSRdyTbl
 1093 01d4 00000000 		.word	OSRdyGrp
 1094 01d8 00000000 		.word	OSLockNesting
 1095 01dc 00000000 		.word	OSTaskCtr
 1096 01e0 00000000 		.word	OSTCBList
 1097 01e4 00000000 		.word	OSTCBFreeList
 1098 01e8 00000000 		.word	.LC0
 1099 01ec 00000000 		.word	OSRunning
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 30


 1100              		.cfi_endproc
 1101              	.LFE6:
 1103              		.section	.text.OSTaskDelReq,"ax",%progbits
 1104              		.align	1
 1105              		.global	OSTaskDelReq
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1110              	OSTaskDelReq:
 1111              	.LFB7:
 561:./ucOSII/Core/os_task.c **** #endif
 562:./ucOSII/Core/os_task.c **** 
 563:./ucOSII/Core/os_task.c **** 
 564:./ucOSII/Core/os_task.c **** /*
 565:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 566:./ucOSII/Core/os_task.c **** *                                  REQUEST THAT A TASK DELETE ITSELF
 567:./ucOSII/Core/os_task.c **** *
 568:./ucOSII/Core/os_task.c **** * Description: This function is used to:
 569:./ucOSII/Core/os_task.c **** *                   a) notify a task to delete itself.
 570:./ucOSII/Core/os_task.c **** *                   b) to see if a task requested that the current task delete itself.
 571:./ucOSII/Core/os_task.c **** *              This function is a little tricky to understand.  Basically, you have a task that nee
 572:./ucOSII/Core/os_task.c **** *              to be deleted however, this task has resources that it has allocated (memory buffers
 573:./ucOSII/Core/os_task.c **** *              semaphores, mailboxes, queues etc.).  The task cannot be deleted otherwise these
 574:./ucOSII/Core/os_task.c **** *              resources would not be freed.  The requesting task calls OSTaskDelReq() to indicate 
 575:./ucOSII/Core/os_task.c **** *              the task needs to be deleted.  Deleting of the task is however, deferred to the task
 576:./ucOSII/Core/os_task.c **** *              be deleted.  For example, suppose that task #10 needs to be deleted.  The requesting
 577:./ucOSII/Core/os_task.c **** *              example, task #5, would call OSTaskDelReq(10).  When task #10 gets to execute, it ca
 578:./ucOSII/Core/os_task.c **** *              this function by specifying OS_PRIO_SELF and monitors the returned value.  If the re
 579:./ucOSII/Core/os_task.c **** *              value is OS_ERR_TASK_DEL_REQ, another task requested a task delete.  Task #10 would 
 580:./ucOSII/Core/os_task.c **** *              this:
 581:./ucOSII/Core/os_task.c **** *
 582:./ucOSII/Core/os_task.c **** *                   void Task(void *p_arg)
 583:./ucOSII/Core/os_task.c **** *                   {
 584:./ucOSII/Core/os_task.c **** *                       .
 585:./ucOSII/Core/os_task.c **** *                       .
 586:./ucOSII/Core/os_task.c **** *                       while (1) {
 587:./ucOSII/Core/os_task.c **** *                           OSTimeDly(1);
 588:./ucOSII/Core/os_task.c **** *                           if (OSTaskDelReq(OS_PRIO_SELF) == OS_ERR_TASK_DEL_REQ) {
 589:./ucOSII/Core/os_task.c **** *                               Release any owned resources;
 590:./ucOSII/Core/os_task.c **** *                               De-allocate any dynamic memory;
 591:./ucOSII/Core/os_task.c **** *                               OSTaskDel(OS_PRIO_SELF);
 592:./ucOSII/Core/os_task.c **** *                           }
 593:./ucOSII/Core/os_task.c **** *                       }
 594:./ucOSII/Core/os_task.c **** *                   }
 595:./ucOSII/Core/os_task.c **** *
 596:./ucOSII/Core/os_task.c **** * Arguments  : prio    is the priority of the task to request the delete from
 597:./ucOSII/Core/os_task.c **** *
 598:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE                  if the task exist and the request has been registered
 599:./ucOSII/Core/os_task.c **** *              OS_ERR_ILLEGAL_DEL_RUN_TIME  if you tried to delete a task after safety critical ope
 600:./ucOSII/Core/os_task.c **** *                                           started.
 601:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST        if the task has been deleted.  This allows the caller t
 602:./ucOSII/Core/os_task.c **** *                                           whether the request has been executed.
 603:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_DEL              if the task is assigned to a Mutex.
 604:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_DEL_IDLE         if you requested to delete uC/OS-II's idle task
 605:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID          if the priority you specify is higher that the maximum 
 606:./ucOSII/Core/os_task.c **** *                                           (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_
 607:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_DEL_REQ          if a task (possibly another task) requested that the ru
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 31


 608:./ucOSII/Core/os_task.c **** *                                           task be deleted.
 609:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 610:./ucOSII/Core/os_task.c **** */
 611:./ucOSII/Core/os_task.c **** 
 612:./ucOSII/Core/os_task.c **** #if OS_TASK_DEL_EN > 0u
 613:./ucOSII/Core/os_task.c **** INT8U  OSTaskDelReq (INT8U prio)
 614:./ucOSII/Core/os_task.c **** {
 1112              		.loc 1 614 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 24
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI20:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 86B0     		sub	sp, sp, #24
 1122              	.LCFI21:
 1123              		.cfi_def_cfa_offset 32
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI22:
 1126              		.cfi_def_cfa_register 7
 1127 0006 0346     		mov	r3, r0
 1128 0008 FB71     		strb	r3, [r7, #7]
 615:./ucOSII/Core/os_task.c ****     INT8U      stat;
 616:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
 617:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 618:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1129              		.loc 1 618 16
 1130 000a 0023     		movs	r3, #0
 1131 000c 7B61     		str	r3, [r7, #20]
 619:./ucOSII/Core/os_task.c **** #endif
 620:./ucOSII/Core/os_task.c **** 
 621:./ucOSII/Core/os_task.c **** 
 622:./ucOSII/Core/os_task.c **** 
 623:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 624:./ucOSII/Core/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 625:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 626:./ucOSII/Core/os_task.c ****         return (OS_ERR_ILLEGAL_DEL_RUN_TIME);
 627:./ucOSII/Core/os_task.c ****     }
 628:./ucOSII/Core/os_task.c **** #endif
 629:./ucOSII/Core/os_task.c **** 
 630:./ucOSII/Core/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to delete idle task 
 1132              		.loc 1 630 8
 1133 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1134 0010 3F2B     		cmp	r3, #63
 1135 0012 01D1     		bne	.L58
 631:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_DEL_IDLE);
 1136              		.loc 1 631 16
 1137 0014 3E23     		movs	r3, #62
 1138 0016 39E0     		b	.L59
 1139              	.L58:
 632:./ucOSII/Core/os_task.c ****     }
 633:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 634:./ucOSII/Core/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?           
 1140              		.loc 1 634 8
 1141 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 32


 1142 001a 3E2B     		cmp	r3, #62
 1143 001c 04D9     		bls	.L60
 635:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1144              		.loc 1 635 12
 1145 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1146 0020 FF2B     		cmp	r3, #255
 1147 0022 01D0     		beq	.L60
 636:./ucOSII/Core/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 1148              		.loc 1 636 20
 1149 0024 2A23     		movs	r3, #42
 1150 0026 31E0     		b	.L59
 1151              	.L60:
 637:./ucOSII/Core/os_task.c ****         }
 638:./ucOSII/Core/os_task.c ****     }
 639:./ucOSII/Core/os_task.c **** #endif
 640:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                                 /* See if a task is requesting to .
 1152              		.loc 1 640 8
 1153 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1154 002a FF2B     		cmp	r3, #255
 1155 002c 0DD1     		bne	.L61
 641:./ucOSII/Core/os_task.c ****         OS_ENTER_CRITICAL();                                    /* ... this task to delete itself  
 1156              		.loc 1 641 9
 1157 002e 4020     		movs	r0, #64
 1158 0030 FFF7FEFF 		bl	OS_CPU_SR_Save
 1159 0034 7861     		str	r0, [r7, #20]
 642:./ucOSII/Core/os_task.c ****         stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller 
 1160              		.loc 1 642 24
 1161 0036 174B     		ldr	r3, .L64
 1162 0038 1B68     		ldr	r3, [r3]
 1163              		.loc 1 642 14
 1164 003a 93F83F30 		ldrb	r3, [r3, #63]
 1165 003e FB73     		strb	r3, [r7, #15]
 643:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1166              		.loc 1 643 9
 1167 0040 7869     		ldr	r0, [r7, #20]
 1168 0042 FFF7FEFF 		bl	OS_CPU_SR_Restore
 644:./ucOSII/Core/os_task.c ****         return (stat);
 1169              		.loc 1 644 16
 1170 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1171 0048 20E0     		b	.L59
 1172              	.L61:
 645:./ucOSII/Core/os_task.c ****     }
 646:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 1173              		.loc 1 646 5
 1174 004a 4020     		movs	r0, #64
 1175 004c FFF7FEFF 		bl	OS_CPU_SR_Save
 1176 0050 7861     		str	r0, [r7, #20]
 647:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1177              		.loc 1 647 24
 1178 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1179              		.loc 1 647 10
 1180 0054 104A     		ldr	r2, .L64+4
 1181 0056 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1182 005a 3B61     		str	r3, [r7, #16]
 648:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                  /* Task to delete must exist       
 1183              		.loc 1 648 8
 1184 005c 3B69     		ldr	r3, [r7, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 33


 1185 005e 002B     		cmp	r3, #0
 1186 0060 04D1     		bne	.L62
 649:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1187              		.loc 1 649 9
 1188 0062 7869     		ldr	r0, [r7, #20]
 1189 0064 FFF7FEFF 		bl	OS_CPU_SR_Restore
 650:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted    
 1190              		.loc 1 650 16
 1191 0068 4323     		movs	r3, #67
 1192 006a 0FE0     		b	.L59
 1193              	.L62:
 651:./ucOSII/Core/os_task.c ****     }
 652:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                              /* Must NOT be assigned to a Mutex 
 1194              		.loc 1 652 8
 1195 006c 3B69     		ldr	r3, [r7, #16]
 1196 006e 012B     		cmp	r3, #1
 1197 0070 04D1     		bne	.L63
 653:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1198              		.loc 1 653 9
 1199 0072 7869     		ldr	r0, [r7, #20]
 1200 0074 FFF7FEFF 		bl	OS_CPU_SR_Restore
 654:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_DEL);
 1201              		.loc 1 654 16
 1202 0078 3D23     		movs	r3, #61
 1203 007a 07E0     		b	.L59
 1204              	.L63:
 655:./ucOSII/Core/os_task.c ****     }
 656:./ucOSII/Core/os_task.c ****     ptcb->OSTCBDelReq = OS_ERR_TASK_DEL_REQ;                    /* Set flag indicating task to be D
 1205              		.loc 1 656 23
 1206 007c 3B69     		ldr	r3, [r7, #16]
 1207 007e 3F22     		movs	r2, #63
 1208 0080 83F83F20 		strb	r2, [r3, #63]
 657:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 1209              		.loc 1 657 5
 1210 0084 7869     		ldr	r0, [r7, #20]
 1211 0086 FFF7FEFF 		bl	OS_CPU_SR_Restore
 658:./ucOSII/Core/os_task.c ****     return (OS_ERR_NONE);
 1212              		.loc 1 658 12
 1213 008a 0023     		movs	r3, #0
 1214              	.L59:
 659:./ucOSII/Core/os_task.c **** }
 1215              		.loc 1 659 1
 1216 008c 1846     		mov	r0, r3
 1217 008e 1837     		adds	r7, r7, #24
 1218              	.LCFI23:
 1219              		.cfi_def_cfa_offset 8
 1220 0090 BD46     		mov	sp, r7
 1221              	.LCFI24:
 1222              		.cfi_def_cfa_register 13
 1223              		@ sp needed
 1224 0092 80BD     		pop	{r7, pc}
 1225              	.L65:
 1226              		.align	2
 1227              	.L64:
 1228 0094 00000000 		.word	OSTCBCur
 1229 0098 00000000 		.word	OSTCBPrioTbl
 1230              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 34


 1231              	.LFE7:
 1233              		.section	.text.OSTaskNameGet,"ax",%progbits
 1234              		.align	1
 1235              		.global	OSTaskNameGet
 1236              		.syntax unified
 1237              		.thumb
 1238              		.thumb_func
 1240              	OSTaskNameGet:
 1241              	.LFB8:
 660:./ucOSII/Core/os_task.c **** #endif
 661:./ucOSII/Core/os_task.c **** 
 662:./ucOSII/Core/os_task.c **** 
 663:./ucOSII/Core/os_task.c **** /*
 664:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 665:./ucOSII/Core/os_task.c **** *                                       GET THE NAME OF A TASK
 666:./ucOSII/Core/os_task.c **** *
 667:./ucOSII/Core/os_task.c **** * Description: This function is called to obtain the name of a task.
 668:./ucOSII/Core/os_task.c **** *
 669:./ucOSII/Core/os_task.c **** * Arguments  : prio      is the priority of the task that you want to obtain the name from.
 670:./ucOSII/Core/os_task.c **** *
 671:./ucOSII/Core/os_task.c **** *              pname     is a pointer to a pointer to an ASCII string that will receive the name of
 672:./ucOSII/Core/os_task.c **** *
 673:./ucOSII/Core/os_task.c **** *              perr      is a pointer to an error code that can contain one of the following values
 674:./ucOSII/Core/os_task.c **** *
 675:./ucOSII/Core/os_task.c **** *                        OS_ERR_NONE                if the requested task is resumed
 676:./ucOSII/Core/os_task.c **** *                        OS_ERR_TASK_NOT_EXIST      if the task has not been created or is assigned
 677:./ucOSII/Core/os_task.c **** *                        OS_ERR_PRIO_INVALID        if you specified an invalid priority:
 678:./ucOSII/Core/os_task.c **** *                                                   A higher value than the idle task or not OS_PRI
 679:./ucOSII/Core/os_task.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 680:./ucOSII/Core/os_task.c **** *                        OS_ERR_NAME_GET_ISR        You called this function from an ISR
 681:./ucOSII/Core/os_task.c **** *
 682:./ucOSII/Core/os_task.c **** *
 683:./ucOSII/Core/os_task.c **** * Returns    : The length of the string or 0 if the task does not exist.
 684:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 685:./ucOSII/Core/os_task.c **** */
 686:./ucOSII/Core/os_task.c **** 
 687:./ucOSII/Core/os_task.c **** #if OS_TASK_NAME_EN > 0u
 688:./ucOSII/Core/os_task.c **** INT8U  OSTaskNameGet (INT8U    prio,
 689:./ucOSII/Core/os_task.c ****                       INT8U  **pname,
 690:./ucOSII/Core/os_task.c ****                       INT8U   *perr)
 691:./ucOSII/Core/os_task.c **** {
 1242              		.loc 1 691 1
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 32
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 80B5     		push	{r7, lr}
 1247              	.LCFI25:
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 88B0     		sub	sp, sp, #32
 1252              	.LCFI26:
 1253              		.cfi_def_cfa_offset 40
 1254 0004 00AF     		add	r7, sp, #0
 1255              	.LCFI27:
 1256              		.cfi_def_cfa_register 7
 1257 0006 0346     		mov	r3, r0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 35


 1258 0008 B960     		str	r1, [r7, #8]
 1259 000a 7A60     		str	r2, [r7, #4]
 1260 000c FB73     		strb	r3, [r7, #15]
 692:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
 693:./ucOSII/Core/os_task.c ****     INT8U      len;
 694:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                             /* Allocate storage for CPU status registe
 695:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1261              		.loc 1 695 16
 1262 000e 0023     		movs	r3, #0
 1263 0010 FB61     		str	r3, [r7, #28]
 696:./ucOSII/Core/os_task.c **** #endif
 697:./ucOSII/Core/os_task.c **** 
 698:./ucOSII/Core/os_task.c **** 
 699:./ucOSII/Core/os_task.c **** 
 700:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL
 701:./ucOSII/Core/os_task.c ****     if (perr == (INT8U *)0) {
 702:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 703:./ucOSII/Core/os_task.c ****         return (0u);
 704:./ucOSII/Core/os_task.c ****     }
 705:./ucOSII/Core/os_task.c **** #endif
 706:./ucOSII/Core/os_task.c **** 
 707:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 708:./ucOSII/Core/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                         /* Task priority valid ?                  
 1264              		.loc 1 708 8
 1265 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1266 0014 3F2B     		cmp	r3, #63
 1267 0016 07D9     		bls	.L67
 709:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1268              		.loc 1 709 12
 1269 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1270 001a FF2B     		cmp	r3, #255
 1271 001c 04D0     		beq	.L67
 710:./ucOSII/Core/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;                 /* No                                     
 1272              		.loc 1 710 19
 1273 001e 7B68     		ldr	r3, [r7, #4]
 1274 0020 2A22     		movs	r2, #42
 1275 0022 1A70     		strb	r2, [r3]
 711:./ucOSII/Core/os_task.c ****             return (0u);
 1276              		.loc 1 711 20
 1277 0024 0023     		movs	r3, #0
 1278 0026 49E0     		b	.L68
 1279              	.L67:
 712:./ucOSII/Core/os_task.c ****         }
 713:./ucOSII/Core/os_task.c ****     }
 714:./ucOSII/Core/os_task.c ****     if (pname == (INT8U **)0) {                          /* Is 'pname' a NULL pointer?             
 1280              		.loc 1 714 8
 1281 0028 BB68     		ldr	r3, [r7, #8]
 1282 002a 002B     		cmp	r3, #0
 1283 002c 04D1     		bne	.L69
 715:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_PNAME_NULL;                       /* Yes                                    
 1284              		.loc 1 715 15
 1285 002e 7B68     		ldr	r3, [r7, #4]
 1286 0030 0C22     		movs	r2, #12
 1287 0032 1A70     		strb	r2, [r3]
 716:./ucOSII/Core/os_task.c ****         return (0u);
 1288              		.loc 1 716 16
 1289 0034 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 36


 1290 0036 41E0     		b	.L68
 1291              	.L69:
 717:./ucOSII/Core/os_task.c ****     }
 718:./ucOSII/Core/os_task.c **** #endif
 719:./ucOSII/Core/os_task.c ****     if (OSIntNesting > 0u) {                              /* See if trying to call from an ISR     
 1292              		.loc 1 719 22
 1293 0038 224B     		ldr	r3, .L74
 1294 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295              		.loc 1 719 8
 1296 003c 002B     		cmp	r3, #0
 1297 003e 04D0     		beq	.L70
 720:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_NAME_GET_ISR;
 1298              		.loc 1 720 15
 1299 0040 7B68     		ldr	r3, [r7, #4]
 1300 0042 1122     		movs	r2, #17
 1301 0044 1A70     		strb	r2, [r3]
 721:./ucOSII/Core/os_task.c ****         return (0u);
 1302              		.loc 1 721 16
 1303 0046 0023     		movs	r3, #0
 1304 0048 38E0     		b	.L68
 1305              	.L70:
 722:./ucOSII/Core/os_task.c ****     }
 723:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 1306              		.loc 1 723 5
 1307 004a 4020     		movs	r0, #64
 1308 004c FFF7FEFF 		bl	OS_CPU_SR_Save
 1309 0050 F861     		str	r0, [r7, #28]
 724:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name    
 1310              		.loc 1 724 8
 1311 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1312 0054 FF2B     		cmp	r3, #255
 1313 0056 04D1     		bne	.L71
 725:./ucOSII/Core/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1314              		.loc 1 725 24
 1315 0058 1B4B     		ldr	r3, .L74+4
 1316 005a 1B68     		ldr	r3, [r3]
 1317              		.loc 1 725 14
 1318 005c 93F83A30 		ldrb	r3, [r3, #58]
 1319 0060 FB73     		strb	r3, [r7, #15]
 1320              	.L71:
 726:./ucOSII/Core/os_task.c ****     }
 727:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1321              		.loc 1 727 24
 1322 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1323              		.loc 1 727 10
 1324 0064 194A     		ldr	r2, .L74+8
 1325 0066 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1326 006a BB61     		str	r3, [r7, #24]
 728:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                       
 1327              		.loc 1 728 8
 1328 006c BB69     		ldr	r3, [r7, #24]
 1329 006e 002B     		cmp	r3, #0
 1330 0070 07D1     		bne	.L72
 729:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();                              /* No                                     
 1331              		.loc 1 729 9
 1332 0072 F869     		ldr	r0, [r7, #28]
 1333 0074 FFF7FEFF 		bl	OS_CPU_SR_Restore
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 37


 730:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1334              		.loc 1 730 15
 1335 0078 7B68     		ldr	r3, [r7, #4]
 1336 007a 4322     		movs	r2, #67
 1337 007c 1A70     		strb	r2, [r3]
 731:./ucOSII/Core/os_task.c ****         return (0u);
 1338              		.loc 1 731 16
 1339 007e 0023     		movs	r3, #0
 1340 0080 1CE0     		b	.L68
 1341              	.L72:
 732:./ucOSII/Core/os_task.c ****     }
 733:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                       /* Task assigned to a Mutex?              
 1342              		.loc 1 733 8
 1343 0082 BB69     		ldr	r3, [r7, #24]
 1344 0084 012B     		cmp	r3, #1
 1345 0086 07D1     		bne	.L73
 734:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();                              /* Yes                                    
 1346              		.loc 1 734 9
 1347 0088 F869     		ldr	r0, [r7, #28]
 1348 008a FFF7FEFF 		bl	OS_CPU_SR_Restore
 735:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1349              		.loc 1 735 15
 1350 008e 7B68     		ldr	r3, [r7, #4]
 1351 0090 4322     		movs	r2, #67
 1352 0092 1A70     		strb	r2, [r3]
 736:./ucOSII/Core/os_task.c ****         return (0u);
 1353              		.loc 1 736 16
 1354 0094 0023     		movs	r3, #0
 1355 0096 11E0     		b	.L68
 1356              	.L73:
 737:./ucOSII/Core/os_task.c ****     }
 738:./ucOSII/Core/os_task.c ****     *pname = ptcb->OSTCBTaskName;
 1357              		.loc 1 738 18
 1358 0098 BB69     		ldr	r3, [r7, #24]
 1359 009a 5A6D     		ldr	r2, [r3, #84]
 1360              		.loc 1 738 12
 1361 009c BB68     		ldr	r3, [r7, #8]
 1362 009e 1A60     		str	r2, [r3]
 739:./ucOSII/Core/os_task.c ****     len    = OS_StrLen(*pname);
 1363              		.loc 1 739 14
 1364 00a0 BB68     		ldr	r3, [r7, #8]
 1365 00a2 1B68     		ldr	r3, [r3]
 1366 00a4 1846     		mov	r0, r3
 1367 00a6 FFF7FEFF 		bl	OS_StrLen
 1368 00aa 0346     		mov	r3, r0
 1369 00ac FB75     		strb	r3, [r7, #23]
 740:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 1370              		.loc 1 740 5
 1371 00ae F869     		ldr	r0, [r7, #28]
 1372 00b0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 741:./ucOSII/Core/os_task.c ****     *perr  = OS_ERR_NONE;
 1373              		.loc 1 741 12
 1374 00b4 7B68     		ldr	r3, [r7, #4]
 1375 00b6 0022     		movs	r2, #0
 1376 00b8 1A70     		strb	r2, [r3]
 742:./ucOSII/Core/os_task.c ****     return (len);
 1377              		.loc 1 742 12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 38


 1378 00ba FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1379              	.L68:
 743:./ucOSII/Core/os_task.c **** }
 1380              		.loc 1 743 1
 1381 00bc 1846     		mov	r0, r3
 1382 00be 2037     		adds	r7, r7, #32
 1383              	.LCFI28:
 1384              		.cfi_def_cfa_offset 8
 1385 00c0 BD46     		mov	sp, r7
 1386              	.LCFI29:
 1387              		.cfi_def_cfa_register 13
 1388              		@ sp needed
 1389 00c2 80BD     		pop	{r7, pc}
 1390              	.L75:
 1391              		.align	2
 1392              	.L74:
 1393 00c4 00000000 		.word	OSIntNesting
 1394 00c8 00000000 		.word	OSTCBCur
 1395 00cc 00000000 		.word	OSTCBPrioTbl
 1396              		.cfi_endproc
 1397              	.LFE8:
 1399              		.section	.text.OSTaskNameSet,"ax",%progbits
 1400              		.align	1
 1401              		.global	OSTaskNameSet
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1406              	OSTaskNameSet:
 1407              	.LFB9:
 744:./ucOSII/Core/os_task.c **** #endif
 745:./ucOSII/Core/os_task.c **** 
 746:./ucOSII/Core/os_task.c **** 
 747:./ucOSII/Core/os_task.c **** /*
 748:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 749:./ucOSII/Core/os_task.c **** *                                       ASSIGN A NAME TO A TASK
 750:./ucOSII/Core/os_task.c **** *
 751:./ucOSII/Core/os_task.c **** * Description: This function is used to set the name of a task.
 752:./ucOSII/Core/os_task.c **** *
 753:./ucOSII/Core/os_task.c **** * Arguments  : prio      is the priority of the task that you want the assign a name to.
 754:./ucOSII/Core/os_task.c **** *
 755:./ucOSII/Core/os_task.c **** *              pname     is a pointer to an ASCII string that contains the name of the task.
 756:./ucOSII/Core/os_task.c **** *
 757:./ucOSII/Core/os_task.c **** *              perr       is a pointer to an error code that can contain one of the following value
 758:./ucOSII/Core/os_task.c **** *
 759:./ucOSII/Core/os_task.c **** *                        OS_ERR_NONE                if the requested task is resumed
 760:./ucOSII/Core/os_task.c **** *                        OS_ERR_TASK_NOT_EXIST      if the task has not been created or is assigned
 761:./ucOSII/Core/os_task.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 762:./ucOSII/Core/os_task.c **** *                        OS_ERR_PRIO_INVALID        if you specified an invalid priority:
 763:./ucOSII/Core/os_task.c **** *                                                   A higher value than the idle task or not OS_PRI
 764:./ucOSII/Core/os_task.c **** *                        OS_ERR_NAME_SET_ISR        if you called this function from an ISR
 765:./ucOSII/Core/os_task.c **** *
 766:./ucOSII/Core/os_task.c **** * Returns    : None
 767:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 768:./ucOSII/Core/os_task.c **** */
 769:./ucOSII/Core/os_task.c **** #if OS_TASK_NAME_EN > 0u
 770:./ucOSII/Core/os_task.c **** void  OSTaskNameSet (INT8U   prio,
 771:./ucOSII/Core/os_task.c ****                      INT8U  *pname,
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 39


 772:./ucOSII/Core/os_task.c ****                      INT8U  *perr)
 773:./ucOSII/Core/os_task.c **** {
 1408              		.loc 1 773 1
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 24
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412 0000 80B5     		push	{r7, lr}
 1413              	.LCFI30:
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 7, -8
 1416              		.cfi_offset 14, -4
 1417 0002 86B0     		sub	sp, sp, #24
 1418              	.LCFI31:
 1419              		.cfi_def_cfa_offset 32
 1420 0004 00AF     		add	r7, sp, #0
 1421              	.LCFI32:
 1422              		.cfi_def_cfa_register 7
 1423 0006 0346     		mov	r3, r0
 1424 0008 B960     		str	r1, [r7, #8]
 1425 000a 7A60     		str	r2, [r7, #4]
 1426 000c FB73     		strb	r3, [r7, #15]
 774:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
 775:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                         /* Allocate storage for CPU status register   
 776:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1427              		.loc 1 776 16
 1428 000e 0023     		movs	r3, #0
 1429 0010 7B61     		str	r3, [r7, #20]
 777:./ucOSII/Core/os_task.c **** #endif
 778:./ucOSII/Core/os_task.c **** 
 779:./ucOSII/Core/os_task.c **** 
 780:./ucOSII/Core/os_task.c **** 
 781:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL
 782:./ucOSII/Core/os_task.c ****     if (perr == (INT8U *)0) {
 783:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 784:./ucOSII/Core/os_task.c ****         return;
 785:./ucOSII/Core/os_task.c ****     }
 786:./ucOSII/Core/os_task.c **** #endif
 787:./ucOSII/Core/os_task.c **** 
 788:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 789:./ucOSII/Core/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                     /* Task priority valid ?                      
 1430              		.loc 1 789 8
 1431 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1432 0014 3F2B     		cmp	r3, #63
 1433 0016 06D9     		bls	.L77
 790:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1434              		.loc 1 790 12
 1435 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1436 001a FF2B     		cmp	r3, #255
 1437 001c 03D0     		beq	.L77
 791:./ucOSII/Core/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;             /* No                                         
 1438              		.loc 1 791 19
 1439 001e 7B68     		ldr	r3, [r7, #4]
 1440 0020 2A22     		movs	r2, #42
 1441 0022 1A70     		strb	r2, [r3]
 792:./ucOSII/Core/os_task.c ****             return;
 1442              		.loc 1 792 13
 1443 0024 3CE0     		b	.L76
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 40


 1444              	.L77:
 793:./ucOSII/Core/os_task.c ****         }
 794:./ucOSII/Core/os_task.c ****     }
 795:./ucOSII/Core/os_task.c ****     if (pname == (INT8U *)0) {                       /* Is 'pname' a NULL pointer?                 
 1445              		.loc 1 795 8
 1446 0026 BB68     		ldr	r3, [r7, #8]
 1447 0028 002B     		cmp	r3, #0
 1448 002a 03D1     		bne	.L79
 796:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_PNAME_NULL;                   /* Yes                                        
 1449              		.loc 1 796 15
 1450 002c 7B68     		ldr	r3, [r7, #4]
 1451 002e 0C22     		movs	r2, #12
 1452 0030 1A70     		strb	r2, [r3]
 797:./ucOSII/Core/os_task.c ****         return;
 1453              		.loc 1 797 9
 1454 0032 35E0     		b	.L76
 1455              	.L79:
 798:./ucOSII/Core/os_task.c ****     }
 799:./ucOSII/Core/os_task.c **** #endif
 800:./ucOSII/Core/os_task.c ****     if (OSIntNesting > 0u) {                         /* See if trying to call from an ISR          
 1456              		.loc 1 800 22
 1457 0034 1C4B     		ldr	r3, .L84
 1458 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1459              		.loc 1 800 8
 1460 0038 002B     		cmp	r3, #0
 1461 003a 03D0     		beq	.L80
 801:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_NAME_SET_ISR;
 1462              		.loc 1 801 15
 1463 003c 7B68     		ldr	r3, [r7, #4]
 1464 003e 1222     		movs	r2, #18
 1465 0040 1A70     		strb	r2, [r3]
 802:./ucOSII/Core/os_task.c ****         return;
 1466              		.loc 1 802 9
 1467 0042 2DE0     		b	.L76
 1468              	.L80:
 803:./ucOSII/Core/os_task.c ****     }
 804:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 1469              		.loc 1 804 5
 1470 0044 4020     		movs	r0, #64
 1471 0046 FFF7FEFF 		bl	OS_CPU_SR_Save
 1472 004a 7861     		str	r0, [r7, #20]
 805:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name 
 1473              		.loc 1 805 8
 1474 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1475 004e FF2B     		cmp	r3, #255
 1476 0050 04D1     		bne	.L81
 806:./ucOSII/Core/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1477              		.loc 1 806 24
 1478 0052 164B     		ldr	r3, .L84+4
 1479 0054 1B68     		ldr	r3, [r3]
 1480              		.loc 1 806 14
 1481 0056 93F83A30 		ldrb	r3, [r3, #58]
 1482 005a FB73     		strb	r3, [r7, #15]
 1483              	.L81:
 807:./ucOSII/Core/os_task.c ****     }
 808:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1484              		.loc 1 808 24
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 41


 1485 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1486              		.loc 1 808 10
 1487 005e 144A     		ldr	r2, .L84+8
 1488 0060 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1489 0064 3B61     		str	r3, [r7, #16]
 809:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                           
 1490              		.loc 1 809 8
 1491 0066 3B69     		ldr	r3, [r7, #16]
 1492 0068 002B     		cmp	r3, #0
 1493 006a 06D1     		bne	.L82
 810:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();                          /* No                                         
 1494              		.loc 1 810 9
 1495 006c 7869     		ldr	r0, [r7, #20]
 1496 006e FFF7FEFF 		bl	OS_CPU_SR_Restore
 811:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1497              		.loc 1 811 15
 1498 0072 7B68     		ldr	r3, [r7, #4]
 1499 0074 4322     		movs	r2, #67
 1500 0076 1A70     		strb	r2, [r3]
 812:./ucOSII/Core/os_task.c ****         return;
 1501              		.loc 1 812 9
 1502 0078 12E0     		b	.L76
 1503              	.L82:
 813:./ucOSII/Core/os_task.c ****     }
 814:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                   /* Task assigned to a Mutex?                  
 1504              		.loc 1 814 8
 1505 007a 3B69     		ldr	r3, [r7, #16]
 1506 007c 012B     		cmp	r3, #1
 1507 007e 06D1     		bne	.L83
 815:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();                          /* Yes                                        
 1508              		.loc 1 815 9
 1509 0080 7869     		ldr	r0, [r7, #20]
 1510 0082 FFF7FEFF 		bl	OS_CPU_SR_Restore
 816:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1511              		.loc 1 816 15
 1512 0086 7B68     		ldr	r3, [r7, #4]
 1513 0088 4322     		movs	r2, #67
 1514 008a 1A70     		strb	r2, [r3]
 817:./ucOSII/Core/os_task.c ****         return;
 1515              		.loc 1 817 9
 1516 008c 08E0     		b	.L76
 1517              	.L83:
 818:./ucOSII/Core/os_task.c ****     }
 819:./ucOSII/Core/os_task.c ****     ptcb->OSTCBTaskName = pname;
 1518              		.loc 1 819 25
 1519 008e 3B69     		ldr	r3, [r7, #16]
 1520 0090 BA68     		ldr	r2, [r7, #8]
 1521 0092 5A65     		str	r2, [r3, #84]
 820:./ucOSII/Core/os_task.c ****     OS_TRACE_TASK_NAME_SET(ptcb);
 821:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 1522              		.loc 1 821 5
 1523 0094 7869     		ldr	r0, [r7, #20]
 1524 0096 FFF7FEFF 		bl	OS_CPU_SR_Restore
 822:./ucOSII/Core/os_task.c ****     *perr               = OS_ERR_NONE;
 1525              		.loc 1 822 25
 1526 009a 7B68     		ldr	r3, [r7, #4]
 1527 009c 0022     		movs	r2, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 42


 1528 009e 1A70     		strb	r2, [r3]
 1529              	.L76:
 823:./ucOSII/Core/os_task.c **** }
 1530              		.loc 1 823 1
 1531 00a0 1837     		adds	r7, r7, #24
 1532              	.LCFI33:
 1533              		.cfi_def_cfa_offset 8
 1534 00a2 BD46     		mov	sp, r7
 1535              	.LCFI34:
 1536              		.cfi_def_cfa_register 13
 1537              		@ sp needed
 1538 00a4 80BD     		pop	{r7, pc}
 1539              	.L85:
 1540 00a6 00BF     		.align	2
 1541              	.L84:
 1542 00a8 00000000 		.word	OSIntNesting
 1543 00ac 00000000 		.word	OSTCBCur
 1544 00b0 00000000 		.word	OSTCBPrioTbl
 1545              		.cfi_endproc
 1546              	.LFE9:
 1548              		.section	.text.OSTaskResume,"ax",%progbits
 1549              		.align	1
 1550              		.global	OSTaskResume
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1555              	OSTaskResume:
 1556              	.LFB10:
 824:./ucOSII/Core/os_task.c **** #endif
 825:./ucOSII/Core/os_task.c **** 
 826:./ucOSII/Core/os_task.c **** 
 827:./ucOSII/Core/os_task.c **** /*
 828:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 829:./ucOSII/Core/os_task.c **** *                                       RESUME A SUSPENDED TASK
 830:./ucOSII/Core/os_task.c **** *
 831:./ucOSII/Core/os_task.c **** * Description: This function is called to resume a previously suspended task.  This is the only cal
 832:./ucOSII/Core/os_task.c **** *              will remove an explicit task suspension.
 833:./ucOSII/Core/os_task.c **** *
 834:./ucOSII/Core/os_task.c **** * Arguments  : prio     is the priority of the task to resume.
 835:./ucOSII/Core/os_task.c **** *
 836:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE                if the requested task is resumed
 837:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID        if the priority you specify is higher that the maximum al
 838:./ucOSII/Core/os_task.c **** *                                         (i.e. >= OS_LOWEST_PRIO)
 839:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_RESUME_PRIO    if the task to resume does not exist
 840:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST      if the task is assigned to a Mutex PIP
 841:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_SUSPENDED  if the task to resume has not been suspended
 842:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 843:./ucOSII/Core/os_task.c **** */
 844:./ucOSII/Core/os_task.c **** 
 845:./ucOSII/Core/os_task.c **** #if OS_TASK_SUSPEND_EN > 0u
 846:./ucOSII/Core/os_task.c **** INT8U  OSTaskResume (INT8U prio)
 847:./ucOSII/Core/os_task.c **** {
 1557              		.loc 1 847 1
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 16
 1560              		@ frame_needed = 1, uses_anonymous_args = 0
 1561 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 43


 1562              	.LCFI35:
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 7, -8
 1565              		.cfi_offset 14, -4
 1566 0002 84B0     		sub	sp, sp, #16
 1567              	.LCFI36:
 1568              		.cfi_def_cfa_offset 24
 1569 0004 00AF     		add	r7, sp, #0
 1570              	.LCFI37:
 1571              		.cfi_def_cfa_register 7
 1572 0006 0346     		mov	r3, r0
 1573 0008 FB71     		strb	r3, [r7, #7]
 848:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
 849:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                                  /* Storage for CPU status register   
 850:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1574              		.loc 1 850 16
 1575 000a 0023     		movs	r3, #0
 1576 000c FB60     		str	r3, [r7, #12]
 851:./ucOSII/Core/os_task.c **** #endif
 852:./ucOSII/Core/os_task.c **** 
 853:./ucOSII/Core/os_task.c **** 
 854:./ucOSII/Core/os_task.c **** 
 855:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 856:./ucOSII/Core/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                             /* Make sure task priority is valid  
 1577              		.loc 1 856 8
 1578 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1579 0010 3E2B     		cmp	r3, #62
 1580 0012 01D9     		bls	.L87
 857:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 1581              		.loc 1 857 16
 1582 0014 2A23     		movs	r3, #42
 1583 0016 63E0     		b	.L88
 1584              	.L87:
 858:./ucOSII/Core/os_task.c ****     }
 859:./ucOSII/Core/os_task.c **** #endif
 860:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 1585              		.loc 1 860 5
 1586 0018 4020     		movs	r0, #64
 1587 001a FFF7FEFF 		bl	OS_CPU_SR_Save
 1588 001e F860     		str	r0, [r7, #12]
 861:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1589              		.loc 1 861 24
 1590 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1591              		.loc 1 861 10
 1592 0022 314A     		ldr	r2, .L95
 1593 0024 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1594 0028 BB60     		str	r3, [r7, #8]
 862:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                /* Task to suspend must exist        
 1595              		.loc 1 862 8
 1596 002a BB68     		ldr	r3, [r7, #8]
 1597 002c 002B     		cmp	r3, #0
 1598 002e 04D1     		bne	.L89
 863:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1599              		.loc 1 863 9
 1600 0030 F868     		ldr	r0, [r7, #12]
 1601 0032 FFF7FEFF 		bl	OS_CPU_SR_Restore
 864:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_RESUME_PRIO);
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 44


 1602              		.loc 1 864 16
 1603 0036 4623     		movs	r3, #70
 1604 0038 52E0     		b	.L88
 1605              	.L89:
 865:./ucOSII/Core/os_task.c ****     }
 866:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                            /* See if assigned to Mutex          
 1606              		.loc 1 866 8
 1607 003a BB68     		ldr	r3, [r7, #8]
 1608 003c 012B     		cmp	r3, #1
 1609 003e 04D1     		bne	.L90
 867:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1610              		.loc 1 867 9
 1611 0040 F868     		ldr	r0, [r7, #12]
 1612 0042 FFF7FEFF 		bl	OS_CPU_SR_Restore
 868:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1613              		.loc 1 868 16
 1614 0046 4323     		movs	r3, #67
 1615 0048 4AE0     		b	.L88
 1616              	.L90:
 869:./ucOSII/Core/os_task.c ****     }
 870:./ucOSII/Core/os_task.c ****     if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) != OS_STAT_RDY) { /* Task must be suspended            
 1617              		.loc 1 870 14
 1618 004a BB68     		ldr	r3, [r7, #8]
 1619 004c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1620              		.loc 1 870 26
 1621 0050 03F00803 		and	r3, r3, #8
 1622              		.loc 1 870 8
 1623 0054 002B     		cmp	r3, #0
 1624 0056 3FD0     		beq	.L91
 871:./ucOSII/Core/os_task.c ****         ptcb->OSTCBStat &= (INT8U)~(INT8U)OS_STAT_SUSPEND;    /* Remove suspension                 
 1625              		.loc 1 871 25
 1626 0058 BB68     		ldr	r3, [r7, #8]
 1627 005a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1628 005e 23F00803 		bic	r3, r3, #8
 1629 0062 DAB2     		uxtb	r2, r3
 1630 0064 BB68     		ldr	r3, [r7, #8]
 1631 0066 83F83820 		strb	r2, [r3, #56]
 872:./ucOSII/Core/os_task.c ****         if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) == OS_STAT_RDY) { /* See if task is now ready     
 1632              		.loc 1 872 18
 1633 006a BB68     		ldr	r3, [r7, #8]
 1634 006c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1635              		.loc 1 872 30
 1636 0070 03F03703 		and	r3, r3, #55
 1637              		.loc 1 872 12
 1638 0074 002B     		cmp	r3, #0
 1639 0076 2AD1     		bne	.L92
 873:./ucOSII/Core/os_task.c ****             if (ptcb->OSTCBDly == 0u) {
 1640              		.loc 1 873 21
 1641 0078 BB68     		ldr	r3, [r7, #8]
 1642 007a 5B6B     		ldr	r3, [r3, #52]
 1643              		.loc 1 873 16
 1644 007c 002B     		cmp	r3, #0
 1645 007e 22D1     		bne	.L93
 874:./ucOSII/Core/os_task.c ****                 OSRdyGrp               |= ptcb->OSTCBBitY;    /* Yes, Make task ready to run       
 1646              		.loc 1 874 47
 1647 0080 BB68     		ldr	r3, [r7, #8]
 1648 0082 93F83E20 		ldrb	r2, [r3, #62]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 45


 1649              		.loc 1 874 40
 1650 0086 194B     		ldr	r3, .L95+4
 1651 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 008a 1343     		orrs	r3, r3, r2
 1653 008c DAB2     		uxtb	r2, r3
 1654 008e 174B     		ldr	r3, .L95+4
 1655 0090 1A70     		strb	r2, [r3]
 875:./ucOSII/Core/os_task.c ****                 OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 1656              		.loc 1 875 30
 1657 0092 BB68     		ldr	r3, [r7, #8]
 1658 0094 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1659              		.loc 1 875 40
 1660 0098 1A46     		mov	r2, r3
 1661 009a 154B     		ldr	r3, .L95+8
 1662 009c 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1663              		.loc 1 875 47
 1664 009e BB68     		ldr	r3, [r7, #8]
 1665 00a0 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 1666              		.loc 1 875 30
 1667 00a4 B968     		ldr	r1, [r7, #8]
 1668 00a6 91F83C10 		ldrb	r1, [r1, #60]	@ zero_extendqisi2
 1669              		.loc 1 875 40
 1670 00aa 1343     		orrs	r3, r3, r2
 1671 00ac DAB2     		uxtb	r2, r3
 1672 00ae 104B     		ldr	r3, .L95+8
 1673 00b0 5A54     		strb	r2, [r3, r1]
 876:./ucOSII/Core/os_task.c ****                 OS_TRACE_TASK_READY(ptcb);
 877:./ucOSII/Core/os_task.c ****                 OS_EXIT_CRITICAL();
 1674              		.loc 1 877 17
 1675 00b2 F868     		ldr	r0, [r7, #12]
 1676 00b4 FFF7FEFF 		bl	OS_CPU_SR_Restore
 878:./ucOSII/Core/os_task.c ****                 if (OSRunning == OS_TRUE) {
 1677              		.loc 1 878 31
 1678 00b8 0E4B     		ldr	r3, .L95+12
 1679 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1680              		.loc 1 878 20
 1681 00bc 012B     		cmp	r3, #1
 1682 00be 09D1     		bne	.L94
 879:./ucOSII/Core/os_task.c ****                     OS_TRACE_TASK_RESUME(ptcb);
 880:./ucOSII/Core/os_task.c ****                     OS_Sched();                               /* Find new highest priority task    
 1683              		.loc 1 880 21
 1684 00c0 FFF7FEFF 		bl	OS_Sched
 1685 00c4 06E0     		b	.L94
 1686              	.L93:
 881:./ucOSII/Core/os_task.c ****                 }
 882:./ucOSII/Core/os_task.c ****             } else {
 883:./ucOSII/Core/os_task.c ****                 OS_EXIT_CRITICAL();
 1687              		.loc 1 883 17
 1688 00c6 F868     		ldr	r0, [r7, #12]
 1689 00c8 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1690 00cc 02E0     		b	.L94
 1691              	.L92:
 884:./ucOSII/Core/os_task.c ****             }
 885:./ucOSII/Core/os_task.c ****         } else {                                              /* Must be pending on event          
 886:./ucOSII/Core/os_task.c ****             OS_EXIT_CRITICAL();
 1692              		.loc 1 886 13
 1693 00ce F868     		ldr	r0, [r7, #12]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 46


 1694 00d0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1695              	.L94:
 887:./ucOSII/Core/os_task.c ****         }
 888:./ucOSII/Core/os_task.c ****         return (OS_ERR_NONE);
 1696              		.loc 1 888 16
 1697 00d4 0023     		movs	r3, #0
 1698 00d6 03E0     		b	.L88
 1699              	.L91:
 889:./ucOSII/Core/os_task.c ****     }
 890:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 1700              		.loc 1 890 5
 1701 00d8 F868     		ldr	r0, [r7, #12]
 1702 00da FFF7FEFF 		bl	OS_CPU_SR_Restore
 891:./ucOSII/Core/os_task.c ****     return (OS_ERR_TASK_NOT_SUSPENDED);
 1703              		.loc 1 891 12
 1704 00de 4423     		movs	r3, #68
 1705              	.L88:
 892:./ucOSII/Core/os_task.c **** }
 1706              		.loc 1 892 1
 1707 00e0 1846     		mov	r0, r3
 1708 00e2 1037     		adds	r7, r7, #16
 1709              	.LCFI38:
 1710              		.cfi_def_cfa_offset 8
 1711 00e4 BD46     		mov	sp, r7
 1712              	.LCFI39:
 1713              		.cfi_def_cfa_register 13
 1714              		@ sp needed
 1715 00e6 80BD     		pop	{r7, pc}
 1716              	.L96:
 1717              		.align	2
 1718              	.L95:
 1719 00e8 00000000 		.word	OSTCBPrioTbl
 1720 00ec 00000000 		.word	OSRdyGrp
 1721 00f0 00000000 		.word	OSRdyTbl
 1722 00f4 00000000 		.word	OSRunning
 1723              		.cfi_endproc
 1724              	.LFE10:
 1726              		.section	.text.OSTaskStkChk,"ax",%progbits
 1727              		.align	1
 1728              		.global	OSTaskStkChk
 1729              		.syntax unified
 1730              		.thumb
 1731              		.thumb_func
 1733              	OSTaskStkChk:
 1734              	.LFB11:
 893:./ucOSII/Core/os_task.c **** #endif
 894:./ucOSII/Core/os_task.c **** 
 895:./ucOSII/Core/os_task.c **** 
 896:./ucOSII/Core/os_task.c **** /*
 897:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 898:./ucOSII/Core/os_task.c **** *                                           STACK CHECKING
 899:./ucOSII/Core/os_task.c **** *
 900:./ucOSII/Core/os_task.c **** * Description: This function is called to check the amount of free memory left on the specified tas
 901:./ucOSII/Core/os_task.c **** *              stack.
 902:./ucOSII/Core/os_task.c **** *
 903:./ucOSII/Core/os_task.c **** * Arguments  : prio          is the task priority
 904:./ucOSII/Core/os_task.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 47


 905:./ucOSII/Core/os_task.c **** *              p_stk_data    is a pointer to a data structure of type OS_STK_DATA.
 906:./ucOSII/Core/os_task.c **** *
 907:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE            upon success
 908:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
 909:./ucOSII/Core/os_task.c **** *                                     (i.e. > OS_LOWEST_PRIO) or, you have not specified OS_PRIO_SE
 910:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the desired task has not been created or is assigned to a 
 911:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_OPT        if you did NOT specified OS_TASK_OPT_STK_CHK when the task wa
 912:./ucOSII/Core/os_task.c **** *              OS_ERR_PDATA_NULL      if 'p_stk_data' is a NULL pointer
 913:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 914:./ucOSII/Core/os_task.c **** */
 915:./ucOSII/Core/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
 916:./ucOSII/Core/os_task.c **** INT8U  OSTaskStkChk (INT8U         prio,
 917:./ucOSII/Core/os_task.c ****                      OS_STK_DATA  *p_stk_data)
 918:./ucOSII/Core/os_task.c **** {
 1735              		.loc 1 918 1
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 32
 1738              		@ frame_needed = 1, uses_anonymous_args = 0
 1739 0000 80B5     		push	{r7, lr}
 1740              	.LCFI40:
 1741              		.cfi_def_cfa_offset 8
 1742              		.cfi_offset 7, -8
 1743              		.cfi_offset 14, -4
 1744 0002 88B0     		sub	sp, sp, #32
 1745              	.LCFI41:
 1746              		.cfi_def_cfa_offset 40
 1747 0004 00AF     		add	r7, sp, #0
 1748              	.LCFI42:
 1749              		.cfi_def_cfa_register 7
 1750 0006 0346     		mov	r3, r0
 1751 0008 3960     		str	r1, [r7]
 1752 000a FB71     		strb	r3, [r7, #7]
 919:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
 920:./ucOSII/Core/os_task.c ****     OS_STK    *pchk;
 921:./ucOSII/Core/os_task.c ****     INT32U     nfree;
 922:./ucOSII/Core/os_task.c ****     INT32U     size;
 923:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register 
 924:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1753              		.loc 1 924 16
 1754 000c 0023     		movs	r3, #0
 1755 000e 7B61     		str	r3, [r7, #20]
 925:./ucOSII/Core/os_task.c **** #endif
 926:./ucOSII/Core/os_task.c **** 
 927:./ucOSII/Core/os_task.c **** 
 928:./ucOSII/Core/os_task.c **** 
 929:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
 930:./ucOSII/Core/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                       /* Make sure task priority is valid         
 1756              		.loc 1 930 8
 1757 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1758 0012 3F2B     		cmp	r3, #63
 1759 0014 04D9     		bls	.L98
 931:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1760              		.loc 1 931 12
 1761 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1762 0018 FF2B     		cmp	r3, #255
 1763 001a 01D0     		beq	.L98
 932:./ucOSII/Core/os_task.c ****             return (OS_ERR_PRIO_INVALID);
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 48


 1764              		.loc 1 932 20
 1765 001c 2A23     		movs	r3, #42
 1766 001e 54E0     		b	.L99
 1767              	.L98:
 933:./ucOSII/Core/os_task.c ****         }
 934:./ucOSII/Core/os_task.c ****     }
 935:./ucOSII/Core/os_task.c ****     if (p_stk_data == (OS_STK_DATA *)0) {              /* Validate 'p_stk_data'                    
 1768              		.loc 1 935 8
 1769 0020 3B68     		ldr	r3, [r7]
 1770 0022 002B     		cmp	r3, #0
 1771 0024 01D1     		bne	.L100
 936:./ucOSII/Core/os_task.c ****         return (OS_ERR_PDATA_NULL);
 1772              		.loc 1 936 16
 1773 0026 0923     		movs	r3, #9
 1774 0028 4FE0     		b	.L99
 1775              	.L100:
 937:./ucOSII/Core/os_task.c ****     }
 938:./ucOSII/Core/os_task.c **** #endif
 939:./ucOSII/Core/os_task.c ****     p_stk_data->OSFree = 0u;                           /* Assume failure, set to 0 size            
 1776              		.loc 1 939 24
 1777 002a 3B68     		ldr	r3, [r7]
 1778 002c 0022     		movs	r2, #0
 1779 002e 1A60     		str	r2, [r3]
 940:./ucOSII/Core/os_task.c ****     p_stk_data->OSUsed = 0u;
 1780              		.loc 1 940 24
 1781 0030 3B68     		ldr	r3, [r7]
 1782 0032 0022     		movs	r2, #0
 1783 0034 5A60     		str	r2, [r3, #4]
 941:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 1784              		.loc 1 941 5
 1785 0036 4020     		movs	r0, #64
 1786 0038 FFF7FEFF 		bl	OS_CPU_SR_Save
 1787 003c 7861     		str	r0, [r7, #20]
 942:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                        /* See if check for SELF                    
 1788              		.loc 1 942 8
 1789 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1790 0040 FF2B     		cmp	r3, #255
 1791 0042 04D1     		bne	.L101
 943:./ucOSII/Core/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1792              		.loc 1 943 24
 1793 0044 234B     		ldr	r3, .L107
 1794 0046 1B68     		ldr	r3, [r3]
 1795              		.loc 1 943 14
 1796 0048 93F83A30 		ldrb	r3, [r3, #58]
 1797 004c FB71     		strb	r3, [r7, #7]
 1798              	.L101:
 944:./ucOSII/Core/os_task.c ****     }
 945:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1799              		.loc 1 945 24
 1800 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1801              		.loc 1 945 10
 1802 0050 214A     		ldr	r2, .L107+4
 1803 0052 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1804 0056 3B61     		str	r3, [r7, #16]
 946:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                         /* Make sure task exist                     
 1805              		.loc 1 946 8
 1806 0058 3B69     		ldr	r3, [r7, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 49


 1807 005a 002B     		cmp	r3, #0
 1808 005c 04D1     		bne	.L102
 947:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1809              		.loc 1 947 9
 1810 005e 7869     		ldr	r0, [r7, #20]
 1811 0060 FFF7FEFF 		bl	OS_CPU_SR_Restore
 948:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1812              		.loc 1 948 16
 1813 0064 4323     		movs	r3, #67
 1814 0066 30E0     		b	.L99
 1815              	.L102:
 949:./ucOSII/Core/os_task.c ****     }
 950:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {
 1816              		.loc 1 950 8
 1817 0068 3B69     		ldr	r3, [r7, #16]
 1818 006a 012B     		cmp	r3, #1
 1819 006c 04D1     		bne	.L103
 951:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1820              		.loc 1 951 9
 1821 006e 7869     		ldr	r0, [r7, #20]
 1822 0070 FFF7FEFF 		bl	OS_CPU_SR_Restore
 952:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1823              		.loc 1 952 16
 1824 0074 4323     		movs	r3, #67
 1825 0076 28E0     		b	.L99
 1826              	.L103:
 953:./ucOSII/Core/os_task.c ****     }
 954:./ucOSII/Core/os_task.c ****     if ((ptcb->OSTCBOpt & OS_TASK_OPT_STK_CHK) == 0u) { /* Make sure stack checking option is set  
 1827              		.loc 1 954 14
 1828 0078 3B69     		ldr	r3, [r7, #16]
 1829 007a 1B8A     		ldrh	r3, [r3, #16]
 1830              		.loc 1 954 25
 1831 007c 03F00103 		and	r3, r3, #1
 1832              		.loc 1 954 8
 1833 0080 002B     		cmp	r3, #0
 1834 0082 04D1     		bne	.L104
 955:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 1835              		.loc 1 955 9
 1836 0084 7869     		ldr	r0, [r7, #20]
 1837 0086 FFF7FEFF 		bl	OS_CPU_SR_Restore
 956:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_OPT);
 1838              		.loc 1 956 16
 1839 008a 4523     		movs	r3, #69
 1840 008c 1DE0     		b	.L99
 1841              	.L104:
 957:./ucOSII/Core/os_task.c ****     }
 958:./ucOSII/Core/os_task.c ****     nfree = 0u;
 1842              		.loc 1 958 11
 1843 008e 0023     		movs	r3, #0
 1844 0090 BB61     		str	r3, [r7, #24]
 959:./ucOSII/Core/os_task.c ****     size  = ptcb->OSTCBStkSize;
 1845              		.loc 1 959 11
 1846 0092 3B69     		ldr	r3, [r7, #16]
 1847 0094 DB68     		ldr	r3, [r3, #12]
 1848 0096 FB60     		str	r3, [r7, #12]
 960:./ucOSII/Core/os_task.c ****     pchk  = ptcb->OSTCBStkBottom;
 1849              		.loc 1 960 11
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 50


 1850 0098 3B69     		ldr	r3, [r7, #16]
 1851 009a 9B68     		ldr	r3, [r3, #8]
 1852 009c FB61     		str	r3, [r7, #28]
 961:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 1853              		.loc 1 961 5
 1854 009e 7869     		ldr	r0, [r7, #20]
 1855 00a0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 962:./ucOSII/Core/os_task.c **** #if OS_STK_GROWTH == 1u
 963:./ucOSII/Core/os_task.c ****     while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the 
 1856              		.loc 1 963 11
 1857 00a4 02E0     		b	.L105
 1858              	.L106:
 964:./ucOSII/Core/os_task.c ****         nfree++;
 1859              		.loc 1 964 14
 1860 00a6 BB69     		ldr	r3, [r7, #24]
 1861 00a8 0133     		adds	r3, r3, #1
 1862 00aa BB61     		str	r3, [r7, #24]
 1863              	.L105:
 963:./ucOSII/Core/os_task.c ****         nfree++;
 1864              		.loc 1 963 17
 1865 00ac FB69     		ldr	r3, [r7, #28]
 1866 00ae 1A1D     		adds	r2, r3, #4
 1867 00b0 FA61     		str	r2, [r7, #28]
 963:./ucOSII/Core/os_task.c ****         nfree++;
 1868              		.loc 1 963 12
 1869 00b2 1B68     		ldr	r3, [r3]
 963:./ucOSII/Core/os_task.c ****         nfree++;
 1870              		.loc 1 963 11
 1871 00b4 002B     		cmp	r3, #0
 1872 00b6 F6D0     		beq	.L106
 965:./ucOSII/Core/os_task.c ****     }
 966:./ucOSII/Core/os_task.c **** #else
 967:./ucOSII/Core/os_task.c ****     while (*pchk-- == (OS_STK)0) {
 968:./ucOSII/Core/os_task.c ****         nfree++;
 969:./ucOSII/Core/os_task.c ****     }
 970:./ucOSII/Core/os_task.c **** #endif
 971:./ucOSII/Core/os_task.c ****     p_stk_data->OSFree = nfree;                       /* Store   number of free entries on the stk 
 1873              		.loc 1 971 24
 1874 00b8 3B68     		ldr	r3, [r7]
 1875 00ba BA69     		ldr	r2, [r7, #24]
 1876 00bc 1A60     		str	r2, [r3]
 972:./ucOSII/Core/os_task.c ****     p_stk_data->OSUsed = size - nfree;                /* Compute number of entries used on the stk 
 1877              		.loc 1 972 31
 1878 00be FA68     		ldr	r2, [r7, #12]
 1879 00c0 BB69     		ldr	r3, [r7, #24]
 1880 00c2 D21A     		subs	r2, r2, r3
 1881              		.loc 1 972 24
 1882 00c4 3B68     		ldr	r3, [r7]
 1883 00c6 5A60     		str	r2, [r3, #4]
 973:./ucOSII/Core/os_task.c ****     return (OS_ERR_NONE);
 1884              		.loc 1 973 12
 1885 00c8 0023     		movs	r3, #0
 1886              	.L99:
 974:./ucOSII/Core/os_task.c **** }
 1887              		.loc 1 974 1
 1888 00ca 1846     		mov	r0, r3
 1889 00cc 2037     		adds	r7, r7, #32
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 51


 1890              	.LCFI43:
 1891              		.cfi_def_cfa_offset 8
 1892 00ce BD46     		mov	sp, r7
 1893              	.LCFI44:
 1894              		.cfi_def_cfa_register 13
 1895              		@ sp needed
 1896 00d0 80BD     		pop	{r7, pc}
 1897              	.L108:
 1898 00d2 00BF     		.align	2
 1899              	.L107:
 1900 00d4 00000000 		.word	OSTCBCur
 1901 00d8 00000000 		.word	OSTCBPrioTbl
 1902              		.cfi_endproc
 1903              	.LFE11:
 1905              		.section	.text.OSTaskSuspend,"ax",%progbits
 1906              		.align	1
 1907              		.global	OSTaskSuspend
 1908              		.syntax unified
 1909              		.thumb
 1910              		.thumb_func
 1912              	OSTaskSuspend:
 1913              	.LFB12:
 975:./ucOSII/Core/os_task.c **** #endif
 976:./ucOSII/Core/os_task.c **** 
 977:./ucOSII/Core/os_task.c **** 
 978:./ucOSII/Core/os_task.c **** /*
 979:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 980:./ucOSII/Core/os_task.c **** *                                           SUSPEND A TASK
 981:./ucOSII/Core/os_task.c **** *
 982:./ucOSII/Core/os_task.c **** * Description: This function is called to suspend a task.  The task can be the calling task if the
 983:./ucOSII/Core/os_task.c **** *              priority passed to OSTaskSuspend() is the priority of the calling task or OS_PRIO_SE
 984:./ucOSII/Core/os_task.c **** *
 985:./ucOSII/Core/os_task.c **** * Arguments  : prio     is the priority of the task to suspend.  If you specify OS_PRIO_SELF, the
 986:./ucOSII/Core/os_task.c **** *                       calling task will suspend itself and rescheduling will occur.
 987:./ucOSII/Core/os_task.c **** *
 988:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE               if the requested task is suspended
 989:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_SUSPEND_IDLE  if you attempted to suspend the idle task which is not all
 990:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID       if the priority you specify is higher that the maximum all
 991:./ucOSII/Core/os_task.c **** *                                        (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRI
 992:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_SUSPEND_PRIO  if the task to suspend does not exist
 993:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST     if the task is assigned to a Mutex PIP
 994:./ucOSII/Core/os_task.c **** *
 995:./ucOSII/Core/os_task.c **** * Note       : You should use this function with great care.  If you suspend a task that is waiting
 996:./ucOSII/Core/os_task.c **** *              an event (i.e. a message, a semaphore, a queue ...) you will prevent this task from
 997:./ucOSII/Core/os_task.c **** *              running when the event arrives.
 998:./ucOSII/Core/os_task.c **** ***************************************************************************************************
 999:./ucOSII/Core/os_task.c **** */
1000:./ucOSII/Core/os_task.c **** 
1001:./ucOSII/Core/os_task.c **** #if OS_TASK_SUSPEND_EN > 0u
1002:./ucOSII/Core/os_task.c **** INT8U  OSTaskSuspend (INT8U prio)
1003:./ucOSII/Core/os_task.c **** {
 1914              		.loc 1 1003 1
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 24
 1917              		@ frame_needed = 1, uses_anonymous_args = 0
 1918 0000 80B5     		push	{r7, lr}
 1919              	.LCFI45:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 52


 1920              		.cfi_def_cfa_offset 8
 1921              		.cfi_offset 7, -8
 1922              		.cfi_offset 14, -4
 1923 0002 86B0     		sub	sp, sp, #24
 1924              	.LCFI46:
 1925              		.cfi_def_cfa_offset 32
 1926 0004 00AF     		add	r7, sp, #0
 1927              	.LCFI47:
 1928              		.cfi_def_cfa_register 7
 1929 0006 0346     		mov	r3, r0
 1930 0008 FB71     		strb	r3, [r7, #7]
1004:./ucOSII/Core/os_task.c ****     BOOLEAN    self;
1005:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
1006:./ucOSII/Core/os_task.c ****     INT8U      y;
1007:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1008:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1931              		.loc 1 1008 16
 1932 000a 0023     		movs	r3, #0
 1933 000c 3B61     		str	r3, [r7, #16]
1009:./ucOSII/Core/os_task.c **** #endif
1010:./ucOSII/Core/os_task.c **** 
1011:./ucOSII/Core/os_task.c **** 
1012:./ucOSII/Core/os_task.c **** 
1013:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
1014:./ucOSII/Core/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to suspend idle task
 1934              		.loc 1 1014 8
 1935 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1936 0010 3F2B     		cmp	r3, #63
 1937 0012 01D1     		bne	.L110
1015:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_SUSPEND_IDLE);
 1938              		.loc 1 1015 16
 1939 0014 4723     		movs	r3, #71
 1940 0016 6AE0     		b	.L111
 1941              	.L110:
1016:./ucOSII/Core/os_task.c ****     }
1017:./ucOSII/Core/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?           
 1942              		.loc 1 1017 8
 1943 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1944 001a 3E2B     		cmp	r3, #62
 1945 001c 04D9     		bls	.L112
1018:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1946              		.loc 1 1018 12
 1947 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1948 0020 FF2B     		cmp	r3, #255
 1949 0022 01D0     		beq	.L112
1019:./ucOSII/Core/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 1950              		.loc 1 1019 20
 1951 0024 2A23     		movs	r3, #42
 1952 0026 62E0     		b	.L111
 1953              	.L112:
1020:./ucOSII/Core/os_task.c ****         }
1021:./ucOSII/Core/os_task.c ****     }
1022:./ucOSII/Core/os_task.c **** #endif
1023:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 1954              		.loc 1 1023 5
 1955 0028 4020     		movs	r0, #64
 1956 002a FFF7FEFF 		bl	OS_CPU_SR_Save
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 53


 1957 002e 3861     		str	r0, [r7, #16]
1024:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                                 /* See if suspend SELF             
 1958              		.loc 1 1024 8
 1959 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1960 0032 FF2B     		cmp	r3, #255
 1961 0034 07D1     		bne	.L113
1025:./ucOSII/Core/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1962              		.loc 1 1025 24
 1963 0036 304B     		ldr	r3, .L120
 1964 0038 1B68     		ldr	r3, [r3]
 1965              		.loc 1 1025 14
 1966 003a 93F83A30 		ldrb	r3, [r3, #58]
 1967 003e FB71     		strb	r3, [r7, #7]
1026:./ucOSII/Core/os_task.c ****         self = OS_TRUE;
 1968              		.loc 1 1026 14
 1969 0040 0123     		movs	r3, #1
 1970 0042 FB75     		strb	r3, [r7, #23]
 1971 0044 0BE0     		b	.L114
 1972              	.L113:
1027:./ucOSII/Core/os_task.c ****     } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self          
 1973              		.loc 1 1027 32
 1974 0046 2C4B     		ldr	r3, .L120
 1975 0048 1B68     		ldr	r3, [r3]
 1976 004a 93F83A30 		ldrb	r3, [r3, #58]	@ zero_extendqisi2
 1977              		.loc 1 1027 15
 1978 004e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1979 0050 9A42     		cmp	r2, r3
 1980 0052 02D1     		bne	.L115
1028:./ucOSII/Core/os_task.c ****         self = OS_TRUE;
 1981              		.loc 1 1028 14
 1982 0054 0123     		movs	r3, #1
 1983 0056 FB75     		strb	r3, [r7, #23]
 1984 0058 01E0     		b	.L114
 1985              	.L115:
1029:./ucOSII/Core/os_task.c ****     } else {
1030:./ucOSII/Core/os_task.c ****         self = OS_FALSE;                                        /* No suspending another task      
 1986              		.loc 1 1030 14
 1987 005a 0023     		movs	r3, #0
 1988 005c FB75     		strb	r3, [r7, #23]
 1989              	.L114:
1031:./ucOSII/Core/os_task.c ****     }
1032:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1990              		.loc 1 1032 24
 1991 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1992              		.loc 1 1032 10
 1993 0060 264A     		ldr	r2, .L120+4
 1994 0062 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1995 0066 FB60     		str	r3, [r7, #12]
1033:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                  /* Task to suspend must exist      
 1996              		.loc 1 1033 8
 1997 0068 FB68     		ldr	r3, [r7, #12]
 1998 006a 002B     		cmp	r3, #0
 1999 006c 04D1     		bne	.L116
1034:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 2000              		.loc 1 1034 9
 2001 006e 3869     		ldr	r0, [r7, #16]
 2002 0070 FFF7FEFF 		bl	OS_CPU_SR_Restore
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 54


1035:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_SUSPEND_PRIO);
 2003              		.loc 1 1035 16
 2004 0074 4823     		movs	r3, #72
 2005 0076 3AE0     		b	.L111
 2006              	.L116:
1036:./ucOSII/Core/os_task.c ****     }
1037:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                              /* See if assigned to Mutex        
 2007              		.loc 1 1037 8
 2008 0078 FB68     		ldr	r3, [r7, #12]
 2009 007a 012B     		cmp	r3, #1
 2010 007c 04D1     		bne	.L117
1038:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 2011              		.loc 1 1038 9
 2012 007e 3869     		ldr	r0, [r7, #16]
 2013 0080 FFF7FEFF 		bl	OS_CPU_SR_Restore
1039:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 2014              		.loc 1 1039 16
 2015 0084 4323     		movs	r3, #67
 2016 0086 32E0     		b	.L111
 2017              	.L117:
1040:./ucOSII/Core/os_task.c ****     }
1041:./ucOSII/Core/os_task.c ****     y            = ptcb->OSTCBY;
 2018              		.loc 1 1041 18
 2019 0088 FB68     		ldr	r3, [r7, #12]
 2020 008a 93F83C30 		ldrb	r3, [r3, #60]
 2021 008e FB72     		strb	r3, [r7, #11]
1042:./ucOSII/Core/os_task.c ****     OSRdyTbl[y] &= (OS_PRIO)~ptcb->OSTCBBitX;                   /* Make task not ready             
 2022              		.loc 1 1042 17
 2023 0090 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2024 0092 1B4A     		ldr	r2, .L120+8
 2025 0094 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2026              		.loc 1 1042 34
 2027 0096 FB68     		ldr	r3, [r7, #12]
 2028 0098 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 2029              		.loc 1 1042 20
 2030 009c DB43     		mvns	r3, r3
 2031 009e DAB2     		uxtb	r2, r3
 2032              		.loc 1 1042 17
 2033 00a0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2034 00a2 0A40     		ands	r2, r2, r1
 2035 00a4 D1B2     		uxtb	r1, r2
 2036 00a6 164A     		ldr	r2, .L120+8
 2037 00a8 D154     		strb	r1, [r2, r3]
1043:./ucOSII/Core/os_task.c ****     if (OSRdyTbl[y] == 0u) {
 2038              		.loc 1 1043 17
 2039 00aa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2040 00ac 144A     		ldr	r2, .L120+8
 2041 00ae D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2042              		.loc 1 1043 8
 2043 00b0 002B     		cmp	r3, #0
 2044 00b2 0AD1     		bne	.L118
1044:./ucOSII/Core/os_task.c ****         OSRdyGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
 2045              		.loc 1 1044 35
 2046 00b4 FB68     		ldr	r3, [r7, #12]
 2047 00b6 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 2048              		.loc 1 1044 21
 2049 00ba DB43     		mvns	r3, r3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 55


 2050 00bc DAB2     		uxtb	r2, r3
 2051              		.loc 1 1044 18
 2052 00be 114B     		ldr	r3, .L120+12
 2053 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2054 00c2 1340     		ands	r3, r3, r2
 2055 00c4 DAB2     		uxtb	r2, r3
 2056 00c6 0F4B     		ldr	r3, .L120+12
 2057 00c8 1A70     		strb	r2, [r3]
 2058              	.L118:
1045:./ucOSII/Core/os_task.c ****     }
1046:./ucOSII/Core/os_task.c ****     ptcb->OSTCBStat |= OS_STAT_SUSPEND;                         /* Status of task is 'SUSPENDED'   
 2059              		.loc 1 1046 21
 2060 00ca FB68     		ldr	r3, [r7, #12]
 2061 00cc 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2062 00d0 43F00803 		orr	r3, r3, #8
 2063 00d4 DAB2     		uxtb	r2, r3
 2064 00d6 FB68     		ldr	r3, [r7, #12]
 2065 00d8 83F83820 		strb	r2, [r3, #56]
1047:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 2066              		.loc 1 1047 5
 2067 00dc 3869     		ldr	r0, [r7, #16]
 2068 00de FFF7FEFF 		bl	OS_CPU_SR_Restore
1048:./ucOSII/Core/os_task.c ****     OS_TRACE_TASK_SUSPEND(ptcb);
1049:./ucOSII/Core/os_task.c ****     OS_TRACE_TASK_SUSPENDED(ptcb);
1050:./ucOSII/Core/os_task.c ****     if (self == OS_TRUE) {                                      /* Context switch only if SELF     
 2069              		.loc 1 1050 8
 2070 00e2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2071 00e4 012B     		cmp	r3, #1
 2072 00e6 01D1     		bne	.L119
1051:./ucOSII/Core/os_task.c ****         OS_Sched();                                             /* Find new highest priority task  
 2073              		.loc 1 1051 9
 2074 00e8 FFF7FEFF 		bl	OS_Sched
 2075              	.L119:
1052:./ucOSII/Core/os_task.c ****     }
1053:./ucOSII/Core/os_task.c ****     return (OS_ERR_NONE);
 2076              		.loc 1 1053 12
 2077 00ec 0023     		movs	r3, #0
 2078              	.L111:
1054:./ucOSII/Core/os_task.c **** }
 2079              		.loc 1 1054 1
 2080 00ee 1846     		mov	r0, r3
 2081 00f0 1837     		adds	r7, r7, #24
 2082              	.LCFI48:
 2083              		.cfi_def_cfa_offset 8
 2084 00f2 BD46     		mov	sp, r7
 2085              	.LCFI49:
 2086              		.cfi_def_cfa_register 13
 2087              		@ sp needed
 2088 00f4 80BD     		pop	{r7, pc}
 2089              	.L121:
 2090 00f6 00BF     		.align	2
 2091              	.L120:
 2092 00f8 00000000 		.word	OSTCBCur
 2093 00fc 00000000 		.word	OSTCBPrioTbl
 2094 0100 00000000 		.word	OSRdyTbl
 2095 0104 00000000 		.word	OSRdyGrp
 2096              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 56


 2097              	.LFE12:
 2099              		.section	.text.OSTaskQuery,"ax",%progbits
 2100              		.align	1
 2101              		.global	OSTaskQuery
 2102              		.syntax unified
 2103              		.thumb
 2104              		.thumb_func
 2106              	OSTaskQuery:
 2107              	.LFB13:
1055:./ucOSII/Core/os_task.c **** #endif
1056:./ucOSII/Core/os_task.c **** 
1057:./ucOSII/Core/os_task.c **** 
1058:./ucOSII/Core/os_task.c **** /*
1059:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1060:./ucOSII/Core/os_task.c **** *                                            QUERY A TASK
1061:./ucOSII/Core/os_task.c **** *
1062:./ucOSII/Core/os_task.c **** * Description: This function is called to obtain a copy of the desired task's TCB.
1063:./ucOSII/Core/os_task.c **** *
1064:./ucOSII/Core/os_task.c **** * Arguments  : prio         is the priority of the task to obtain information from.
1065:./ucOSII/Core/os_task.c **** *
1066:./ucOSII/Core/os_task.c **** *              p_task_data  is a pointer to where the desired task's OS_TCB will be stored.
1067:./ucOSII/Core/os_task.c **** *
1068:./ucOSII/Core/os_task.c **** * Returns    : OS_ERR_NONE            if the requested task is suspended
1069:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
1070:./ucOSII/Core/os_task.c **** *                                     (i.e. > OS_LOWEST_PRIO) or, you have not specified OS_PRIO_SE
1071:./ucOSII/Core/os_task.c **** *              OS_ERR_PRIO            if the desired task has not been created
1072:./ucOSII/Core/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task is assigned to a Mutex PIP
1073:./ucOSII/Core/os_task.c **** *              OS_ERR_PDATA_NULL      if 'p_task_data' is a NULL pointer
1074:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1075:./ucOSII/Core/os_task.c **** */
1076:./ucOSII/Core/os_task.c **** 
1077:./ucOSII/Core/os_task.c **** #if OS_TASK_QUERY_EN > 0u
1078:./ucOSII/Core/os_task.c **** INT8U  OSTaskQuery (INT8U    prio,
1079:./ucOSII/Core/os_task.c ****                     OS_TCB  *p_task_data)
1080:./ucOSII/Core/os_task.c **** {
 2108              		.loc 1 1080 1
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 16
 2111              		@ frame_needed = 1, uses_anonymous_args = 0
 2112 0000 80B5     		push	{r7, lr}
 2113              	.LCFI50:
 2114              		.cfi_def_cfa_offset 8
 2115              		.cfi_offset 7, -8
 2116              		.cfi_offset 14, -4
 2117 0002 84B0     		sub	sp, sp, #16
 2118              	.LCFI51:
 2119              		.cfi_def_cfa_offset 24
 2120 0004 00AF     		add	r7, sp, #0
 2121              	.LCFI52:
 2122              		.cfi_def_cfa_register 7
 2123 0006 0346     		mov	r3, r0
 2124 0008 3960     		str	r1, [r7]
 2125 000a FB71     		strb	r3, [r7, #7]
1081:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
1082:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1083:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 2126              		.loc 1 1083 16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 57


 2127 000c 0023     		movs	r3, #0
 2128 000e FB60     		str	r3, [r7, #12]
1084:./ucOSII/Core/os_task.c **** #endif
1085:./ucOSII/Core/os_task.c **** 
1086:./ucOSII/Core/os_task.c **** 
1087:./ucOSII/Core/os_task.c **** 
1088:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
1089:./ucOSII/Core/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                 /* Task priority valid ?                          
 2129              		.loc 1 1089 8
 2130 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2131 0012 3F2B     		cmp	r3, #63
 2132 0014 04D9     		bls	.L123
1090:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 2133              		.loc 1 1090 12
 2134 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2135 0018 FF2B     		cmp	r3, #255
 2136 001a 01D0     		beq	.L123
1091:./ucOSII/Core/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 2137              		.loc 1 1091 20
 2138 001c 2A23     		movs	r3, #42
 2139 001e 2EE0     		b	.L124
 2140              	.L123:
1092:./ucOSII/Core/os_task.c ****         }
1093:./ucOSII/Core/os_task.c ****     }
1094:./ucOSII/Core/os_task.c ****     if (p_task_data == (OS_TCB *)0) {            /* Validate 'p_task_data'                         
 2141              		.loc 1 1094 8
 2142 0020 3B68     		ldr	r3, [r7]
 2143 0022 002B     		cmp	r3, #0
 2144 0024 01D1     		bne	.L125
1095:./ucOSII/Core/os_task.c ****         return (OS_ERR_PDATA_NULL);
 2145              		.loc 1 1095 16
 2146 0026 0923     		movs	r3, #9
 2147 0028 29E0     		b	.L124
 2148              	.L125:
1096:./ucOSII/Core/os_task.c ****     }
1097:./ucOSII/Core/os_task.c **** #endif
1098:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 2149              		.loc 1 1098 5
 2150 002a 4020     		movs	r0, #64
 2151 002c FFF7FEFF 		bl	OS_CPU_SR_Save
 2152 0030 F860     		str	r0, [r7, #12]
1099:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if suspend SELF                            
 2153              		.loc 1 1099 8
 2154 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2155 0034 FF2B     		cmp	r3, #255
 2156 0036 04D1     		bne	.L126
1100:./ucOSII/Core/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 2157              		.loc 1 1100 24
 2158 0038 134B     		ldr	r3, .L129
 2159 003a 1B68     		ldr	r3, [r3]
 2160              		.loc 1 1100 14
 2161 003c 93F83A30 		ldrb	r3, [r3, #58]
 2162 0040 FB71     		strb	r3, [r7, #7]
 2163              	.L126:
1101:./ucOSII/Core/os_task.c ****     }
1102:./ucOSII/Core/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 2164              		.loc 1 1102 24
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 58


 2165 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2166              		.loc 1 1102 10
 2167 0044 114A     		ldr	r2, .L129+4
 2168 0046 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2169 004a BB60     		str	r3, [r7, #8]
1103:./ucOSII/Core/os_task.c ****     if (ptcb == (OS_TCB *)0) {                   /* Task to query must exist                       
 2170              		.loc 1 1103 8
 2171 004c BB68     		ldr	r3, [r7, #8]
 2172 004e 002B     		cmp	r3, #0
 2173 0050 04D1     		bne	.L127
1104:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 2174              		.loc 1 1104 9
 2175 0052 F868     		ldr	r0, [r7, #12]
 2176 0054 FFF7FEFF 		bl	OS_CPU_SR_Restore
1105:./ucOSII/Core/os_task.c ****         return (OS_ERR_PRIO);
 2177              		.loc 1 1105 16
 2178 0058 2923     		movs	r3, #41
 2179 005a 10E0     		b	.L124
 2180              	.L127:
1106:./ucOSII/Core/os_task.c ****     }
1107:./ucOSII/Core/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {               /* Task to query must not be assigned to a Mutex  
 2181              		.loc 1 1107 8
 2182 005c BB68     		ldr	r3, [r7, #8]
 2183 005e 012B     		cmp	r3, #1
 2184 0060 04D1     		bne	.L128
1108:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 2185              		.loc 1 1108 9
 2186 0062 F868     		ldr	r0, [r7, #12]
 2187 0064 FFF7FEFF 		bl	OS_CPU_SR_Restore
1109:./ucOSII/Core/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 2188              		.loc 1 1109 16
 2189 0068 4323     		movs	r3, #67
 2190 006a 08E0     		b	.L124
 2191              	.L128:
1110:./ucOSII/Core/os_task.c ****     }
1111:./ucOSII/Core/os_task.c ****                                                  /* Copy TCB into user storage area                
1112:./ucOSII/Core/os_task.c ****     OS_MemCopy((INT8U *)p_task_data, (INT8U *)ptcb, sizeof(OS_TCB));
 2192              		.loc 1 1112 5
 2193 006c 5C22     		movs	r2, #92
 2194 006e B968     		ldr	r1, [r7, #8]
 2195 0070 3868     		ldr	r0, [r7]
 2196 0072 FFF7FEFF 		bl	OS_MemCopy
1113:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 2197              		.loc 1 1113 5
 2198 0076 F868     		ldr	r0, [r7, #12]
 2199 0078 FFF7FEFF 		bl	OS_CPU_SR_Restore
1114:./ucOSII/Core/os_task.c ****     return (OS_ERR_NONE);
 2200              		.loc 1 1114 12
 2201 007c 0023     		movs	r3, #0
 2202              	.L124:
1115:./ucOSII/Core/os_task.c **** }
 2203              		.loc 1 1115 1
 2204 007e 1846     		mov	r0, r3
 2205 0080 1037     		adds	r7, r7, #16
 2206              	.LCFI53:
 2207              		.cfi_def_cfa_offset 8
 2208 0082 BD46     		mov	sp, r7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 59


 2209              	.LCFI54:
 2210              		.cfi_def_cfa_register 13
 2211              		@ sp needed
 2212 0084 80BD     		pop	{r7, pc}
 2213              	.L130:
 2214 0086 00BF     		.align	2
 2215              	.L129:
 2216 0088 00000000 		.word	OSTCBCur
 2217 008c 00000000 		.word	OSTCBPrioTbl
 2218              		.cfi_endproc
 2219              	.LFE13:
 2221              		.section	.text.OSTaskRegGet,"ax",%progbits
 2222              		.align	1
 2223              		.global	OSTaskRegGet
 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2228              	OSTaskRegGet:
 2229              	.LFB14:
1116:./ucOSII/Core/os_task.c **** #endif
1117:./ucOSII/Core/os_task.c **** 
1118:./ucOSII/Core/os_task.c **** 
1119:./ucOSII/Core/os_task.c **** /*
1120:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1121:./ucOSII/Core/os_task.c **** *                              GET THE CURRENT VALUE OF A TASK REGISTER
1122:./ucOSII/Core/os_task.c **** *
1123:./ucOSII/Core/os_task.c **** * Description: This function is called to obtain the current value of a task register.  Task regist
1124:./ucOSII/Core/os_task.c **** *              are application specific and can be used to store task specific values such as 'erro
1125:./ucOSII/Core/os_task.c **** *              numbers' (i.e. errno), statistics, etc.  Each task register can hold a 32-bit value.
1126:./ucOSII/Core/os_task.c **** *
1127:./ucOSII/Core/os_task.c **** * Arguments  : prio      is the priority of the task you want to get the task register from.  If yo
1128:./ucOSII/Core/os_task.c **** *                        specify OS_PRIO_SELF then the task register of the current task will be ob
1129:./ucOSII/Core/os_task.c **** *
1130:./ucOSII/Core/os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1131:./ucOSII/Core/os_task.c **** *                        than OS_TASK_REG_TBL_SIZE
1132:./ucOSII/Core/os_task.c **** *
1133:./ucOSII/Core/os_task.c **** *              perr      is a pointer to a variable that will hold an error code related to this ca
1134:./ucOSII/Core/os_task.c **** *
1135:./ucOSII/Core/os_task.c **** *                        OS_ERR_NONE            if the call was successful
1136:./ucOSII/Core/os_task.c **** *                        OS_ERR_PRIO_INVALID    if you specified an invalid priority
1137:./ucOSII/Core/os_task.c **** *                        OS_ERR_ID_INVALID      if the 'id' is not between 0 and OS_TASK_REG_TBL_SI
1138:./ucOSII/Core/os_task.c **** *
1139:./ucOSII/Core/os_task.c **** * Returns    : The current value of the task's register or 0 if an error is detected.
1140:./ucOSII/Core/os_task.c **** *
1141:./ucOSII/Core/os_task.c **** * Note(s)    : The maximum number of task variables is 254
1142:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1143:./ucOSII/Core/os_task.c **** */
1144:./ucOSII/Core/os_task.c **** 
1145:./ucOSII/Core/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1146:./ucOSII/Core/os_task.c **** INT32U  OSTaskRegGet (INT8U   prio,
1147:./ucOSII/Core/os_task.c ****                       INT8U   id,
1148:./ucOSII/Core/os_task.c ****                       INT8U  *perr)
1149:./ucOSII/Core/os_task.c **** {
 2230              		.loc 1 1149 1
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 24
 2233              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 60


 2234 0000 80B5     		push	{r7, lr}
 2235              	.LCFI55:
 2236              		.cfi_def_cfa_offset 8
 2237              		.cfi_offset 7, -8
 2238              		.cfi_offset 14, -4
 2239 0002 86B0     		sub	sp, sp, #24
 2240              	.LCFI56:
 2241              		.cfi_def_cfa_offset 32
 2242 0004 00AF     		add	r7, sp, #0
 2243              	.LCFI57:
 2244              		.cfi_def_cfa_register 7
 2245 0006 0346     		mov	r3, r0
 2246 0008 3A60     		str	r2, [r7]
 2247 000a FB71     		strb	r3, [r7, #7]
 2248 000c 0B46     		mov	r3, r1
 2249 000e BB71     		strb	r3, [r7, #6]
1150:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1151:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 2250              		.loc 1 1151 16
 2251 0010 0023     		movs	r3, #0
 2252 0012 3B61     		str	r3, [r7, #16]
1152:./ucOSII/Core/os_task.c **** #endif
1153:./ucOSII/Core/os_task.c ****     INT32U     value;
1154:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
1155:./ucOSII/Core/os_task.c **** 
1156:./ucOSII/Core/os_task.c **** 
1157:./ucOSII/Core/os_task.c **** 
1158:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1159:./ucOSII/Core/os_task.c ****     if (perr == (INT8U *)0) {
1160:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1161:./ucOSII/Core/os_task.c ****         return (0u);
1162:./ucOSII/Core/os_task.c ****     }
1163:./ucOSII/Core/os_task.c **** #endif
1164:./ucOSII/Core/os_task.c **** 
1165:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
1166:./ucOSII/Core/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {
 2253              		.loc 1 1166 8
 2254 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2255 0016 3E2B     		cmp	r3, #62
 2256 0018 07D9     		bls	.L132
1167:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 2257              		.loc 1 1167 12
 2258 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2259 001c FF2B     		cmp	r3, #255
 2260 001e 04D0     		beq	.L132
1168:./ucOSII/Core/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;
 2261              		.loc 1 1168 19
 2262 0020 3B68     		ldr	r3, [r7]
 2263 0022 2A22     		movs	r2, #42
 2264 0024 1A70     		strb	r2, [r3]
1169:./ucOSII/Core/os_task.c ****             return (0u);
 2265              		.loc 1 1169 20
 2266 0026 0023     		movs	r3, #0
 2267 0028 24E0     		b	.L133
 2268              	.L132:
1170:./ucOSII/Core/os_task.c ****         }
1171:./ucOSII/Core/os_task.c ****     }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 61


1172:./ucOSII/Core/os_task.c ****     if (id >= OS_TASK_REG_TBL_SIZE) {
 2269              		.loc 1 1172 8
 2270 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2271 002c 002B     		cmp	r3, #0
 2272 002e 04D0     		beq	.L134
1173:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_ID_INVALID;
 2273              		.loc 1 1173 15
 2274 0030 3B68     		ldr	r3, [r7]
 2275 0032 0822     		movs	r2, #8
 2276 0034 1A70     		strb	r2, [r3]
1174:./ucOSII/Core/os_task.c ****         return (0u);
 2277              		.loc 1 1174 16
 2278 0036 0023     		movs	r3, #0
 2279 0038 1CE0     		b	.L133
 2280              	.L134:
1175:./ucOSII/Core/os_task.c ****     }
1176:./ucOSII/Core/os_task.c **** #endif
1177:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 2281              		.loc 1 1177 5
 2282 003a 4020     		movs	r0, #64
 2283 003c FFF7FEFF 		bl	OS_CPU_SR_Save
 2284 0040 3861     		str	r0, [r7, #16]
1178:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if need to get register from current task  
 2285              		.loc 1 1178 8
 2286 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2287 0044 FF2B     		cmp	r3, #255
 2288 0046 03D1     		bne	.L135
1179:./ucOSII/Core/os_task.c ****         ptcb = OSTCBCur;
 2289              		.loc 1 1179 14
 2290 0048 0C4B     		ldr	r3, .L137
 2291 004a 1B68     		ldr	r3, [r3]
 2292 004c 7B61     		str	r3, [r7, #20]
 2293 004e 04E0     		b	.L136
 2294              	.L135:
1180:./ucOSII/Core/os_task.c ****     } else {
1181:./ucOSII/Core/os_task.c ****         ptcb = OSTCBPrioTbl[prio];
 2295              		.loc 1 1181 28
 2296 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2297              		.loc 1 1181 14
 2298 0052 0B4A     		ldr	r2, .L137+4
 2299 0054 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2300 0058 7B61     		str	r3, [r7, #20]
 2301              	.L136:
1182:./ucOSII/Core/os_task.c ****     }
1183:./ucOSII/Core/os_task.c ****     value = ptcb->OSTCBRegTbl[id];
 2302              		.loc 1 1183 30
 2303 005a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2304              		.loc 1 1183 11
 2305 005c 7B69     		ldr	r3, [r7, #20]
 2306 005e 1632     		adds	r2, r2, #22
 2307 0060 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2308 0064 FB60     		str	r3, [r7, #12]
1184:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 2309              		.loc 1 1184 5
 2310 0066 3869     		ldr	r0, [r7, #16]
 2311 0068 FFF7FEFF 		bl	OS_CPU_SR_Restore
1185:./ucOSII/Core/os_task.c ****     *perr = OS_ERR_NONE;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 62


 2312              		.loc 1 1185 11
 2313 006c 3B68     		ldr	r3, [r7]
 2314 006e 0022     		movs	r2, #0
 2315 0070 1A70     		strb	r2, [r3]
1186:./ucOSII/Core/os_task.c ****     return (value);
 2316              		.loc 1 1186 12
 2317 0072 FB68     		ldr	r3, [r7, #12]
 2318              	.L133:
1187:./ucOSII/Core/os_task.c **** }
 2319              		.loc 1 1187 1
 2320 0074 1846     		mov	r0, r3
 2321 0076 1837     		adds	r7, r7, #24
 2322              	.LCFI58:
 2323              		.cfi_def_cfa_offset 8
 2324 0078 BD46     		mov	sp, r7
 2325              	.LCFI59:
 2326              		.cfi_def_cfa_register 13
 2327              		@ sp needed
 2328 007a 80BD     		pop	{r7, pc}
 2329              	.L138:
 2330              		.align	2
 2331              	.L137:
 2332 007c 00000000 		.word	OSTCBCur
 2333 0080 00000000 		.word	OSTCBPrioTbl
 2334              		.cfi_endproc
 2335              	.LFE14:
 2337              		.section	.text.OSTaskRegGetID,"ax",%progbits
 2338              		.align	1
 2339              		.global	OSTaskRegGetID
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2344              	OSTaskRegGetID:
 2345              	.LFB15:
1188:./ucOSII/Core/os_task.c **** #endif
1189:./ucOSII/Core/os_task.c **** 
1190:./ucOSII/Core/os_task.c **** 
1191:./ucOSII/Core/os_task.c **** /*
1192:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1193:./ucOSII/Core/os_task.c **** *                                    ALLOCATE THE NEXT AVAILABLE TASK REGISTER ID
1194:./ucOSII/Core/os_task.c **** *
1195:./ucOSII/Core/os_task.c **** * Description: This function is called to obtain a task register ID.  This function thus allows tas
1196:./ucOSII/Core/os_task.c **** *              allocated dynamically instead of statically.
1197:./ucOSII/Core/os_task.c **** *
1198:./ucOSII/Core/os_task.c **** * Arguments  : p_err       is a pointer to a variable that will hold an error code related to this 
1199:./ucOSII/Core/os_task.c **** *
1200:./ucOSII/Core/os_task.c **** *                            OS_ERR_NONE               if the call was successful
1201:./ucOSII/Core/os_task.c **** *                            OS_ERR_NO_MORE_ID_AVAIL   if you are attempting to assign more task re
1202:./ucOSII/Core/os_task.c **** *                                                           have available through OS_TASK_REG_TBL_
1203:./ucOSII/Core/os_task.c **** *
1204:./ucOSII/Core/os_task.c **** * Returns    : The next available task register 'id' or OS_TASK_REG_TBL_SIZE if an error is detecte
1205:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1206:./ucOSII/Core/os_task.c **** */
1207:./ucOSII/Core/os_task.c **** 
1208:./ucOSII/Core/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1209:./ucOSII/Core/os_task.c **** INT8U  OSTaskRegGetID (INT8U  *perr)
1210:./ucOSII/Core/os_task.c **** {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 63


 2346              		.loc 1 1210 1
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 16
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350 0000 80B5     		push	{r7, lr}
 2351              	.LCFI60:
 2352              		.cfi_def_cfa_offset 8
 2353              		.cfi_offset 7, -8
 2354              		.cfi_offset 14, -4
 2355 0002 84B0     		sub	sp, sp, #16
 2356              	.LCFI61:
 2357              		.cfi_def_cfa_offset 24
 2358 0004 00AF     		add	r7, sp, #0
 2359              	.LCFI62:
 2360              		.cfi_def_cfa_register 7
 2361 0006 7860     		str	r0, [r7, #4]
1211:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                                    /* Allocate storage for CPU status 
1212:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 2362              		.loc 1 1212 16
 2363 0008 0023     		movs	r3, #0
 2364 000a FB60     		str	r3, [r7, #12]
1213:./ucOSII/Core/os_task.c **** #endif
1214:./ucOSII/Core/os_task.c ****     INT8U      id;
1215:./ucOSII/Core/os_task.c **** 
1216:./ucOSII/Core/os_task.c **** 
1217:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1218:./ucOSII/Core/os_task.c ****     if (perr == (INT8U *)0) {
1219:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1220:./ucOSII/Core/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
1221:./ucOSII/Core/os_task.c ****     }
1222:./ucOSII/Core/os_task.c **** #endif
1223:./ucOSII/Core/os_task.c **** 
1224:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 2365              		.loc 1 1224 5
 2366 000c 4020     		movs	r0, #64
 2367 000e FFF7FEFF 		bl	OS_CPU_SR_Save
 2368 0012 F860     		str	r0, [r7, #12]
1225:./ucOSII/Core/os_task.c ****     if (OSTaskRegNextAvailID >= OS_TASK_REG_TBL_SIZE) {         /* See if we exceeded the number of
 2369              		.loc 1 1225 30
 2370 0014 0F4B     		ldr	r3, .L142
 2371 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372              		.loc 1 1225 8
 2373 0018 002B     		cmp	r3, #0
 2374 001a 07D0     		beq	.L140
1226:./ucOSII/Core/os_task.c ****        *perr = OS_ERR_NO_MORE_ID_AVAIL;                         /* Yes, cannot allocate more task r
 2375              		.loc 1 1226 14
 2376 001c 7B68     		ldr	r3, [r7, #4]
 2377 001e 9622     		movs	r2, #150
 2378 0020 1A70     		strb	r2, [r3]
1227:./ucOSII/Core/os_task.c ****         OS_EXIT_CRITICAL();
 2379              		.loc 1 1227 9
 2380 0022 F868     		ldr	r0, [r7, #12]
 2381 0024 FFF7FEFF 		bl	OS_CPU_SR_Restore
1228:./ucOSII/Core/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
 2382              		.loc 1 1228 16
 2383 0028 0123     		movs	r3, #1
 2384 002a 0FE0     		b	.L141
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 64


 2385              	.L140:
1229:./ucOSII/Core/os_task.c ****     }
1230:./ucOSII/Core/os_task.c **** 
1231:./ucOSII/Core/os_task.c ****     id   = OSTaskRegNextAvailID;                                /* Assign the next available ID    
 2386              		.loc 1 1231 10
 2387 002c 094B     		ldr	r3, .L142
 2388 002e 1B78     		ldrb	r3, [r3]
 2389 0030 FB72     		strb	r3, [r7, #11]
1232:./ucOSII/Core/os_task.c ****     OSTaskRegNextAvailID++;                                     /* Increment available ID for next 
 2390              		.loc 1 1232 25
 2391 0032 084B     		ldr	r3, .L142
 2392 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 0036 0133     		adds	r3, r3, #1
 2394 0038 DAB2     		uxtb	r2, r3
 2395 003a 064B     		ldr	r3, .L142
 2396 003c 1A70     		strb	r2, [r3]
1233:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 2397              		.loc 1 1233 5
 2398 003e F868     		ldr	r0, [r7, #12]
 2399 0040 FFF7FEFF 		bl	OS_CPU_SR_Restore
1234:./ucOSII/Core/os_task.c ****    *perr = OS_ERR_NONE;
 2400              		.loc 1 1234 10
 2401 0044 7B68     		ldr	r3, [r7, #4]
 2402 0046 0022     		movs	r2, #0
 2403 0048 1A70     		strb	r2, [r3]
1235:./ucOSII/Core/os_task.c ****     return (id);
 2404              		.loc 1 1235 12
 2405 004a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2406              	.L141:
1236:./ucOSII/Core/os_task.c **** }
 2407              		.loc 1 1236 1
 2408 004c 1846     		mov	r0, r3
 2409 004e 1037     		adds	r7, r7, #16
 2410              	.LCFI63:
 2411              		.cfi_def_cfa_offset 8
 2412 0050 BD46     		mov	sp, r7
 2413              	.LCFI64:
 2414              		.cfi_def_cfa_register 13
 2415              		@ sp needed
 2416 0052 80BD     		pop	{r7, pc}
 2417              	.L143:
 2418              		.align	2
 2419              	.L142:
 2420 0054 00000000 		.word	OSTaskRegNextAvailID
 2421              		.cfi_endproc
 2422              	.LFE15:
 2424              		.section	.text.OSTaskRegSet,"ax",%progbits
 2425              		.align	1
 2426              		.global	OSTaskRegSet
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2431              	OSTaskRegSet:
 2432              	.LFB16:
1237:./ucOSII/Core/os_task.c **** #endif
1238:./ucOSII/Core/os_task.c **** 
1239:./ucOSII/Core/os_task.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 65


1240:./ucOSII/Core/os_task.c **** /*
1241:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1242:./ucOSII/Core/os_task.c **** *                              SET THE CURRENT VALUE OF A TASK VARIABLE
1243:./ucOSII/Core/os_task.c **** *
1244:./ucOSII/Core/os_task.c **** * Description: This function is called to change the current value of a task register.  Task regist
1245:./ucOSII/Core/os_task.c **** *              are application specific and can be used to store task specific values such as 'erro
1246:./ucOSII/Core/os_task.c **** *              numbers' (i.e. errno), statistics, etc.  Each task register can hold a 32-bit value.
1247:./ucOSII/Core/os_task.c **** *
1248:./ucOSII/Core/os_task.c **** * Arguments  : prio      is the priority of the task you want to set the task register for.  If you
1249:./ucOSII/Core/os_task.c **** *                        specify OS_PRIO_SELF then the task register of the current task will be ob
1250:./ucOSII/Core/os_task.c **** *
1251:./ucOSII/Core/os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1252:./ucOSII/Core/os_task.c **** *                        than OS_TASK_REG_TBL_SIZE
1253:./ucOSII/Core/os_task.c **** *
1254:./ucOSII/Core/os_task.c **** *              value     is the desired value for the task register.
1255:./ucOSII/Core/os_task.c **** *
1256:./ucOSII/Core/os_task.c **** *              perr      is a pointer to a variable that will hold an error code related to this ca
1257:./ucOSII/Core/os_task.c **** *
1258:./ucOSII/Core/os_task.c **** *                        OS_ERR_NONE            if the call was successful
1259:./ucOSII/Core/os_task.c **** *                        OS_ERR_PRIO_INVALID    if you specified an invalid priority
1260:./ucOSII/Core/os_task.c **** *                        OS_ERR_ID_INVALID      if the 'id' is not between 0 and OS_TASK_REG_TBL_SI
1261:./ucOSII/Core/os_task.c **** *
1262:./ucOSII/Core/os_task.c **** * Returns    : The current value of the task's variable or 0 if an error is detected.
1263:./ucOSII/Core/os_task.c **** *
1264:./ucOSII/Core/os_task.c **** * Note(s)    : The maximum number of task variables is 254
1265:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1266:./ucOSII/Core/os_task.c **** */
1267:./ucOSII/Core/os_task.c **** 
1268:./ucOSII/Core/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1269:./ucOSII/Core/os_task.c **** void  OSTaskRegSet (INT8U    prio,
1270:./ucOSII/Core/os_task.c ****                     INT8U    id,
1271:./ucOSII/Core/os_task.c ****                     INT32U   value,
1272:./ucOSII/Core/os_task.c ****                     INT8U   *perr)
1273:./ucOSII/Core/os_task.c **** {
 2433              		.loc 1 1273 1
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 24
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437 0000 80B5     		push	{r7, lr}
 2438              	.LCFI65:
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 86B0     		sub	sp, sp, #24
 2443              	.LCFI66:
 2444              		.cfi_def_cfa_offset 32
 2445 0004 00AF     		add	r7, sp, #0
 2446              	.LCFI67:
 2447              		.cfi_def_cfa_register 7
 2448 0006 BA60     		str	r2, [r7, #8]
 2449 0008 7B60     		str	r3, [r7, #4]
 2450 000a 0346     		mov	r3, r0
 2451 000c FB73     		strb	r3, [r7, #15]
 2452 000e 0B46     		mov	r3, r1
 2453 0010 BB73     		strb	r3, [r7, #14]
1274:./ucOSII/Core/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1275:./ucOSII/Core/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 66


 2454              		.loc 1 1275 16
 2455 0012 0023     		movs	r3, #0
 2456 0014 3B61     		str	r3, [r7, #16]
1276:./ucOSII/Core/os_task.c **** #endif
1277:./ucOSII/Core/os_task.c ****     OS_TCB    *ptcb;
1278:./ucOSII/Core/os_task.c **** 
1279:./ucOSII/Core/os_task.c **** 
1280:./ucOSII/Core/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1281:./ucOSII/Core/os_task.c ****     if (perr == (INT8U *)0) {
1282:./ucOSII/Core/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1283:./ucOSII/Core/os_task.c ****         return;
1284:./ucOSII/Core/os_task.c ****     }
1285:./ucOSII/Core/os_task.c **** #endif
1286:./ucOSII/Core/os_task.c **** 
1287:./ucOSII/Core/os_task.c **** #if OS_ARG_CHK_EN > 0u
1288:./ucOSII/Core/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {
 2457              		.loc 1 1288 8
 2458 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2459 0018 3E2B     		cmp	r3, #62
 2460 001a 06D9     		bls	.L145
1289:./ucOSII/Core/os_task.c ****         if (prio != OS_PRIO_SELF) {
 2461              		.loc 1 1289 12
 2462 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2463 001e FF2B     		cmp	r3, #255
 2464 0020 03D0     		beq	.L145
1290:./ucOSII/Core/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;
 2465              		.loc 1 1290 19
 2466 0022 7B68     		ldr	r3, [r7, #4]
 2467 0024 2A22     		movs	r2, #42
 2468 0026 1A70     		strb	r2, [r3]
1291:./ucOSII/Core/os_task.c ****             return;
 2469              		.loc 1 1291 13
 2470 0028 22E0     		b	.L144
 2471              	.L145:
1292:./ucOSII/Core/os_task.c ****         }
1293:./ucOSII/Core/os_task.c ****     }
1294:./ucOSII/Core/os_task.c ****     if (id >= OS_TASK_REG_TBL_SIZE) {
 2472              		.loc 1 1294 8
 2473 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2474 002c 002B     		cmp	r3, #0
 2475 002e 03D0     		beq	.L147
1295:./ucOSII/Core/os_task.c ****         *perr = OS_ERR_ID_INVALID;
 2476              		.loc 1 1295 15
 2477 0030 7B68     		ldr	r3, [r7, #4]
 2478 0032 0822     		movs	r2, #8
 2479 0034 1A70     		strb	r2, [r3]
1296:./ucOSII/Core/os_task.c ****         return;
 2480              		.loc 1 1296 9
 2481 0036 1BE0     		b	.L144
 2482              	.L147:
1297:./ucOSII/Core/os_task.c ****     }
1298:./ucOSII/Core/os_task.c **** #endif
1299:./ucOSII/Core/os_task.c ****     OS_ENTER_CRITICAL();
 2483              		.loc 1 1299 5
 2484 0038 4020     		movs	r0, #64
 2485 003a FFF7FEFF 		bl	OS_CPU_SR_Save
 2486 003e 3861     		str	r0, [r7, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 67


1300:./ucOSII/Core/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if need to get register from current task  
 2487              		.loc 1 1300 8
 2488 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2489 0042 FF2B     		cmp	r3, #255
 2490 0044 03D1     		bne	.L148
1301:./ucOSII/Core/os_task.c ****         ptcb = OSTCBCur;
 2491              		.loc 1 1301 14
 2492 0046 0C4B     		ldr	r3, .L150
 2493 0048 1B68     		ldr	r3, [r3]
 2494 004a 7B61     		str	r3, [r7, #20]
 2495 004c 04E0     		b	.L149
 2496              	.L148:
1302:./ucOSII/Core/os_task.c ****     } else {
1303:./ucOSII/Core/os_task.c ****         ptcb = OSTCBPrioTbl[prio];
 2497              		.loc 1 1303 28
 2498 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2499              		.loc 1 1303 14
 2500 0050 0A4A     		ldr	r2, .L150+4
 2501 0052 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2502 0056 7B61     		str	r3, [r7, #20]
 2503              	.L149:
1304:./ucOSII/Core/os_task.c ****     }
1305:./ucOSII/Core/os_task.c ****     ptcb->OSTCBRegTbl[id] = value;
 2504              		.loc 1 1305 22
 2505 0058 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2506              		.loc 1 1305 27
 2507 005a 7B69     		ldr	r3, [r7, #20]
 2508 005c 1632     		adds	r2, r2, #22
 2509 005e B968     		ldr	r1, [r7, #8]
 2510 0060 43F82210 		str	r1, [r3, r2, lsl #2]
1306:./ucOSII/Core/os_task.c ****     OS_EXIT_CRITICAL();
 2511              		.loc 1 1306 5
 2512 0064 3869     		ldr	r0, [r7, #16]
 2513 0066 FFF7FEFF 		bl	OS_CPU_SR_Restore
1307:./ucOSII/Core/os_task.c ****     *perr                 = OS_ERR_NONE;
 2514              		.loc 1 1307 27
 2515 006a 7B68     		ldr	r3, [r7, #4]
 2516 006c 0022     		movs	r2, #0
 2517 006e 1A70     		strb	r2, [r3]
 2518              	.L144:
1308:./ucOSII/Core/os_task.c **** }
 2519              		.loc 1 1308 1
 2520 0070 1837     		adds	r7, r7, #24
 2521              	.LCFI68:
 2522              		.cfi_def_cfa_offset 8
 2523 0072 BD46     		mov	sp, r7
 2524              	.LCFI69:
 2525              		.cfi_def_cfa_register 13
 2526              		@ sp needed
 2527 0074 80BD     		pop	{r7, pc}
 2528              	.L151:
 2529 0076 00BF     		.align	2
 2530              	.L150:
 2531 0078 00000000 		.word	OSTCBCur
 2532 007c 00000000 		.word	OSTCBPrioTbl
 2533              		.cfi_endproc
 2534              	.LFE16:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 68


 2536              		.section	.text.OS_TaskReturn,"ax",%progbits
 2537              		.align	1
 2538              		.global	OS_TaskReturn
 2539              		.syntax unified
 2540              		.thumb
 2541              		.thumb_func
 2543              	OS_TaskReturn:
 2544              	.LFB17:
1309:./ucOSII/Core/os_task.c **** #endif
1310:./ucOSII/Core/os_task.c **** 
1311:./ucOSII/Core/os_task.c **** 
1312:./ucOSII/Core/os_task.c **** /*
1313:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1314:./ucOSII/Core/os_task.c **** *                                    CATCH ACCIDENTAL TASK RETURN
1315:./ucOSII/Core/os_task.c **** *
1316:./ucOSII/Core/os_task.c **** * Description: This function is called if a task accidentally returns without deleting itself.  In 
1317:./ucOSII/Core/os_task.c **** *              words, a task should either be an infinite loop or delete itself if it's done.
1318:./ucOSII/Core/os_task.c **** *
1319:./ucOSII/Core/os_task.c **** * Arguments  : none
1320:./ucOSII/Core/os_task.c **** *
1321:./ucOSII/Core/os_task.c **** * Returns    : none
1322:./ucOSII/Core/os_task.c **** *
1323:./ucOSII/Core/os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
1324:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1325:./ucOSII/Core/os_task.c **** */
1326:./ucOSII/Core/os_task.c **** 
1327:./ucOSII/Core/os_task.c **** void  OS_TaskReturn (void)
1328:./ucOSII/Core/os_task.c **** {
 2545              		.loc 1 1328 1
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 1, uses_anonymous_args = 0
 2549 0000 80B5     		push	{r7, lr}
 2550              	.LCFI70:
 2551              		.cfi_def_cfa_offset 8
 2552              		.cfi_offset 7, -8
 2553              		.cfi_offset 14, -4
 2554 0002 00AF     		add	r7, sp, #0
 2555              	.LCFI71:
 2556              		.cfi_def_cfa_register 7
1329:./ucOSII/Core/os_task.c ****     OSTaskReturnHook(OSTCBCur);                   /* Call hook to let user decide on what to do    
 2557              		.loc 1 1329 5
 2558 0004 044B     		ldr	r3, .L153
 2559 0006 1B68     		ldr	r3, [r3]
 2560 0008 1846     		mov	r0, r3
 2561 000a FFF7FEFF 		bl	OSTaskReturnHook
1330:./ucOSII/Core/os_task.c **** 
1331:./ucOSII/Core/os_task.c **** #if OS_TASK_DEL_EN > 0u
1332:./ucOSII/Core/os_task.c ****     (void)OSTaskDel(OS_PRIO_SELF);                /* Delete task if it accidentally returns!       
 2562              		.loc 1 1332 11
 2563 000e FF20     		movs	r0, #255
 2564 0010 FFF7FEFF 		bl	OSTaskDel
1333:./ucOSII/Core/os_task.c **** #else
1334:./ucOSII/Core/os_task.c ****     for (;;) {
1335:./ucOSII/Core/os_task.c ****         OSTimeDly(OS_TICKS_PER_SEC);
1336:./ucOSII/Core/os_task.c ****     }
1337:./ucOSII/Core/os_task.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 69


1338:./ucOSII/Core/os_task.c **** }
 2565              		.loc 1 1338 1
 2566 0014 00BF     		nop
 2567 0016 80BD     		pop	{r7, pc}
 2568              	.L154:
 2569              		.align	2
 2570              	.L153:
 2571 0018 00000000 		.word	OSTCBCur
 2572              		.cfi_endproc
 2573              	.LFE17:
 2575              		.section	.text.OS_TaskStkClr,"ax",%progbits
 2576              		.align	1
 2577              		.global	OS_TaskStkClr
 2578              		.syntax unified
 2579              		.thumb
 2580              		.thumb_func
 2582              	OS_TaskStkClr:
 2583              	.LFB18:
1339:./ucOSII/Core/os_task.c **** 
1340:./ucOSII/Core/os_task.c **** 
1341:./ucOSII/Core/os_task.c **** /*
1342:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1343:./ucOSII/Core/os_task.c **** *                                          CLEAR TASK STACK
1344:./ucOSII/Core/os_task.c **** *
1345:./ucOSII/Core/os_task.c **** * Description: This function is used to clear the stack of a task (i.e. write all zeros)
1346:./ucOSII/Core/os_task.c **** *
1347:./ucOSII/Core/os_task.c **** * Arguments  : pbos     is a pointer to the task's bottom of stack.  If the configuration constant
1348:./ucOSII/Core/os_task.c **** *                       OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. from
1349:./ucOSII/Core/os_task.c **** *                       memory to low memory).  'pbos' will thus point to the lowest (valid) memory
1350:./ucOSII/Core/os_task.c **** *                       location of the stack.  If OS_STK_GROWTH is set to 0, 'pbos' will point to 
1351:./ucOSII/Core/os_task.c **** *                       highest memory location of the stack and the stack will grow with increasin
1352:./ucOSII/Core/os_task.c **** *                       memory locations.  'pbos' MUST point to a valid 'free' data item.
1353:./ucOSII/Core/os_task.c **** *
1354:./ucOSII/Core/os_task.c **** *              size     is the number of 'stack elements' to clear.
1355:./ucOSII/Core/os_task.c **** *
1356:./ucOSII/Core/os_task.c **** *              opt      contains additional information (or options) about the behavior of the task
1357:./ucOSII/Core/os_task.c **** *                       LOWER 8-bits are reserved by uC/OS-II while the upper 8 bits can be applica
1358:./ucOSII/Core/os_task.c **** *                       specific.  See OS_TASK_OPT_??? in uCOS-II.H.
1359:./ucOSII/Core/os_task.c **** *
1360:./ucOSII/Core/os_task.c **** * Returns    : none
1361:./ucOSII/Core/os_task.c **** ***************************************************************************************************
1362:./ucOSII/Core/os_task.c **** */
1363:./ucOSII/Core/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1364:./ucOSII/Core/os_task.c **** void  OS_TaskStkClr (OS_STK  *pbos,
1365:./ucOSII/Core/os_task.c ****                      INT32U   size,
1366:./ucOSII/Core/os_task.c ****                      INT16U   opt)
1367:./ucOSII/Core/os_task.c **** {
 2584              		.loc 1 1367 1
 2585              		.cfi_startproc
 2586              		@ args = 0, pretend = 0, frame = 16
 2587              		@ frame_needed = 1, uses_anonymous_args = 0
 2588              		@ link register save eliminated.
 2589 0000 80B4     		push	{r7}
 2590              	.LCFI72:
 2591              		.cfi_def_cfa_offset 4
 2592              		.cfi_offset 7, -4
 2593 0002 85B0     		sub	sp, sp, #20
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 70


 2594              	.LCFI73:
 2595              		.cfi_def_cfa_offset 24
 2596 0004 00AF     		add	r7, sp, #0
 2597              	.LCFI74:
 2598              		.cfi_def_cfa_register 7
 2599 0006 F860     		str	r0, [r7, #12]
 2600 0008 B960     		str	r1, [r7, #8]
 2601 000a 1346     		mov	r3, r2
 2602 000c FB80     		strh	r3, [r7, #6]	@ movhi
1368:./ucOSII/Core/os_task.c ****     if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000u) {      /* See if stack checking has been enabled   
 2603              		.loc 1 1368 14
 2604 000e FB88     		ldrh	r3, [r7, #6]
 2605 0010 03F00103 		and	r3, r3, #1
 2606              		.loc 1 1368 8
 2607 0014 002B     		cmp	r3, #0
 2608 0016 10D0     		beq	.L159
1369:./ucOSII/Core/os_task.c ****         if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000u) {  /* See if stack needs to be cleared         
 2609              		.loc 1 1369 18
 2610 0018 FB88     		ldrh	r3, [r7, #6]
 2611 001a 03F00203 		and	r3, r3, #2
 2612              		.loc 1 1369 12
 2613 001e 002B     		cmp	r3, #0
 2614 0020 0BD0     		beq	.L159
1370:./ucOSII/Core/os_task.c **** #if OS_STK_GROWTH == 1u
1371:./ucOSII/Core/os_task.c ****             while (size > 0u) {                        /* Stack grows from HIGH to LOW memory      
 2615              		.loc 1 1371 19
 2616 0022 07E0     		b	.L157
 2617              	.L158:
1372:./ucOSII/Core/os_task.c ****                 size--;
 2618              		.loc 1 1372 21
 2619 0024 BB68     		ldr	r3, [r7, #8]
 2620 0026 013B     		subs	r3, r3, #1
 2621 0028 BB60     		str	r3, [r7, #8]
1373:./ucOSII/Core/os_task.c ****                 *pbos++ = (OS_STK)0;                   /* Clear from bottom of stack and up!       
 2622              		.loc 1 1373 22
 2623 002a FB68     		ldr	r3, [r7, #12]
 2624 002c 1A1D     		adds	r2, r3, #4
 2625 002e FA60     		str	r2, [r7, #12]
 2626              		.loc 1 1373 25
 2627 0030 0022     		movs	r2, #0
 2628 0032 1A60     		str	r2, [r3]
 2629              	.L157:
1371:./ucOSII/Core/os_task.c ****                 size--;
 2630              		.loc 1 1371 19
 2631 0034 BB68     		ldr	r3, [r7, #8]
 2632 0036 002B     		cmp	r3, #0
 2633 0038 F4D1     		bne	.L158
 2634              	.L159:
1374:./ucOSII/Core/os_task.c ****             }
1375:./ucOSII/Core/os_task.c **** #else
1376:./ucOSII/Core/os_task.c ****             while (size > 0u) {                        /* Stack grows from LOW to HIGH memory      
1377:./ucOSII/Core/os_task.c ****                 size--;
1378:./ucOSII/Core/os_task.c ****                 *pbos-- = (OS_STK)0;                   /* Clear from bottom of stack and down      
1379:./ucOSII/Core/os_task.c ****             }
1380:./ucOSII/Core/os_task.c **** #endif
1381:./ucOSII/Core/os_task.c ****         }
1382:./ucOSII/Core/os_task.c ****     }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 71


1383:./ucOSII/Core/os_task.c **** }
 2635              		.loc 1 1383 1
 2636 003a 00BF     		nop
 2637 003c 1437     		adds	r7, r7, #20
 2638              	.LCFI75:
 2639              		.cfi_def_cfa_offset 4
 2640 003e BD46     		mov	sp, r7
 2641              	.LCFI76:
 2642              		.cfi_def_cfa_register 13
 2643              		@ sp needed
 2644 0040 5DF8047B 		ldr	r7, [sp], #4
 2645              	.LCFI77:
 2646              		.cfi_restore 7
 2647              		.cfi_def_cfa_offset 0
 2648 0044 7047     		bx	lr
 2649              		.cfi_endproc
 2650              	.LFE18:
 2652              		.text
 2653              	.Letext0:
 2654              		.file 2 "./ucOSII/Port/os_cpu.h"
 2655              		.file 3 "./ucOSII/Core/ucos_ii.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 os_task.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:20     .text.OSTaskChangePrio:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:26     .text.OSTaskChangePrio:0000000000000000 OSTaskChangePrio
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:442    .text.OSTaskChangePrio:0000000000000270 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:451    .text.OSTaskCreate:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:457    .text.OSTaskCreate:0000000000000000 OSTaskCreate
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:594    .text.OSTaskCreate:00000000000000bc $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:601    .text.OSTaskCreateExt:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:607    .text.OSTaskCreateExt:0000000000000000 OSTaskCreateExt
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2582   .text.OS_TaskStkClr:0000000000000000 OS_TaskStkClr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:751    .text.OSTaskCreateExt:00000000000000cc $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:758    .rodata:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:762    .text.OSTaskDel:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:768    .text.OSTaskDel:0000000000000000 OSTaskDel
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1089   .text.OSTaskDel:00000000000001c4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1104   .text.OSTaskDelReq:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1110   .text.OSTaskDelReq:0000000000000000 OSTaskDelReq
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1228   .text.OSTaskDelReq:0000000000000094 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1234   .text.OSTaskNameGet:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1240   .text.OSTaskNameGet:0000000000000000 OSTaskNameGet
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1393   .text.OSTaskNameGet:00000000000000c4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1400   .text.OSTaskNameSet:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1406   .text.OSTaskNameSet:0000000000000000 OSTaskNameSet
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1542   .text.OSTaskNameSet:00000000000000a8 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1549   .text.OSTaskResume:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1555   .text.OSTaskResume:0000000000000000 OSTaskResume
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1719   .text.OSTaskResume:00000000000000e8 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1727   .text.OSTaskStkChk:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1733   .text.OSTaskStkChk:0000000000000000 OSTaskStkChk
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1900   .text.OSTaskStkChk:00000000000000d4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1906   .text.OSTaskSuspend:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:1912   .text.OSTaskSuspend:0000000000000000 OSTaskSuspend
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2092   .text.OSTaskSuspend:00000000000000f8 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2100   .text.OSTaskQuery:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2106   .text.OSTaskQuery:0000000000000000 OSTaskQuery
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2216   .text.OSTaskQuery:0000000000000088 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2222   .text.OSTaskRegGet:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2228   .text.OSTaskRegGet:0000000000000000 OSTaskRegGet
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2332   .text.OSTaskRegGet:000000000000007c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2338   .text.OSTaskRegGetID:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2344   .text.OSTaskRegGetID:0000000000000000 OSTaskRegGetID
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2420   .text.OSTaskRegGetID:0000000000000054 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2425   .text.OSTaskRegSet:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2431   .text.OSTaskRegSet:0000000000000000 OSTaskRegSet
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2531   .text.OSTaskRegSet:0000000000000078 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2537   .text.OS_TaskReturn:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2543   .text.OS_TaskReturn:0000000000000000 OS_TaskReturn
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2571   .text.OS_TaskReturn:0000000000000018 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s:2576   .text.OS_TaskStkClr:0000000000000000 $t

UNDEFINED SYMBOLS
OS_CPU_SR_Save
OS_CPU_SR_Restore
OS_Sched
OSTCBPrioTbl
OSTCBCur
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//cc98Lhgp.s 			page 73


OSRdyTbl
OSRdyGrp
OSRunning
OSTaskStkInit
OS_TCBInit
OSIntNesting
OS_EventTaskRemove
OS_EventTaskRemoveMulti
OS_FlagUnlink
OS_Dummy
OSTaskDelHook
OSLockNesting
OSTaskCtr
OSTCBList
OSTCBFreeList
OS_StrLen
OS_MemCopy
OSTaskRegNextAvailID
OSTaskReturnHook
