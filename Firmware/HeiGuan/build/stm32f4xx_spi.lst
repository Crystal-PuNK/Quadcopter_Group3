ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_spi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	SPI_I2S_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SPI_I2S_DeInit:
  27              	.LFB123:
  28              		.file 1 "./Library/stm32f4xx_spi.c"
   1:./Library/stm32f4xx_spi.c **** /**
   2:./Library/stm32f4xx_spi.c ****   ******************************************************************************
   3:./Library/stm32f4xx_spi.c ****   * @file    stm32f4xx_spi.c
   4:./Library/stm32f4xx_spi.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_spi.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_spi.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_spi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_spi.c ****   *          functionalities of the Serial peripheral interface (SPI):
   9:./Library/stm32f4xx_spi.c ****   *           + Initialization and Configuration
  10:./Library/stm32f4xx_spi.c ****   *           + Data transfers functions
  11:./Library/stm32f4xx_spi.c ****   *           + Hardware CRC Calculation
  12:./Library/stm32f4xx_spi.c ****   *           + DMA transfers management
  13:./Library/stm32f4xx_spi.c ****   *           + Interrupts and flags management 
  14:./Library/stm32f4xx_spi.c ****   *           
  15:./Library/stm32f4xx_spi.c **** @verbatim
  16:./Library/stm32f4xx_spi.c **** 
  17:./Library/stm32f4xx_spi.c ****  ===================================================================
  18:./Library/stm32f4xx_spi.c ****                   ##### How to use this driver #####
  19:./Library/stm32f4xx_spi.c ****  ===================================================================
  20:./Library/stm32f4xx_spi.c ****  [..]
  21:./Library/stm32f4xx_spi.c ****    (#) Enable peripheral clock using the following functions 
  22:./Library/stm32f4xx_spi.c ****        RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE) for SPI1
  23:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE) for SPI2
  24:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI3
  25:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI4
  26:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI5
  27:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI6.
  28:./Library/stm32f4xx_spi.c ****   
  29:./Library/stm32f4xx_spi.c ****    (#) Enable SCK, MOSI, MISO and NSS GPIO clocks using RCC_AHB1PeriphClockCmd()
  30:./Library/stm32f4xx_spi.c ****        function. In I2S mode, if an external clock source is used then the I2S 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 2


  31:./Library/stm32f4xx_spi.c ****        CKIN pin GPIO clock should also be enabled.
  32:./Library/stm32f4xx_spi.c ****   
  33:./Library/stm32f4xx_spi.c ****    (#) Peripherals alternate function: 
  34:./Library/stm32f4xx_spi.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  35:./Library/stm32f4xx_spi.c ****             using GPIO_PinAFConfig() function
  36:./Library/stm32f4xx_spi.c ****        (++) Configure the desired pin in alternate function by: 
  37:./Library/stm32f4xx_spi.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  38:./Library/stm32f4xx_spi.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  39:./Library/stm32f4xx_spi.c ****             GPIO_OType and GPIO_Speed members
  40:./Library/stm32f4xx_spi.c ****        (++) Call GPIO_Init() function In I2S mode, if an external clock source is 
  41:./Library/stm32f4xx_spi.c ****             used then the I2S CKIN pin should be also configured in Alternate 
  42:./Library/stm32f4xx_spi.c ****             function Push-pull pull-up mode. 
  43:./Library/stm32f4xx_spi.c ****           
  44:./Library/stm32f4xx_spi.c ****    (#) Program the Polarity, Phase, First Data, Baud Rate Prescaler, Slave 
  45:./Library/stm32f4xx_spi.c ****        Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
  46:./Library/stm32f4xx_spi.c ****        function.
  47:./Library/stm32f4xx_spi.c ****        In I2S mode, program the Mode, Standard, Data Format, MCLK Output, Audio 
  48:./Library/stm32f4xx_spi.c ****        frequency and Polarity using I2S_Init() function. For I2S mode, make sure 
  49:./Library/stm32f4xx_spi.c ****        that either:
  50:./Library/stm32f4xx_spi.c ****        (++) I2S PLL is configured using the functions 
  51:./Library/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLLI2S), RCC_PLLI2SCmd(ENABLE) and 
  52:./Library/stm32f4xx_spi.c ****             RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY); or 
  53:./Library/stm32f4xx_spi.c ****        (++) External clock source is configured using the function 
  54:./Library/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly 
  55:./Library/stm32f4xx_spi.c ****             the define constant I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file. 
  56:./Library/stm32f4xx_spi.c ****   
  57:./Library/stm32f4xx_spi.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  58:./Library/stm32f4xx_spi.c ****        SPI_ITConfig() if you need to use interrupt mode. 
  59:./Library/stm32f4xx_spi.c ****   
  60:./Library/stm32f4xx_spi.c ****    (#) When using the DMA mode 
  61:./Library/stm32f4xx_spi.c ****        (++) Configure the DMA using DMA_Init() function
  62:./Library/stm32f4xx_spi.c ****        (++) Active the needed channel Request using SPI_I2S_DMACmd() function
  63:./Library/stm32f4xx_spi.c ****    
  64:./Library/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function or enable the I2S using
  65:./Library/stm32f4xx_spi.c ****        I2S_Cmd().
  66:./Library/stm32f4xx_spi.c ****    
  67:./Library/stm32f4xx_spi.c ****    (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  68:./Library/stm32f4xx_spi.c ****   
  69:./Library/stm32f4xx_spi.c ****    (#) Optionally, you can enable/configure the following parameters without
  70:./Library/stm32f4xx_spi.c ****        re-initialization (i.e there is no need to call again SPI_Init() function):
  71:./Library/stm32f4xx_spi.c ****        (++) When bidirectional mode (SPI_Direction_1Line_Rx or SPI_Direction_1Line_Tx)
  72:./Library/stm32f4xx_spi.c ****             is programmed as Data direction parameter using the SPI_Init() function
  73:./Library/stm32f4xx_spi.c ****             it can be possible to switch between SPI_Direction_Tx or SPI_Direction_Rx
  74:./Library/stm32f4xx_spi.c ****             using the SPI_BiDirectionalLineConfig() function.
  75:./Library/stm32f4xx_spi.c ****        (++) When SPI_NSS_Soft is selected as Slave Select Management parameter 
  76:./Library/stm32f4xx_spi.c ****             using the SPI_Init() function it can be possible to manage the 
  77:./Library/stm32f4xx_spi.c ****             NSS internal signal using the SPI_NSSInternalSoftwareConfig() function.
  78:./Library/stm32f4xx_spi.c ****        (++) Reconfigure the data size using the SPI_DataSizeConfig() function  
  79:./Library/stm32f4xx_spi.c ****        (++) Enable or disable the SS output using the SPI_SSOutputCmd() function  
  80:./Library/stm32f4xx_spi.c ****             
  81:./Library/stm32f4xx_spi.c ****     (#) To use the CRC Hardware calculation feature refer to the Peripheral 
  82:./Library/stm32f4xx_spi.c ****         CRC hardware Calculation subsection.
  83:./Library/stm32f4xx_spi.c ****      
  84:./Library/stm32f4xx_spi.c ****   
  85:./Library/stm32f4xx_spi.c ****  [..] It is possible to use SPI in I2S full duplex mode, in this case, each SPI 
  86:./Library/stm32f4xx_spi.c ****       peripheral is able to manage sending and receiving data simultaneously
  87:./Library/stm32f4xx_spi.c ****       using two data lines. Each SPI peripheral has an extended block called I2Sxext
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 3


  88:./Library/stm32f4xx_spi.c ****       (ie. I2S2ext for SPI2 and I2S3ext for SPI3).
  89:./Library/stm32f4xx_spi.c ****       The extension block is not a full SPI IP, it is used only as I2S slave to
  90:./Library/stm32f4xx_spi.c ****       implement full duplex mode. The extension block uses the same clock sources
  91:./Library/stm32f4xx_spi.c ****       as its master.          
  92:./Library/stm32f4xx_spi.c ****       To configure I2S full duplex you have to:
  93:./Library/stm32f4xx_spi.c ****               
  94:./Library/stm32f4xx_spi.c ****       (#) Configure SPIx in I2S mode (I2S_Init() function) as described above. 
  95:./Library/stm32f4xx_spi.c ****              
  96:./Library/stm32f4xx_spi.c ****       (#) Call the I2S_FullDuplexConfig() function using the same structure passed to  
  97:./Library/stm32f4xx_spi.c ****           I2S_Init() function.
  98:./Library/stm32f4xx_spi.c ****               
  99:./Library/stm32f4xx_spi.c ****       (#) Call I2S_Cmd() for SPIx then for its extended block.
 100:./Library/stm32f4xx_spi.c ****             
 101:./Library/stm32f4xx_spi.c ****       (#) To configure interrupts or DMA requests and to get/clear flag status, 
 102:./Library/stm32f4xx_spi.c ****           use I2Sxext instance for the extension block.
 103:./Library/stm32f4xx_spi.c ****                
 104:./Library/stm32f4xx_spi.c ****  [..] Functions that can be called with I2Sxext instances are: I2S_Cmd(), 
 105:./Library/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(), SPI_I2S_ReceiveData(), SPI_I2S_SendData(), 
 106:./Library/stm32f4xx_spi.c ****       SPI_I2S_DMACmd(), SPI_I2S_ITConfig(), SPI_I2S_GetFlagStatus(), 
 107:./Library/stm32f4xx_spi.c ****       SPI_I2S_ClearFlag(), SPI_I2S_GetITStatus() and SPI_I2S_ClearITPendingBit().
 108:./Library/stm32f4xx_spi.c ****                    
 109:./Library/stm32f4xx_spi.c ****       Example: To use SPI3 in Full duplex mode (SPI3 is Master Tx, I2S3ext is Slave Rx):
 110:./Library/stm32f4xx_spi.c ****               
 111:./Library/stm32f4xx_spi.c ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);   
 112:./Library/stm32f4xx_spi.c ****       I2S_StructInit(&I2SInitStruct);
 113:./Library/stm32f4xx_spi.c ****       I2SInitStruct.Mode = I2S_Mode_MasterTx;     
 114:./Library/stm32f4xx_spi.c ****       I2S_Init(SPI3, &I2SInitStruct);
 115:./Library/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(SPI3ext, &I2SInitStruct)
 116:./Library/stm32f4xx_spi.c ****       I2S_Cmd(SPI3, ENABLE);
 117:./Library/stm32f4xx_spi.c ****       I2S_Cmd(SPI3ext, ENABLE);
 118:./Library/stm32f4xx_spi.c ****       ...
 119:./Library/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(SPI2, SPI_FLAG_TXE) == RESET)
 120:./Library/stm32f4xx_spi.c ****       {}
 121:./Library/stm32f4xx_spi.c ****       SPI_I2S_SendData(SPI3, txdata[i]);
 122:./Library/stm32f4xx_spi.c ****       ...  
 123:./Library/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(I2S3ext, SPI_FLAG_RXNE) == RESET)
 124:./Library/stm32f4xx_spi.c ****       {}
 125:./Library/stm32f4xx_spi.c ****       rxdata[i] = SPI_I2S_ReceiveData(I2S3ext);
 126:./Library/stm32f4xx_spi.c ****       ...          
 127:./Library/stm32f4xx_spi.c ****                 
 128:./Library/stm32f4xx_spi.c ****  [..]       
 129:./Library/stm32f4xx_spi.c ****    (@) In I2S mode: if an external clock is used as source clock for the I2S,  
 130:./Library/stm32f4xx_spi.c ****        then the define I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should 
 131:./Library/stm32f4xx_spi.c ****        be enabled and set to the value of the source clock frequency (in Hz).
 132:./Library/stm32f4xx_spi.c ****    
 133:./Library/stm32f4xx_spi.c ****    (@) In SPI mode: To use the SPI TI mode, call the function SPI_TIModeCmd() 
 134:./Library/stm32f4xx_spi.c ****        just after calling the function SPI_Init().
 135:./Library/stm32f4xx_spi.c ****   
 136:./Library/stm32f4xx_spi.c **** @endverbatim  
 137:./Library/stm32f4xx_spi.c ****   *                                  
 138:./Library/stm32f4xx_spi.c ****   ******************************************************************************
 139:./Library/stm32f4xx_spi.c ****   * @attention
 140:./Library/stm32f4xx_spi.c ****   *
 141:./Library/stm32f4xx_spi.c ****   * Copyright (c) 2016 STMicroelectronics.
 142:./Library/stm32f4xx_spi.c ****   * All rights reserved.
 143:./Library/stm32f4xx_spi.c ****   *
 144:./Library/stm32f4xx_spi.c ****   * This software is licensed under terms that can be found in the LICENSE file
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 4


 145:./Library/stm32f4xx_spi.c ****   * in the root directory of this software component.
 146:./Library/stm32f4xx_spi.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 147:./Library/stm32f4xx_spi.c ****   *
 148:./Library/stm32f4xx_spi.c ****   ******************************************************************************
 149:./Library/stm32f4xx_spi.c ****   */
 150:./Library/stm32f4xx_spi.c **** 
 151:./Library/stm32f4xx_spi.c **** /* Includes ------------------------------------------------------------------*/
 152:./Library/stm32f4xx_spi.c **** #include "stm32f4xx_spi.h"
 153:./Library/stm32f4xx_spi.c **** #include "stm32f4xx_rcc.h"
 154:./Library/stm32f4xx_spi.c **** 
 155:./Library/stm32f4xx_spi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 156:./Library/stm32f4xx_spi.c ****   * @{
 157:./Library/stm32f4xx_spi.c ****   */
 158:./Library/stm32f4xx_spi.c **** 
 159:./Library/stm32f4xx_spi.c **** /** @defgroup SPI 
 160:./Library/stm32f4xx_spi.c ****   * @brief SPI driver modules
 161:./Library/stm32f4xx_spi.c ****   * @{
 162:./Library/stm32f4xx_spi.c ****   */ 
 163:./Library/stm32f4xx_spi.c **** 
 164:./Library/stm32f4xx_spi.c **** /* Private typedef -----------------------------------------------------------*/
 165:./Library/stm32f4xx_spi.c **** /* Private define ------------------------------------------------------------*/
 166:./Library/stm32f4xx_spi.c **** 
 167:./Library/stm32f4xx_spi.c **** /* SPI registers Masks */
 168:./Library/stm32f4xx_spi.c **** #define CR1_CLEAR_MASK            ((uint16_t)0x3040)
 169:./Library/stm32f4xx_spi.c **** #define I2SCFGR_CLEAR_MASK        ((uint16_t)0xF040)
 170:./Library/stm32f4xx_spi.c **** 
 171:./Library/stm32f4xx_spi.c **** /* RCC PLLs masks */
 172:./Library/stm32f4xx_spi.c **** #define PLLCFGR_PPLR_MASK         ((uint32_t)0x70000000)
 173:./Library/stm32f4xx_spi.c **** #define PLLCFGR_PPLN_MASK         ((uint32_t)0x00007FC0)
 174:./Library/stm32f4xx_spi.c **** 
 175:./Library/stm32f4xx_spi.c **** #define SPI_CR2_FRF               ((uint16_t)0x0010)
 176:./Library/stm32f4xx_spi.c **** #define SPI_SR_TIFRFE             ((uint16_t)0x0100)
 177:./Library/stm32f4xx_spi.c **** 
 178:./Library/stm32f4xx_spi.c **** /* Private macro -------------------------------------------------------------*/
 179:./Library/stm32f4xx_spi.c **** /* Private variables ---------------------------------------------------------*/
 180:./Library/stm32f4xx_spi.c **** /* Private function prototypes -----------------------------------------------*/
 181:./Library/stm32f4xx_spi.c **** /* Private functions ---------------------------------------------------------*/
 182:./Library/stm32f4xx_spi.c **** 
 183:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Private_Functions
 184:./Library/stm32f4xx_spi.c ****   * @{
 185:./Library/stm32f4xx_spi.c ****   */
 186:./Library/stm32f4xx_spi.c **** 
 187:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group1 Initialization and Configuration functions
 188:./Library/stm32f4xx_spi.c ****  *  @brief   Initialization and Configuration functions 
 189:./Library/stm32f4xx_spi.c ****  *
 190:./Library/stm32f4xx_spi.c **** @verbatim   
 191:./Library/stm32f4xx_spi.c ****  ===============================================================================
 192:./Library/stm32f4xx_spi.c ****              ##### Initialization and Configuration functions ##### 
 193:./Library/stm32f4xx_spi.c ****  ===============================================================================  
 194:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to initialize the SPI 
 195:./Library/stm32f4xx_spi.c ****       Direction, SPI Mode, SPI Data Size, SPI Polarity, SPI Phase, SPI NSS 
 196:./Library/stm32f4xx_spi.c ****       Management, SPI Baud Rate Prescaler, SPI First Bit and SPI CRC Polynomial.
 197:./Library/stm32f4xx_spi.c ****   
 198:./Library/stm32f4xx_spi.c ****  [..] The SPI_Init() function follows the SPI configuration procedures for Master 
 199:./Library/stm32f4xx_spi.c ****       mode and Slave mode (details for these procedures are available in reference 
 200:./Library/stm32f4xx_spi.c ****       manual (RM0090)).
 201:./Library/stm32f4xx_spi.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 5


 202:./Library/stm32f4xx_spi.c **** @endverbatim
 203:./Library/stm32f4xx_spi.c ****   * @{
 204:./Library/stm32f4xx_spi.c ****   */
 205:./Library/stm32f4xx_spi.c **** 
 206:./Library/stm32f4xx_spi.c **** /**
 207:./Library/stm32f4xx_spi.c ****   * @brief  De-initialize the SPIx peripheral registers to their default reset values.
 208:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 209:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode.   
 210:./Library/stm32f4xx_spi.c ****   *         
 211:./Library/stm32f4xx_spi.c ****   * @note   The extended I2S blocks (ie. I2S2ext and I2S3ext blocks) are de-initialized
 212:./Library/stm32f4xx_spi.c ****   *         when the relative I2S peripheral is de-initialized (the extended block's clock
 213:./Library/stm32f4xx_spi.c ****   *         is managed by the I2S peripheral clock).
 214:./Library/stm32f4xx_spi.c ****   *             
 215:./Library/stm32f4xx_spi.c ****   * @retval None
 216:./Library/stm32f4xx_spi.c ****   */
 217:./Library/stm32f4xx_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 218:./Library/stm32f4xx_spi.c **** {
  29              		.loc 1 218 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 219:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 220:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 221:./Library/stm32f4xx_spi.c **** 
 222:./Library/stm32f4xx_spi.c ****   if (SPIx == SPI1)
  45              		.loc 1 222 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 2E4A     		ldr	r2, .L9
  48 000c 9342     		cmp	r3, r2
  49 000e 0AD1     		bne	.L2
 223:./Library/stm32f4xx_spi.c ****   {
 224:./Library/stm32f4xx_spi.c ****     /* Enable SPI1 reset state */
 225:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
  50              		.loc 1 225 5
  51 0010 0121     		movs	r1, #1
  52 0012 4FF48050 		mov	r0, #4096
  53 0016 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 226:./Library/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
 227:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
  54              		.loc 1 227 5
  55 001a 0021     		movs	r1, #0
  56 001c 4FF48050 		mov	r0, #4096
  57 0020 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 228:./Library/stm32f4xx_spi.c ****   }
 229:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI2)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 6


 230:./Library/stm32f4xx_spi.c ****   {
 231:./Library/stm32f4xx_spi.c ****     /* Enable SPI2 reset state */
 232:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 233:./Library/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
 234:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 235:./Library/stm32f4xx_spi.c ****   }
 236:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI3)
 237:./Library/stm32f4xx_spi.c ****   {
 238:./Library/stm32f4xx_spi.c ****     /* Enable SPI3 reset state */
 239:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 240:./Library/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 241:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 242:./Library/stm32f4xx_spi.c ****   }
 243:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI4)
 244:./Library/stm32f4xx_spi.c ****   {
 245:./Library/stm32f4xx_spi.c ****     /* Enable SPI4 reset state */
 246:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, ENABLE);
 247:./Library/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 248:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, DISABLE);
 249:./Library/stm32f4xx_spi.c ****   }
 250:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI5)
 251:./Library/stm32f4xx_spi.c ****   {
 252:./Library/stm32f4xx_spi.c ****     /* Enable SPI5 reset state */
 253:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, ENABLE);
 254:./Library/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 255:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, DISABLE);
 256:./Library/stm32f4xx_spi.c ****   }
 257:./Library/stm32f4xx_spi.c ****   else 
 258:./Library/stm32f4xx_spi.c ****   {
 259:./Library/stm32f4xx_spi.c ****     if (SPIx == SPI6)
 260:./Library/stm32f4xx_spi.c ****     {
 261:./Library/stm32f4xx_spi.c ****       /* Enable SPI6 reset state */
 262:./Library/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, ENABLE);
 263:./Library/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 264:./Library/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, DISABLE);
 265:./Library/stm32f4xx_spi.c ****     }
 266:./Library/stm32f4xx_spi.c ****   }
 267:./Library/stm32f4xx_spi.c **** }
  58              		.loc 1 267 1
  59 0024 49E0     		b	.L8
  60              	.L2:
 229:./Library/stm32f4xx_spi.c ****   {
  61              		.loc 1 229 11
  62 0026 7B68     		ldr	r3, [r7, #4]
  63 0028 274A     		ldr	r2, .L9+4
  64 002a 9342     		cmp	r3, r2
  65 002c 0AD1     		bne	.L4
 232:./Library/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
  66              		.loc 1 232 5
  67 002e 0121     		movs	r1, #1
  68 0030 4FF48040 		mov	r0, #16384
  69 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 234:./Library/stm32f4xx_spi.c ****   }
  70              		.loc 1 234 5
  71 0038 0021     		movs	r1, #0
  72 003a 4FF48040 		mov	r0, #16384
  73 003e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 7


  74              		.loc 1 267 1
  75 0042 3AE0     		b	.L8
  76              	.L4:
 236:./Library/stm32f4xx_spi.c ****   {
  77              		.loc 1 236 11
  78 0044 7B68     		ldr	r3, [r7, #4]
  79 0046 214A     		ldr	r2, .L9+8
  80 0048 9342     		cmp	r3, r2
  81 004a 0AD1     		bne	.L5
 239:./Library/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
  82              		.loc 1 239 5
  83 004c 0121     		movs	r1, #1
  84 004e 4FF40040 		mov	r0, #32768
  85 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 241:./Library/stm32f4xx_spi.c ****   }
  86              		.loc 1 241 5
  87 0056 0021     		movs	r1, #0
  88 0058 4FF40040 		mov	r0, #32768
  89 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  90              		.loc 1 267 1
  91 0060 2BE0     		b	.L8
  92              	.L5:
 243:./Library/stm32f4xx_spi.c ****   {
  93              		.loc 1 243 11
  94 0062 7B68     		ldr	r3, [r7, #4]
  95 0064 1A4A     		ldr	r2, .L9+12
  96 0066 9342     		cmp	r3, r2
  97 0068 0AD1     		bne	.L6
 246:./Library/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
  98              		.loc 1 246 5
  99 006a 0121     		movs	r1, #1
 100 006c 4FF40050 		mov	r0, #8192
 101 0070 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 248:./Library/stm32f4xx_spi.c ****   }
 102              		.loc 1 248 5
 103 0074 0021     		movs	r1, #0
 104 0076 4FF40050 		mov	r0, #8192
 105 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 106              		.loc 1 267 1
 107 007e 1CE0     		b	.L8
 108              	.L6:
 250:./Library/stm32f4xx_spi.c ****   {
 109              		.loc 1 250 11
 110 0080 7B68     		ldr	r3, [r7, #4]
 111 0082 144A     		ldr	r2, .L9+16
 112 0084 9342     		cmp	r3, r2
 113 0086 0AD1     		bne	.L7
 253:./Library/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 114              		.loc 1 253 5
 115 0088 0121     		movs	r1, #1
 116 008a 4FF48010 		mov	r0, #1048576
 117 008e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 255:./Library/stm32f4xx_spi.c ****   }
 118              		.loc 1 255 5
 119 0092 0021     		movs	r1, #0
 120 0094 4FF48010 		mov	r0, #1048576
 121 0098 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 8


 122              		.loc 1 267 1
 123 009c 0DE0     		b	.L8
 124              	.L7:
 259:./Library/stm32f4xx_spi.c ****     {
 125              		.loc 1 259 8
 126 009e 7B68     		ldr	r3, [r7, #4]
 127 00a0 0D4A     		ldr	r2, .L9+20
 128 00a2 9342     		cmp	r3, r2
 129 00a4 09D1     		bne	.L8
 262:./Library/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 130              		.loc 1 262 7
 131 00a6 0121     		movs	r1, #1
 132 00a8 4FF40010 		mov	r0, #2097152
 133 00ac FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 264:./Library/stm32f4xx_spi.c ****     }
 134              		.loc 1 264 7
 135 00b0 0021     		movs	r1, #0
 136 00b2 4FF40010 		mov	r0, #2097152
 137 00b6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 138              	.L8:
 139              		.loc 1 267 1
 140 00ba 00BF     		nop
 141 00bc 0837     		adds	r7, r7, #8
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 8
 144 00be BD46     		mov	sp, r7
 145              	.LCFI4:
 146              		.cfi_def_cfa_register 13
 147              		@ sp needed
 148 00c0 80BD     		pop	{r7, pc}
 149              	.L10:
 150 00c2 00BF     		.align	2
 151              	.L9:
 152 00c4 00300140 		.word	1073819648
 153 00c8 00380040 		.word	1073756160
 154 00cc 003C0040 		.word	1073757184
 155 00d0 00340140 		.word	1073820672
 156 00d4 00500140 		.word	1073827840
 157 00d8 00540140 		.word	1073828864
 158              		.cfi_endproc
 159              	.LFE123:
 161              		.section	.text.SPI_Init,"ax",%progbits
 162              		.align	1
 163              		.global	SPI_Init
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	SPI_Init:
 169              	.LFB124:
 268:./Library/stm32f4xx_spi.c **** 
 269:./Library/stm32f4xx_spi.c **** /**
 270:./Library/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 271:./Library/stm32f4xx_spi.c ****   *         parameters in the SPI_InitStruct.
 272:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 273:./Library/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 274:./Library/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 275:./Library/stm32f4xx_spi.c ****   * @retval None
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 9


 276:./Library/stm32f4xx_spi.c ****   */
 277:./Library/stm32f4xx_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 278:./Library/stm32f4xx_spi.c **** {
 170              		.loc 1 278 1
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 16
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 80B4     		push	{r7}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 85B0     		sub	sp, sp, #20
 180              	.LCFI6:
 181              		.cfi_def_cfa_offset 24
 182 0004 00AF     		add	r7, sp, #0
 183              	.LCFI7:
 184              		.cfi_def_cfa_register 7
 185 0006 7860     		str	r0, [r7, #4]
 186 0008 3960     		str	r1, [r7]
 279:./Library/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 187              		.loc 1 279 12
 188 000a 0023     		movs	r3, #0
 189 000c FB81     		strh	r3, [r7, #14]	@ movhi
 280:./Library/stm32f4xx_spi.c ****   
 281:./Library/stm32f4xx_spi.c ****   /* check the parameters */
 282:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 283:./Library/stm32f4xx_spi.c ****   
 284:./Library/stm32f4xx_spi.c ****   /* Check the SPI parameters */
 285:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 286:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 287:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 288:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 289:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 290:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 291:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 292:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 293:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 294:./Library/stm32f4xx_spi.c **** 
 295:./Library/stm32f4xx_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 296:./Library/stm32f4xx_spi.c ****   /* Get the SPIx CR1 value */
 297:./Library/stm32f4xx_spi.c ****   tmpreg = SPIx->CR1;
 190              		.loc 1 297 10
 191 000e 7B68     		ldr	r3, [r7, #4]
 192 0010 1B88     		ldrh	r3, [r3]	@ movhi
 193 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 298:./Library/stm32f4xx_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 299:./Library/stm32f4xx_spi.c ****   tmpreg &= CR1_CLEAR_MASK;
 194              		.loc 1 299 10
 195 0014 FB89     		ldrh	r3, [r7, #14]	@ movhi
 196 0016 03F44153 		and	r3, r3, #12352
 197 001a FB81     		strh	r3, [r7, #14]	@ movhi
 300:./Library/stm32f4xx_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 301:./Library/stm32f4xx_spi.c ****      master/salve mode, CPOL and CPHA */
 302:./Library/stm32f4xx_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 303:./Library/stm32f4xx_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 304:./Library/stm32f4xx_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 10


 305:./Library/stm32f4xx_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 306:./Library/stm32f4xx_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 307:./Library/stm32f4xx_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 308:./Library/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 198              		.loc 1 308 48
 199 001c 3B68     		ldr	r3, [r7]
 200 001e 1A88     		ldrh	r2, [r3]
 201              		.loc 1 308 80
 202 0020 3B68     		ldr	r3, [r7]
 203 0022 5B88     		ldrh	r3, [r3, #2]
 204              		.loc 1 308 13
 205 0024 1343     		orrs	r3, r3, r2
 206 0026 9AB2     		uxth	r2, r3
 309:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 207              		.loc 1 309 33
 208 0028 3B68     		ldr	r3, [r7]
 209 002a 9B88     		ldrh	r3, [r3, #4]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 210              		.loc 1 308 13
 211 002c 1343     		orrs	r3, r3, r2
 212 002e 9AB2     		uxth	r2, r3
 213              		.loc 1 309 64
 214 0030 3B68     		ldr	r3, [r7]
 215 0032 DB88     		ldrh	r3, [r3, #6]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 216              		.loc 1 308 13
 217 0034 1343     		orrs	r3, r3, r2
 218 0036 9AB2     		uxth	r2, r3
 310:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 219              		.loc 1 310 33
 220 0038 3B68     		ldr	r3, [r7]
 221 003a 1B89     		ldrh	r3, [r3, #8]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 222              		.loc 1 308 13
 223 003c 1343     		orrs	r3, r3, r2
 224 003e 9AB2     		uxth	r2, r3
 225              		.loc 1 310 60
 226 0040 3B68     		ldr	r3, [r7]
 227 0042 5B89     		ldrh	r3, [r3, #10]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 228              		.loc 1 308 13
 229 0044 1343     		orrs	r3, r3, r2
 230 0046 9AB2     		uxth	r2, r3
 311:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 231              		.loc 1 311 33
 232 0048 3B68     		ldr	r3, [r7]
 233 004a 9B89     		ldrh	r3, [r3, #12]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 234              		.loc 1 308 13
 235 004c 1343     		orrs	r3, r3, r2
 236 004e 9AB2     		uxth	r2, r3
 237              		.loc 1 311 73
 238 0050 3B68     		ldr	r3, [r7]
 239 0052 DB89     		ldrh	r3, [r3, #14]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 240              		.loc 1 308 13
 241 0054 1343     		orrs	r3, r3, r2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 11


 242 0056 9AB2     		uxth	r2, r3
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 243              		.loc 1 308 10
 244 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 245 005a 1343     		orrs	r3, r3, r2
 246 005c FB81     		strh	r3, [r7, #14]	@ movhi
 312:./Library/stm32f4xx_spi.c ****   /* Write to SPIx CR1 */
 313:./Library/stm32f4xx_spi.c ****   SPIx->CR1 = tmpreg;
 247              		.loc 1 313 13
 248 005e 7B68     		ldr	r3, [r7, #4]
 249 0060 FA89     		ldrh	r2, [r7, #14]	@ movhi
 250 0062 1A80     		strh	r2, [r3]	@ movhi
 314:./Library/stm32f4xx_spi.c **** 
 315:./Library/stm32f4xx_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 316:./Library/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SMOD);
 251              		.loc 1 316 17
 252 0064 7B68     		ldr	r3, [r7, #4]
 253 0066 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 254 0068 9BB2     		uxth	r3, r3
 255 006a 23F40063 		bic	r3, r3, #2048
 256 006e 9AB2     		uxth	r2, r3
 257 0070 7B68     		ldr	r3, [r7, #4]
 258 0072 9A83     		strh	r2, [r3, #28]	@ movhi
 317:./Library/stm32f4xx_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 318:./Library/stm32f4xx_spi.c ****   /* Write to SPIx CRCPOLY */
 319:./Library/stm32f4xx_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 259              		.loc 1 319 31
 260 0074 3B68     		ldr	r3, [r7]
 261 0076 1A8A     		ldrh	r2, [r3, #16]
 262              		.loc 1 319 15
 263 0078 7B68     		ldr	r3, [r7, #4]
 264 007a 1A82     		strh	r2, [r3, #16]	@ movhi
 320:./Library/stm32f4xx_spi.c **** }
 265              		.loc 1 320 1
 266 007c 00BF     		nop
 267 007e 1437     		adds	r7, r7, #20
 268              	.LCFI8:
 269              		.cfi_def_cfa_offset 4
 270 0080 BD46     		mov	sp, r7
 271              	.LCFI9:
 272              		.cfi_def_cfa_register 13
 273              		@ sp needed
 274 0082 5DF8047B 		ldr	r7, [sp], #4
 275              	.LCFI10:
 276              		.cfi_restore 7
 277              		.cfi_def_cfa_offset 0
 278 0086 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE124:
 282              		.section	.text.I2S_Init,"ax",%progbits
 283              		.align	1
 284              		.global	I2S_Init
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	I2S_Init:
 290              	.LFB125:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 12


 321:./Library/stm32f4xx_spi.c **** 
 322:./Library/stm32f4xx_spi.c **** /**
 323:./Library/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 324:./Library/stm32f4xx_spi.c ****   *         parameters in the I2S_InitStruct.
 325:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral (configured in I2S mode).
 326:./Library/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 327:./Library/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 328:./Library/stm32f4xx_spi.c ****   *         configured in I2S mode.
 329:./Library/stm32f4xx_spi.c ****   *           
 330:./Library/stm32f4xx_spi.c ****   * @note   The function calculates the optimal prescaler needed to obtain the most 
 331:./Library/stm32f4xx_spi.c ****   *         accurate audio frequency (depending on the I2S clock source, the PLL values 
 332:./Library/stm32f4xx_spi.c ****   *         and the product configuration). But in case the prescaler value is greater 
 333:./Library/stm32f4xx_spi.c ****   *         than 511, the default value (0x02) will be configured instead.    
 334:./Library/stm32f4xx_spi.c ****   * 
 335:./Library/stm32f4xx_spi.c ****   * @note   if an external clock is used as source clock for the I2S, then the define
 336:./Library/stm32f4xx_spi.c ****   *         I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should be enabled and set
 337:./Library/stm32f4xx_spi.c ****   *         to the value of the source clock frequency (in Hz).
 338:./Library/stm32f4xx_spi.c ****   *  
 339:./Library/stm32f4xx_spi.c ****   * @retval None
 340:./Library/stm32f4xx_spi.c ****   */
 341:./Library/stm32f4xx_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 342:./Library/stm32f4xx_spi.c **** {
 291              		.loc 1 342 1
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 40
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 80B4     		push	{r7}
 297              	.LCFI11:
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0002 8BB0     		sub	sp, sp, #44
 301              	.LCFI12:
 302              		.cfi_def_cfa_offset 48
 303 0004 00AF     		add	r7, sp, #0
 304              	.LCFI13:
 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
 307 0008 3960     		str	r1, [r7]
 343:./Library/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 308              		.loc 1 343 12
 309 000a 0023     		movs	r3, #0
 310 000c FB82     		strh	r3, [r7, #22]	@ movhi
 311              		.loc 1 343 24
 312 000e 0223     		movs	r3, #2
 313 0010 FB84     		strh	r3, [r7, #38]	@ movhi
 314              		.loc 1 343 36
 315 0012 0023     		movs	r3, #0
 316 0014 BB84     		strh	r3, [r7, #36]	@ movhi
 317              		.loc 1 343 48
 318 0016 0123     		movs	r3, #1
 319 0018 7B84     		strh	r3, [r7, #34]	@ movhi
 344:./Library/stm32f4xx_spi.c ****   uint32_t tmp = 0, i2sclk = 0;
 320              		.loc 1 344 12
 321 001a 0023     		movs	r3, #0
 322 001c FB61     		str	r3, [r7, #28]
 323              		.loc 1 344 21
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 13


 324 001e 0023     		movs	r3, #0
 325 0020 BB61     		str	r3, [r7, #24]
 345:./Library/stm32f4xx_spi.c **** #ifndef I2S_EXTERNAL_CLOCK_VAL
 346:./Library/stm32f4xx_spi.c ****   uint32_t pllm = 0, plln = 0, pllr = 0;
 326              		.loc 1 346 12
 327 0022 0023     		movs	r3, #0
 328 0024 3B61     		str	r3, [r7, #16]
 329              		.loc 1 346 22
 330 0026 0023     		movs	r3, #0
 331 0028 FB60     		str	r3, [r7, #12]
 332              		.loc 1 346 32
 333 002a 0023     		movs	r3, #0
 334 002c BB60     		str	r3, [r7, #8]
 347:./Library/stm32f4xx_spi.c **** #endif /* I2S_EXTERNAL_CLOCK_VAL */
 348:./Library/stm32f4xx_spi.c ****   
 349:./Library/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 350:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 351:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 352:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 353:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 354:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 355:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 356:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 357:./Library/stm32f4xx_spi.c **** 
 358:./Library/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 359:./Library/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 360:./Library/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 335              		.loc 1 360 17
 336 002e 7B68     		ldr	r3, [r7, #4]
 337 0030 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 338 0032 9BB2     		uxth	r3, r3
 339 0034 23F47B63 		bic	r3, r3, #4016
 340 0038 23F00F03 		bic	r3, r3, #15
 341 003c 9AB2     		uxth	r2, r3
 342 003e 7B68     		ldr	r3, [r7, #4]
 343 0040 9A83     		strh	r2, [r3, #28]	@ movhi
 361:./Library/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 344              		.loc 1 361 15
 345 0042 7B68     		ldr	r3, [r7, #4]
 346 0044 0222     		movs	r2, #2
 347 0046 1A84     		strh	r2, [r3, #32]	@ movhi
 362:./Library/stm32f4xx_spi.c ****   
 363:./Library/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 364:./Library/stm32f4xx_spi.c ****   tmpreg = SPIx->I2SCFGR;
 348              		.loc 1 364 10
 349 0048 7B68     		ldr	r3, [r7, #4]
 350 004a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 351 004c FB82     		strh	r3, [r7, #22]	@ movhi
 365:./Library/stm32f4xx_spi.c ****   
 366:./Library/stm32f4xx_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 367:./Library/stm32f4xx_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 352              		.loc 1 367 20
 353 004e 3B68     		ldr	r3, [r7]
 354 0050 9B68     		ldr	r3, [r3, #8]
 355              		.loc 1 367 5
 356 0052 022B     		cmp	r3, #2
 357 0054 04D1     		bne	.L13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 14


 368:./Library/stm32f4xx_spi.c ****   {
 369:./Library/stm32f4xx_spi.c ****     i2sodd = (uint16_t)0;
 358              		.loc 1 369 12
 359 0056 0023     		movs	r3, #0
 360 0058 BB84     		strh	r3, [r7, #36]	@ movhi
 370:./Library/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 361              		.loc 1 370 12
 362 005a 0223     		movs	r3, #2
 363 005c FB84     		strh	r3, [r7, #38]	@ movhi
 364 005e 87E0     		b	.L14
 365              	.L13:
 371:./Library/stm32f4xx_spi.c ****   }
 372:./Library/stm32f4xx_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 373:./Library/stm32f4xx_spi.c ****   else
 374:./Library/stm32f4xx_spi.c ****   {
 375:./Library/stm32f4xx_spi.c ****     /* Check the frame length (For the Prescaler computing) *******************/
 376:./Library/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 366              		.loc 1 376 22
 367 0060 3B68     		ldr	r3, [r7]
 368 0062 9B88     		ldrh	r3, [r3, #4]
 369              		.loc 1 376 7
 370 0064 002B     		cmp	r3, #0
 371 0066 02D1     		bne	.L15
 377:./Library/stm32f4xx_spi.c ****     {
 378:./Library/stm32f4xx_spi.c ****       /* Packet length is 16 bits */
 379:./Library/stm32f4xx_spi.c ****       packetlength = 16;
 372              		.loc 1 379 20
 373 0068 1023     		movs	r3, #16
 374 006a 7B84     		strh	r3, [r7, #34]	@ movhi
 375 006c 01E0     		b	.L16
 376              	.L15:
 380:./Library/stm32f4xx_spi.c ****     }
 381:./Library/stm32f4xx_spi.c ****     else
 382:./Library/stm32f4xx_spi.c ****     {
 383:./Library/stm32f4xx_spi.c ****       /* Packet length is 32 bits */
 384:./Library/stm32f4xx_spi.c ****       packetlength = 32;
 377              		.loc 1 384 20
 378 006e 2023     		movs	r3, #32
 379 0070 7B84     		strh	r3, [r7, #34]	@ movhi
 380              	.L16:
 385:./Library/stm32f4xx_spi.c ****     }
 386:./Library/stm32f4xx_spi.c **** 
 387:./Library/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_Standard <= I2S_Standard_LSB)
 381              		.loc 1 387 22
 382 0072 3B68     		ldr	r3, [r7]
 383 0074 5B88     		ldrh	r3, [r3, #2]
 384              		.loc 1 387 7
 385 0076 202B     		cmp	r3, #32
 386 0078 02D8     		bhi	.L17
 388:./Library/stm32f4xx_spi.c ****     {
 389:./Library/stm32f4xx_spi.c ****       /* In I2S standard packet length is multiplied by 2 */
 390:./Library/stm32f4xx_spi.c ****       packetlength = packetlength * 2;
 387              		.loc 1 390 20
 388 007a 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 389 007c 5B00     		lsls	r3, r3, #1
 390 007e 7B84     		strh	r3, [r7, #34]	@ movhi
 391              	.L17:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 15


 391:./Library/stm32f4xx_spi.c ****     }
 392:./Library/stm32f4xx_spi.c **** 
 393:./Library/stm32f4xx_spi.c ****     /* Get I2S source Clock frequency  ****************************************/
 394:./Library/stm32f4xx_spi.c ****       
 395:./Library/stm32f4xx_spi.c ****     /* If an external I2S clock has to be used, this define should be set  
 396:./Library/stm32f4xx_spi.c ****        in the project configuration or in the stm32f4xx_conf.h file */
 397:./Library/stm32f4xx_spi.c ****   #ifdef I2S_EXTERNAL_CLOCK_VAL     
 398:./Library/stm32f4xx_spi.c ****     /* Set external clock as I2S clock source */
 399:./Library/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) == 0)
 400:./Library/stm32f4xx_spi.c ****     {
 401:./Library/stm32f4xx_spi.c ****       RCC->CFGR |= (uint32_t)RCC_CFGR_I2SSRC;
 402:./Library/stm32f4xx_spi.c ****     }
 403:./Library/stm32f4xx_spi.c ****     
 404:./Library/stm32f4xx_spi.c ****     /* Set the I2S clock to the external clock  value */
 405:./Library/stm32f4xx_spi.c ****     i2sclk = I2S_EXTERNAL_CLOCK_VAL;
 406:./Library/stm32f4xx_spi.c **** 
 407:./Library/stm32f4xx_spi.c ****   #else /* There is no define for External I2S clock source */
 408:./Library/stm32f4xx_spi.c ****     /* Set PLLI2S as I2S clock source */
 409:./Library/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) != 0)
 392              		.loc 1 409 13
 393 0080 544B     		ldr	r3, .L25
 394 0082 9B68     		ldr	r3, [r3, #8]
 395              		.loc 1 409 20
 396 0084 03F40003 		and	r3, r3, #8388608
 397              		.loc 1 409 8
 398 0088 002B     		cmp	r3, #0
 399 008a 05D0     		beq	.L18
 410:./Library/stm32f4xx_spi.c ****     {
 411:./Library/stm32f4xx_spi.c ****       RCC->CFGR &= ~(uint32_t)RCC_CFGR_I2SSRC;
 400              		.loc 1 411 17
 401 008c 514B     		ldr	r3, .L25
 402 008e 9B68     		ldr	r3, [r3, #8]
 403 0090 504A     		ldr	r2, .L25
 404 0092 23F40003 		bic	r3, r3, #8388608
 405 0096 9360     		str	r3, [r2, #8]
 406              	.L18:
 412:./Library/stm32f4xx_spi.c ****     }    
 413:./Library/stm32f4xx_spi.c ****     
 414:./Library/stm32f4xx_spi.c ****     /* Get the PLLI2SN value */
 415:./Library/stm32f4xx_spi.c ****     plln = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6) & \
 407              		.loc 1 415 28
 408 0098 4E4B     		ldr	r3, .L25
 409 009a D3F88430 		ldr	r3, [r3, #132]
 410              		.loc 1 415 67
 411 009e 9B09     		lsrs	r3, r3, #6
 412              		.loc 1 415 10
 413 00a0 C3F30803 		ubfx	r3, r3, #0, #9
 414 00a4 FB60     		str	r3, [r7, #12]
 416:./Library/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SN >> 6));
 417:./Library/stm32f4xx_spi.c ****     
 418:./Library/stm32f4xx_spi.c ****     /* Get the PLLI2SR value */
 419:./Library/stm32f4xx_spi.c ****     pllr = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28) & \
 415              		.loc 1 419 28
 416 00a6 4B4B     		ldr	r3, .L25
 417 00a8 D3F88430 		ldr	r3, [r3, #132]
 418              		.loc 1 419 67
 419 00ac 1B0F     		lsrs	r3, r3, #28
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 16


 420              		.loc 1 419 10
 421 00ae 03F00703 		and	r3, r3, #7
 422 00b2 BB60     		str	r3, [r7, #8]
 420:./Library/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SR >> 28));
 421:./Library/stm32f4xx_spi.c ****     
 422:./Library/stm32f4xx_spi.c ****     /* Get the PLLM value */
 423:./Library/stm32f4xx_spi.c ****     pllm = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 423              		.loc 1 423 26
 424 00b4 474B     		ldr	r3, .L25
 425 00b6 5B68     		ldr	r3, [r3, #4]
 426              		.loc 1 423 10
 427 00b8 03F03F03 		and	r3, r3, #63
 428 00bc 3B61     		str	r3, [r7, #16]
 424:./Library/stm32f4xx_spi.c **** 
 425:./Library/stm32f4xx_spi.c ****     if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)
 429              		.loc 1 425 12
 430 00be 454B     		ldr	r3, .L25
 431 00c0 5B68     		ldr	r3, [r3, #4]
 432              		.loc 1 425 22
 433 00c2 03F48003 		and	r3, r3, #4194304
 434              		.loc 1 425 7
 435 00c6 B3F5800F 		cmp	r3, #4194304
 436 00ca 0BD1     		bne	.L19
 426:./Library/stm32f4xx_spi.c ****     {
 427:./Library/stm32f4xx_spi.c ****       /* Get the I2S source clock value */
 428:./Library/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSE_VALUE / pllm) * plln) / pllr);
 437              		.loc 1 428 39
 438 00cc 424A     		ldr	r2, .L25+4
 439 00ce 3B69     		ldr	r3, [r7, #16]
 440 00d0 B2FBF3F3 		udiv	r3, r2, r3
 441              		.loc 1 428 47
 442 00d4 FA68     		ldr	r2, [r7, #12]
 443 00d6 03FB02F2 		mul	r2, r3, r2
 444              		.loc 1 428 14
 445 00da BB68     		ldr	r3, [r7, #8]
 446 00dc B2FBF3F3 		udiv	r3, r2, r3
 447 00e0 BB61     		str	r3, [r7, #24]
 448 00e2 0AE0     		b	.L20
 449              	.L19:
 429:./Library/stm32f4xx_spi.c ****     }
 430:./Library/stm32f4xx_spi.c ****     else
 431:./Library/stm32f4xx_spi.c ****     { /* Get the I2S source clock value */
 432:./Library/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSI_VALUE / pllm) * plln) / pllr);
 450              		.loc 1 432 39
 451 00e4 3D4A     		ldr	r2, .L25+8
 452 00e6 3B69     		ldr	r3, [r7, #16]
 453 00e8 B2FBF3F3 		udiv	r3, r2, r3
 454              		.loc 1 432 47
 455 00ec FA68     		ldr	r2, [r7, #12]
 456 00ee 03FB02F2 		mul	r2, r3, r2
 457              		.loc 1 432 14
 458 00f2 BB68     		ldr	r3, [r7, #8]
 459 00f4 B2FBF3F3 		udiv	r3, r2, r3
 460 00f8 BB61     		str	r3, [r7, #24]
 461              	.L20:
 433:./Library/stm32f4xx_spi.c ****     }
 434:./Library/stm32f4xx_spi.c ****   #endif /* I2S_EXTERNAL_CLOCK_VAL */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 17


 435:./Library/stm32f4xx_spi.c ****     
 436:./Library/stm32f4xx_spi.c ****     /* Compute the Real divider depending on the MCLK output state, with a floating point */
 437:./Library/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 462              		.loc 1 437 22
 463 00fa 3B68     		ldr	r3, [r7]
 464 00fc DB88     		ldrh	r3, [r3, #6]
 465              		.loc 1 437 7
 466 00fe B3F5007F 		cmp	r3, #512
 467 0102 0FD1     		bne	.L21
 438:./Library/stm32f4xx_spi.c ****     {
 439:./Library/stm32f4xx_spi.c ****       /* MCLK output is enabled */
 440:./Library/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 468              		.loc 1 440 35
 469 0104 BB69     		ldr	r3, [r7, #24]
 470 0106 1A0A     		lsrs	r2, r3, #8
 471              		.loc 1 440 42
 472 0108 1346     		mov	r3, r2
 473 010a 9B00     		lsls	r3, r3, #2
 474 010c 1344     		add	r3, r3, r2
 475 010e 5B00     		lsls	r3, r3, #1
 476 0110 1A46     		mov	r2, r3
 477              		.loc 1 440 64
 478 0112 3B68     		ldr	r3, [r7]
 479 0114 9B68     		ldr	r3, [r3, #8]
 480              		.loc 1 440 48
 481 0116 B2FBF3F3 		udiv	r3, r2, r3
 482              		.loc 1 440 13
 483 011a 9BB2     		uxth	r3, r3
 484 011c 0533     		adds	r3, r3, #5
 485 011e 9BB2     		uxth	r3, r3
 486              		.loc 1 440 11
 487 0120 FB61     		str	r3, [r7, #28]
 488 0122 12E0     		b	.L22
 489              	.L21:
 441:./Library/stm32f4xx_spi.c ****     }
 442:./Library/stm32f4xx_spi.c ****     else
 443:./Library/stm32f4xx_spi.c ****     {
 444:./Library/stm32f4xx_spi.c ****       /* MCLK output is disabled */
 445:./Library/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq)) + 
 490              		.loc 1 445 41
 491 0124 7B8C     		ldrh	r3, [r7, #34]
 492 0126 5B01     		lsls	r3, r3, #5
 493 0128 1A46     		mov	r2, r3
 494              		.loc 1 445 35
 495 012a BB69     		ldr	r3, [r7, #24]
 496 012c B3FBF2F2 		udiv	r2, r3, r2
 497              		.loc 1 445 58
 498 0130 1346     		mov	r3, r2
 499 0132 9B00     		lsls	r3, r3, #2
 500 0134 1344     		add	r3, r3, r2
 501 0136 5B00     		lsls	r3, r3, #1
 502 0138 1A46     		mov	r2, r3
 503              		.loc 1 445 80
 504 013a 3B68     		ldr	r3, [r7]
 505 013c 9B68     		ldr	r3, [r3, #8]
 506              		.loc 1 445 64
 507 013e B2FBF3F3 		udiv	r3, r2, r3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 18


 508              		.loc 1 445 13
 509 0142 9BB2     		uxth	r3, r3
 510 0144 0533     		adds	r3, r3, #5
 511 0146 9BB2     		uxth	r3, r3
 512              		.loc 1 445 11
 513 0148 FB61     		str	r3, [r7, #28]
 514              	.L22:
 446:./Library/stm32f4xx_spi.c ****     }
 447:./Library/stm32f4xx_spi.c ****     
 448:./Library/stm32f4xx_spi.c ****     /* Remove the flatting point */
 449:./Library/stm32f4xx_spi.c ****     tmp = tmp / 10;  
 515              		.loc 1 449 9
 516 014a FB69     		ldr	r3, [r7, #28]
 517 014c 244A     		ldr	r2, .L25+12
 518 014e A2FB0323 		umull	r2, r3, r2, r3
 519 0152 DB08     		lsrs	r3, r3, #3
 520 0154 FB61     		str	r3, [r7, #28]
 450:./Library/stm32f4xx_spi.c ****       
 451:./Library/stm32f4xx_spi.c ****     /* Check the parity of the divider */
 452:./Library/stm32f4xx_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 521              		.loc 1 452 14
 522 0156 FB69     		ldr	r3, [r7, #28]
 523 0158 9BB2     		uxth	r3, r3
 524              		.loc 1 452 12
 525 015a 03F00103 		and	r3, r3, #1
 526 015e BB84     		strh	r3, [r7, #36]	@ movhi
 453:./Library/stm32f4xx_spi.c ****    
 454:./Library/stm32f4xx_spi.c ****     /* Compute the i2sdiv prescaler */
 455:./Library/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 527              		.loc 1 455 30
 528 0160 BB8C     		ldrh	r3, [r7, #36]
 529 0162 FA69     		ldr	r2, [r7, #28]
 530 0164 D31A     		subs	r3, r2, r3
 531              		.loc 1 455 40
 532 0166 5B08     		lsrs	r3, r3, #1
 533              		.loc 1 455 12
 534 0168 FB84     		strh	r3, [r7, #38]	@ movhi
 456:./Library/stm32f4xx_spi.c ****    
 457:./Library/stm32f4xx_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 458:./Library/stm32f4xx_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 535              		.loc 1 458 12
 536 016a BB8C     		ldrh	r3, [r7, #36]	@ movhi
 537 016c 1B02     		lsls	r3, r3, #8
 538 016e BB84     		strh	r3, [r7, #36]	@ movhi
 539              	.L14:
 459:./Library/stm32f4xx_spi.c ****   }
 460:./Library/stm32f4xx_spi.c **** 
 461:./Library/stm32f4xx_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 462:./Library/stm32f4xx_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 540              		.loc 1 462 6
 541 0170 FB8C     		ldrh	r3, [r7, #38]
 542 0172 012B     		cmp	r3, #1
 543 0174 02D9     		bls	.L23
 544              		.loc 1 462 20 discriminator 1
 545 0176 FB8C     		ldrh	r3, [r7, #38]
 546 0178 FF2B     		cmp	r3, #255
 547 017a 03D9     		bls	.L24
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 19


 548              	.L23:
 463:./Library/stm32f4xx_spi.c ****   {
 464:./Library/stm32f4xx_spi.c ****     /* Set the default values */
 465:./Library/stm32f4xx_spi.c ****     i2sdiv = 2;
 549              		.loc 1 465 12
 550 017c 0223     		movs	r3, #2
 551 017e FB84     		strh	r3, [r7, #38]	@ movhi
 466:./Library/stm32f4xx_spi.c ****     i2sodd = 0;
 552              		.loc 1 466 12
 553 0180 0023     		movs	r3, #0
 554 0182 BB84     		strh	r3, [r7, #36]	@ movhi
 555              	.L24:
 467:./Library/stm32f4xx_spi.c ****   }
 468:./Library/stm32f4xx_spi.c **** 
 469:./Library/stm32f4xx_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 470:./Library/stm32f4xx_spi.c ****   SPIx->I2SPR = (uint16_t)((uint16_t)i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCL
 556              		.loc 1 470 91
 557 0184 3B68     		ldr	r3, [r7]
 558 0186 DA88     		ldrh	r2, [r3, #6]
 559              		.loc 1 470 47
 560 0188 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 561 018a 1343     		orrs	r3, r3, r2
 562 018c 9AB2     		uxth	r2, r3
 563              		.loc 1 470 17
 564 018e FB8C     		ldrh	r3, [r7, #38]	@ movhi
 565 0190 1343     		orrs	r3, r3, r2
 566 0192 9AB2     		uxth	r2, r3
 567              		.loc 1 470 15
 568 0194 7B68     		ldr	r3, [r7, #4]
 569 0196 1A84     		strh	r2, [r3, #32]	@ movhi
 471:./Library/stm32f4xx_spi.c ****  
 472:./Library/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 473:./Library/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 570              		.loc 1 473 80
 571 0198 3B68     		ldr	r3, [r7]
 572 019a 1A88     		ldrh	r2, [r3]
 474:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 573              		.loc 1 474 44
 574 019c 3B68     		ldr	r3, [r7]
 575 019e 5988     		ldrh	r1, [r3, #2]
 576              		.loc 1 474 86
 577 01a0 3B68     		ldr	r3, [r7]
 578 01a2 9888     		ldrh	r0, [r3, #4]
 475:./Library/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 579              		.loc 1 475 43
 580 01a4 3B68     		ldr	r3, [r7]
 581 01a6 9B89     		ldrh	r3, [r3, #12]
 474:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 582              		.loc 1 474 61
 583 01a8 0343     		orrs	r3, r3, r0
 584 01aa 9BB2     		uxth	r3, r3
 474:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 585              		.loc 1 474 19
 586 01ac 0B43     		orrs	r3, r3, r1
 587 01ae 9BB2     		uxth	r3, r3
 473:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 588              		.loc 1 473 55
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 20


 589 01b0 1343     		orrs	r3, r3, r2
 590 01b2 9AB2     		uxth	r2, r3
 473:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 591              		.loc 1 473 10
 592 01b4 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 593 01b6 1343     		orrs	r3, r3, r2
 594 01b8 9BB2     		uxth	r3, r3
 595 01ba 43F40063 		orr	r3, r3, #2048
 596 01be FB82     		strh	r3, [r7, #22]	@ movhi
 476:./Library/stm32f4xx_spi.c ****  
 477:./Library/stm32f4xx_spi.c **** #if defined(SPI_I2SCFGR_ASTRTEN)
 478:./Library/stm32f4xx_spi.c ****   if((I2S_InitStruct->I2S_Standard  == I2S_Standard_PCMShort) || (I2S_InitStruct->I2S_Standard  == 
 479:./Library/stm32f4xx_spi.c ****   {
 480:./Library/stm32f4xx_spi.c ****     /* Write to SPIx I2SCFGR */  
 481:./Library/stm32f4xx_spi.c ****     SPIx->I2SCFGR = tmpreg | SPI_I2SCFGR_ASTRTEN;
 482:./Library/stm32f4xx_spi.c ****   }
 483:./Library/stm32f4xx_spi.c **** #else
 484:./Library/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 485:./Library/stm32f4xx_spi.c ****   SPIx->I2SCFGR = tmpreg ;
 597              		.loc 1 485 17
 598 01c0 7B68     		ldr	r3, [r7, #4]
 599 01c2 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 600 01c4 9A83     		strh	r2, [r3, #28]	@ movhi
 486:./Library/stm32f4xx_spi.c **** #endif 
 487:./Library/stm32f4xx_spi.c **** }
 601              		.loc 1 487 1
 602 01c6 00BF     		nop
 603 01c8 2C37     		adds	r7, r7, #44
 604              	.LCFI14:
 605              		.cfi_def_cfa_offset 4
 606 01ca BD46     		mov	sp, r7
 607              	.LCFI15:
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 01cc 5DF8047B 		ldr	r7, [sp], #4
 611              	.LCFI16:
 612              		.cfi_restore 7
 613              		.cfi_def_cfa_offset 0
 614 01d0 7047     		bx	lr
 615              	.L26:
 616 01d2 00BF     		.align	2
 617              	.L25:
 618 01d4 00380240 		.word	1073887232
 619 01d8 40787D01 		.word	25000000
 620 01dc 0024F400 		.word	16000000
 621 01e0 CDCCCCCC 		.word	-858993459
 622              		.cfi_endproc
 623              	.LFE125:
 625              		.section	.text.SPI_StructInit,"ax",%progbits
 626              		.align	1
 627              		.global	SPI_StructInit
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 632              	SPI_StructInit:
 633              	.LFB126:
 488:./Library/stm32f4xx_spi.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 21


 489:./Library/stm32f4xx_spi.c **** /**
 490:./Library/stm32f4xx_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 491:./Library/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
 492:./Library/stm32f4xx_spi.c ****   * @retval None
 493:./Library/stm32f4xx_spi.c ****   */
 494:./Library/stm32f4xx_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 495:./Library/stm32f4xx_spi.c **** {
 634              		.loc 1 495 1
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              	.LCFI17:
 641              		.cfi_def_cfa_offset 4
 642              		.cfi_offset 7, -4
 643 0002 83B0     		sub	sp, sp, #12
 644              	.LCFI18:
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              	.LCFI19:
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 496:./Library/stm32f4xx_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 497:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_Direction member */
 498:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 650              		.loc 1 498 33
 651 0008 7B68     		ldr	r3, [r7, #4]
 652 000a 0022     		movs	r2, #0
 653 000c 1A80     		strh	r2, [r3]	@ movhi
 499:./Library/stm32f4xx_spi.c ****   /* initialize the SPI_Mode member */
 500:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 654              		.loc 1 500 28
 655 000e 7B68     		ldr	r3, [r7, #4]
 656 0010 0022     		movs	r2, #0
 657 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 501:./Library/stm32f4xx_spi.c ****   /* initialize the SPI_DataSize member */
 502:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 658              		.loc 1 502 32
 659 0014 7B68     		ldr	r3, [r7, #4]
 660 0016 0022     		movs	r2, #0
 661 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 503:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_CPOL member */
 504:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 662              		.loc 1 504 28
 663 001a 7B68     		ldr	r3, [r7, #4]
 664 001c 0022     		movs	r2, #0
 665 001e DA80     		strh	r2, [r3, #6]	@ movhi
 505:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_CPHA member */
 506:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 666              		.loc 1 506 28
 667 0020 7B68     		ldr	r3, [r7, #4]
 668 0022 0022     		movs	r2, #0
 669 0024 1A81     		strh	r2, [r3, #8]	@ movhi
 507:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_NSS member */
 508:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 670              		.loc 1 508 27
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 22


 671 0026 7B68     		ldr	r3, [r7, #4]
 672 0028 0022     		movs	r2, #0
 673 002a 5A81     		strh	r2, [r3, #10]	@ movhi
 509:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 510:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 674              		.loc 1 510 41
 675 002c 7B68     		ldr	r3, [r7, #4]
 676 002e 0022     		movs	r2, #0
 677 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 511:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_FirstBit member */
 512:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 678              		.loc 1 512 32
 679 0032 7B68     		ldr	r3, [r7, #4]
 680 0034 0022     		movs	r2, #0
 681 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 513:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 514:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 682              		.loc 1 514 37
 683 0038 7B68     		ldr	r3, [r7, #4]
 684 003a 0722     		movs	r2, #7
 685 003c 1A82     		strh	r2, [r3, #16]	@ movhi
 515:./Library/stm32f4xx_spi.c **** }
 686              		.loc 1 515 1
 687 003e 00BF     		nop
 688 0040 0C37     		adds	r7, r7, #12
 689              	.LCFI20:
 690              		.cfi_def_cfa_offset 4
 691 0042 BD46     		mov	sp, r7
 692              	.LCFI21:
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0044 5DF8047B 		ldr	r7, [sp], #4
 696              	.LCFI22:
 697              		.cfi_restore 7
 698              		.cfi_def_cfa_offset 0
 699 0048 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE126:
 703              		.section	.text.I2S_StructInit,"ax",%progbits
 704              		.align	1
 705              		.global	I2S_StructInit
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 710              	I2S_StructInit:
 711              	.LFB127:
 516:./Library/stm32f4xx_spi.c **** 
 517:./Library/stm32f4xx_spi.c **** /**
 518:./Library/stm32f4xx_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 519:./Library/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
 520:./Library/stm32f4xx_spi.c ****   * @retval None
 521:./Library/stm32f4xx_spi.c ****   */
 522:./Library/stm32f4xx_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 523:./Library/stm32f4xx_spi.c **** {
 712              		.loc 1 523 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 23


 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              	.LCFI23:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 7, -4
 721 0002 83B0     		sub	sp, sp, #12
 722              	.LCFI24:
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              	.LCFI25:
 726              		.cfi_def_cfa_register 7
 727 0006 7860     		str	r0, [r7, #4]
 524:./Library/stm32f4xx_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 525:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_Mode member */
 526:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 728              		.loc 1 526 28
 729 0008 7B68     		ldr	r3, [r7, #4]
 730 000a 0022     		movs	r2, #0
 731 000c 1A80     		strh	r2, [r3]	@ movhi
 527:./Library/stm32f4xx_spi.c ****   
 528:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_Standard member */
 529:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 732              		.loc 1 529 32
 733 000e 7B68     		ldr	r3, [r7, #4]
 734 0010 0022     		movs	r2, #0
 735 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 530:./Library/stm32f4xx_spi.c ****   
 531:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_DataFormat member */
 532:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 736              		.loc 1 532 34
 737 0014 7B68     		ldr	r3, [r7, #4]
 738 0016 0022     		movs	r2, #0
 739 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 533:./Library/stm32f4xx_spi.c ****   
 534:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 535:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 740              		.loc 1 535 34
 741 001a 7B68     		ldr	r3, [r7, #4]
 742 001c 0022     		movs	r2, #0
 743 001e DA80     		strh	r2, [r3, #6]	@ movhi
 536:./Library/stm32f4xx_spi.c ****   
 537:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_AudioFreq member */
 538:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 744              		.loc 1 538 33
 745 0020 7B68     		ldr	r3, [r7, #4]
 746 0022 0222     		movs	r2, #2
 747 0024 9A60     		str	r2, [r3, #8]
 539:./Library/stm32f4xx_spi.c ****   
 540:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_CPOL member */
 541:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 748              		.loc 1 541 28
 749 0026 7B68     		ldr	r3, [r7, #4]
 750 0028 0022     		movs	r2, #0
 751 002a 9A81     		strh	r2, [r3, #12]	@ movhi
 542:./Library/stm32f4xx_spi.c **** }
 752              		.loc 1 542 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 24


 753 002c 00BF     		nop
 754 002e 0C37     		adds	r7, r7, #12
 755              	.LCFI26:
 756              		.cfi_def_cfa_offset 4
 757 0030 BD46     		mov	sp, r7
 758              	.LCFI27:
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 0032 5DF8047B 		ldr	r7, [sp], #4
 762              	.LCFI28:
 763              		.cfi_restore 7
 764              		.cfi_def_cfa_offset 0
 765 0036 7047     		bx	lr
 766              		.cfi_endproc
 767              	.LFE127:
 769              		.section	.text.SPI_Cmd,"ax",%progbits
 770              		.align	1
 771              		.global	SPI_Cmd
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 776              	SPI_Cmd:
 777              	.LFB128:
 543:./Library/stm32f4xx_spi.c **** 
 544:./Library/stm32f4xx_spi.c **** /**
 545:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 546:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 547:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 548:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 549:./Library/stm32f4xx_spi.c ****   * @retval None
 550:./Library/stm32f4xx_spi.c ****   */
 551:./Library/stm32f4xx_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 552:./Library/stm32f4xx_spi.c **** {
 778              		.loc 1 552 1
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 8
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              	.LCFI29:
 785              		.cfi_def_cfa_offset 4
 786              		.cfi_offset 7, -4
 787 0002 83B0     		sub	sp, sp, #12
 788              	.LCFI30:
 789              		.cfi_def_cfa_offset 16
 790 0004 00AF     		add	r7, sp, #0
 791              	.LCFI31:
 792              		.cfi_def_cfa_register 7
 793 0006 7860     		str	r0, [r7, #4]
 794 0008 0B46     		mov	r3, r1
 795 000a FB70     		strb	r3, [r7, #3]
 553:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 554:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 555:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 556:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 796              		.loc 1 556 6
 797 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 25


 798 000e 002B     		cmp	r3, #0
 799 0010 08D0     		beq	.L30
 557:./Library/stm32f4xx_spi.c ****   {
 558:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral */
 559:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_SPE;
 800              		.loc 1 559 15
 801 0012 7B68     		ldr	r3, [r7, #4]
 802 0014 1B88     		ldrh	r3, [r3]	@ movhi
 803 0016 9BB2     		uxth	r3, r3
 804 0018 43F04003 		orr	r3, r3, #64
 805 001c 9AB2     		uxth	r2, r3
 806 001e 7B68     		ldr	r3, [r7, #4]
 807 0020 1A80     		strh	r2, [r3]	@ movhi
 560:./Library/stm32f4xx_spi.c ****   }
 561:./Library/stm32f4xx_spi.c ****   else
 562:./Library/stm32f4xx_spi.c ****   {
 563:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral */
 564:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_SPE);
 565:./Library/stm32f4xx_spi.c ****   }
 566:./Library/stm32f4xx_spi.c **** }
 808              		.loc 1 566 1
 809 0022 07E0     		b	.L32
 810              	.L30:
 564:./Library/stm32f4xx_spi.c ****   }
 811              		.loc 1 564 15
 812 0024 7B68     		ldr	r3, [r7, #4]
 813 0026 1B88     		ldrh	r3, [r3]	@ movhi
 814 0028 9BB2     		uxth	r3, r3
 815 002a 23F04003 		bic	r3, r3, #64
 816 002e 9AB2     		uxth	r2, r3
 817 0030 7B68     		ldr	r3, [r7, #4]
 818 0032 1A80     		strh	r2, [r3]	@ movhi
 819              	.L32:
 820              		.loc 1 566 1
 821 0034 00BF     		nop
 822 0036 0C37     		adds	r7, r7, #12
 823              	.LCFI32:
 824              		.cfi_def_cfa_offset 4
 825 0038 BD46     		mov	sp, r7
 826              	.LCFI33:
 827              		.cfi_def_cfa_register 13
 828              		@ sp needed
 829 003a 5DF8047B 		ldr	r7, [sp], #4
 830              	.LCFI34:
 831              		.cfi_restore 7
 832              		.cfi_def_cfa_offset 0
 833 003e 7047     		bx	lr
 834              		.cfi_endproc
 835              	.LFE128:
 837              		.section	.text.I2S_Cmd,"ax",%progbits
 838              		.align	1
 839              		.global	I2S_Cmd
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	I2S_Cmd:
 845              	.LFB129:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 26


 567:./Library/stm32f4xx_spi.c **** 
 568:./Library/stm32f4xx_spi.c **** /**
 569:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 570:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral (or I2Sxext 
 571:./Library/stm32f4xx_spi.c ****   *         for full duplex mode).
 572:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 573:./Library/stm32f4xx_spi.c ****   *         This parameter can be: ENABLE or DISABLE.
 574:./Library/stm32f4xx_spi.c ****   * @retval None
 575:./Library/stm32f4xx_spi.c ****   */
 576:./Library/stm32f4xx_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 577:./Library/stm32f4xx_spi.c **** {
 846              		.loc 1 577 1
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 8
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851 0000 80B4     		push	{r7}
 852              	.LCFI35:
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 7, -4
 855 0002 83B0     		sub	sp, sp, #12
 856              	.LCFI36:
 857              		.cfi_def_cfa_offset 16
 858 0004 00AF     		add	r7, sp, #0
 859              	.LCFI37:
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 862 0008 0B46     		mov	r3, r1
 863 000a FB70     		strb	r3, [r7, #3]
 578:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 579:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH_EXT(SPIx));
 580:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 581:./Library/stm32f4xx_spi.c ****   
 582:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 864              		.loc 1 582 6
 865 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 866 000e 002B     		cmp	r3, #0
 867 0010 08D0     		beq	.L34
 583:./Library/stm32f4xx_spi.c ****   {
 584:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 585:./Library/stm32f4xx_spi.c ****     SPIx->I2SCFGR |= SPI_I2SCFGR_I2SE;
 868              		.loc 1 585 19
 869 0012 7B68     		ldr	r3, [r7, #4]
 870 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 871 0016 9BB2     		uxth	r3, r3
 872 0018 43F48063 		orr	r3, r3, #1024
 873 001c 9AB2     		uxth	r2, r3
 874 001e 7B68     		ldr	r3, [r7, #4]
 875 0020 9A83     		strh	r2, [r3, #28]	@ movhi
 586:./Library/stm32f4xx_spi.c ****   }
 587:./Library/stm32f4xx_spi.c ****   else
 588:./Library/stm32f4xx_spi.c ****   {
 589:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral in I2S mode */
 590:./Library/stm32f4xx_spi.c ****     SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SE);
 591:./Library/stm32f4xx_spi.c ****   }
 592:./Library/stm32f4xx_spi.c **** }
 876              		.loc 1 592 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 27


 877 0022 07E0     		b	.L36
 878              	.L34:
 590:./Library/stm32f4xx_spi.c ****   }
 879              		.loc 1 590 19
 880 0024 7B68     		ldr	r3, [r7, #4]
 881 0026 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 882 0028 9BB2     		uxth	r3, r3
 883 002a 23F48063 		bic	r3, r3, #1024
 884 002e 9AB2     		uxth	r2, r3
 885 0030 7B68     		ldr	r3, [r7, #4]
 886 0032 9A83     		strh	r2, [r3, #28]	@ movhi
 887              	.L36:
 888              		.loc 1 592 1
 889 0034 00BF     		nop
 890 0036 0C37     		adds	r7, r7, #12
 891              	.LCFI38:
 892              		.cfi_def_cfa_offset 4
 893 0038 BD46     		mov	sp, r7
 894              	.LCFI39:
 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 003a 5DF8047B 		ldr	r7, [sp], #4
 898              	.LCFI40:
 899              		.cfi_restore 7
 900              		.cfi_def_cfa_offset 0
 901 003e 7047     		bx	lr
 902              		.cfi_endproc
 903              	.LFE129:
 905              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 906              		.align	1
 907              		.global	SPI_DataSizeConfig
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 912              	SPI_DataSizeConfig:
 913              	.LFB130:
 593:./Library/stm32f4xx_spi.c **** 
 594:./Library/stm32f4xx_spi.c **** /**
 595:./Library/stm32f4xx_spi.c ****   * @brief  Configures the data size for the selected SPI.
 596:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 597:./Library/stm32f4xx_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 598:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 599:./Library/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_16b: Set data frame format to 16bit
 600:./Library/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_8b: Set data frame format to 8bit
 601:./Library/stm32f4xx_spi.c ****   * @retval None
 602:./Library/stm32f4xx_spi.c ****   */
 603:./Library/stm32f4xx_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 604:./Library/stm32f4xx_spi.c **** {
 914              		.loc 1 604 1
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 8
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919 0000 80B4     		push	{r7}
 920              	.LCFI41:
 921              		.cfi_def_cfa_offset 4
 922              		.cfi_offset 7, -4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 28


 923 0002 83B0     		sub	sp, sp, #12
 924              	.LCFI42:
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              	.LCFI43:
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
 930 0008 0B46     		mov	r3, r1
 931 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 605:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 606:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 607:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 608:./Library/stm32f4xx_spi.c ****   /* Clear DFF bit */
 609:./Library/stm32f4xx_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 932              		.loc 1 609 13
 933 000c 7B68     		ldr	r3, [r7, #4]
 934 000e 1B88     		ldrh	r3, [r3]	@ movhi
 935 0010 9BB2     		uxth	r3, r3
 936 0012 23F40063 		bic	r3, r3, #2048
 937 0016 9AB2     		uxth	r2, r3
 938 0018 7B68     		ldr	r3, [r7, #4]
 939 001a 1A80     		strh	r2, [r3]	@ movhi
 610:./Library/stm32f4xx_spi.c ****   /* Set new DFF bit value */
 611:./Library/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 940              		.loc 1 611 13
 941 001c 7B68     		ldr	r3, [r7, #4]
 942 001e 1B88     		ldrh	r3, [r3]	@ movhi
 943 0020 9AB2     		uxth	r2, r3
 944 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 945 0024 1343     		orrs	r3, r3, r2
 946 0026 9AB2     		uxth	r2, r3
 947 0028 7B68     		ldr	r3, [r7, #4]
 948 002a 1A80     		strh	r2, [r3]	@ movhi
 612:./Library/stm32f4xx_spi.c **** }
 949              		.loc 1 612 1
 950 002c 00BF     		nop
 951 002e 0C37     		adds	r7, r7, #12
 952              	.LCFI44:
 953              		.cfi_def_cfa_offset 4
 954 0030 BD46     		mov	sp, r7
 955              	.LCFI45:
 956              		.cfi_def_cfa_register 13
 957              		@ sp needed
 958 0032 5DF8047B 		ldr	r7, [sp], #4
 959              	.LCFI46:
 960              		.cfi_restore 7
 961              		.cfi_def_cfa_offset 0
 962 0036 7047     		bx	lr
 963              		.cfi_endproc
 964              	.LFE130:
 966              		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 967              		.align	1
 968              		.global	SPI_BiDirectionalLineConfig
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 973              	SPI_BiDirectionalLineConfig:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 29


 974              	.LFB131:
 613:./Library/stm32f4xx_spi.c **** 
 614:./Library/stm32f4xx_spi.c **** /**
 615:./Library/stm32f4xx_spi.c ****   * @brief  Selects the data transfer direction in bidirectional mode for the specified SPI.
 616:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 617:./Library/stm32f4xx_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bidirectional mode. 
 618:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 619:./Library/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Tx: Selects Tx transmission direction
 620:./Library/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Rx: Selects Rx receive direction
 621:./Library/stm32f4xx_spi.c ****   * @retval None
 622:./Library/stm32f4xx_spi.c ****   */
 623:./Library/stm32f4xx_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 624:./Library/stm32f4xx_spi.c **** {
 975              		.loc 1 624 1
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980 0000 80B4     		push	{r7}
 981              	.LCFI47:
 982              		.cfi_def_cfa_offset 4
 983              		.cfi_offset 7, -4
 984 0002 83B0     		sub	sp, sp, #12
 985              	.LCFI48:
 986              		.cfi_def_cfa_offset 16
 987 0004 00AF     		add	r7, sp, #0
 988              	.LCFI49:
 989              		.cfi_def_cfa_register 7
 990 0006 7860     		str	r0, [r7, #4]
 991 0008 0B46     		mov	r3, r1
 992 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 625:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 626:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 627:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 628:./Library/stm32f4xx_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 993              		.loc 1 628 6
 994 000c 7B88     		ldrh	r3, [r7, #2]
 995 000e B3F5804F 		cmp	r3, #16384
 996 0012 08D1     		bne	.L39
 629:./Library/stm32f4xx_spi.c ****   {
 630:./Library/stm32f4xx_spi.c ****     /* Set the Tx only mode */
 631:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 997              		.loc 1 631 15
 998 0014 7B68     		ldr	r3, [r7, #4]
 999 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1000 0018 9BB2     		uxth	r3, r3
 1001 001a 43F48043 		orr	r3, r3, #16384
 1002 001e 9AB2     		uxth	r2, r3
 1003 0020 7B68     		ldr	r3, [r7, #4]
 1004 0022 1A80     		strh	r2, [r3]	@ movhi
 632:./Library/stm32f4xx_spi.c ****   }
 633:./Library/stm32f4xx_spi.c ****   else
 634:./Library/stm32f4xx_spi.c ****   {
 635:./Library/stm32f4xx_spi.c ****     /* Set the Rx only mode */
 636:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 637:./Library/stm32f4xx_spi.c ****   }
 638:./Library/stm32f4xx_spi.c **** }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 30


 1005              		.loc 1 638 1
 1006 0024 07E0     		b	.L41
 1007              	.L39:
 636:./Library/stm32f4xx_spi.c ****   }
 1008              		.loc 1 636 15
 1009 0026 7B68     		ldr	r3, [r7, #4]
 1010 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1011 002a 9BB2     		uxth	r3, r3
 1012 002c 23F48043 		bic	r3, r3, #16384
 1013 0030 9AB2     		uxth	r2, r3
 1014 0032 7B68     		ldr	r3, [r7, #4]
 1015 0034 1A80     		strh	r2, [r3]	@ movhi
 1016              	.L41:
 1017              		.loc 1 638 1
 1018 0036 00BF     		nop
 1019 0038 0C37     		adds	r7, r7, #12
 1020              	.LCFI50:
 1021              		.cfi_def_cfa_offset 4
 1022 003a BD46     		mov	sp, r7
 1023              	.LCFI51:
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 003c 5DF8047B 		ldr	r7, [sp], #4
 1027              	.LCFI52:
 1028              		.cfi_restore 7
 1029              		.cfi_def_cfa_offset 0
 1030 0040 7047     		bx	lr
 1031              		.cfi_endproc
 1032              	.LFE131:
 1034              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 1035              		.align	1
 1036              		.global	SPI_NSSInternalSoftwareConfig
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1041              	SPI_NSSInternalSoftwareConfig:
 1042              	.LFB132:
 639:./Library/stm32f4xx_spi.c **** 
 640:./Library/stm32f4xx_spi.c **** /**
 641:./Library/stm32f4xx_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 642:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 643:./Library/stm32f4xx_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 644:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 645:./Library/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 646:./Library/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 647:./Library/stm32f4xx_spi.c ****   * @retval None
 648:./Library/stm32f4xx_spi.c ****   */
 649:./Library/stm32f4xx_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 650:./Library/stm32f4xx_spi.c **** {
 1043              		.loc 1 650 1
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 1048 0000 80B4     		push	{r7}
 1049              	.LCFI53:
 1050              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 31


 1051              		.cfi_offset 7, -4
 1052 0002 83B0     		sub	sp, sp, #12
 1053              	.LCFI54:
 1054              		.cfi_def_cfa_offset 16
 1055 0004 00AF     		add	r7, sp, #0
 1056              	.LCFI55:
 1057              		.cfi_def_cfa_register 7
 1058 0006 7860     		str	r0, [r7, #4]
 1059 0008 0B46     		mov	r3, r1
 1060 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 651:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 652:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 653:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 654:./Library/stm32f4xx_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 1061              		.loc 1 654 6
 1062 000c 7B88     		ldrh	r3, [r7, #2]
 1063 000e 4FF6FF62 		movw	r2, #65279
 1064 0012 9342     		cmp	r3, r2
 1065 0014 08D0     		beq	.L43
 655:./Library/stm32f4xx_spi.c ****   {
 656:./Library/stm32f4xx_spi.c ****     /* Set NSS pin internally by software */
 657:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 1066              		.loc 1 657 15
 1067 0016 7B68     		ldr	r3, [r7, #4]
 1068 0018 1B88     		ldrh	r3, [r3]	@ movhi
 1069 001a 9BB2     		uxth	r3, r3
 1070 001c 43F48073 		orr	r3, r3, #256
 1071 0020 9AB2     		uxth	r2, r3
 1072 0022 7B68     		ldr	r3, [r7, #4]
 1073 0024 1A80     		strh	r2, [r3]	@ movhi
 658:./Library/stm32f4xx_spi.c ****   }
 659:./Library/stm32f4xx_spi.c ****   else
 660:./Library/stm32f4xx_spi.c ****   {
 661:./Library/stm32f4xx_spi.c ****     /* Reset NSS pin internally by software */
 662:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 663:./Library/stm32f4xx_spi.c ****   }
 664:./Library/stm32f4xx_spi.c **** }
 1074              		.loc 1 664 1
 1075 0026 07E0     		b	.L45
 1076              	.L43:
 662:./Library/stm32f4xx_spi.c ****   }
 1077              		.loc 1 662 15
 1078 0028 7B68     		ldr	r3, [r7, #4]
 1079 002a 1B88     		ldrh	r3, [r3]	@ movhi
 1080 002c 9BB2     		uxth	r3, r3
 1081 002e 23F48073 		bic	r3, r3, #256
 1082 0032 9AB2     		uxth	r2, r3
 1083 0034 7B68     		ldr	r3, [r7, #4]
 1084 0036 1A80     		strh	r2, [r3]	@ movhi
 1085              	.L45:
 1086              		.loc 1 664 1
 1087 0038 00BF     		nop
 1088 003a 0C37     		adds	r7, r7, #12
 1089              	.LCFI56:
 1090              		.cfi_def_cfa_offset 4
 1091 003c BD46     		mov	sp, r7
 1092              	.LCFI57:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 32


 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 003e 5DF8047B 		ldr	r7, [sp], #4
 1096              	.LCFI58:
 1097              		.cfi_restore 7
 1098              		.cfi_def_cfa_offset 0
 1099 0042 7047     		bx	lr
 1100              		.cfi_endproc
 1101              	.LFE132:
 1103              		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 1104              		.align	1
 1105              		.global	SPI_SSOutputCmd
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1110              	SPI_SSOutputCmd:
 1111              	.LFB133:
 665:./Library/stm32f4xx_spi.c **** 
 666:./Library/stm32f4xx_spi.c **** /**
 667:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 668:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 669:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 670:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 671:./Library/stm32f4xx_spi.c ****   * @retval None
 672:./Library/stm32f4xx_spi.c ****   */
 673:./Library/stm32f4xx_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 674:./Library/stm32f4xx_spi.c **** {
 1112              		.loc 1 674 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117 0000 80B4     		push	{r7}
 1118              	.LCFI59:
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 7, -4
 1121 0002 83B0     		sub	sp, sp, #12
 1122              	.LCFI60:
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI61:
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 1128 0008 0B46     		mov	r3, r1
 1129 000a FB70     		strb	r3, [r7, #3]
 675:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 676:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 677:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 678:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1130              		.loc 1 678 6
 1131 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1132 000e 002B     		cmp	r3, #0
 1133 0010 08D0     		beq	.L47
 679:./Library/stm32f4xx_spi.c ****   {
 680:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI SS output */
 681:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= (uint16_t)SPI_CR2_SSOE;
 1134              		.loc 1 681 15
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 33


 1135 0012 7B68     		ldr	r3, [r7, #4]
 1136 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1137 0016 9BB2     		uxth	r3, r3
 1138 0018 43F00403 		orr	r3, r3, #4
 1139 001c 9AB2     		uxth	r2, r3
 1140 001e 7B68     		ldr	r3, [r7, #4]
 1141 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 682:./Library/stm32f4xx_spi.c ****   }
 683:./Library/stm32f4xx_spi.c ****   else
 684:./Library/stm32f4xx_spi.c ****   {
 685:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI SS output */
 686:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_SSOE);
 687:./Library/stm32f4xx_spi.c ****   }
 688:./Library/stm32f4xx_spi.c **** }
 1142              		.loc 1 688 1
 1143 0022 07E0     		b	.L49
 1144              	.L47:
 686:./Library/stm32f4xx_spi.c ****   }
 1145              		.loc 1 686 15
 1146 0024 7B68     		ldr	r3, [r7, #4]
 1147 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1148 0028 9BB2     		uxth	r3, r3
 1149 002a 23F00403 		bic	r3, r3, #4
 1150 002e 9AB2     		uxth	r2, r3
 1151 0030 7B68     		ldr	r3, [r7, #4]
 1152 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1153              	.L49:
 1154              		.loc 1 688 1
 1155 0034 00BF     		nop
 1156 0036 0C37     		adds	r7, r7, #12
 1157              	.LCFI62:
 1158              		.cfi_def_cfa_offset 4
 1159 0038 BD46     		mov	sp, r7
 1160              	.LCFI63:
 1161              		.cfi_def_cfa_register 13
 1162              		@ sp needed
 1163 003a 5DF8047B 		ldr	r7, [sp], #4
 1164              	.LCFI64:
 1165              		.cfi_restore 7
 1166              		.cfi_def_cfa_offset 0
 1167 003e 7047     		bx	lr
 1168              		.cfi_endproc
 1169              	.LFE133:
 1171              		.section	.text.SPI_TIModeCmd,"ax",%progbits
 1172              		.align	1
 1173              		.global	SPI_TIModeCmd
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1178              	SPI_TIModeCmd:
 1179              	.LFB134:
 689:./Library/stm32f4xx_spi.c **** 
 690:./Library/stm32f4xx_spi.c **** /**
 691:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 692:./Library/stm32f4xx_spi.c ****   *   
 693:./Library/stm32f4xx_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 694:./Library/stm32f4xx_spi.c ****   *         been called. 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 34


 695:./Library/stm32f4xx_spi.c ****   * @note   When TI mode is selected, the control bits SSM, SSI, CPOL and CPHA 
 696:./Library/stm32f4xx_spi.c ****   *         are not taken into consideration and are configured by hardware
 697:./Library/stm32f4xx_spi.c ****   *         respectively to the TI mode requirements.  
 698:./Library/stm32f4xx_spi.c ****   * 
 699:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 
 700:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI TI communication mode.
 701:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 702:./Library/stm32f4xx_spi.c ****   * @retval None
 703:./Library/stm32f4xx_spi.c ****   */
 704:./Library/stm32f4xx_spi.c **** void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 705:./Library/stm32f4xx_spi.c **** {
 1180              		.loc 1 705 1
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 8
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185 0000 80B4     		push	{r7}
 1186              	.LCFI65:
 1187              		.cfi_def_cfa_offset 4
 1188              		.cfi_offset 7, -4
 1189 0002 83B0     		sub	sp, sp, #12
 1190              	.LCFI66:
 1191              		.cfi_def_cfa_offset 16
 1192 0004 00AF     		add	r7, sp, #0
 1193              	.LCFI67:
 1194              		.cfi_def_cfa_register 7
 1195 0006 7860     		str	r0, [r7, #4]
 1196 0008 0B46     		mov	r3, r1
 1197 000a FB70     		strb	r3, [r7, #3]
 706:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 707:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 708:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 709:./Library/stm32f4xx_spi.c **** 
 710:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1198              		.loc 1 710 6
 1199 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1200 000e 002B     		cmp	r3, #0
 1201 0010 08D0     		beq	.L51
 711:./Library/stm32f4xx_spi.c ****   {
 712:./Library/stm32f4xx_spi.c ****     /* Enable the TI mode for the selected SPI peripheral */
 713:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_CR2_FRF;
 1202              		.loc 1 713 15
 1203 0012 7B68     		ldr	r3, [r7, #4]
 1204 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1205 0016 9BB2     		uxth	r3, r3
 1206 0018 43F01003 		orr	r3, r3, #16
 1207 001c 9AB2     		uxth	r2, r3
 1208 001e 7B68     		ldr	r3, [r7, #4]
 1209 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 714:./Library/stm32f4xx_spi.c ****   }
 715:./Library/stm32f4xx_spi.c ****   else
 716:./Library/stm32f4xx_spi.c ****   {
 717:./Library/stm32f4xx_spi.c ****     /* Disable the TI mode for the selected SPI peripheral */
 718:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_CR2_FRF;
 719:./Library/stm32f4xx_spi.c ****   }
 720:./Library/stm32f4xx_spi.c **** }
 1210              		.loc 1 720 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 35


 1211 0022 07E0     		b	.L53
 1212              	.L51:
 718:./Library/stm32f4xx_spi.c ****   }
 1213              		.loc 1 718 15
 1214 0024 7B68     		ldr	r3, [r7, #4]
 1215 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1216 0028 9BB2     		uxth	r3, r3
 1217 002a 23F01003 		bic	r3, r3, #16
 1218 002e 9AB2     		uxth	r2, r3
 1219 0030 7B68     		ldr	r3, [r7, #4]
 1220 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1221              	.L53:
 1222              		.loc 1 720 1
 1223 0034 00BF     		nop
 1224 0036 0C37     		adds	r7, r7, #12
 1225              	.LCFI68:
 1226              		.cfi_def_cfa_offset 4
 1227 0038 BD46     		mov	sp, r7
 1228              	.LCFI69:
 1229              		.cfi_def_cfa_register 13
 1230              		@ sp needed
 1231 003a 5DF8047B 		ldr	r7, [sp], #4
 1232              	.LCFI70:
 1233              		.cfi_restore 7
 1234              		.cfi_def_cfa_offset 0
 1235 003e 7047     		bx	lr
 1236              		.cfi_endproc
 1237              	.LFE134:
 1239              		.section	.text.I2S_FullDuplexConfig,"ax",%progbits
 1240              		.align	1
 1241              		.global	I2S_FullDuplexConfig
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1246              	I2S_FullDuplexConfig:
 1247              	.LFB135:
 721:./Library/stm32f4xx_spi.c **** 
 722:./Library/stm32f4xx_spi.c **** /**
 723:./Library/stm32f4xx_spi.c ****   * @brief  Configures the full duplex mode for the I2Sx peripheral using its
 724:./Library/stm32f4xx_spi.c ****   *         extension I2Sxext according to the specified parameters in the 
 725:./Library/stm32f4xx_spi.c ****   *         I2S_InitStruct.
 726:./Library/stm32f4xx_spi.c ****   * @param  I2Sxext: where x can be  2 or 3 to select the I2S peripheral extension block.
 727:./Library/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 728:./Library/stm32f4xx_spi.c ****   *         contains the configuration information for the specified I2S peripheral
 729:./Library/stm32f4xx_spi.c ****   *         extension.
 730:./Library/stm32f4xx_spi.c ****   * 
 731:./Library/stm32f4xx_spi.c ****   * @note   The structure pointed by I2S_InitStruct parameter should be the same
 732:./Library/stm32f4xx_spi.c ****   *         used for the master I2S peripheral. In this case, if the master is 
 733:./Library/stm32f4xx_spi.c ****   *         configured as transmitter, the slave will be receiver and vice versa.
 734:./Library/stm32f4xx_spi.c ****   *         Or you can force a different mode by modifying the field I2S_Mode to the
 735:./Library/stm32f4xx_spi.c ****   *         value I2S_SlaveRx or I2S_SlaveTx independently of the master configuration.    
 736:./Library/stm32f4xx_spi.c ****   *         
 737:./Library/stm32f4xx_spi.c ****   * @note   The I2S full duplex extension can be configured in slave mode only.    
 738:./Library/stm32f4xx_spi.c ****   *  
 739:./Library/stm32f4xx_spi.c ****   * @retval None
 740:./Library/stm32f4xx_spi.c ****   */
 741:./Library/stm32f4xx_spi.c **** void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 36


 742:./Library/stm32f4xx_spi.c **** {
 1248              		.loc 1 742 1
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 16
 1251              		@ frame_needed = 1, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 1253 0000 80B4     		push	{r7}
 1254              	.LCFI71:
 1255              		.cfi_def_cfa_offset 4
 1256              		.cfi_offset 7, -4
 1257 0002 85B0     		sub	sp, sp, #20
 1258              	.LCFI72:
 1259              		.cfi_def_cfa_offset 24
 1260 0004 00AF     		add	r7, sp, #0
 1261              	.LCFI73:
 1262              		.cfi_def_cfa_register 7
 1263 0006 7860     		str	r0, [r7, #4]
 1264 0008 3960     		str	r1, [r7]
 743:./Library/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, tmp = 0;
 1265              		.loc 1 743 12
 1266 000a 0023     		movs	r3, #0
 1267 000c BB81     		strh	r3, [r7, #12]	@ movhi
 1268              		.loc 1 743 24
 1269 000e 0023     		movs	r3, #0
 1270 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 744:./Library/stm32f4xx_spi.c ****   
 745:./Library/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 746:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_EXT_PERIPH(I2Sxext));
 747:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 748:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 749:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 750:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 751:./Library/stm32f4xx_spi.c **** 
 752:./Library/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 753:./Library/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 754:./Library/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 1271              		.loc 1 754 20
 1272 0012 7B68     		ldr	r3, [r7, #4]
 1273 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1274 0016 9BB2     		uxth	r3, r3
 1275 0018 23F47B63 		bic	r3, r3, #4016
 1276 001c 23F00F03 		bic	r3, r3, #15
 1277 0020 9AB2     		uxth	r2, r3
 1278 0022 7B68     		ldr	r3, [r7, #4]
 1279 0024 9A83     		strh	r2, [r3, #28]	@ movhi
 755:./Library/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 1280              		.loc 1 755 18
 1281 0026 7B68     		ldr	r3, [r7, #4]
 1282 0028 0222     		movs	r2, #2
 1283 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 756:./Library/stm32f4xx_spi.c ****   
 757:./Library/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 758:./Library/stm32f4xx_spi.c ****   tmpreg = I2Sxext->I2SCFGR;
 1284              		.loc 1 758 10
 1285 002c 7B68     		ldr	r3, [r7, #4]
 1286 002e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1287 0030 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 37


 759:./Library/stm32f4xx_spi.c ****   
 760:./Library/stm32f4xx_spi.c ****   /* Get the mode to be configured for the extended I2S */
 761:./Library/stm32f4xx_spi.c ****   if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterTx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Slav
 1288              		.loc 1 761 22
 1289 0032 3B68     		ldr	r3, [r7]
 1290 0034 1B88     		ldrh	r3, [r3]
 1291              		.loc 1 761 6
 1292 0036 B3F5007F 		cmp	r3, #512
 1293 003a 03D0     		beq	.L55
 1294              		.loc 1 761 73 discriminator 1
 1295 003c 3B68     		ldr	r3, [r7]
 1296 003e 1B88     		ldrh	r3, [r3]
 1297              		.loc 1 761 55 discriminator 1
 1298 0040 002B     		cmp	r3, #0
 1299 0042 03D1     		bne	.L56
 1300              	.L55:
 762:./Library/stm32f4xx_spi.c ****   {
 763:./Library/stm32f4xx_spi.c ****     tmp = I2S_Mode_SlaveRx;
 1301              		.loc 1 763 9
 1302 0044 4FF48073 		mov	r3, #256
 1303 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 1304 004a 0BE0     		b	.L57
 1305              	.L56:
 764:./Library/stm32f4xx_spi.c ****   }
 765:./Library/stm32f4xx_spi.c ****   else
 766:./Library/stm32f4xx_spi.c ****   {
 767:./Library/stm32f4xx_spi.c ****     if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterRx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Sl
 1306              		.loc 1 767 24
 1307 004c 3B68     		ldr	r3, [r7]
 1308 004e 1B88     		ldrh	r3, [r3]
 1309              		.loc 1 767 8
 1310 0050 B3F5407F 		cmp	r3, #768
 1311 0054 04D0     		beq	.L58
 1312              		.loc 1 767 75 discriminator 1
 1313 0056 3B68     		ldr	r3, [r7]
 1314 0058 1B88     		ldrh	r3, [r3]
 1315              		.loc 1 767 57 discriminator 1
 1316 005a B3F5807F 		cmp	r3, #256
 1317 005e 01D1     		bne	.L57
 1318              	.L58:
 768:./Library/stm32f4xx_spi.c ****     {
 769:./Library/stm32f4xx_spi.c ****       tmp = I2S_Mode_SlaveTx;
 1319              		.loc 1 769 11
 1320 0060 0023     		movs	r3, #0
 1321 0062 FB81     		strh	r3, [r7, #14]	@ movhi
 1322              	.L57:
 770:./Library/stm32f4xx_spi.c ****     }
 771:./Library/stm32f4xx_spi.c ****   }
 772:./Library/stm32f4xx_spi.c **** 
 773:./Library/stm32f4xx_spi.c ****  
 774:./Library/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 775:./Library/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(tmp | \
 776:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1323              		.loc 1 776 44
 1324 0064 3B68     		ldr	r3, [r7]
 1325 0066 5A88     		ldrh	r2, [r3, #2]
 1326              		.loc 1 776 86
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 38


 1327 0068 3B68     		ldr	r3, [r7]
 1328 006a 9988     		ldrh	r1, [r3, #4]
 777:./Library/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 1329              		.loc 1 777 43
 1330 006c 3B68     		ldr	r3, [r7]
 1331 006e 9B89     		ldrh	r3, [r3, #12]
 776:./Library/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 1332              		.loc 1 776 61
 1333 0070 0B43     		orrs	r3, r3, r1
 1334 0072 9BB2     		uxth	r3, r3
 776:./Library/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 1335              		.loc 1 776 19
 1336 0074 1343     		orrs	r3, r3, r2
 1337 0076 9AB2     		uxth	r2, r3
 775:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1338              		.loc 1 775 55
 1339 0078 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1340 007a 1343     		orrs	r3, r3, r2
 1341 007c 9AB2     		uxth	r2, r3
 775:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1342              		.loc 1 775 10
 1343 007e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1344 0080 1343     		orrs	r3, r3, r2
 1345 0082 9BB2     		uxth	r3, r3
 1346 0084 43F40063 		orr	r3, r3, #2048
 1347 0088 BB81     		strh	r3, [r7, #12]	@ movhi
 778:./Library/stm32f4xx_spi.c ****  
 779:./Library/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 780:./Library/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR = tmpreg;
 1348              		.loc 1 780 20
 1349 008a 7B68     		ldr	r3, [r7, #4]
 1350 008c BA89     		ldrh	r2, [r7, #12]	@ movhi
 1351 008e 9A83     		strh	r2, [r3, #28]	@ movhi
 781:./Library/stm32f4xx_spi.c **** }
 1352              		.loc 1 781 1
 1353 0090 00BF     		nop
 1354 0092 1437     		adds	r7, r7, #20
 1355              	.LCFI74:
 1356              		.cfi_def_cfa_offset 4
 1357 0094 BD46     		mov	sp, r7
 1358              	.LCFI75:
 1359              		.cfi_def_cfa_register 13
 1360              		@ sp needed
 1361 0096 5DF8047B 		ldr	r7, [sp], #4
 1362              	.LCFI76:
 1363              		.cfi_restore 7
 1364              		.cfi_def_cfa_offset 0
 1365 009a 7047     		bx	lr
 1366              		.cfi_endproc
 1367              	.LFE135:
 1369              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 1370              		.align	1
 1371              		.global	SPI_I2S_ReceiveData
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1376              	SPI_I2S_ReceiveData:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 39


 1377              	.LFB136:
 782:./Library/stm32f4xx_spi.c **** 
 783:./Library/stm32f4xx_spi.c **** /**
 784:./Library/stm32f4xx_spi.c ****   * @}
 785:./Library/stm32f4xx_spi.c ****   */
 786:./Library/stm32f4xx_spi.c **** 
 787:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group2 Data transfers functions
 788:./Library/stm32f4xx_spi.c ****  *  @brief   Data transfers functions
 789:./Library/stm32f4xx_spi.c ****  *
 790:./Library/stm32f4xx_spi.c **** @verbatim   
 791:./Library/stm32f4xx_spi.c ****  ===============================================================================
 792:./Library/stm32f4xx_spi.c ****                       ##### Data transfers functions #####
 793:./Library/stm32f4xx_spi.c ****  ===============================================================================  
 794:./Library/stm32f4xx_spi.c **** 
 795:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI data 
 796:./Library/stm32f4xx_spi.c ****       transfers. In reception, data are received and then stored into an internal 
 797:./Library/stm32f4xx_spi.c ****       Rx buffer while. In transmission, data are first stored into an internal Tx 
 798:./Library/stm32f4xx_spi.c ****       buffer before being transmitted.
 799:./Library/stm32f4xx_spi.c **** 
 800:./Library/stm32f4xx_spi.c ****  [..] The read access of the SPI_DR register can be done using the SPI_I2S_ReceiveData()
 801:./Library/stm32f4xx_spi.c ****       function and returns the Rx buffered value. Whereas a write access to the SPI_DR 
 802:./Library/stm32f4xx_spi.c ****       can be done using SPI_I2S_SendData() function and stores the written data into 
 803:./Library/stm32f4xx_spi.c ****       Tx buffer.
 804:./Library/stm32f4xx_spi.c **** 
 805:./Library/stm32f4xx_spi.c **** @endverbatim
 806:./Library/stm32f4xx_spi.c ****   * @{
 807:./Library/stm32f4xx_spi.c ****   */
 808:./Library/stm32f4xx_spi.c **** 
 809:./Library/stm32f4xx_spi.c **** /**
 810:./Library/stm32f4xx_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 811:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 812:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
 813:./Library/stm32f4xx_spi.c ****   * @retval The value of the received data.
 814:./Library/stm32f4xx_spi.c ****   */
 815:./Library/stm32f4xx_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 816:./Library/stm32f4xx_spi.c **** {
 1378              		.loc 1 816 1
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 8
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382              		@ link register save eliminated.
 1383 0000 80B4     		push	{r7}
 1384              	.LCFI77:
 1385              		.cfi_def_cfa_offset 4
 1386              		.cfi_offset 7, -4
 1387 0002 83B0     		sub	sp, sp, #12
 1388              	.LCFI78:
 1389              		.cfi_def_cfa_offset 16
 1390 0004 00AF     		add	r7, sp, #0
 1391              	.LCFI79:
 1392              		.cfi_def_cfa_register 7
 1393 0006 7860     		str	r0, [r7, #4]
 817:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 818:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 819:./Library/stm32f4xx_spi.c ****   
 820:./Library/stm32f4xx_spi.c ****   /* Return the data in the DR register */
 821:./Library/stm32f4xx_spi.c ****   return SPIx->DR;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 40


 1394              		.loc 1 821 14
 1395 0008 7B68     		ldr	r3, [r7, #4]
 1396 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1397 000c 9BB2     		uxth	r3, r3
 822:./Library/stm32f4xx_spi.c **** }
 1398              		.loc 1 822 1
 1399 000e 1846     		mov	r0, r3
 1400 0010 0C37     		adds	r7, r7, #12
 1401              	.LCFI80:
 1402              		.cfi_def_cfa_offset 4
 1403 0012 BD46     		mov	sp, r7
 1404              	.LCFI81:
 1405              		.cfi_def_cfa_register 13
 1406              		@ sp needed
 1407 0014 5DF8047B 		ldr	r7, [sp], #4
 1408              	.LCFI82:
 1409              		.cfi_restore 7
 1410              		.cfi_def_cfa_offset 0
 1411 0018 7047     		bx	lr
 1412              		.cfi_endproc
 1413              	.LFE136:
 1415              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 1416              		.align	1
 1417              		.global	SPI_I2S_SendData
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1422              	SPI_I2S_SendData:
 1423              	.LFB137:
 823:./Library/stm32f4xx_spi.c **** 
 824:./Library/stm32f4xx_spi.c **** /**
 825:./Library/stm32f4xx_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 826:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 827:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.     
 828:./Library/stm32f4xx_spi.c ****   * @param  Data: Data to be transmitted.
 829:./Library/stm32f4xx_spi.c ****   * @retval None
 830:./Library/stm32f4xx_spi.c ****   */
 831:./Library/stm32f4xx_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 832:./Library/stm32f4xx_spi.c **** {
 1424              		.loc 1 832 1
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 8
 1427              		@ frame_needed = 1, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
 1429 0000 80B4     		push	{r7}
 1430              	.LCFI83:
 1431              		.cfi_def_cfa_offset 4
 1432              		.cfi_offset 7, -4
 1433 0002 83B0     		sub	sp, sp, #12
 1434              	.LCFI84:
 1435              		.cfi_def_cfa_offset 16
 1436 0004 00AF     		add	r7, sp, #0
 1437              	.LCFI85:
 1438              		.cfi_def_cfa_register 7
 1439 0006 7860     		str	r0, [r7, #4]
 1440 0008 0B46     		mov	r3, r1
 1441 000a 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 41


 833:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 834:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 835:./Library/stm32f4xx_spi.c ****   
 836:./Library/stm32f4xx_spi.c ****   /* Write in the DR register the data to be sent */
 837:./Library/stm32f4xx_spi.c ****   SPIx->DR = Data;
 1442              		.loc 1 837 12
 1443 000c 7B68     		ldr	r3, [r7, #4]
 1444 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1445 0010 9A81     		strh	r2, [r3, #12]	@ movhi
 838:./Library/stm32f4xx_spi.c **** }
 1446              		.loc 1 838 1
 1447 0012 00BF     		nop
 1448 0014 0C37     		adds	r7, r7, #12
 1449              	.LCFI86:
 1450              		.cfi_def_cfa_offset 4
 1451 0016 BD46     		mov	sp, r7
 1452              	.LCFI87:
 1453              		.cfi_def_cfa_register 13
 1454              		@ sp needed
 1455 0018 5DF8047B 		ldr	r7, [sp], #4
 1456              	.LCFI88:
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 001c 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE137:
 1463              		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1464              		.align	1
 1465              		.global	SPI_CalculateCRC
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1470              	SPI_CalculateCRC:
 1471              	.LFB138:
 839:./Library/stm32f4xx_spi.c **** 
 840:./Library/stm32f4xx_spi.c **** /**
 841:./Library/stm32f4xx_spi.c ****   * @}
 842:./Library/stm32f4xx_spi.c ****   */
 843:./Library/stm32f4xx_spi.c **** 
 844:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group3 Hardware CRC Calculation functions
 845:./Library/stm32f4xx_spi.c ****  *  @brief   Hardware CRC Calculation functions
 846:./Library/stm32f4xx_spi.c ****  *
 847:./Library/stm32f4xx_spi.c **** @verbatim   
 848:./Library/stm32f4xx_spi.c ****  ===============================================================================
 849:./Library/stm32f4xx_spi.c ****                  ##### Hardware CRC Calculation functions #####
 850:./Library/stm32f4xx_spi.c ****  ===============================================================================  
 851:./Library/stm32f4xx_spi.c **** 
 852:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI CRC hardware 
 853:./Library/stm32f4xx_spi.c ****       calculation
 854:./Library/stm32f4xx_spi.c **** 
 855:./Library/stm32f4xx_spi.c ****  [..] SPI communication using CRC is possible through the following procedure:
 856:./Library/stm32f4xx_spi.c ****    (#) Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
 857:./Library/stm32f4xx_spi.c ****        Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
 858:./Library/stm32f4xx_spi.c ****        function.
 859:./Library/stm32f4xx_spi.c ****    (#) Enable the CRC calculation using the SPI_CalculateCRC() function.
 860:./Library/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function
 861:./Library/stm32f4xx_spi.c ****    (#) Before writing the last data to the TX buffer, set the CRCNext bit using the 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 42


 862:./Library/stm32f4xx_spi.c ****        SPI_TransmitCRC() function to indicate that after transmission of the last 
 863:./Library/stm32f4xx_spi.c ****        data, the CRC should be transmitted.
 864:./Library/stm32f4xx_spi.c ****    (#) After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
 865:./Library/stm32f4xx_spi.c ****         bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
 866:./Library/stm32f4xx_spi.c ****         value. 
 867:./Library/stm32f4xx_spi.c ****         If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
 868:./Library/stm32f4xx_spi.c ****         can be generated when the SPI_I2S_IT_ERR interrupt is enabled.
 869:./Library/stm32f4xx_spi.c **** 
 870:./Library/stm32f4xx_spi.c ****  [..]
 871:./Library/stm32f4xx_spi.c ****    (@) It is advised not to read the calculated CRC values during the communication.
 872:./Library/stm32f4xx_spi.c **** 
 873:./Library/stm32f4xx_spi.c ****    (@) When the SPI is in slave mode, be careful to enable CRC calculation only 
 874:./Library/stm32f4xx_spi.c ****        when the clock is stable, that is, when the clock is in the steady state. 
 875:./Library/stm32f4xx_spi.c ****        If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
 876:./Library/stm32f4xx_spi.c ****        to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
 877:./Library/stm32f4xx_spi.c ****        the value of the SPE bit.
 878:./Library/stm32f4xx_spi.c **** 
 879:./Library/stm32f4xx_spi.c ****    (@) With high bitrate frequencies, be careful when transmitting the CRC.
 880:./Library/stm32f4xx_spi.c ****        As the number of used CPU cycles has to be as low as possible in the CRC 
 881:./Library/stm32f4xx_spi.c ****        transfer phase, it is forbidden to call software functions in the CRC 
 882:./Library/stm32f4xx_spi.c ****        transmission sequence to avoid errors in the last data and CRC reception. 
 883:./Library/stm32f4xx_spi.c ****        In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
 884:./Library/stm32f4xx_spi.c ****        of the last data.
 885:./Library/stm32f4xx_spi.c **** 
 886:./Library/stm32f4xx_spi.c ****    (@) For high bit rate frequencies, it is advised to use the DMA mode to avoid the
 887:./Library/stm32f4xx_spi.c ****        degradation of the SPI speed performance due to CPU accesses impacting the 
 888:./Library/stm32f4xx_spi.c ****        SPI bandwidth.
 889:./Library/stm32f4xx_spi.c **** 
 890:./Library/stm32f4xx_spi.c ****    (@) When the STM32F4xx is configured as slave and the NSS hardware mode is 
 891:./Library/stm32f4xx_spi.c ****        used, the NSS pin needs to be kept low between the data phase and the CRC 
 892:./Library/stm32f4xx_spi.c ****        phase.
 893:./Library/stm32f4xx_spi.c **** 
 894:./Library/stm32f4xx_spi.c ****    (@) When the SPI is configured in slave mode with the CRC feature enabled, CRC
 895:./Library/stm32f4xx_spi.c ****        calculation takes place even if a high level is applied on the NSS pin. 
 896:./Library/stm32f4xx_spi.c ****        This may happen for example in case of a multi-slave environment where the 
 897:./Library/stm32f4xx_spi.c ****        communication master addresses slaves alternately.
 898:./Library/stm32f4xx_spi.c **** 
 899:./Library/stm32f4xx_spi.c ****    (@) Between a slave de-selection (high level on NSS) and a new slave selection 
 900:./Library/stm32f4xx_spi.c ****        (low level on NSS), the CRC value should be cleared on both master and slave
 901:./Library/stm32f4xx_spi.c ****        sides in order to resynchronize the master and slave for their respective 
 902:./Library/stm32f4xx_spi.c ****        CRC calculation.
 903:./Library/stm32f4xx_spi.c **** 
 904:./Library/stm32f4xx_spi.c ****    (@) To clear the CRC, follow the procedure below:
 905:./Library/stm32f4xx_spi.c ****        (#@) Disable SPI using the SPI_Cmd() function
 906:./Library/stm32f4xx_spi.c ****        (#@) Disable the CRC calculation using the SPI_CalculateCRC() function.
 907:./Library/stm32f4xx_spi.c ****        (#@) Enable the CRC calculation using the SPI_CalculateCRC() function.
 908:./Library/stm32f4xx_spi.c ****        (#@) Enable SPI using the SPI_Cmd() function.
 909:./Library/stm32f4xx_spi.c **** 
 910:./Library/stm32f4xx_spi.c **** @endverbatim
 911:./Library/stm32f4xx_spi.c ****   * @{
 912:./Library/stm32f4xx_spi.c ****   */
 913:./Library/stm32f4xx_spi.c **** 
 914:./Library/stm32f4xx_spi.c **** /**
 915:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 916:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 917:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 918:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 43


 919:./Library/stm32f4xx_spi.c ****   * @retval None
 920:./Library/stm32f4xx_spi.c ****   */
 921:./Library/stm32f4xx_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 922:./Library/stm32f4xx_spi.c **** {
 1472              		.loc 1 922 1
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 8
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477 0000 80B4     		push	{r7}
 1478              	.LCFI89:
 1479              		.cfi_def_cfa_offset 4
 1480              		.cfi_offset 7, -4
 1481 0002 83B0     		sub	sp, sp, #12
 1482              	.LCFI90:
 1483              		.cfi_def_cfa_offset 16
 1484 0004 00AF     		add	r7, sp, #0
 1485              	.LCFI91:
 1486              		.cfi_def_cfa_register 7
 1487 0006 7860     		str	r0, [r7, #4]
 1488 0008 0B46     		mov	r3, r1
 1489 000a FB70     		strb	r3, [r7, #3]
 923:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 924:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 925:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 926:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1490              		.loc 1 926 6
 1491 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1492 000e 002B     		cmp	r3, #0
 1493 0010 08D0     		beq	.L63
 927:./Library/stm32f4xx_spi.c ****   {
 928:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI CRC calculation */
 929:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_CRCEN;
 1494              		.loc 1 929 15
 1495 0012 7B68     		ldr	r3, [r7, #4]
 1496 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1497 0016 9BB2     		uxth	r3, r3
 1498 0018 43F40053 		orr	r3, r3, #8192
 1499 001c 9AB2     		uxth	r2, r3
 1500 001e 7B68     		ldr	r3, [r7, #4]
 1501 0020 1A80     		strh	r2, [r3]	@ movhi
 930:./Library/stm32f4xx_spi.c ****   }
 931:./Library/stm32f4xx_spi.c ****   else
 932:./Library/stm32f4xx_spi.c ****   {
 933:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI CRC calculation */
 934:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCEN);
 935:./Library/stm32f4xx_spi.c ****   }
 936:./Library/stm32f4xx_spi.c **** }
 1502              		.loc 1 936 1
 1503 0022 07E0     		b	.L65
 1504              	.L63:
 934:./Library/stm32f4xx_spi.c ****   }
 1505              		.loc 1 934 15
 1506 0024 7B68     		ldr	r3, [r7, #4]
 1507 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1508 0028 9BB2     		uxth	r3, r3
 1509 002a 23F40053 		bic	r3, r3, #8192
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 44


 1510 002e 9AB2     		uxth	r2, r3
 1511 0030 7B68     		ldr	r3, [r7, #4]
 1512 0032 1A80     		strh	r2, [r3]	@ movhi
 1513              	.L65:
 1514              		.loc 1 936 1
 1515 0034 00BF     		nop
 1516 0036 0C37     		adds	r7, r7, #12
 1517              	.LCFI92:
 1518              		.cfi_def_cfa_offset 4
 1519 0038 BD46     		mov	sp, r7
 1520              	.LCFI93:
 1521              		.cfi_def_cfa_register 13
 1522              		@ sp needed
 1523 003a 5DF8047B 		ldr	r7, [sp], #4
 1524              	.LCFI94:
 1525              		.cfi_restore 7
 1526              		.cfi_def_cfa_offset 0
 1527 003e 7047     		bx	lr
 1528              		.cfi_endproc
 1529              	.LFE138:
 1531              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 1532              		.align	1
 1533              		.global	SPI_TransmitCRC
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1538              	SPI_TransmitCRC:
 1539              	.LFB139:
 937:./Library/stm32f4xx_spi.c **** 
 938:./Library/stm32f4xx_spi.c **** /**
 939:./Library/stm32f4xx_spi.c ****   * @brief  Transmit the SPIx CRC value.
 940:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 941:./Library/stm32f4xx_spi.c ****   * @retval None
 942:./Library/stm32f4xx_spi.c ****   */
 943:./Library/stm32f4xx_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 944:./Library/stm32f4xx_spi.c **** {
 1540              		.loc 1 944 1
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 8
 1543              		@ frame_needed = 1, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545 0000 80B4     		push	{r7}
 1546              	.LCFI95:
 1547              		.cfi_def_cfa_offset 4
 1548              		.cfi_offset 7, -4
 1549 0002 83B0     		sub	sp, sp, #12
 1550              	.LCFI96:
 1551              		.cfi_def_cfa_offset 16
 1552 0004 00AF     		add	r7, sp, #0
 1553              	.LCFI97:
 1554              		.cfi_def_cfa_register 7
 1555 0006 7860     		str	r0, [r7, #4]
 945:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 946:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 947:./Library/stm32f4xx_spi.c ****   
 948:./Library/stm32f4xx_spi.c ****   /* Enable the selected SPI CRC transmission */
 949:./Library/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_CR1_CRCNEXT;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 45


 1556              		.loc 1 949 13
 1557 0008 7B68     		ldr	r3, [r7, #4]
 1558 000a 1B88     		ldrh	r3, [r3]	@ movhi
 1559 000c 9BB2     		uxth	r3, r3
 1560 000e 43F48053 		orr	r3, r3, #4096
 1561 0012 9AB2     		uxth	r2, r3
 1562 0014 7B68     		ldr	r3, [r7, #4]
 1563 0016 1A80     		strh	r2, [r3]	@ movhi
 950:./Library/stm32f4xx_spi.c **** }
 1564              		.loc 1 950 1
 1565 0018 00BF     		nop
 1566 001a 0C37     		adds	r7, r7, #12
 1567              	.LCFI98:
 1568              		.cfi_def_cfa_offset 4
 1569 001c BD46     		mov	sp, r7
 1570              	.LCFI99:
 1571              		.cfi_def_cfa_register 13
 1572              		@ sp needed
 1573 001e 5DF8047B 		ldr	r7, [sp], #4
 1574              	.LCFI100:
 1575              		.cfi_restore 7
 1576              		.cfi_def_cfa_offset 0
 1577 0022 7047     		bx	lr
 1578              		.cfi_endproc
 1579              	.LFE139:
 1581              		.section	.text.SPI_GetCRC,"ax",%progbits
 1582              		.align	1
 1583              		.global	SPI_GetCRC
 1584              		.syntax unified
 1585              		.thumb
 1586              		.thumb_func
 1588              	SPI_GetCRC:
 1589              	.LFB140:
 951:./Library/stm32f4xx_spi.c **** 
 952:./Library/stm32f4xx_spi.c **** /**
 953:./Library/stm32f4xx_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 954:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 955:./Library/stm32f4xx_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 956:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 957:./Library/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Tx: Selects Tx CRC register
 958:./Library/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Rx: Selects Rx CRC register
 959:./Library/stm32f4xx_spi.c ****   * @retval The selected CRC register value..
 960:./Library/stm32f4xx_spi.c ****   */
 961:./Library/stm32f4xx_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 962:./Library/stm32f4xx_spi.c **** {
 1590              		.loc 1 962 1
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 16
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594              		@ link register save eliminated.
 1595 0000 80B4     		push	{r7}
 1596              	.LCFI101:
 1597              		.cfi_def_cfa_offset 4
 1598              		.cfi_offset 7, -4
 1599 0002 85B0     		sub	sp, sp, #20
 1600              	.LCFI102:
 1601              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 46


 1602 0004 00AF     		add	r7, sp, #0
 1603              	.LCFI103:
 1604              		.cfi_def_cfa_register 7
 1605 0006 7860     		str	r0, [r7, #4]
 1606 0008 0B46     		mov	r3, r1
 1607 000a FB70     		strb	r3, [r7, #3]
 963:./Library/stm32f4xx_spi.c ****   uint16_t crcreg = 0;
 1608              		.loc 1 963 12
 1609 000c 0023     		movs	r3, #0
 1610 000e FB81     		strh	r3, [r7, #14]	@ movhi
 964:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 965:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 966:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 967:./Library/stm32f4xx_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 1611              		.loc 1 967 6
 1612 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1613 0012 012B     		cmp	r3, #1
 1614 0014 03D0     		beq	.L68
 968:./Library/stm32f4xx_spi.c ****   {
 969:./Library/stm32f4xx_spi.c ****     /* Get the Tx CRC register */
 970:./Library/stm32f4xx_spi.c ****     crcreg = SPIx->TXCRCR;
 1615              		.loc 1 970 12
 1616 0016 7B68     		ldr	r3, [r7, #4]
 1617 0018 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1618 001a FB81     		strh	r3, [r7, #14]	@ movhi
 1619 001c 02E0     		b	.L69
 1620              	.L68:
 971:./Library/stm32f4xx_spi.c ****   }
 972:./Library/stm32f4xx_spi.c ****   else
 973:./Library/stm32f4xx_spi.c ****   {
 974:./Library/stm32f4xx_spi.c ****     /* Get the Rx CRC register */
 975:./Library/stm32f4xx_spi.c ****     crcreg = SPIx->RXCRCR;
 1621              		.loc 1 975 12
 1622 001e 7B68     		ldr	r3, [r7, #4]
 1623 0020 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1624 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 1625              	.L69:
 976:./Library/stm32f4xx_spi.c ****   }
 977:./Library/stm32f4xx_spi.c ****   /* Return the selected CRC register */
 978:./Library/stm32f4xx_spi.c ****   return crcreg;
 1626              		.loc 1 978 10
 1627 0024 FB89     		ldrh	r3, [r7, #14]
 979:./Library/stm32f4xx_spi.c **** }
 1628              		.loc 1 979 1
 1629 0026 1846     		mov	r0, r3
 1630 0028 1437     		adds	r7, r7, #20
 1631              	.LCFI104:
 1632              		.cfi_def_cfa_offset 4
 1633 002a BD46     		mov	sp, r7
 1634              	.LCFI105:
 1635              		.cfi_def_cfa_register 13
 1636              		@ sp needed
 1637 002c 5DF8047B 		ldr	r7, [sp], #4
 1638              	.LCFI106:
 1639              		.cfi_restore 7
 1640              		.cfi_def_cfa_offset 0
 1641 0030 7047     		bx	lr
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 47


 1642              		.cfi_endproc
 1643              	.LFE140:
 1645              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 1646              		.align	1
 1647              		.global	SPI_GetCRCPolynomial
 1648              		.syntax unified
 1649              		.thumb
 1650              		.thumb_func
 1652              	SPI_GetCRCPolynomial:
 1653              	.LFB141:
 980:./Library/stm32f4xx_spi.c **** 
 981:./Library/stm32f4xx_spi.c **** /**
 982:./Library/stm32f4xx_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 983:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 984:./Library/stm32f4xx_spi.c ****   * @retval The CRC Polynomial register value.
 985:./Library/stm32f4xx_spi.c ****   */
 986:./Library/stm32f4xx_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 987:./Library/stm32f4xx_spi.c **** {
 1654              		.loc 1 987 1
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 8
 1657              		@ frame_needed = 1, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659 0000 80B4     		push	{r7}
 1660              	.LCFI107:
 1661              		.cfi_def_cfa_offset 4
 1662              		.cfi_offset 7, -4
 1663 0002 83B0     		sub	sp, sp, #12
 1664              	.LCFI108:
 1665              		.cfi_def_cfa_offset 16
 1666 0004 00AF     		add	r7, sp, #0
 1667              	.LCFI109:
 1668              		.cfi_def_cfa_register 7
 1669 0006 7860     		str	r0, [r7, #4]
 988:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 989:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 990:./Library/stm32f4xx_spi.c ****   
 991:./Library/stm32f4xx_spi.c ****   /* Return the CRC polynomial register */
 992:./Library/stm32f4xx_spi.c ****   return SPIx->CRCPR;
 1670              		.loc 1 992 14
 1671 0008 7B68     		ldr	r3, [r7, #4]
 1672 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1673 000c 9BB2     		uxth	r3, r3
 993:./Library/stm32f4xx_spi.c **** }
 1674              		.loc 1 993 1
 1675 000e 1846     		mov	r0, r3
 1676 0010 0C37     		adds	r7, r7, #12
 1677              	.LCFI110:
 1678              		.cfi_def_cfa_offset 4
 1679 0012 BD46     		mov	sp, r7
 1680              	.LCFI111:
 1681              		.cfi_def_cfa_register 13
 1682              		@ sp needed
 1683 0014 5DF8047B 		ldr	r7, [sp], #4
 1684              	.LCFI112:
 1685              		.cfi_restore 7
 1686              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 48


 1687 0018 7047     		bx	lr
 1688              		.cfi_endproc
 1689              	.LFE141:
 1691              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 1692              		.align	1
 1693              		.global	SPI_I2S_DMACmd
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1698              	SPI_I2S_DMACmd:
 1699              	.LFB142:
 994:./Library/stm32f4xx_spi.c **** 
 995:./Library/stm32f4xx_spi.c **** /**
 996:./Library/stm32f4xx_spi.c ****   * @}
 997:./Library/stm32f4xx_spi.c ****   */
 998:./Library/stm32f4xx_spi.c **** 
 999:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group4 DMA transfers management functions
1000:./Library/stm32f4xx_spi.c ****  *  @brief   DMA transfers management functions
1001:./Library/stm32f4xx_spi.c ****   *
1002:./Library/stm32f4xx_spi.c **** @verbatim   
1003:./Library/stm32f4xx_spi.c ****  ===============================================================================
1004:./Library/stm32f4xx_spi.c ****                    ##### DMA transfers management functions #####
1005:./Library/stm32f4xx_spi.c ****  ===============================================================================  
1006:./Library/stm32f4xx_spi.c **** 
1007:./Library/stm32f4xx_spi.c **** @endverbatim
1008:./Library/stm32f4xx_spi.c ****   * @{
1009:./Library/stm32f4xx_spi.c ****   */
1010:./Library/stm32f4xx_spi.c **** 
1011:./Library/stm32f4xx_spi.c **** /**
1012:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
1013:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1014:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1015:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI DMA transfer request to be enabled or disabled. 
1016:./Library/stm32f4xx_spi.c ****   *          This parameter can be any combination of the following values:
1017:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
1018:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
1019:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI DMA transfer request.
1020:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1021:./Library/stm32f4xx_spi.c ****   * @retval None
1022:./Library/stm32f4xx_spi.c ****   */
1023:./Library/stm32f4xx_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
1024:./Library/stm32f4xx_spi.c **** {
 1700              		.loc 1 1024 1
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 8
 1703              		@ frame_needed = 1, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705 0000 80B4     		push	{r7}
 1706              	.LCFI113:
 1707              		.cfi_def_cfa_offset 4
 1708              		.cfi_offset 7, -4
 1709 0002 83B0     		sub	sp, sp, #12
 1710              	.LCFI114:
 1711              		.cfi_def_cfa_offset 16
 1712 0004 00AF     		add	r7, sp, #0
 1713              	.LCFI115:
 1714              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 49


 1715 0006 7860     		str	r0, [r7, #4]
 1716 0008 0B46     		mov	r3, r1
 1717 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 1718 000c 1346     		mov	r3, r2
 1719 000e 7B70     		strb	r3, [r7, #1]
1025:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1026:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
1027:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1028:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
1029:./Library/stm32f4xx_spi.c **** 
1030:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1720              		.loc 1 1030 6
 1721 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1722 0012 002B     		cmp	r3, #0
 1723 0014 08D0     		beq	.L74
1031:./Library/stm32f4xx_spi.c ****   {
1032:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI DMA requests */
1033:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 1724              		.loc 1 1033 15
 1725 0016 7B68     		ldr	r3, [r7, #4]
 1726 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1727 001a 9AB2     		uxth	r2, r3
 1728 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1729 001e 1343     		orrs	r3, r3, r2
 1730 0020 9AB2     		uxth	r2, r3
 1731 0022 7B68     		ldr	r3, [r7, #4]
 1732 0024 9A80     		strh	r2, [r3, #4]	@ movhi
1034:./Library/stm32f4xx_spi.c ****   }
1035:./Library/stm32f4xx_spi.c ****   else
1036:./Library/stm32f4xx_spi.c ****   {
1037:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI DMA requests */
1038:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
1039:./Library/stm32f4xx_spi.c ****   }
1040:./Library/stm32f4xx_spi.c **** }
 1733              		.loc 1 1040 1
 1734 0026 09E0     		b	.L76
 1735              	.L74:
1038:./Library/stm32f4xx_spi.c ****   }
 1736              		.loc 1 1038 15
 1737 0028 7B68     		ldr	r3, [r7, #4]
 1738 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1739 002c 9AB2     		uxth	r2, r3
1038:./Library/stm32f4xx_spi.c ****   }
 1740              		.loc 1 1038 18
 1741 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1742 0030 DB43     		mvns	r3, r3
 1743 0032 9BB2     		uxth	r3, r3
1038:./Library/stm32f4xx_spi.c ****   }
 1744              		.loc 1 1038 15
 1745 0034 1340     		ands	r3, r3, r2
 1746 0036 9AB2     		uxth	r2, r3
 1747 0038 7B68     		ldr	r3, [r7, #4]
 1748 003a 9A80     		strh	r2, [r3, #4]	@ movhi
 1749              	.L76:
 1750              		.loc 1 1040 1
 1751 003c 00BF     		nop
 1752 003e 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 50


 1753              	.LCFI116:
 1754              		.cfi_def_cfa_offset 4
 1755 0040 BD46     		mov	sp, r7
 1756              	.LCFI117:
 1757              		.cfi_def_cfa_register 13
 1758              		@ sp needed
 1759 0042 5DF8047B 		ldr	r7, [sp], #4
 1760              	.LCFI118:
 1761              		.cfi_restore 7
 1762              		.cfi_def_cfa_offset 0
 1763 0046 7047     		bx	lr
 1764              		.cfi_endproc
 1765              	.LFE142:
 1767              		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 1768              		.align	1
 1769              		.global	SPI_I2S_ITConfig
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1774              	SPI_I2S_ITConfig:
 1775              	.LFB143:
1041:./Library/stm32f4xx_spi.c **** 
1042:./Library/stm32f4xx_spi.c **** /**
1043:./Library/stm32f4xx_spi.c ****   * @}
1044:./Library/stm32f4xx_spi.c ****   */
1045:./Library/stm32f4xx_spi.c **** 
1046:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group5 Interrupts and flags management functions
1047:./Library/stm32f4xx_spi.c ****  *  @brief   Interrupts and flags management functions
1048:./Library/stm32f4xx_spi.c ****   *
1049:./Library/stm32f4xx_spi.c **** @verbatim   
1050:./Library/stm32f4xx_spi.c ****  ===============================================================================
1051:./Library/stm32f4xx_spi.c ****             ##### Interrupts and flags management functions #####
1052:./Library/stm32f4xx_spi.c ****  ===============================================================================  
1053:./Library/stm32f4xx_spi.c ****  
1054:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to configure the SPI Interrupts 
1055:./Library/stm32f4xx_spi.c ****       sources and check or clear the flags or pending bits status.
1056:./Library/stm32f4xx_spi.c ****       The user should identify which mode will be used in his application to manage 
1057:./Library/stm32f4xx_spi.c ****       the communication: Polling mode, Interrupt mode or DMA mode. 
1058:./Library/stm32f4xx_spi.c ****     
1059:./Library/stm32f4xx_spi.c ****  *** Polling Mode ***
1060:./Library/stm32f4xx_spi.c ****  ====================
1061:./Library/stm32f4xx_spi.c **** [..] In Polling Mode, the SPI/I2S communication can be managed by 9 flags:
1062:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_TXE : to indicate the status of the transmit buffer register
1063:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_RXNE : to indicate the status of the receive buffer register
1064:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_BSY : to indicate the state of the communication layer of the SPI.
1065:./Library/stm32f4xx_spi.c ****   (#) SPI_FLAG_CRCERR : to indicate if a CRC Calculation error occur              
1066:./Library/stm32f4xx_spi.c ****   (#) SPI_FLAG_MODF : to indicate if a Mode Fault error occur
1067:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_OVR : to indicate if an Overrun error occur
1068:./Library/stm32f4xx_spi.c ****   (#) I2S_FLAG_TIFRFE: to indicate a Frame Format error occurs.
1069:./Library/stm32f4xx_spi.c ****   (#) I2S_FLAG_UDR: to indicate an Underrun error occurs.
1070:./Library/stm32f4xx_spi.c ****   (#) I2S_FLAG_CHSIDE: to indicate Channel Side.
1071:./Library/stm32f4xx_spi.c **** 
1072:./Library/stm32f4xx_spi.c ****   (@) Do not use the BSY flag to handle each data transmission or reception. It is
1073:./Library/stm32f4xx_spi.c ****       better to use the TXE and RXNE flags instead.
1074:./Library/stm32f4xx_spi.c **** 
1075:./Library/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1076:./Library/stm32f4xx_spi.c ****    (+) FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 51


1077:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1078:./Library/stm32f4xx_spi.c **** 
1079:./Library/stm32f4xx_spi.c ****  *** Interrupt Mode ***
1080:./Library/stm32f4xx_spi.c ****  ======================
1081:./Library/stm32f4xx_spi.c ****  [..] In Interrupt Mode, the SPI communication can be managed by 3 interrupt sources
1082:./Library/stm32f4xx_spi.c ****       and 7 pending bits: 
1083:./Library/stm32f4xx_spi.c ****    (+) Pending Bits:
1084:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE : to indicate the status of the transmit buffer register
1085:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : to indicate the status of the receive buffer register
1086:./Library/stm32f4xx_spi.c ****        (##) SPI_IT_CRCERR : to indicate if a CRC Calculation error occur (available in SPI mode onl
1087:./Library/stm32f4xx_spi.c ****        (##) SPI_IT_MODF : to indicate if a Mode Fault error occur (available in SPI mode only)
1088:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_OVR : to indicate if an Overrun error occur
1089:./Library/stm32f4xx_spi.c ****        (##) I2S_IT_UDR : to indicate an Underrun Error occurs (available in I2S mode only).
1090:./Library/stm32f4xx_spi.c ****        (##) I2S_FLAG_TIFRFE : to indicate a Frame Format error occurs (available in TI mode only).
1091:./Library/stm32f4xx_spi.c **** 
1092:./Library/stm32f4xx_spi.c ****    (+) Interrupt Source:
1093:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE: specifies the interrupt source for the Tx buffer empty 
1094:./Library/stm32f4xx_spi.c ****             interrupt.  
1095:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1096:./Library/stm32f4xx_spi.c ****             empty interrupt.
1097:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_ERR : specifies the interrupt source for the errors interrupt.
1098:./Library/stm32f4xx_spi.c **** 
1099:./Library/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1100:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);
1101:./Library/stm32f4xx_spi.c ****    (+) ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1102:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1103:./Library/stm32f4xx_spi.c **** 
1104:./Library/stm32f4xx_spi.c ****  *** DMA Mode ***
1105:./Library/stm32f4xx_spi.c ****  ================
1106:./Library/stm32f4xx_spi.c ****  [..] In DMA Mode, the SPI communication can be managed by 2 DMA Channel requests:
1107:./Library/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1108:./Library/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1109:./Library/stm32f4xx_spi.c **** 
1110:./Library/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following function:
1111:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState 
1112:./Library/stm32f4xx_spi.c ****        NewState);
1113:./Library/stm32f4xx_spi.c **** 
1114:./Library/stm32f4xx_spi.c **** @endverbatim
1115:./Library/stm32f4xx_spi.c ****   * @{
1116:./Library/stm32f4xx_spi.c ****   */
1117:./Library/stm32f4xx_spi.c **** 
1118:./Library/stm32f4xx_spi.c **** /**
1119:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
1120:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1121:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1122:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to be enabled or disabled. 
1123:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1124:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
1125:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
1126:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_ERR: Error interrupt mask
1127:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the specified SPI interrupt.
1128:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1129:./Library/stm32f4xx_spi.c ****   * @retval None
1130:./Library/stm32f4xx_spi.c ****   */
1131:./Library/stm32f4xx_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1132:./Library/stm32f4xx_spi.c **** {
 1776              		.loc 1 1132 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 52


 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 16
 1779              		@ frame_needed = 1, uses_anonymous_args = 0
 1780              		@ link register save eliminated.
 1781 0000 80B4     		push	{r7}
 1782              	.LCFI119:
 1783              		.cfi_def_cfa_offset 4
 1784              		.cfi_offset 7, -4
 1785 0002 85B0     		sub	sp, sp, #20
 1786              	.LCFI120:
 1787              		.cfi_def_cfa_offset 24
 1788 0004 00AF     		add	r7, sp, #0
 1789              	.LCFI121:
 1790              		.cfi_def_cfa_register 7
 1791 0006 7860     		str	r0, [r7, #4]
 1792 0008 0B46     		mov	r3, r1
 1793 000a FB70     		strb	r3, [r7, #3]
 1794 000c 1346     		mov	r3, r2
 1795 000e BB70     		strb	r3, [r7, #2]
1133:./Library/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 1796              		.loc 1 1133 12
 1797 0010 0023     		movs	r3, #0
 1798 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 1799              		.loc 1 1133 23
 1800 0014 0023     		movs	r3, #0
 1801 0016 BB81     		strh	r3, [r7, #12]	@ movhi
1134:./Library/stm32f4xx_spi.c ****   
1135:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1136:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
1137:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1138:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
1139:./Library/stm32f4xx_spi.c **** 
1140:./Library/stm32f4xx_spi.c ****   /* Get the SPI IT index */
1141:./Library/stm32f4xx_spi.c ****   itpos = SPI_I2S_IT >> 4;
 1802              		.loc 1 1141 9
 1803 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1804 001a 1B09     		lsrs	r3, r3, #4
 1805 001c DBB2     		uxtb	r3, r3
 1806 001e FB81     		strh	r3, [r7, #14]	@ movhi
1142:./Library/stm32f4xx_spi.c **** 
1143:./Library/stm32f4xx_spi.c ****   /* Set the IT mask */
1144:./Library/stm32f4xx_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 1807              		.loc 1 1144 27
 1808 0020 FB89     		ldrh	r3, [r7, #14]
 1809              		.loc 1 1144 24
 1810 0022 0122     		movs	r2, #1
 1811 0024 02FA03F3 		lsl	r3, r2, r3
 1812              		.loc 1 1144 10
 1813 0028 BB81     		strh	r3, [r7, #12]	@ movhi
1145:./Library/stm32f4xx_spi.c **** 
1146:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1814              		.loc 1 1146 6
 1815 002a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1816 002c 002B     		cmp	r3, #0
 1817 002e 08D0     		beq	.L78
1147:./Library/stm32f4xx_spi.c ****   {
1148:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI interrupt */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 53


1149:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= itmask;
 1818              		.loc 1 1149 15
 1819 0030 7B68     		ldr	r3, [r7, #4]
 1820 0032 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1821 0034 9AB2     		uxth	r2, r3
 1822 0036 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1823 0038 1343     		orrs	r3, r3, r2
 1824 003a 9AB2     		uxth	r2, r3
 1825 003c 7B68     		ldr	r3, [r7, #4]
 1826 003e 9A80     		strh	r2, [r3, #4]	@ movhi
1150:./Library/stm32f4xx_spi.c ****   }
1151:./Library/stm32f4xx_spi.c ****   else
1152:./Library/stm32f4xx_spi.c ****   {
1153:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI interrupt */
1154:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
1155:./Library/stm32f4xx_spi.c ****   }
1156:./Library/stm32f4xx_spi.c **** }
 1827              		.loc 1 1156 1
 1828 0040 09E0     		b	.L80
 1829              	.L78:
1154:./Library/stm32f4xx_spi.c ****   }
 1830              		.loc 1 1154 15
 1831 0042 7B68     		ldr	r3, [r7, #4]
 1832 0044 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1833 0046 9AB2     		uxth	r2, r3
1154:./Library/stm32f4xx_spi.c ****   }
 1834              		.loc 1 1154 18
 1835 0048 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1836 004a DB43     		mvns	r3, r3
 1837 004c 9BB2     		uxth	r3, r3
1154:./Library/stm32f4xx_spi.c ****   }
 1838              		.loc 1 1154 15
 1839 004e 1340     		ands	r3, r3, r2
 1840 0050 9AB2     		uxth	r2, r3
 1841 0052 7B68     		ldr	r3, [r7, #4]
 1842 0054 9A80     		strh	r2, [r3, #4]	@ movhi
 1843              	.L80:
 1844              		.loc 1 1156 1
 1845 0056 00BF     		nop
 1846 0058 1437     		adds	r7, r7, #20
 1847              	.LCFI122:
 1848              		.cfi_def_cfa_offset 4
 1849 005a BD46     		mov	sp, r7
 1850              	.LCFI123:
 1851              		.cfi_def_cfa_register 13
 1852              		@ sp needed
 1853 005c 5DF8047B 		ldr	r7, [sp], #4
 1854              	.LCFI124:
 1855              		.cfi_restore 7
 1856              		.cfi_def_cfa_offset 0
 1857 0060 7047     		bx	lr
 1858              		.cfi_endproc
 1859              	.LFE143:
 1861              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 1862              		.align	1
 1863              		.global	SPI_I2S_GetFlagStatus
 1864              		.syntax unified
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 54


 1865              		.thumb
 1866              		.thumb_func
 1868              	SPI_I2S_GetFlagStatus:
 1869              	.LFB144:
1157:./Library/stm32f4xx_spi.c **** 
1158:./Library/stm32f4xx_spi.c **** /**
1159:./Library/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx flag is set or not.
1160:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1161:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1162:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to check. 
1163:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1164:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
1165:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
1166:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_BSY: Busy flag.
1167:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_OVR: Overrun flag.
1168:./Library/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_MODF: Mode Fault flag.
1169:./Library/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.
1170:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TIFRFE: Format Error.
1171:./Library/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_UDR: Underrun Error flag.
1172:./Library/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_CHSIDE: Channel Side flag.  
1173:./Library/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
1174:./Library/stm32f4xx_spi.c ****   */
1175:./Library/stm32f4xx_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1176:./Library/stm32f4xx_spi.c **** {
 1870              		.loc 1 1176 1
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 16
 1873              		@ frame_needed = 1, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875 0000 80B4     		push	{r7}
 1876              	.LCFI125:
 1877              		.cfi_def_cfa_offset 4
 1878              		.cfi_offset 7, -4
 1879 0002 85B0     		sub	sp, sp, #20
 1880              	.LCFI126:
 1881              		.cfi_def_cfa_offset 24
 1882 0004 00AF     		add	r7, sp, #0
 1883              	.LCFI127:
 1884              		.cfi_def_cfa_register 7
 1885 0006 7860     		str	r0, [r7, #4]
 1886 0008 0B46     		mov	r3, r1
 1887 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1177:./Library/stm32f4xx_spi.c ****   FlagStatus bitstatus = RESET;
 1888              		.loc 1 1177 14
 1889 000c 0023     		movs	r3, #0
 1890 000e FB73     		strb	r3, [r7, #15]
1178:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1179:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
1180:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
1181:./Library/stm32f4xx_spi.c ****   
1182:./Library/stm32f4xx_spi.c ****   /* Check the status of the specified SPI flag */
1183:./Library/stm32f4xx_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 1891              		.loc 1 1183 12
 1892 0010 7B68     		ldr	r3, [r7, #4]
 1893 0012 1B89     		ldrh	r3, [r3, #8]	@ movhi
 1894 0014 9AB2     		uxth	r2, r3
 1895              		.loc 1 1183 33
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 55


 1896 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1897 0018 1340     		ands	r3, r3, r2
 1898 001a 9BB2     		uxth	r3, r3
 1899              		.loc 1 1183 6
 1900 001c 002B     		cmp	r3, #0
 1901 001e 02D0     		beq	.L82
1184:./Library/stm32f4xx_spi.c ****   {
1185:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is set */
1186:./Library/stm32f4xx_spi.c ****     bitstatus = SET;
 1902              		.loc 1 1186 15
 1903 0020 0123     		movs	r3, #1
 1904 0022 FB73     		strb	r3, [r7, #15]
 1905 0024 01E0     		b	.L83
 1906              	.L82:
1187:./Library/stm32f4xx_spi.c ****   }
1188:./Library/stm32f4xx_spi.c ****   else
1189:./Library/stm32f4xx_spi.c ****   {
1190:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is reset */
1191:./Library/stm32f4xx_spi.c ****     bitstatus = RESET;
 1907              		.loc 1 1191 15
 1908 0026 0023     		movs	r3, #0
 1909 0028 FB73     		strb	r3, [r7, #15]
 1910              	.L83:
1192:./Library/stm32f4xx_spi.c ****   }
1193:./Library/stm32f4xx_spi.c ****   /* Return the SPI_I2S_FLAG status */
1194:./Library/stm32f4xx_spi.c ****   return  bitstatus;
 1911              		.loc 1 1194 11
 1912 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1195:./Library/stm32f4xx_spi.c **** }
 1913              		.loc 1 1195 1
 1914 002c 1846     		mov	r0, r3
 1915 002e 1437     		adds	r7, r7, #20
 1916              	.LCFI128:
 1917              		.cfi_def_cfa_offset 4
 1918 0030 BD46     		mov	sp, r7
 1919              	.LCFI129:
 1920              		.cfi_def_cfa_register 13
 1921              		@ sp needed
 1922 0032 5DF8047B 		ldr	r7, [sp], #4
 1923              	.LCFI130:
 1924              		.cfi_restore 7
 1925              		.cfi_def_cfa_offset 0
 1926 0036 7047     		bx	lr
 1927              		.cfi_endproc
 1928              	.LFE144:
 1930              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 1931              		.align	1
 1932              		.global	SPI_I2S_ClearFlag
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1937              	SPI_I2S_ClearFlag:
 1938              	.LFB145:
1196:./Library/stm32f4xx_spi.c **** 
1197:./Library/stm32f4xx_spi.c **** /**
1198:./Library/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
1199:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 56


1200:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1201:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
1202:./Library/stm32f4xx_spi.c ****   *          This function clears only CRCERR flag.
1203:./Library/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.  
1204:./Library/stm32f4xx_spi.c ****   *  
1205:./Library/stm32f4xx_spi.c ****   * @note   OVR (OverRun error) flag is cleared by software sequence: a read 
1206:./Library/stm32f4xx_spi.c ****   *          operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
1207:./Library/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
1208:./Library/stm32f4xx_spi.c ****   * @note   UDR (UnderRun error) flag is cleared by a read operation to 
1209:./Library/stm32f4xx_spi.c ****   *          SPI_SR register (SPI_I2S_GetFlagStatus()).   
1210:./Library/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) flag is cleared by software sequence: a read/write 
1211:./Library/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
1212:./Library/stm32f4xx_spi.c ****   *          write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
1213:./Library/stm32f4xx_spi.c ****   *  
1214:./Library/stm32f4xx_spi.c ****   * @retval None
1215:./Library/stm32f4xx_spi.c ****   */
1216:./Library/stm32f4xx_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1217:./Library/stm32f4xx_spi.c **** {
 1939              		.loc 1 1217 1
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 8
 1942              		@ frame_needed = 1, uses_anonymous_args = 0
 1943              		@ link register save eliminated.
 1944 0000 80B4     		push	{r7}
 1945              	.LCFI131:
 1946              		.cfi_def_cfa_offset 4
 1947              		.cfi_offset 7, -4
 1948 0002 83B0     		sub	sp, sp, #12
 1949              	.LCFI132:
 1950              		.cfi_def_cfa_offset 16
 1951 0004 00AF     		add	r7, sp, #0
 1952              	.LCFI133:
 1953              		.cfi_def_cfa_register 7
 1954 0006 7860     		str	r0, [r7, #4]
 1955 0008 0B46     		mov	r3, r1
 1956 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1218:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1219:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
1220:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
1221:./Library/stm32f4xx_spi.c ****     
1222:./Library/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) flag */
1223:./Library/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 1957              		.loc 1 1223 14
 1958 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1959 000e DB43     		mvns	r3, r3
 1960 0010 9AB2     		uxth	r2, r3
 1961              		.loc 1 1223 12
 1962 0012 7B68     		ldr	r3, [r7, #4]
 1963 0014 1A81     		strh	r2, [r3, #8]	@ movhi
1224:./Library/stm32f4xx_spi.c **** }
 1964              		.loc 1 1224 1
 1965 0016 00BF     		nop
 1966 0018 0C37     		adds	r7, r7, #12
 1967              	.LCFI134:
 1968              		.cfi_def_cfa_offset 4
 1969 001a BD46     		mov	sp, r7
 1970              	.LCFI135:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 57


 1971              		.cfi_def_cfa_register 13
 1972              		@ sp needed
 1973 001c 5DF8047B 		ldr	r7, [sp], #4
 1974              	.LCFI136:
 1975              		.cfi_restore 7
 1976              		.cfi_def_cfa_offset 0
 1977 0020 7047     		bx	lr
 1978              		.cfi_endproc
 1979              	.LFE145:
 1981              		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 1982              		.align	1
 1983              		.global	SPI_I2S_GetITStatus
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1988              	SPI_I2S_GetITStatus:
 1989              	.LFB146:
1225:./Library/stm32f4xx_spi.c **** 
1226:./Library/stm32f4xx_spi.c **** /**
1227:./Library/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx interrupt has occurred or not.
1228:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1229:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1230:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to check. 
1231:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1232:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
1233:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
1234:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_OVR: Overrun interrupt.
1235:./Library/stm32f4xx_spi.c ****   *            @arg SPI_IT_MODF: Mode Fault interrupt.
1236:./Library/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1237:./Library/stm32f4xx_spi.c ****   *            @arg I2S_IT_UDR: Underrun interrupt.  
1238:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TIFRFE: Format Error interrupt.  
1239:./Library/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
1240:./Library/stm32f4xx_spi.c ****   */
1241:./Library/stm32f4xx_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1242:./Library/stm32f4xx_spi.c **** {
 1990              		.loc 1 1242 1
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 16
 1993              		@ frame_needed = 1, uses_anonymous_args = 0
 1994              		@ link register save eliminated.
 1995 0000 80B4     		push	{r7}
 1996              	.LCFI137:
 1997              		.cfi_def_cfa_offset 4
 1998              		.cfi_offset 7, -4
 1999 0002 85B0     		sub	sp, sp, #20
 2000              	.LCFI138:
 2001              		.cfi_def_cfa_offset 24
 2002 0004 00AF     		add	r7, sp, #0
 2003              	.LCFI139:
 2004              		.cfi_def_cfa_register 7
 2005 0006 7860     		str	r0, [r7, #4]
 2006 0008 0B46     		mov	r3, r1
 2007 000a FB70     		strb	r3, [r7, #3]
1243:./Library/stm32f4xx_spi.c ****   ITStatus bitstatus = RESET;
 2008              		.loc 1 1243 12
 2009 000c 0023     		movs	r3, #0
 2010 000e FB73     		strb	r3, [r7, #15]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 58


1244:./Library/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 2011              		.loc 1 1244 12
 2012 0010 0023     		movs	r3, #0
 2013 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 2014              		.loc 1 1244 23
 2015 0014 0023     		movs	r3, #0
 2016 0016 7B81     		strh	r3, [r7, #10]	@ movhi
 2017              		.loc 1 1244 35
 2018 0018 0023     		movs	r3, #0
 2019 001a 3B81     		strh	r3, [r7, #8]	@ movhi
1245:./Library/stm32f4xx_spi.c **** 
1246:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1247:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
1248:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
1249:./Library/stm32f4xx_spi.c **** 
1250:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT index */
1251:./Library/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 2020              		.loc 1 1251 31
 2021 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2022 001e 03F00F03 		and	r3, r3, #15
 2023              		.loc 1 1251 16
 2024 0022 0122     		movs	r2, #1
 2025 0024 02FA03F3 		lsl	r3, r2, r3
 2026              		.loc 1 1251 9
 2027 0028 BB81     		strh	r3, [r7, #12]	@ movhi
1252:./Library/stm32f4xx_spi.c **** 
1253:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT IT mask */
1254:./Library/stm32f4xx_spi.c ****   itmask = SPI_I2S_IT >> 4;
 2028              		.loc 1 1254 10
 2029 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2030 002c 1B09     		lsrs	r3, r3, #4
 2031 002e DBB2     		uxtb	r3, r3
 2032 0030 7B81     		strh	r3, [r7, #10]	@ movhi
1255:./Library/stm32f4xx_spi.c **** 
1256:./Library/stm32f4xx_spi.c ****   /* Set the IT mask */
1257:./Library/stm32f4xx_spi.c ****   itmask = 0x01 << itmask;
 2033              		.loc 1 1257 17
 2034 0032 7B89     		ldrh	r3, [r7, #10]
 2035 0034 0122     		movs	r2, #1
 2036 0036 02FA03F3 		lsl	r3, r2, r3
 2037              		.loc 1 1257 10
 2038 003a 7B81     		strh	r3, [r7, #10]	@ movhi
1258:./Library/stm32f4xx_spi.c **** 
1259:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
1260:./Library/stm32f4xx_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 2039              		.loc 1 1260 23
 2040 003c 7B68     		ldr	r3, [r7, #4]
 2041 003e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2042 0040 9AB2     		uxth	r2, r3
 2043              		.loc 1 1260 16
 2044 0042 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2045 0044 1340     		ands	r3, r3, r2
 2046 0046 3B81     		strh	r3, [r7, #8]	@ movhi
1261:./Library/stm32f4xx_spi.c **** 
1262:./Library/stm32f4xx_spi.c ****   /* Check the status of the specified SPI interrupt */
1263:./Library/stm32f4xx_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 2047              		.loc 1 1263 13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 59


 2048 0048 7B68     		ldr	r3, [r7, #4]
 2049 004a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 2050 004c 9AB2     		uxth	r2, r3
 2051              		.loc 1 1263 27
 2052 004e BB89     		ldrh	r3, [r7, #12]	@ movhi
 2053 0050 1340     		ands	r3, r3, r2
 2054 0052 9BB2     		uxth	r3, r3
 2055              		.loc 1 1263 6
 2056 0054 002B     		cmp	r3, #0
 2057 0056 05D0     		beq	.L87
 2058              		.loc 1 1263 47 discriminator 1
 2059 0058 3B89     		ldrh	r3, [r7, #8]
 2060 005a 002B     		cmp	r3, #0
 2061 005c 02D0     		beq	.L87
1264:./Library/stm32f4xx_spi.c ****   {
1265:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_IT is set */
1266:./Library/stm32f4xx_spi.c ****     bitstatus = SET;
 2062              		.loc 1 1266 15
 2063 005e 0123     		movs	r3, #1
 2064 0060 FB73     		strb	r3, [r7, #15]
 2065 0062 01E0     		b	.L88
 2066              	.L87:
1267:./Library/stm32f4xx_spi.c ****   }
1268:./Library/stm32f4xx_spi.c ****   else
1269:./Library/stm32f4xx_spi.c ****   {
1270:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_IT is reset */
1271:./Library/stm32f4xx_spi.c ****     bitstatus = RESET;
 2067              		.loc 1 1271 15
 2068 0064 0023     		movs	r3, #0
 2069 0066 FB73     		strb	r3, [r7, #15]
 2070              	.L88:
1272:./Library/stm32f4xx_spi.c ****   }
1273:./Library/stm32f4xx_spi.c ****   /* Return the SPI_I2S_IT status */
1274:./Library/stm32f4xx_spi.c ****   return bitstatus;
 2071              		.loc 1 1274 10
 2072 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1275:./Library/stm32f4xx_spi.c **** }
 2073              		.loc 1 1275 1
 2074 006a 1846     		mov	r0, r3
 2075 006c 1437     		adds	r7, r7, #20
 2076              	.LCFI140:
 2077              		.cfi_def_cfa_offset 4
 2078 006e BD46     		mov	sp, r7
 2079              	.LCFI141:
 2080              		.cfi_def_cfa_register 13
 2081              		@ sp needed
 2082 0070 5DF8047B 		ldr	r7, [sp], #4
 2083              	.LCFI142:
 2084              		.cfi_restore 7
 2085              		.cfi_def_cfa_offset 0
 2086 0074 7047     		bx	lr
 2087              		.cfi_endproc
 2088              	.LFE146:
 2090              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 2091              		.align	1
 2092              		.global	SPI_I2S_ClearITPendingBit
 2093              		.syntax unified
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 60


 2094              		.thumb
 2095              		.thumb_func
 2097              	SPI_I2S_ClearITPendingBit:
 2098              	.LFB147:
1276:./Library/stm32f4xx_spi.c **** 
1277:./Library/stm32f4xx_spi.c **** /**
1278:./Library/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
1279:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1280:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1281:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
1282:./Library/stm32f4xx_spi.c ****   *         This function clears only CRCERR interrupt pending bit.   
1283:./Library/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1284:./Library/stm32f4xx_spi.c ****   *   
1285:./Library/stm32f4xx_spi.c ****   * @note   OVR (OverRun Error) interrupt pending bit is cleared by software 
1286:./Library/stm32f4xx_spi.c ****   *          sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
1287:./Library/stm32f4xx_spi.c ****   *          followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
1288:./Library/stm32f4xx_spi.c ****   * @note   UDR (UnderRun Error) interrupt pending bit is cleared by a read 
1289:./Library/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetITStatus()).   
1290:./Library/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
1291:./Library/stm32f4xx_spi.c ****   *          a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
1292:./Library/stm32f4xx_spi.c ****   *          followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
1293:./Library/stm32f4xx_spi.c ****   *          the SPI).
1294:./Library/stm32f4xx_spi.c ****   * @retval None
1295:./Library/stm32f4xx_spi.c ****   */
1296:./Library/stm32f4xx_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1297:./Library/stm32f4xx_spi.c **** {
 2099              		.loc 1 1297 1
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 16
 2102              		@ frame_needed = 1, uses_anonymous_args = 0
 2103              		@ link register save eliminated.
 2104 0000 80B4     		push	{r7}
 2105              	.LCFI143:
 2106              		.cfi_def_cfa_offset 4
 2107              		.cfi_offset 7, -4
 2108 0002 85B0     		sub	sp, sp, #20
 2109              	.LCFI144:
 2110              		.cfi_def_cfa_offset 24
 2111 0004 00AF     		add	r7, sp, #0
 2112              	.LCFI145:
 2113              		.cfi_def_cfa_register 7
 2114 0006 7860     		str	r0, [r7, #4]
 2115 0008 0B46     		mov	r3, r1
 2116 000a FB70     		strb	r3, [r7, #3]
1298:./Library/stm32f4xx_spi.c ****   uint16_t itpos = 0;
 2117              		.loc 1 1298 12
 2118 000c 0023     		movs	r3, #0
 2119 000e FB81     		strh	r3, [r7, #14]	@ movhi
1299:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1300:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
1301:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
1302:./Library/stm32f4xx_spi.c **** 
1303:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S IT index */
1304:./Library/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 2120              		.loc 1 1304 31
 2121 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2122 0012 03F00F03 		and	r3, r3, #15
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 61


 2123              		.loc 1 1304 16
 2124 0016 0122     		movs	r2, #1
 2125 0018 02FA03F3 		lsl	r3, r2, r3
 2126              		.loc 1 1304 9
 2127 001c FB81     		strh	r3, [r7, #14]	@ movhi
1305:./Library/stm32f4xx_spi.c **** 
1306:./Library/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
1307:./Library/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 2128              		.loc 1 1307 14
 2129 001e FB89     		ldrh	r3, [r7, #14]	@ movhi
 2130 0020 DB43     		mvns	r3, r3
 2131 0022 9AB2     		uxth	r2, r3
 2132              		.loc 1 1307 12
 2133 0024 7B68     		ldr	r3, [r7, #4]
 2134 0026 1A81     		strh	r2, [r3, #8]	@ movhi
1308:./Library/stm32f4xx_spi.c **** }
 2135              		.loc 1 1308 1
 2136 0028 00BF     		nop
 2137 002a 1437     		adds	r7, r7, #20
 2138              	.LCFI146:
 2139              		.cfi_def_cfa_offset 4
 2140 002c BD46     		mov	sp, r7
 2141              	.LCFI147:
 2142              		.cfi_def_cfa_register 13
 2143              		@ sp needed
 2144 002e 5DF8047B 		ldr	r7, [sp], #4
 2145              	.LCFI148:
 2146              		.cfi_restore 7
 2147              		.cfi_def_cfa_offset 0
 2148 0032 7047     		bx	lr
 2149              		.cfi_endproc
 2150              	.LFE147:
 2152              		.text
 2153              	.Letext0:
 2154              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 2155              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 2156              		.file 4 "./CORE/stm32f4xx.h"
 2157              		.file 5 "./Library/stm32f4xx_spi.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_spi.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:20     .text.SPI_I2S_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:26     .text.SPI_I2S_DeInit:0000000000000000 SPI_I2S_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:152    .text.SPI_I2S_DeInit:00000000000000c4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:162    .text.SPI_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:168    .text.SPI_Init:0000000000000000 SPI_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:283    .text.I2S_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:289    .text.I2S_Init:0000000000000000 I2S_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:618    .text.I2S_Init:00000000000001d4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:626    .text.SPI_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:632    .text.SPI_StructInit:0000000000000000 SPI_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:704    .text.I2S_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:710    .text.I2S_StructInit:0000000000000000 I2S_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:770    .text.SPI_Cmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:776    .text.SPI_Cmd:0000000000000000 SPI_Cmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:838    .text.I2S_Cmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:844    .text.I2S_Cmd:0000000000000000 I2S_Cmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:906    .text.SPI_DataSizeConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:912    .text.SPI_DataSizeConfig:0000000000000000 SPI_DataSizeConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:967    .text.SPI_BiDirectionalLineConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:973    .text.SPI_BiDirectionalLineConfig:0000000000000000 SPI_BiDirectionalLineConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1035   .text.SPI_NSSInternalSoftwareConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1041   .text.SPI_NSSInternalSoftwareConfig:0000000000000000 SPI_NSSInternalSoftwareConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1104   .text.SPI_SSOutputCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1110   .text.SPI_SSOutputCmd:0000000000000000 SPI_SSOutputCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1172   .text.SPI_TIModeCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1178   .text.SPI_TIModeCmd:0000000000000000 SPI_TIModeCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1240   .text.I2S_FullDuplexConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1246   .text.I2S_FullDuplexConfig:0000000000000000 I2S_FullDuplexConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1370   .text.SPI_I2S_ReceiveData:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1376   .text.SPI_I2S_ReceiveData:0000000000000000 SPI_I2S_ReceiveData
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1416   .text.SPI_I2S_SendData:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1422   .text.SPI_I2S_SendData:0000000000000000 SPI_I2S_SendData
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1464   .text.SPI_CalculateCRC:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1470   .text.SPI_CalculateCRC:0000000000000000 SPI_CalculateCRC
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1532   .text.SPI_TransmitCRC:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1538   .text.SPI_TransmitCRC:0000000000000000 SPI_TransmitCRC
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1582   .text.SPI_GetCRC:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1588   .text.SPI_GetCRC:0000000000000000 SPI_GetCRC
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1646   .text.SPI_GetCRCPolynomial:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1652   .text.SPI_GetCRCPolynomial:0000000000000000 SPI_GetCRCPolynomial
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1692   .text.SPI_I2S_DMACmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1698   .text.SPI_I2S_DMACmd:0000000000000000 SPI_I2S_DMACmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1768   .text.SPI_I2S_ITConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1774   .text.SPI_I2S_ITConfig:0000000000000000 SPI_I2S_ITConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1862   .text.SPI_I2S_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1868   .text.SPI_I2S_GetFlagStatus:0000000000000000 SPI_I2S_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1931   .text.SPI_I2S_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1937   .text.SPI_I2S_ClearFlag:0000000000000000 SPI_I2S_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1982   .text.SPI_I2S_GetITStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:1988   .text.SPI_I2S_GetITStatus:0000000000000000 SPI_I2S_GetITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:2091   .text.SPI_I2S_ClearITPendingBit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s:2097   .text.SPI_I2S_ClearITPendingBit:0000000000000000 SPI_I2S_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccWqfCos.s 			page 63


RCC_APB1PeriphResetCmd
