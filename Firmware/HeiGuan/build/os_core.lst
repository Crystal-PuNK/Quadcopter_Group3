ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"os_core.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	OSCtxSwCtr
  20              		.section	.bss.OSCtxSwCtr,"aw",%nobits
  21              		.align	2
  24              	OSCtxSwCtr:
  25 0000 00000000 		.space	4
  26              		.global	OSEventFreeList
  27              		.section	.bss.OSEventFreeList,"aw",%nobits
  28              		.align	2
  31              	OSEventFreeList:
  32 0000 00000000 		.space	4
  33              		.global	OSEventTbl
  34              		.section	.bss.OSEventTbl,"aw",%nobits
  35              		.align	2
  38              	OSEventTbl:
  39 0000 00000000 		.space	240
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	OSFlagTbl
  41              		.section	.bss.OSFlagTbl,"aw",%nobits
  42              		.align	2
  45              	OSFlagTbl:
  46 0000 00000000 		.space	80
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	OSFlagFreeList
  48              		.section	.bss.OSFlagFreeList,"aw",%nobits
  49              		.align	2
  52              	OSFlagFreeList:
  53 0000 00000000 		.space	4
  54              		.global	OSCPUUsage
  55              		.section	.bss.OSCPUUsage,"aw",%nobits
  58              	OSCPUUsage:
  59 0000 00       		.space	1
  60              		.global	OSIdleCtrMax
  61              		.section	.bss.OSIdleCtrMax,"aw",%nobits
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 2


  62              		.align	2
  65              	OSIdleCtrMax:
  66 0000 00000000 		.space	4
  67              		.global	OSIdleCtrRun
  68              		.section	.bss.OSIdleCtrRun,"aw",%nobits
  69              		.align	2
  72              	OSIdleCtrRun:
  73 0000 00000000 		.space	4
  74              		.global	OSStatRdy
  75              		.section	.bss.OSStatRdy,"aw",%nobits
  78              	OSStatRdy:
  79 0000 00       		.space	1
  80              		.global	OSTaskStatStk
  81              		.section	.bss.OSTaskStatStk,"aw",%nobits
  82              		.align	2
  85              	OSTaskStatStk:
  86 0000 00000000 		.space	512
  86      00000000 
  86      00000000 
  86      00000000 
  86      00000000 
  87              		.global	OSIntNesting
  88              		.section	.bss.OSIntNesting,"aw",%nobits
  91              	OSIntNesting:
  92 0000 00       		.space	1
  93              		.global	OSLockNesting
  94              		.section	.bss.OSLockNesting,"aw",%nobits
  97              	OSLockNesting:
  98 0000 00       		.space	1
  99              		.global	OSPrioCur
 100              		.section	.bss.OSPrioCur,"aw",%nobits
 103              	OSPrioCur:
 104 0000 00       		.space	1
 105              		.global	OSPrioHighRdy
 106              		.section	.bss.OSPrioHighRdy,"aw",%nobits
 109              	OSPrioHighRdy:
 110 0000 00       		.space	1
 111              		.global	OSRdyGrp
 112              		.section	.bss.OSRdyGrp,"aw",%nobits
 115              	OSRdyGrp:
 116 0000 00       		.space	1
 117              		.global	OSRdyTbl
 118              		.section	.bss.OSRdyTbl,"aw",%nobits
 119              		.align	2
 122              	OSRdyTbl:
 123 0000 00000000 		.space	8
 123      00000000 
 124              		.global	OSRunning
 125              		.section	.bss.OSRunning,"aw",%nobits
 128              	OSRunning:
 129 0000 00       		.space	1
 130              		.global	OSTaskCtr
 131              		.section	.bss.OSTaskCtr,"aw",%nobits
 134              	OSTaskCtr:
 135 0000 00       		.space	1
 136              		.global	OSIdleCtr
 137              		.section	.bss.OSIdleCtr,"aw",%nobits
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 3


 138              		.align	2
 141              	OSIdleCtr:
 142 0000 00000000 		.space	4
 143              		.global	OSTaskIdleStk
 144              		.section	.bss.OSTaskIdleStk,"aw",%nobits
 145              		.align	2
 148              	OSTaskIdleStk:
 149 0000 00000000 		.space	512
 149      00000000 
 149      00000000 
 149      00000000 
 149      00000000 
 150              		.global	OSTCBCur
 151              		.section	.bss.OSTCBCur,"aw",%nobits
 152              		.align	2
 155              	OSTCBCur:
 156 0000 00000000 		.space	4
 157              		.global	OSTCBFreeList
 158              		.section	.bss.OSTCBFreeList,"aw",%nobits
 159              		.align	2
 162              	OSTCBFreeList:
 163 0000 00000000 		.space	4
 164              		.global	OSTCBHighRdy
 165              		.section	.bss.OSTCBHighRdy,"aw",%nobits
 166              		.align	2
 169              	OSTCBHighRdy:
 170 0000 00000000 		.space	4
 171              		.global	OSTCBList
 172              		.section	.bss.OSTCBList,"aw",%nobits
 173              		.align	2
 176              	OSTCBList:
 177 0000 00000000 		.space	4
 178              		.global	OSTCBPrioTbl
 179              		.section	.bss.OSTCBPrioTbl,"aw",%nobits
 180              		.align	2
 183              	OSTCBPrioTbl:
 184 0000 00000000 		.space	256
 184      00000000 
 184      00000000 
 184      00000000 
 184      00000000 
 185              		.global	OSTCBTbl
 186              		.section	.bss.OSTCBTbl,"aw",%nobits
 187              		.align	2
 190              	OSTCBTbl:
 191 0000 00000000 		.space	2024
 191      00000000 
 191      00000000 
 191      00000000 
 191      00000000 
 192              		.global	OSTickStepState
 193              		.section	.bss.OSTickStepState,"aw",%nobits
 196              	OSTickStepState:
 197 0000 00       		.space	1
 198              		.global	OSMemFreeList
 199              		.section	.bss.OSMemFreeList,"aw",%nobits
 200              		.align	2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 4


 203              	OSMemFreeList:
 204 0000 00000000 		.space	4
 205              		.global	OSMemTbl
 206              		.section	.bss.OSMemTbl,"aw",%nobits
 207              		.align	2
 210              	OSMemTbl:
 211 0000 00000000 		.space	120
 211      00000000 
 211      00000000 
 211      00000000 
 211      00000000 
 212              		.global	OSQFreeList
 213              		.section	.bss.OSQFreeList,"aw",%nobits
 214              		.align	2
 217              	OSQFreeList:
 218 0000 00000000 		.space	4
 219              		.global	OSQTbl
 220              		.section	.bss.OSQTbl,"aw",%nobits
 221              		.align	2
 224              	OSQTbl:
 225 0000 00000000 		.space	96
 225      00000000 
 225      00000000 
 225      00000000 
 225      00000000 
 226              		.global	OSTaskRegNextAvailID
 227              		.section	.bss.OSTaskRegNextAvailID,"aw",%nobits
 230              	OSTaskRegNextAvailID:
 231 0000 00       		.space	1
 232              		.global	OSTime
 233              		.section	.bss.OSTime,"aw",%nobits
 234              		.align	2
 237              	OSTime:
 238 0000 00000000 		.space	4
 239              		.global	OSTmrFree
 240              		.section	.bss.OSTmrFree,"aw",%nobits
 241              		.align	1
 244              	OSTmrFree:
 245 0000 0000     		.space	2
 246              		.global	OSTmrUsed
 247              		.section	.bss.OSTmrUsed,"aw",%nobits
 248              		.align	1
 251              	OSTmrUsed:
 252 0000 0000     		.space	2
 253              		.global	OSTmrTime
 254              		.section	.bss.OSTmrTime,"aw",%nobits
 255              		.align	2
 258              	OSTmrTime:
 259 0000 00000000 		.space	4
 260              		.global	OSTmrSem
 261              		.section	.bss.OSTmrSem,"aw",%nobits
 262              		.align	2
 265              	OSTmrSem:
 266 0000 00000000 		.space	4
 267              		.global	OSTmrSemSignal
 268              		.section	.bss.OSTmrSemSignal,"aw",%nobits
 269              		.align	2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 5


 272              	OSTmrSemSignal:
 273 0000 00000000 		.space	4
 274              		.global	OSTmrTbl
 275              		.section	.bss.OSTmrTbl,"aw",%nobits
 276              		.align	2
 279              	OSTmrTbl:
 280 0000 00000000 		.space	640
 280      00000000 
 280      00000000 
 280      00000000 
 280      00000000 
 281              		.global	OSTmrFreeList
 282              		.section	.bss.OSTmrFreeList,"aw",%nobits
 283              		.align	2
 286              	OSTmrFreeList:
 287 0000 00000000 		.space	4
 288              		.global	OSTmrTaskStk
 289              		.section	.bss.OSTmrTaskStk,"aw",%nobits
 290              		.align	2
 293              	OSTmrTaskStk:
 294 0000 00000000 		.space	512
 294      00000000 
 294      00000000 
 294      00000000 
 294      00000000 
 295              		.global	OSTmrWheelTbl
 296              		.section	.bss.OSTmrWheelTbl,"aw",%nobits
 297              		.align	2
 300              	OSTmrWheelTbl:
 301 0000 00000000 		.space	56
 301      00000000 
 301      00000000 
 301      00000000 
 301      00000000 
 302              		.global	OSUnMapTbl
 303              		.section	.rodata.OSUnMapTbl,"a"
 304              		.align	2
 307              	OSUnMapTbl:
 308 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 308      02000100 
 308      03000100 
 308      02
 309 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 309      00010002 
 309      00010003 
 309      00
 310 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 310      01000500 
 310      01000200 
 310      01
 311 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 311      00020001 
 311      00040001 
 311      00
 312 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 312      03000100 
 312      02000100 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 6


 312      06
 313 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 313      00010003 
 313      00010002 
 313      00
 314 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 314      01000200 
 314      01000300 
 314      01
 315 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 315      00050001 
 315      00020001 
 315      00
 316 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 316      02000100 
 316      04000100 
 316      02
 317 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 317      00010002 
 317      00010007 
 317      00
 318 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 318      01000300 
 318      01000200 
 318      01
 319 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 319      00020001 
 319      00030001 
 319      00
 320 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 320      05000100 
 320      02000100 
 320      03
 321 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 321      00010004 
 321      00010002 
 321      00
 322 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 322      01000200 
 322      01000600 
 322      01
 323 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 323      00030001 
 323      00020001 
 323      00
 324 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 324      02000100 
 324      03000100 
 324      02
 325 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 325      00010002 
 325      00010003 
 325      00
 326 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 326      01000400 
 326      01000200 
 326      01
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 7


 327 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 327      00020001 
 327      00
 328              		.section	.text.OSEventNameGet,"ax",%progbits
 329              		.align	1
 330              		.global	OSEventNameGet
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	OSEventNameGet:
 336              	.LFB3:
 337              		.file 1 "./ucOSII/Core/os_core.c"
   1:./ucOSII/Core/os_core.c **** /*
   2:./ucOSII/Core/os_core.c **** ***************************************************************************************************
   3:./ucOSII/Core/os_core.c **** *                                              uC/OS-II
   4:./ucOSII/Core/os_core.c **** *                                        The Real-Time Kernel
   5:./ucOSII/Core/os_core.c **** *
   6:./ucOSII/Core/os_core.c **** *                    Copyright 1992-2021 Silicon Laboratories Inc. www.silabs.com
   7:./ucOSII/Core/os_core.c **** *
   8:./ucOSII/Core/os_core.c **** *                                 SPDX-License-Identifier: APACHE-2.0
   9:./ucOSII/Core/os_core.c **** *
  10:./ucOSII/Core/os_core.c **** *               This software is subject to an open source license and is distributed by
  11:./ucOSII/Core/os_core.c **** *                Silicon Laboratories Inc. pursuant to the terms of the Apache License,
  12:./ucOSII/Core/os_core.c **** *                    Version 2.0 available at www.apache.org/licenses/LICENSE-2.0.
  13:./ucOSII/Core/os_core.c **** *
  14:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  15:./ucOSII/Core/os_core.c **** */
  16:./ucOSII/Core/os_core.c **** 
  17:./ucOSII/Core/os_core.c **** 
  18:./ucOSII/Core/os_core.c **** /*
  19:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  20:./ucOSII/Core/os_core.c **** *
  21:./ucOSII/Core/os_core.c **** *                                            CORE FUNCTIONS
  22:./ucOSII/Core/os_core.c **** *
  23:./ucOSII/Core/os_core.c **** * Filename : os_core.c
  24:./ucOSII/Core/os_core.c **** * Version  : V2.93.01
  25:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  26:./ucOSII/Core/os_core.c **** */
  27:./ucOSII/Core/os_core.c **** 
  28:./ucOSII/Core/os_core.c **** #ifndef  OS_CORE_C
  29:./ucOSII/Core/os_core.c **** #define  OS_CORE_C
  30:./ucOSII/Core/os_core.c **** 
  31:./ucOSII/Core/os_core.c **** #define  MICRIUM_SOURCE
  32:./ucOSII/Core/os_core.c **** 
  33:./ucOSII/Core/os_core.c **** #ifndef  OS_MASTER_FILE
  34:./ucOSII/Core/os_core.c **** #define  OS_GLOBALS
  35:./ucOSII/Core/os_core.c **** #include <ucos_ii.h>
  36:./ucOSII/Core/os_core.c **** #endif
  37:./ucOSII/Core/os_core.c **** 
  38:./ucOSII/Core/os_core.c **** /*
  39:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  40:./ucOSII/Core/os_core.c **** *                                      PRIORITY RESOLUTION TABLE
  41:./ucOSII/Core/os_core.c **** *
  42:./ucOSII/Core/os_core.c **** * Note: Index into table is bit pattern to resolve highest priority
  43:./ucOSII/Core/os_core.c **** *       Indexed value corresponds to highest priority bit position (i.e. 0..7)
  44:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  45:./ucOSII/Core/os_core.c **** */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 8


  46:./ucOSII/Core/os_core.c **** 
  47:./ucOSII/Core/os_core.c **** INT8U  const  OSUnMapTbl[256] = {
  48:./ucOSII/Core/os_core.c ****     0u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x00 to 0x0F                
  49:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x10 to 0x1F                
  50:./ucOSII/Core/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x20 to 0x2F                
  51:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x30 to 0x3F                
  52:./ucOSII/Core/os_core.c ****     6u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x40 to 0x4F                
  53:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x50 to 0x5F                
  54:./ucOSII/Core/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x60 to 0x6F                
  55:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x70 to 0x7F                
  56:./ucOSII/Core/os_core.c ****     7u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x80 to 0x8F                
  57:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x90 to 0x9F                
  58:./ucOSII/Core/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xA0 to 0xAF                
  59:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xB0 to 0xBF                
  60:./ucOSII/Core/os_core.c ****     6u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xC0 to 0xCF                
  61:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xD0 to 0xDF                
  62:./ucOSII/Core/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xE0 to 0xEF                
  63:./ucOSII/Core/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u  /* 0xF0 to 0xFF                
  64:./ucOSII/Core/os_core.c **** };
  65:./ucOSII/Core/os_core.c **** 
  66:./ucOSII/Core/os_core.c **** 
  67:./ucOSII/Core/os_core.c **** /*
  68:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  69:./ucOSII/Core/os_core.c **** *                                         FUNCTION PROTOTYPES
  70:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  71:./ucOSII/Core/os_core.c **** */
  72:./ucOSII/Core/os_core.c **** 
  73:./ucOSII/Core/os_core.c **** static  void  OS_InitEventList(void);
  74:./ucOSII/Core/os_core.c **** 
  75:./ucOSII/Core/os_core.c **** static  void  OS_InitMisc(void);
  76:./ucOSII/Core/os_core.c **** 
  77:./ucOSII/Core/os_core.c **** static  void  OS_InitRdyList(void);
  78:./ucOSII/Core/os_core.c **** 
  79:./ucOSII/Core/os_core.c **** static  void  OS_InitTaskIdle(void);
  80:./ucOSII/Core/os_core.c **** 
  81:./ucOSII/Core/os_core.c **** #if OS_TASK_STAT_EN > 0u
  82:./ucOSII/Core/os_core.c **** static  void  OS_InitTaskStat(void);
  83:./ucOSII/Core/os_core.c **** #endif
  84:./ucOSII/Core/os_core.c **** 
  85:./ucOSII/Core/os_core.c **** static  void  OS_InitTCBList(void);
  86:./ucOSII/Core/os_core.c **** 
  87:./ucOSII/Core/os_core.c **** static  void  OS_SchedNew(void);
  88:./ucOSII/Core/os_core.c **** 
  89:./ucOSII/Core/os_core.c **** 
  90:./ucOSII/Core/os_core.c **** /*
  91:./ucOSII/Core/os_core.c **** ***************************************************************************************************
  92:./ucOSII/Core/os_core.c **** *                        GET THE NAME OF A SEMAPHORE, MUTEX, MAILBOX or QUEUE
  93:./ucOSII/Core/os_core.c **** *
  94:./ucOSII/Core/os_core.c **** * Description: This function is used to obtain the name assigned to a semaphore, mutex, mailbox or 
  95:./ucOSII/Core/os_core.c **** *
  96:./ucOSII/Core/os_core.c **** * Arguments  : pevent    is a pointer to the event group.  'pevent' can point either to a semaphore
  97:./ucOSII/Core/os_core.c **** *                        a mutex, a mailbox or a queue.  Where this function is concerned, the actu
  98:./ucOSII/Core/os_core.c **** *                        type is irrelevant.
  99:./ucOSII/Core/os_core.c **** *
 100:./ucOSII/Core/os_core.c **** *              pname     is a pointer to a pointer to an ASCII string that will receive the name of
 101:./ucOSII/Core/os_core.c **** *                        mutex, mailbox or queue.
 102:./ucOSII/Core/os_core.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 9


 103:./ucOSII/Core/os_core.c **** *              perr      is a pointer to an error code that can contain one of the following values
 104:./ucOSII/Core/os_core.c **** *
 105:./ucOSII/Core/os_core.c **** *                        OS_ERR_NONE                if the name was copied to 'pname'
 106:./ucOSII/Core/os_core.c **** *                        OS_ERR_EVENT_TYPE          if 'pevent' is not pointing to the proper event
 107:./ucOSII/Core/os_core.c **** *                                                   control block type.
 108:./ucOSII/Core/os_core.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 109:./ucOSII/Core/os_core.c **** *                        OS_ERR_PEVENT_NULL         if you passed a NULL pointer for 'pevent'
 110:./ucOSII/Core/os_core.c **** *                        OS_ERR_NAME_GET_ISR        if you are trying to call this function from an
 111:./ucOSII/Core/os_core.c **** *
 112:./ucOSII/Core/os_core.c **** * Returns    : The length of the string or 0 if the 'pevent' is a NULL pointer.
 113:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 114:./ucOSII/Core/os_core.c **** */
 115:./ucOSII/Core/os_core.c **** 
 116:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN) && (OS_EVENT_NAME_EN > 0u)
 117:./ucOSII/Core/os_core.c **** INT8U  OSEventNameGet (OS_EVENT   *pevent,
 118:./ucOSII/Core/os_core.c ****                        INT8U     **pname,
 119:./ucOSII/Core/os_core.c ****                        INT8U      *perr)
 120:./ucOSII/Core/os_core.c **** {
 338              		.loc 1 120 1
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 24
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0000 80B5     		push	{r7, lr}
 343              	.LCFI0:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 86B0     		sub	sp, sp, #24
 348              	.LCFI1:
 349              		.cfi_def_cfa_offset 32
 350 0004 00AF     		add	r7, sp, #0
 351              	.LCFI2:
 352              		.cfi_def_cfa_register 7
 353 0006 F860     		str	r0, [r7, #12]
 354 0008 B960     		str	r1, [r7, #8]
 355 000a 7A60     		str	r2, [r7, #4]
 121:./ucOSII/Core/os_core.c ****     INT8U      len;
 122:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 123:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 356              		.loc 1 123 16
 357 000c 0023     		movs	r3, #0
 358 000e 7B61     		str	r3, [r7, #20]
 124:./ucOSII/Core/os_core.c **** #endif
 125:./ucOSII/Core/os_core.c **** 
 126:./ucOSII/Core/os_core.c **** 
 127:./ucOSII/Core/os_core.c **** 
 128:./ucOSII/Core/os_core.c **** #ifdef OS_SAFETY_CRITICAL
 129:./ucOSII/Core/os_core.c ****     if (perr == (INT8U *)0) {
 130:./ucOSII/Core/os_core.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 131:./ucOSII/Core/os_core.c ****         return (0u);
 132:./ucOSII/Core/os_core.c ****     }
 133:./ucOSII/Core/os_core.c **** #endif
 134:./ucOSII/Core/os_core.c **** 
 135:./ucOSII/Core/os_core.c **** #if OS_ARG_CHK_EN > 0u
 136:./ucOSII/Core/os_core.c ****     if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                    
 359              		.loc 1 136 8
 360 0010 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 10


 361 0012 002B     		cmp	r3, #0
 362 0014 04D1     		bne	.L2
 137:./ucOSII/Core/os_core.c ****         *perr = OS_ERR_PEVENT_NULL;
 363              		.loc 1 137 15
 364 0016 7B68     		ldr	r3, [r7, #4]
 365 0018 0422     		movs	r2, #4
 366 001a 1A70     		strb	r2, [r3]
 138:./ucOSII/Core/os_core.c ****         return (0u);
 367              		.loc 1 138 16
 368 001c 0023     		movs	r3, #0
 369 001e 31E0     		b	.L3
 370              	.L2:
 139:./ucOSII/Core/os_core.c ****     }
 140:./ucOSII/Core/os_core.c ****     if (pname == (INT8U **)0) {                   /* Is 'pname' a NULL pointer?                    
 371              		.loc 1 140 8
 372 0020 BB68     		ldr	r3, [r7, #8]
 373 0022 002B     		cmp	r3, #0
 374 0024 04D1     		bne	.L4
 141:./ucOSII/Core/os_core.c ****         *perr = OS_ERR_PNAME_NULL;
 375              		.loc 1 141 15
 376 0026 7B68     		ldr	r3, [r7, #4]
 377 0028 0C22     		movs	r2, #12
 378 002a 1A70     		strb	r2, [r3]
 142:./ucOSII/Core/os_core.c ****         return (0u);
 379              		.loc 1 142 16
 380 002c 0023     		movs	r3, #0
 381 002e 29E0     		b	.L3
 382              	.L4:
 143:./ucOSII/Core/os_core.c ****     }
 144:./ucOSII/Core/os_core.c **** #endif
 145:./ucOSII/Core/os_core.c ****     if (OSIntNesting > 0u) {                     /* See if trying to call from an ISR              
 383              		.loc 1 145 22
 384 0030 164B     		ldr	r3, .L10
 385 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386              		.loc 1 145 8
 387 0034 002B     		cmp	r3, #0
 388 0036 04D0     		beq	.L5
 146:./ucOSII/Core/os_core.c ****         *perr  = OS_ERR_NAME_GET_ISR;
 389              		.loc 1 146 16
 390 0038 7B68     		ldr	r3, [r7, #4]
 391 003a 1122     		movs	r2, #17
 392 003c 1A70     		strb	r2, [r3]
 147:./ucOSII/Core/os_core.c ****         return (0u);
 393              		.loc 1 147 16
 394 003e 0023     		movs	r3, #0
 395 0040 20E0     		b	.L3
 396              	.L5:
 148:./ucOSII/Core/os_core.c ****     }
 149:./ucOSII/Core/os_core.c ****     switch (pevent->OSEventType) {
 397              		.loc 1 149 19
 398 0042 FB68     		ldr	r3, [r7, #12]
 399 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 400 0046 013B     		subs	r3, r3, #1
 401              		.loc 1 149 5
 402 0048 032B     		cmp	r3, #3
 403 004a 04D9     		bls	.L9
 150:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_SEM:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 11


 151:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_MUTEX:
 152:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_MBOX:
 153:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_Q:
 154:./ucOSII/Core/os_core.c ****              break;
 155:./ucOSII/Core/os_core.c **** 
 156:./ucOSII/Core/os_core.c ****         default:
 157:./ucOSII/Core/os_core.c ****              *perr = OS_ERR_EVENT_TYPE;
 404              		.loc 1 157 20
 405 004c 7B68     		ldr	r3, [r7, #4]
 406 004e 0122     		movs	r2, #1
 407 0050 1A70     		strb	r2, [r3]
 158:./ucOSII/Core/os_core.c ****              return (0u);
 408              		.loc 1 158 21
 409 0052 0023     		movs	r3, #0
 410 0054 16E0     		b	.L3
 411              	.L9:
 154:./ucOSII/Core/os_core.c **** 
 412              		.loc 1 154 14
 413 0056 00BF     		nop
 159:./ucOSII/Core/os_core.c ****     }
 160:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 414              		.loc 1 160 5
 415 0058 4020     		movs	r0, #64
 416 005a FFF7FEFF 		bl	OS_CPU_SR_Save
 417 005e 7861     		str	r0, [r7, #20]
 161:./ucOSII/Core/os_core.c ****     *pname = pevent->OSEventName;
 418              		.loc 1 161 20
 419 0060 FB68     		ldr	r3, [r7, #12]
 420 0062 5A69     		ldr	r2, [r3, #20]
 421              		.loc 1 161 12
 422 0064 BB68     		ldr	r3, [r7, #8]
 423 0066 1A60     		str	r2, [r3]
 162:./ucOSII/Core/os_core.c ****     len    = OS_StrLen(*pname);
 424              		.loc 1 162 14
 425 0068 BB68     		ldr	r3, [r7, #8]
 426 006a 1B68     		ldr	r3, [r3]
 427 006c 1846     		mov	r0, r3
 428 006e FFF7FEFF 		bl	OS_StrLen
 429 0072 0346     		mov	r3, r0
 430 0074 FB74     		strb	r3, [r7, #19]
 163:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 431              		.loc 1 163 5
 432 0076 7869     		ldr	r0, [r7, #20]
 433 0078 FFF7FEFF 		bl	OS_CPU_SR_Restore
 164:./ucOSII/Core/os_core.c ****     *perr  = OS_ERR_NONE;
 434              		.loc 1 164 12
 435 007c 7B68     		ldr	r3, [r7, #4]
 436 007e 0022     		movs	r2, #0
 437 0080 1A70     		strb	r2, [r3]
 165:./ucOSII/Core/os_core.c ****     return (len);
 438              		.loc 1 165 12
 439 0082 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 440              	.L3:
 166:./ucOSII/Core/os_core.c **** }
 441              		.loc 1 166 1
 442 0084 1846     		mov	r0, r3
 443 0086 1837     		adds	r7, r7, #24
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 12


 444              	.LCFI3:
 445              		.cfi_def_cfa_offset 8
 446 0088 BD46     		mov	sp, r7
 447              	.LCFI4:
 448              		.cfi_def_cfa_register 13
 449              		@ sp needed
 450 008a 80BD     		pop	{r7, pc}
 451              	.L11:
 452              		.align	2
 453              	.L10:
 454 008c 00000000 		.word	OSIntNesting
 455              		.cfi_endproc
 456              	.LFE3:
 458              		.section	.text.OSEventNameSet,"ax",%progbits
 459              		.align	1
 460              		.global	OSEventNameSet
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	OSEventNameSet:
 466              	.LFB4:
 167:./ucOSII/Core/os_core.c **** #endif
 168:./ucOSII/Core/os_core.c **** 
 169:./ucOSII/Core/os_core.c **** 
 170:./ucOSII/Core/os_core.c **** /*
 171:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 172:./ucOSII/Core/os_core.c **** *                        ASSIGN A NAME TO A SEMAPHORE, MUTEX, MAILBOX or QUEUE
 173:./ucOSII/Core/os_core.c **** *
 174:./ucOSII/Core/os_core.c **** * Description: This function assigns a name to a semaphore, mutex, mailbox or queue.
 175:./ucOSII/Core/os_core.c **** *
 176:./ucOSII/Core/os_core.c **** * Arguments  : pevent    is a pointer to the event group.  'pevent' can point either to a semaphore
 177:./ucOSII/Core/os_core.c **** *                        a mutex, a mailbox or a queue.  Where this function is concerned, it doesn
 178:./ucOSII/Core/os_core.c **** *                        matter the actual type.
 179:./ucOSII/Core/os_core.c **** *
 180:./ucOSII/Core/os_core.c **** *              pname     is a pointer to an ASCII string that will be used as the name of the semap
 181:./ucOSII/Core/os_core.c **** *                        mutex, mailbox or queue.
 182:./ucOSII/Core/os_core.c **** *
 183:./ucOSII/Core/os_core.c **** *              perr      is a pointer to an error code that can contain one of the following values
 184:./ucOSII/Core/os_core.c **** *
 185:./ucOSII/Core/os_core.c **** *                        OS_ERR_NONE                if the requested task is resumed
 186:./ucOSII/Core/os_core.c **** *                        OS_ERR_EVENT_TYPE          if 'pevent' is not pointing to the proper event
 187:./ucOSII/Core/os_core.c **** *                                                   control block type.
 188:./ucOSII/Core/os_core.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 189:./ucOSII/Core/os_core.c **** *                        OS_ERR_PEVENT_NULL         if you passed a NULL pointer for 'pevent'
 190:./ucOSII/Core/os_core.c **** *                        OS_ERR_NAME_SET_ISR        if you called this function from an ISR
 191:./ucOSII/Core/os_core.c **** *
 192:./ucOSII/Core/os_core.c **** * Returns    : None
 193:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 194:./ucOSII/Core/os_core.c **** */
 195:./ucOSII/Core/os_core.c **** 
 196:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN) && (OS_EVENT_NAME_EN > 0u)
 197:./ucOSII/Core/os_core.c **** void  OSEventNameSet (OS_EVENT  *pevent,
 198:./ucOSII/Core/os_core.c ****                       INT8U     *pname,
 199:./ucOSII/Core/os_core.c ****                       INT8U     *perr)
 200:./ucOSII/Core/os_core.c **** {
 467              		.loc 1 200 1
 468              		.cfi_startproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 13


 469              		@ args = 0, pretend = 0, frame = 24
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              	.LCFI5:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 86B0     		sub	sp, sp, #24
 477              	.LCFI6:
 478              		.cfi_def_cfa_offset 32
 479 0004 00AF     		add	r7, sp, #0
 480              	.LCFI7:
 481              		.cfi_def_cfa_register 7
 482 0006 F860     		str	r0, [r7, #12]
 483 0008 B960     		str	r1, [r7, #8]
 484 000a 7A60     		str	r2, [r7, #4]
 201:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 202:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 485              		.loc 1 202 16
 486 000c 0023     		movs	r3, #0
 487 000e 7B61     		str	r3, [r7, #20]
 203:./ucOSII/Core/os_core.c **** #endif
 204:./ucOSII/Core/os_core.c **** 
 205:./ucOSII/Core/os_core.c **** 
 206:./ucOSII/Core/os_core.c **** 
 207:./ucOSII/Core/os_core.c **** #ifdef OS_SAFETY_CRITICAL
 208:./ucOSII/Core/os_core.c ****     if (perr == (INT8U *)0) {
 209:./ucOSII/Core/os_core.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 210:./ucOSII/Core/os_core.c ****         return;
 211:./ucOSII/Core/os_core.c ****     }
 212:./ucOSII/Core/os_core.c **** #endif
 213:./ucOSII/Core/os_core.c **** 
 214:./ucOSII/Core/os_core.c **** #if OS_ARG_CHK_EN > 0u
 215:./ucOSII/Core/os_core.c ****     if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                    
 488              		.loc 1 215 8
 489 0010 FB68     		ldr	r3, [r7, #12]
 490 0012 002B     		cmp	r3, #0
 491 0014 03D1     		bne	.L13
 216:./ucOSII/Core/os_core.c ****         *perr = OS_ERR_PEVENT_NULL;
 492              		.loc 1 216 15
 493 0016 7B68     		ldr	r3, [r7, #4]
 494 0018 0422     		movs	r2, #4
 495 001a 1A70     		strb	r2, [r3]
 217:./ucOSII/Core/os_core.c ****         return;
 496              		.loc 1 217 9
 497 001c 25E0     		b	.L12
 498              	.L13:
 218:./ucOSII/Core/os_core.c ****     }
 219:./ucOSII/Core/os_core.c ****     if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                     
 499              		.loc 1 219 8
 500 001e BB68     		ldr	r3, [r7, #8]
 501 0020 002B     		cmp	r3, #0
 502 0022 03D1     		bne	.L15
 220:./ucOSII/Core/os_core.c ****         *perr = OS_ERR_PNAME_NULL;
 503              		.loc 1 220 15
 504 0024 7B68     		ldr	r3, [r7, #4]
 505 0026 0C22     		movs	r2, #12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 14


 506 0028 1A70     		strb	r2, [r3]
 221:./ucOSII/Core/os_core.c ****         return;
 507              		.loc 1 221 9
 508 002a 1EE0     		b	.L12
 509              	.L15:
 222:./ucOSII/Core/os_core.c ****     }
 223:./ucOSII/Core/os_core.c **** #endif
 224:./ucOSII/Core/os_core.c ****     if (OSIntNesting > 0u) {                     /* See if trying to call from an ISR              
 510              		.loc 1 224 22
 511 002c 104B     		ldr	r3, .L21
 512 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513              		.loc 1 224 8
 514 0030 002B     		cmp	r3, #0
 515 0032 03D0     		beq	.L16
 225:./ucOSII/Core/os_core.c ****         *perr = OS_ERR_NAME_SET_ISR;
 516              		.loc 1 225 15
 517 0034 7B68     		ldr	r3, [r7, #4]
 518 0036 1222     		movs	r2, #18
 519 0038 1A70     		strb	r2, [r3]
 226:./ucOSII/Core/os_core.c ****         return;
 520              		.loc 1 226 9
 521 003a 16E0     		b	.L12
 522              	.L16:
 227:./ucOSII/Core/os_core.c ****     }
 228:./ucOSII/Core/os_core.c ****     switch (pevent->OSEventType) {
 523              		.loc 1 228 19
 524 003c FB68     		ldr	r3, [r7, #12]
 525 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526 0040 013B     		subs	r3, r3, #1
 527              		.loc 1 228 5
 528 0042 032B     		cmp	r3, #3
 529 0044 03D9     		bls	.L20
 229:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_SEM:
 230:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_MUTEX:
 231:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_MBOX:
 232:./ucOSII/Core/os_core.c ****         case OS_EVENT_TYPE_Q:
 233:./ucOSII/Core/os_core.c ****              break;
 234:./ucOSII/Core/os_core.c **** 
 235:./ucOSII/Core/os_core.c ****         default:
 236:./ucOSII/Core/os_core.c ****              *perr = OS_ERR_EVENT_TYPE;
 530              		.loc 1 236 20
 531 0046 7B68     		ldr	r3, [r7, #4]
 532 0048 0122     		movs	r2, #1
 533 004a 1A70     		strb	r2, [r3]
 237:./ucOSII/Core/os_core.c ****              return;
 534              		.loc 1 237 14
 535 004c 0DE0     		b	.L12
 536              	.L20:
 233:./ucOSII/Core/os_core.c **** 
 537              		.loc 1 233 14
 538 004e 00BF     		nop
 238:./ucOSII/Core/os_core.c ****     }
 239:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 539              		.loc 1 239 5
 540 0050 4020     		movs	r0, #64
 541 0052 FFF7FEFF 		bl	OS_CPU_SR_Save
 542 0056 7861     		str	r0, [r7, #20]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 15


 240:./ucOSII/Core/os_core.c ****     pevent->OSEventName = pname;
 543              		.loc 1 240 25
 544 0058 FB68     		ldr	r3, [r7, #12]
 545 005a BA68     		ldr	r2, [r7, #8]
 546 005c 5A61     		str	r2, [r3, #20]
 241:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 547              		.loc 1 241 5
 548 005e 7869     		ldr	r0, [r7, #20]
 549 0060 FFF7FEFF 		bl	OS_CPU_SR_Restore
 242:./ucOSII/Core/os_core.c ****     OS_TRACE_EVENT_NAME_SET(pevent, pname);
 243:./ucOSII/Core/os_core.c ****     *perr = OS_ERR_NONE;
 550              		.loc 1 243 11
 551 0064 7B68     		ldr	r3, [r7, #4]
 552 0066 0022     		movs	r2, #0
 553 0068 1A70     		strb	r2, [r3]
 554              	.L12:
 244:./ucOSII/Core/os_core.c **** }
 555              		.loc 1 244 1
 556 006a 1837     		adds	r7, r7, #24
 557              	.LCFI8:
 558              		.cfi_def_cfa_offset 8
 559 006c BD46     		mov	sp, r7
 560              	.LCFI9:
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 006e 80BD     		pop	{r7, pc}
 564              	.L22:
 565              		.align	2
 566              	.L21:
 567 0070 00000000 		.word	OSIntNesting
 568              		.cfi_endproc
 569              	.LFE4:
 571              		.section	.text.OSEventPendMulti,"ax",%progbits
 572              		.align	1
 573              		.global	OSEventPendMulti
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	OSEventPendMulti:
 579              	.LFB5:
 245:./ucOSII/Core/os_core.c **** #endif
 246:./ucOSII/Core/os_core.c **** 
 247:./ucOSII/Core/os_core.c **** 
 248:./ucOSII/Core/os_core.c **** /*
 249:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 250:./ucOSII/Core/os_core.c **** *                                       PEND ON MULTIPLE EVENTS
 251:./ucOSII/Core/os_core.c **** *
 252:./ucOSII/Core/os_core.c **** * Description: This function waits for multiple events.  If multiple events are ready at the start 
 253:./ucOSII/Core/os_core.c **** *              pend call, then all available events are returned as ready.  If the task must pend o
 254:./ucOSII/Core/os_core.c **** *              multiple events, then only the first posted or aborted event is returned as ready.
 255:./ucOSII/Core/os_core.c **** *
 256:./ucOSII/Core/os_core.c **** * Arguments  : pevents_pend  is a pointer to a NULL-terminated array of event control blocks to wai
 257:./ucOSII/Core/os_core.c **** *
 258:./ucOSII/Core/os_core.c **** *              pevents_rdy   is a pointer to an array to return which event control blocks are avai
 259:./ucOSII/Core/os_core.c **** *                            or ready.  The size of the array MUST be greater than or equal to the 
 260:./ucOSII/Core/os_core.c **** *                            of the 'pevents_pend' array, including terminating NULL.
 261:./ucOSII/Core/os_core.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 16


 262:./ucOSII/Core/os_core.c **** *              pmsgs_rdy     is a pointer to an array to return messages from any available message
 263:./ucOSII/Core/os_core.c **** *                            events.  The size of the array MUST be greater than or equal to the si
 264:./ucOSII/Core/os_core.c **** *                            the 'pevents_pend' array, excluding the terminating NULL.  Since NULL
 265:./ucOSII/Core/os_core.c **** *                            messages are valid messages, this array cannot be NULL-terminated.  In
 266:./ucOSII/Core/os_core.c **** *                            every available message-type event returns its messages in the 'pmsgs_
 267:./ucOSII/Core/os_core.c **** *                            array at the same index as the event is returned in the 'pevents_rdy' 
 268:./ucOSII/Core/os_core.c **** *                            All other 'pmsgs_rdy' array indices are filled with NULL messages.
 269:./ucOSII/Core/os_core.c **** *
 270:./ucOSII/Core/os_core.c **** *              timeout       is an optional timeout period (in clock ticks).  If non-zero, your tas
 271:./ucOSII/Core/os_core.c **** *                            wait for the resources up to the amount of time specified by this argu
 272:./ucOSII/Core/os_core.c **** *                            If you specify 0, however, your task will wait forever for the specifi
 273:./ucOSII/Core/os_core.c **** *                            events or, until the resources becomes available (or the events occur)
 274:./ucOSII/Core/os_core.c **** *
 275:./ucOSII/Core/os_core.c **** *              perr          is a pointer to where an error message will be deposited.  Possible er
 276:./ucOSII/Core/os_core.c **** *                            messages are:
 277:./ucOSII/Core/os_core.c **** *
 278:./ucOSII/Core/os_core.c **** *                            OS_ERR_NONE         The call was successful and your task owns the res
 279:./ucOSII/Core/os_core.c **** *                                                or, the events you are waiting for occurred; check
 280:./ucOSII/Core/os_core.c **** *                                                'pevents_rdy' array for which events are available
 281:./ucOSII/Core/os_core.c **** *                            OS_ERR_PEND_ABORT   The wait on the events was aborted; check the
 282:./ucOSII/Core/os_core.c **** *                                                'pevents_rdy' array for which events were aborted.
 283:./ucOSII/Core/os_core.c **** *                            OS_ERR_TIMEOUT      The events were not received within the specified
 284:./ucOSII/Core/os_core.c **** *                                                'timeout'.
 285:./ucOSII/Core/os_core.c **** *                            OS_ERR_PEVENT_NULL  If 'pevents_pend', 'pevents_rdy', or 'pmsgs_rdy' i
 286:./ucOSII/Core/os_core.c **** *                                                NULL pointer.
 287:./ucOSII/Core/os_core.c **** *                            OS_ERR_EVENT_TYPE   If you didn't pass a pointer to an array of semaph
 288:./ucOSII/Core/os_core.c **** *                                                mailboxes, and/or queues.
 289:./ucOSII/Core/os_core.c **** *                            OS_ERR_PEND_ISR     If you called this function from an ISR and the re
 290:./ucOSII/Core/os_core.c **** *                                                would lead to a suspension.
 291:./ucOSII/Core/os_core.c **** *                            OS_ERR_PEND_LOCKED  If you called this function when the scheduler is 
 292:./ucOSII/Core/os_core.c **** *
 293:./ucOSII/Core/os_core.c **** * Returns    : >  0          the number of events returned as ready or aborted.
 294:./ucOSII/Core/os_core.c **** *              == 0          if no events are returned as ready because of timeout or upon error.
 295:./ucOSII/Core/os_core.c **** *
 296:./ucOSII/Core/os_core.c **** * Notes      : 1) a. Validate 'pevents_pend' array as valid OS_EVENTs :
 297:./ucOSII/Core/os_core.c **** *
 298:./ucOSII/Core/os_core.c **** *                        semaphores, mailboxes, queues
 299:./ucOSII/Core/os_core.c **** *
 300:./ucOSII/Core/os_core.c **** *                 b. Return ALL available events and messages, if any
 301:./ucOSII/Core/os_core.c **** *
 302:./ucOSII/Core/os_core.c **** *                 c. Add    current task priority as pending to   each events's wait list
 303:./ucOSII/Core/os_core.c **** *                      Performed in OS_EventTaskWaitMulti()
 304:./ucOSII/Core/os_core.c **** *
 305:./ucOSII/Core/os_core.c **** *                 d. Wait on any of multiple events
 306:./ucOSII/Core/os_core.c **** *
 307:./ucOSII/Core/os_core.c **** *                 e. Remove current task priority as pending from each events's wait list
 308:./ucOSII/Core/os_core.c **** *                      Performed in OS_EventTaskRdy(), if events posted or aborted
 309:./ucOSII/Core/os_core.c **** *
 310:./ucOSII/Core/os_core.c **** *                 f. Return any event posted or aborted, if any
 311:./ucOSII/Core/os_core.c **** *                      else
 312:./ucOSII/Core/os_core.c **** *                    Return timeout
 313:./ucOSII/Core/os_core.c **** *
 314:./ucOSII/Core/os_core.c **** *              2) 'pevents_rdy' initialized to NULL PRIOR to all other validation or function handl
 315:./ucOSII/Core/os_core.c **** *                 case of any error(s).
 316:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 317:./ucOSII/Core/os_core.c **** */
 318:./ucOSII/Core/os_core.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 17


 319:./ucOSII/Core/os_core.c **** #if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
 320:./ucOSII/Core/os_core.c **** INT16U  OSEventPendMulti (OS_EVENT  **pevents_pend,
 321:./ucOSII/Core/os_core.c ****                           OS_EVENT  **pevents_rdy,
 322:./ucOSII/Core/os_core.c ****                           void      **pmsgs_rdy,
 323:./ucOSII/Core/os_core.c ****                           INT32U      timeout,
 324:./ucOSII/Core/os_core.c ****                           INT8U      *perr)
 325:./ucOSII/Core/os_core.c **** {
 580              		.loc 1 325 1
 581              		.cfi_startproc
 582              		@ args = 4, pretend = 0, frame = 40
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0000 80B5     		push	{r7, lr}
 585              	.LCFI10:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 8AB0     		sub	sp, sp, #40
 590              	.LCFI11:
 591              		.cfi_def_cfa_offset 48
 592 0004 00AF     		add	r7, sp, #0
 593              	.LCFI12:
 594              		.cfi_def_cfa_register 7
 595 0006 F860     		str	r0, [r7, #12]
 596 0008 B960     		str	r1, [r7, #8]
 597 000a 7A60     		str	r2, [r7, #4]
 598 000c 3B60     		str	r3, [r7]
 326:./ucOSII/Core/os_core.c ****     OS_EVENT  **pevents;
 327:./ucOSII/Core/os_core.c ****     OS_EVENT   *pevent;
 328:./ucOSII/Core/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
 329:./ucOSII/Core/os_core.c ****     OS_Q       *pq;
 330:./ucOSII/Core/os_core.c **** #endif
 331:./ucOSII/Core/os_core.c ****     BOOLEAN     events_rdy;
 332:./ucOSII/Core/os_core.c ****     INT16U      events_rdy_nbr;
 333:./ucOSII/Core/os_core.c ****     INT8U       events_stat;
 334:./ucOSII/Core/os_core.c **** #if (OS_CRITICAL_METHOD == 3u)                          /* Allocate storage for CPU status register
 335:./ucOSII/Core/os_core.c ****     OS_CPU_SR   cpu_sr = 0u;
 599              		.loc 1 335 17
 600 000e 0023     		movs	r3, #0
 601 0010 7B61     		str	r3, [r7, #20]
 336:./ucOSII/Core/os_core.c **** #endif
 337:./ucOSII/Core/os_core.c **** 
 338:./ucOSII/Core/os_core.c **** 
 339:./ucOSII/Core/os_core.c **** 
 340:./ucOSII/Core/os_core.c **** #ifdef OS_SAFETY_CRITICAL
 341:./ucOSII/Core/os_core.c ****     if (perr == (INT8U *)0) {
 342:./ucOSII/Core/os_core.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 343:./ucOSII/Core/os_core.c ****         return (0u);
 344:./ucOSII/Core/os_core.c ****     }
 345:./ucOSII/Core/os_core.c **** #endif
 346:./ucOSII/Core/os_core.c **** 
 347:./ucOSII/Core/os_core.c **** #if (OS_ARG_CHK_EN > 0u)
 348:./ucOSII/Core/os_core.c ****     if (pevents_pend == (OS_EVENT **)0) {               /* Validate 'pevents_pend'                 
 602              		.loc 1 348 8
 603 0012 FB68     		ldr	r3, [r7, #12]
 604 0014 002B     		cmp	r3, #0
 605 0016 04D1     		bne	.L24
 349:./ucOSII/Core/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 18


 606              		.loc 1 349 14
 607 0018 3B6B     		ldr	r3, [r7, #48]
 608 001a 0422     		movs	r2, #4
 609 001c 1A70     		strb	r2, [r3]
 350:./ucOSII/Core/os_core.c ****         return (0u);
 610              		.loc 1 350 16
 611 001e 0023     		movs	r3, #0
 612 0020 ADE1     		b	.L25
 613              	.L24:
 351:./ucOSII/Core/os_core.c ****     }
 352:./ucOSII/Core/os_core.c ****     if (*pevents_pend  == (OS_EVENT *)0) {              /* Validate 'pevents_pend'                 
 614              		.loc 1 352 9
 615 0022 FB68     		ldr	r3, [r7, #12]
 616 0024 1B68     		ldr	r3, [r3]
 617              		.loc 1 352 8
 618 0026 002B     		cmp	r3, #0
 619 0028 04D1     		bne	.L26
 353:./ucOSII/Core/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 620              		.loc 1 353 14
 621 002a 3B6B     		ldr	r3, [r7, #48]
 622 002c 0422     		movs	r2, #4
 623 002e 1A70     		strb	r2, [r3]
 354:./ucOSII/Core/os_core.c ****         return (0u);
 624              		.loc 1 354 16
 625 0030 0023     		movs	r3, #0
 626 0032 A4E1     		b	.L25
 627              	.L26:
 355:./ucOSII/Core/os_core.c ****     }
 356:./ucOSII/Core/os_core.c ****     if (pevents_rdy  == (OS_EVENT **)0) {               /* Validate 'pevents_rdy'                  
 628              		.loc 1 356 8
 629 0034 BB68     		ldr	r3, [r7, #8]
 630 0036 002B     		cmp	r3, #0
 631 0038 04D1     		bne	.L27
 357:./ucOSII/Core/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 632              		.loc 1 357 14
 633 003a 3B6B     		ldr	r3, [r7, #48]
 634 003c 0422     		movs	r2, #4
 635 003e 1A70     		strb	r2, [r3]
 358:./ucOSII/Core/os_core.c ****         return (0u);
 636              		.loc 1 358 16
 637 0040 0023     		movs	r3, #0
 638 0042 9CE1     		b	.L25
 639              	.L27:
 359:./ucOSII/Core/os_core.c ****     }
 360:./ucOSII/Core/os_core.c ****     if (pmsgs_rdy == (void **)0) {                      /* Validate 'pmsgs_rdy'                    
 640              		.loc 1 360 8
 641 0044 7B68     		ldr	r3, [r7, #4]
 642 0046 002B     		cmp	r3, #0
 643 0048 04D1     		bne	.L28
 361:./ucOSII/Core/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 644              		.loc 1 361 14
 645 004a 3B6B     		ldr	r3, [r7, #48]
 646 004c 0422     		movs	r2, #4
 647 004e 1A70     		strb	r2, [r3]
 362:./ucOSII/Core/os_core.c ****         return (0u);
 648              		.loc 1 362 16
 649 0050 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 19


 650 0052 94E1     		b	.L25
 651              	.L28:
 363:./ucOSII/Core/os_core.c ****     }
 364:./ucOSII/Core/os_core.c **** #endif
 365:./ucOSII/Core/os_core.c **** 
 366:./ucOSII/Core/os_core.c ****    *pevents_rdy = (OS_EVENT *)0;                        /* Init array to NULL in case of errors    
 652              		.loc 1 366 17
 653 0054 BB68     		ldr	r3, [r7, #8]
 654 0056 0022     		movs	r2, #0
 655 0058 1A60     		str	r2, [r3]
 367:./ucOSII/Core/os_core.c **** 
 368:./ucOSII/Core/os_core.c ****     pevents     =  pevents_pend;
 656              		.loc 1 368 17
 657 005a FB68     		ldr	r3, [r7, #12]
 658 005c 7B62     		str	r3, [r7, #36]
 369:./ucOSII/Core/os_core.c ****     pevent      = *pevents;
 659              		.loc 1 369 17
 660 005e 7B6A     		ldr	r3, [r7, #36]
 661 0060 1B68     		ldr	r3, [r3]
 662 0062 3B62     		str	r3, [r7, #32]
 370:./ucOSII/Core/os_core.c ****     while  (pevent != (OS_EVENT *)0) {
 663              		.loc 1 370 12
 664 0064 19E0     		b	.L29
 665              	.L35:
 371:./ucOSII/Core/os_core.c ****         switch (pevent->OSEventType) {                  /* Validate event block types              
 666              		.loc 1 371 23
 667 0066 3B6A     		ldr	r3, [r7, #32]
 668 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 669              		.loc 1 371 9
 670 006a 032B     		cmp	r3, #3
 671 006c 0AD0     		beq	.L67
 672 006e 032B     		cmp	r3, #3
 673 0070 03DC     		bgt	.L31
 674 0072 012B     		cmp	r3, #1
 675 0074 08D0     		beq	.L68
 676 0076 022B     		cmp	r3, #2
 677 0078 08D0     		beq	.L69
 678              	.L31:
 372:./ucOSII/Core/os_core.c **** #if (OS_SEM_EN  > 0u)
 373:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_SEM:
 374:./ucOSII/Core/os_core.c ****                  break;
 375:./ucOSII/Core/os_core.c **** #endif
 376:./ucOSII/Core/os_core.c **** #if (OS_MBOX_EN > 0u)
 377:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_MBOX:
 378:./ucOSII/Core/os_core.c ****                  break;
 379:./ucOSII/Core/os_core.c **** #endif
 380:./ucOSII/Core/os_core.c **** #if ((OS_Q_EN   > 0u) && (OS_MAX_QS > 0u))
 381:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_Q:
 382:./ucOSII/Core/os_core.c ****                  break;
 383:./ucOSII/Core/os_core.c **** #endif
 384:./ucOSII/Core/os_core.c **** 
 385:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_MUTEX:
 386:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_FLAG:
 387:./ucOSII/Core/os_core.c ****             default:
 388:./ucOSII/Core/os_core.c ****                 *perr = OS_ERR_EVENT_TYPE;
 679              		.loc 1 388 23
 680 007a 3B6B     		ldr	r3, [r7, #48]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 20


 681 007c 0122     		movs	r2, #1
 682 007e 1A70     		strb	r2, [r3]
 389:./ucOSII/Core/os_core.c ****                  return (0u);
 683              		.loc 1 389 25
 684 0080 0023     		movs	r3, #0
 685 0082 7CE1     		b	.L25
 686              	.L67:
 374:./ucOSII/Core/os_core.c **** #endif
 687              		.loc 1 374 18
 688 0084 00BF     		nop
 689 0086 02E0     		b	.L34
 690              	.L68:
 378:./ucOSII/Core/os_core.c **** #endif
 691              		.loc 1 378 18
 692 0088 00BF     		nop
 693 008a 00E0     		b	.L34
 694              	.L69:
 382:./ucOSII/Core/os_core.c **** #endif
 695              		.loc 1 382 18
 696 008c 00BF     		nop
 697              	.L34:
 390:./ucOSII/Core/os_core.c ****         }
 391:./ucOSII/Core/os_core.c ****         pevents++;
 698              		.loc 1 391 16
 699 008e 7B6A     		ldr	r3, [r7, #36]
 700 0090 0433     		adds	r3, r3, #4
 701 0092 7B62     		str	r3, [r7, #36]
 392:./ucOSII/Core/os_core.c ****         pevent = *pevents;
 702              		.loc 1 392 16
 703 0094 7B6A     		ldr	r3, [r7, #36]
 704 0096 1B68     		ldr	r3, [r3]
 705 0098 3B62     		str	r3, [r7, #32]
 706              	.L29:
 370:./ucOSII/Core/os_core.c ****         switch (pevent->OSEventType) {                  /* Validate event block types              
 707              		.loc 1 370 12
 708 009a 3B6A     		ldr	r3, [r7, #32]
 709 009c 002B     		cmp	r3, #0
 710 009e E2D1     		bne	.L35
 393:./ucOSII/Core/os_core.c ****     }
 394:./ucOSII/Core/os_core.c **** 
 395:./ucOSII/Core/os_core.c ****     if (OSIntNesting  > 0u) {                           /* See if called from ISR ...              
 711              		.loc 1 395 23
 712 00a0 964B     		ldr	r3, .L70
 713 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 714              		.loc 1 395 8
 715 00a4 002B     		cmp	r3, #0
 716 00a6 04D0     		beq	.L36
 396:./ucOSII/Core/os_core.c ****        *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR              
 717              		.loc 1 396 14
 718 00a8 3B6B     		ldr	r3, [r7, #48]
 719 00aa 0222     		movs	r2, #2
 720 00ac 1A70     		strb	r2, [r3]
 397:./ucOSII/Core/os_core.c ****         return (0u);
 721              		.loc 1 397 16
 722 00ae 0023     		movs	r3, #0
 723 00b0 65E1     		b	.L25
 724              	.L36:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 21


 398:./ucOSII/Core/os_core.c ****     }
 399:./ucOSII/Core/os_core.c ****     if (OSLockNesting > 0u) {                           /* See if called with scheduler locked ... 
 725              		.loc 1 399 23
 726 00b2 934B     		ldr	r3, .L70+4
 727 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 728              		.loc 1 399 8
 729 00b6 002B     		cmp	r3, #0
 730 00b8 04D0     		beq	.L37
 400:./ucOSII/Core/os_core.c ****        *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked              
 731              		.loc 1 400 14
 732 00ba 3B6B     		ldr	r3, [r7, #48]
 733 00bc 0D22     		movs	r2, #13
 734 00be 1A70     		strb	r2, [r3]
 401:./ucOSII/Core/os_core.c ****         return (0u);
 735              		.loc 1 401 16
 736 00c0 0023     		movs	r3, #0
 737 00c2 5CE1     		b	.L25
 738              	.L37:
 402:./ucOSII/Core/os_core.c ****     }
 403:./ucOSII/Core/os_core.c **** 
 404:./ucOSII/Core/os_core.c ****     events_rdy     =  OS_FALSE;
 739              		.loc 1 404 20
 740 00c4 0023     		movs	r3, #0
 741 00c6 FB77     		strb	r3, [r7, #31]
 405:./ucOSII/Core/os_core.c ****     events_rdy_nbr =  0u;
 742              		.loc 1 405 20
 743 00c8 0023     		movs	r3, #0
 744 00ca BB83     		strh	r3, [r7, #28]	@ movhi
 406:./ucOSII/Core/os_core.c ****     events_stat    =  OS_STAT_RDY;
 745              		.loc 1 406 20
 746 00cc 0023     		movs	r3, #0
 747 00ce FB76     		strb	r3, [r7, #27]
 407:./ucOSII/Core/os_core.c ****     pevents        =  pevents_pend;
 748              		.loc 1 407 20
 749 00d0 FB68     		ldr	r3, [r7, #12]
 750 00d2 7B62     		str	r3, [r7, #36]
 408:./ucOSII/Core/os_core.c ****     pevent         = *pevents;
 751              		.loc 1 408 20
 752 00d4 7B6A     		ldr	r3, [r7, #36]
 753 00d6 1B68     		ldr	r3, [r3]
 754 00d8 3B62     		str	r3, [r7, #32]
 409:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 755              		.loc 1 409 5
 756 00da 4020     		movs	r0, #64
 757 00dc FFF7FEFF 		bl	OS_CPU_SR_Save
 758 00e0 7861     		str	r0, [r7, #20]
 410:./ucOSII/Core/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* See if any events already available     
 759              		.loc 1 410 11
 760 00e2 88E0     		b	.L38
 761              	.L51:
 411:./ucOSII/Core/os_core.c ****         switch (pevent->OSEventType) {
 762              		.loc 1 411 23
 763 00e4 3B6A     		ldr	r3, [r7, #32]
 764 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 765              		.loc 1 411 9
 766 00e8 032B     		cmp	r3, #3
 767 00ea 06D0     		beq	.L39
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 22


 768 00ec 032B     		cmp	r3, #3
 769 00ee 71DC     		bgt	.L40
 770 00f0 012B     		cmp	r3, #1
 771 00f2 21D0     		beq	.L41
 772 00f4 022B     		cmp	r3, #2
 773 00f6 3CD0     		beq	.L42
 774 00f8 6CE0     		b	.L40
 775              	.L39:
 412:./ucOSII/Core/os_core.c **** #if (OS_SEM_EN > 0u)
 413:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_SEM:
 414:./ucOSII/Core/os_core.c ****                  if (pevent->OSEventCnt > 0u) {         /* If semaphore count > 0, resource availab
 776              		.loc 1 414 28
 777 00fa 3B6A     		ldr	r3, [r7, #32]
 778 00fc 1B89     		ldrh	r3, [r3, #8]
 779              		.loc 1 414 21
 780 00fe 002B     		cmp	r3, #0
 781 0100 15D0     		beq	.L43
 415:./ucOSII/Core/os_core.c ****                      pevent->OSEventCnt--;              /* ... decrement semaphore,                
 782              		.loc 1 415 28
 783 0102 3B6A     		ldr	r3, [r7, #32]
 784 0104 1B89     		ldrh	r3, [r3, #8]
 785              		.loc 1 415 40
 786 0106 013B     		subs	r3, r3, #1
 787 0108 9AB2     		uxth	r2, r3
 788 010a 3B6A     		ldr	r3, [r7, #32]
 789 010c 1A81     		strh	r2, [r3, #8]	@ movhi
 416:./ucOSII/Core/os_core.c ****                     *pevents_rdy++ =  pevent;           /* ... and return available semaphore event
 790              		.loc 1 416 33
 791 010e BB68     		ldr	r3, [r7, #8]
 792 0110 1A1D     		adds	r2, r3, #4
 793 0112 BA60     		str	r2, [r7, #8]
 794              		.loc 1 416 36
 795 0114 3A6A     		ldr	r2, [r7, #32]
 796 0116 1A60     		str	r2, [r3]
 417:./ucOSII/Core/os_core.c ****                       events_rdy   =  OS_TRUE;
 797              		.loc 1 417 36
 798 0118 0123     		movs	r3, #1
 799 011a FB77     		strb	r3, [r7, #31]
 418:./ucOSII/Core/os_core.c ****                     *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores     
 800              		.loc 1 418 31
 801 011c 7B68     		ldr	r3, [r7, #4]
 802 011e 1A1D     		adds	r2, r3, #4
 803 0120 7A60     		str	r2, [r7, #4]
 804              		.loc 1 418 36
 805 0122 0022     		movs	r2, #0
 806 0124 1A60     		str	r2, [r3]
 419:./ucOSII/Core/os_core.c ****                       events_rdy_nbr++;
 807              		.loc 1 419 37
 808 0126 BB8B     		ldrh	r3, [r7, #28]
 809 0128 0133     		adds	r3, r3, #1
 810 012a BB83     		strh	r3, [r7, #28]	@ movhi
 420:./ucOSII/Core/os_core.c **** 
 421:./ucOSII/Core/os_core.c ****                  } else {
 422:./ucOSII/Core/os_core.c ****                       events_stat |=  OS_STAT_SEM;      /* Configure multi-pend for semaphore event
 423:./ucOSII/Core/os_core.c ****                  }
 424:./ucOSII/Core/os_core.c ****                  break;
 811              		.loc 1 424 18
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 23


 812 012c 5DE0     		b	.L45
 813              	.L43:
 422:./ucOSII/Core/os_core.c ****                  }
 814              		.loc 1 422 35
 815 012e FB7E     		ldrb	r3, [r7, #27]
 816 0130 43F00103 		orr	r3, r3, #1
 817 0134 FB76     		strb	r3, [r7, #27]
 818              		.loc 1 424 18
 819 0136 58E0     		b	.L45
 820              	.L41:
 425:./ucOSII/Core/os_core.c **** #endif
 426:./ucOSII/Core/os_core.c **** 
 427:./ucOSII/Core/os_core.c **** #if (OS_MBOX_EN > 0u)
 428:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_MBOX:
 429:./ucOSII/Core/os_core.c ****                  if (pevent->OSEventPtr != (void *)0) { /* If mailbox NOT empty;                   
 821              		.loc 1 429 28
 822 0138 3B6A     		ldr	r3, [r7, #32]
 823 013a 5B68     		ldr	r3, [r3, #4]
 824              		.loc 1 429 21
 825 013c 002B     		cmp	r3, #0
 826 013e 13D0     		beq	.L46
 430:./ucOSII/Core/os_core.c ****                                                         /* ... return available message,           
 431:./ucOSII/Core/os_core.c ****                     *pmsgs_rdy++         = (void *)pevent->OSEventPtr;
 827              		.loc 1 431 31
 828 0140 7B68     		ldr	r3, [r7, #4]
 829 0142 1A1D     		adds	r2, r3, #4
 830 0144 7A60     		str	r2, [r7, #4]
 831              		.loc 1 431 44
 832 0146 3A6A     		ldr	r2, [r7, #32]
 833 0148 5268     		ldr	r2, [r2, #4]
 834              		.loc 1 431 42
 835 014a 1A60     		str	r2, [r3]
 432:./ucOSII/Core/os_core.c ****                      pevent->OSEventPtr  = (void *)0;
 836              		.loc 1 432 42
 837 014c 3B6A     		ldr	r3, [r7, #32]
 838 014e 0022     		movs	r2, #0
 839 0150 5A60     		str	r2, [r3, #4]
 433:./ucOSII/Core/os_core.c ****                     *pevents_rdy++       =  pevent;     /* ... and return available mailbox event  
 840              		.loc 1 433 33
 841 0152 BB68     		ldr	r3, [r7, #8]
 842 0154 1A1D     		adds	r2, r3, #4
 843 0156 BA60     		str	r2, [r7, #8]
 844              		.loc 1 433 42
 845 0158 3A6A     		ldr	r2, [r7, #32]
 846 015a 1A60     		str	r2, [r3]
 434:./ucOSII/Core/os_core.c ****                       events_rdy         =  OS_TRUE;
 847              		.loc 1 434 42
 848 015c 0123     		movs	r3, #1
 849 015e FB77     		strb	r3, [r7, #31]
 435:./ucOSII/Core/os_core.c ****                       events_rdy_nbr++;
 850              		.loc 1 435 37
 851 0160 BB8B     		ldrh	r3, [r7, #28]
 852 0162 0133     		adds	r3, r3, #1
 853 0164 BB83     		strh	r3, [r7, #28]	@ movhi
 436:./ucOSII/Core/os_core.c **** 
 437:./ucOSII/Core/os_core.c ****                  } else {
 438:./ucOSII/Core/os_core.c ****                       events_stat |= OS_STAT_MBOX;      /* Configure multi-pend for mailbox events 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 24


 439:./ucOSII/Core/os_core.c ****                  }
 440:./ucOSII/Core/os_core.c ****                  break;
 854              		.loc 1 440 18
 855 0166 40E0     		b	.L45
 856              	.L46:
 438:./ucOSII/Core/os_core.c ****                  }
 857              		.loc 1 438 35
 858 0168 FB7E     		ldrb	r3, [r7, #27]
 859 016a 43F00203 		orr	r3, r3, #2
 860 016e FB76     		strb	r3, [r7, #27]
 861              		.loc 1 440 18
 862 0170 3BE0     		b	.L45
 863              	.L42:
 441:./ucOSII/Core/os_core.c **** #endif
 442:./ucOSII/Core/os_core.c **** 
 443:./ucOSII/Core/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
 444:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_Q:
 445:./ucOSII/Core/os_core.c ****                  pq = (OS_Q *)pevent->OSEventPtr;
 864              		.loc 1 445 21
 865 0172 3B6A     		ldr	r3, [r7, #32]
 866 0174 5B68     		ldr	r3, [r3, #4]
 867 0176 3B61     		str	r3, [r7, #16]
 446:./ucOSII/Core/os_core.c ****                  if (pq->OSQEntries > 0u) {             /* If queue NOT empty;                     
 868              		.loc 1 446 24
 869 0178 3B69     		ldr	r3, [r7, #16]
 870 017a DB8A     		ldrh	r3, [r3, #22]
 871              		.loc 1 446 21
 872 017c 002B     		cmp	r3, #0
 873 017e 24D0     		beq	.L48
 447:./ucOSII/Core/os_core.c ****                                                         /* ... return available message,           
 448:./ucOSII/Core/os_core.c ****                     *pmsgs_rdy++ = (void *)*pq->OSQOut++;
 874              		.loc 1 448 47
 875 0180 3B69     		ldr	r3, [r7, #16]
 876 0182 1A69     		ldr	r2, [r3, #16]
 877              		.loc 1 448 55
 878 0184 111D     		adds	r1, r2, #4
 879 0186 3B69     		ldr	r3, [r7, #16]
 880 0188 1961     		str	r1, [r3, #16]
 881              		.loc 1 448 31
 882 018a 7B68     		ldr	r3, [r7, #4]
 883 018c 191D     		adds	r1, r3, #4
 884 018e 7960     		str	r1, [r7, #4]
 885              		.loc 1 448 36
 886 0190 1268     		ldr	r2, [r2]
 887              		.loc 1 448 34
 888 0192 1A60     		str	r2, [r3]
 449:./ucOSII/Core/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 889              		.loc 1 449 28
 890 0194 3B69     		ldr	r3, [r7, #16]
 891 0196 1A69     		ldr	r2, [r3, #16]
 892              		.loc 1 449 42
 893 0198 3B69     		ldr	r3, [r7, #16]
 894 019a 9B68     		ldr	r3, [r3, #8]
 895              		.loc 1 449 25
 896 019c 9A42     		cmp	r2, r3
 897 019e 03D1     		bne	.L49
 450:./ucOSII/Core/os_core.c ****                          pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start               
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 25


 898              		.loc 1 450 42
 899 01a0 3B69     		ldr	r3, [r7, #16]
 900 01a2 5A68     		ldr	r2, [r3, #4]
 901              		.loc 1 450 38
 902 01a4 3B69     		ldr	r3, [r7, #16]
 903 01a6 1A61     		str	r2, [r3, #16]
 904              	.L49:
 451:./ucOSII/Core/os_core.c ****                      }
 452:./ucOSII/Core/os_core.c ****                      pq->OSQEntries--;                  /* Update number of queue entries          
 905              		.loc 1 452 24
 906 01a8 3B69     		ldr	r3, [r7, #16]
 907 01aa DB8A     		ldrh	r3, [r3, #22]
 908              		.loc 1 452 36
 909 01ac 013B     		subs	r3, r3, #1
 910 01ae 9AB2     		uxth	r2, r3
 911 01b0 3B69     		ldr	r3, [r7, #16]
 912 01b2 DA82     		strh	r2, [r3, #22]	@ movhi
 453:./ucOSII/Core/os_core.c ****                     *pevents_rdy++ = pevent;            /* ... and return available queue event    
 913              		.loc 1 453 33
 914 01b4 BB68     		ldr	r3, [r7, #8]
 915 01b6 1A1D     		adds	r2, r3, #4
 916 01b8 BA60     		str	r2, [r7, #8]
 917              		.loc 1 453 36
 918 01ba 3A6A     		ldr	r2, [r7, #32]
 919 01bc 1A60     		str	r2, [r3]
 454:./ucOSII/Core/os_core.c ****                       events_rdy   = OS_TRUE;
 920              		.loc 1 454 36
 921 01be 0123     		movs	r3, #1
 922 01c0 FB77     		strb	r3, [r7, #31]
 455:./ucOSII/Core/os_core.c ****                       events_rdy_nbr++;
 923              		.loc 1 455 37
 924 01c2 BB8B     		ldrh	r3, [r7, #28]
 925 01c4 0133     		adds	r3, r3, #1
 926 01c6 BB83     		strh	r3, [r7, #28]	@ movhi
 456:./ucOSII/Core/os_core.c **** 
 457:./ucOSII/Core/os_core.c ****                  } else {
 458:./ucOSII/Core/os_core.c ****                       events_stat |= OS_STAT_Q;         /* Configure multi-pend for queue events   
 459:./ucOSII/Core/os_core.c ****                  }
 460:./ucOSII/Core/os_core.c ****                  break;
 927              		.loc 1 460 18
 928 01c8 0FE0     		b	.L45
 929              	.L48:
 458:./ucOSII/Core/os_core.c ****                  }
 930              		.loc 1 458 35
 931 01ca FB7E     		ldrb	r3, [r7, #27]
 932 01cc 43F00403 		orr	r3, r3, #4
 933 01d0 FB76     		strb	r3, [r7, #27]
 934              		.loc 1 460 18
 935 01d2 0AE0     		b	.L45
 936              	.L40:
 461:./ucOSII/Core/os_core.c **** #endif
 462:./ucOSII/Core/os_core.c **** 
 463:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_MUTEX:
 464:./ucOSII/Core/os_core.c ****             case OS_EVENT_TYPE_FLAG:
 465:./ucOSII/Core/os_core.c ****             default:
 466:./ucOSII/Core/os_core.c ****                  OS_EXIT_CRITICAL();
 937              		.loc 1 466 18
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 26


 938 01d4 7869     		ldr	r0, [r7, #20]
 939 01d6 FFF7FEFF 		bl	OS_CPU_SR_Restore
 467:./ucOSII/Core/os_core.c ****                 *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array       
 940              		.loc 1 467 30
 941 01da BB68     		ldr	r3, [r7, #8]
 942 01dc 0022     		movs	r2, #0
 943 01de 1A60     		str	r2, [r3]
 468:./ucOSII/Core/os_core.c ****                 *perr        =  OS_ERR_EVENT_TYPE;
 944              		.loc 1 468 30
 945 01e0 3B6B     		ldr	r3, [r7, #48]
 946 01e2 0122     		movs	r2, #1
 947 01e4 1A70     		strb	r2, [r3]
 469:./ucOSII/Core/os_core.c ****                  return (events_rdy_nbr);
 948              		.loc 1 469 25
 949 01e6 BB8B     		ldrh	r3, [r7, #28]
 950 01e8 C9E0     		b	.L25
 951              	.L45:
 470:./ucOSII/Core/os_core.c ****         }
 471:./ucOSII/Core/os_core.c ****         pevents++;
 952              		.loc 1 471 16
 953 01ea 7B6A     		ldr	r3, [r7, #36]
 954 01ec 0433     		adds	r3, r3, #4
 955 01ee 7B62     		str	r3, [r7, #36]
 472:./ucOSII/Core/os_core.c ****         pevent = *pevents;
 956              		.loc 1 472 16
 957 01f0 7B6A     		ldr	r3, [r7, #36]
 958 01f2 1B68     		ldr	r3, [r3]
 959 01f4 3B62     		str	r3, [r7, #32]
 960              	.L38:
 410:./ucOSII/Core/os_core.c ****         switch (pevent->OSEventType) {
 961              		.loc 1 410 11
 962 01f6 3B6A     		ldr	r3, [r7, #32]
 963 01f8 002B     		cmp	r3, #0
 964 01fa 7FF473AF 		bne	.L51
 473:./ucOSII/Core/os_core.c ****     }
 474:./ucOSII/Core/os_core.c **** 
 475:./ucOSII/Core/os_core.c ****     if ( events_rdy == OS_TRUE) {                       /* Return any events already available     
 965              		.loc 1 475 8
 966 01fe FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 967 0200 012B     		cmp	r3, #1
 968 0202 0AD1     		bne	.L52
 476:./ucOSII/Core/os_core.c ****        *pevents_rdy = (OS_EVENT *)0;                    /* NULL terminate return event array       
 969              		.loc 1 476 21
 970 0204 BB68     		ldr	r3, [r7, #8]
 971 0206 0022     		movs	r2, #0
 972 0208 1A60     		str	r2, [r3]
 477:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 973              		.loc 1 477 9
 974 020a 7869     		ldr	r0, [r7, #20]
 975 020c FFF7FEFF 		bl	OS_CPU_SR_Restore
 478:./ucOSII/Core/os_core.c ****        *perr        =  OS_ERR_NONE;
 976              		.loc 1 478 21
 977 0210 3B6B     		ldr	r3, [r7, #48]
 978 0212 0022     		movs	r2, #0
 979 0214 1A70     		strb	r2, [r3]
 479:./ucOSII/Core/os_core.c ****         return (events_rdy_nbr);
 980              		.loc 1 479 16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 27


 981 0216 BB8B     		ldrh	r3, [r7, #28]
 982 0218 B1E0     		b	.L25
 983              	.L52:
 480:./ucOSII/Core/os_core.c ****     }
 481:./ucOSII/Core/os_core.c **** 
 482:./ucOSII/Core/os_core.c ****                                                         /* Otherwise, must wait until any event occ
 483:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBStat     |= events_stat  |           /* Resource not available, ...             
 984              		.loc 1 483 29
 985 021a 3A4B     		ldr	r3, .L70+8
 986 021c 1B68     		ldr	r3, [r3]
 987 021e 93F83820 		ldrb	r2, [r3, #56]	@ zero_extendqisi2
 988 0222 FB7E     		ldrb	r3, [r7, #27]
 989 0224 1343     		orrs	r3, r3, r2
 990 0226 DAB2     		uxtb	r2, r3
 991 0228 364B     		ldr	r3, .L70+8
 992 022a 1B68     		ldr	r3, [r3]
 993 022c 62F07F02 		orn	r2, r2, #127
 994 0230 D2B2     		uxtb	r2, r2
 995 0232 83F83820 		strb	r2, [r3, #56]
 484:./ucOSII/Core/os_core.c ****                                OS_STAT_MULTI;           /* ... pend on multiple events             
 485:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
 996              		.loc 1 485 13
 997 0236 334B     		ldr	r3, .L70+8
 998 0238 1B68     		ldr	r3, [r3]
 999              		.loc 1 485 30
 1000 023a 0022     		movs	r2, #0
 1001 023c 83F83920 		strb	r2, [r3, #57]
 486:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBDly       = timeout;                 /* Store pend timeout in TCB               
 1002              		.loc 1 486 13
 1003 0240 304B     		ldr	r3, .L70+8
 1004 0242 1B68     		ldr	r3, [r3]
 1005              		.loc 1 486 30
 1006 0244 3A68     		ldr	r2, [r7]
 1007 0246 5A63     		str	r2, [r3, #52]
 487:./ucOSII/Core/os_core.c ****     OS_EventTaskWaitMulti(pevents_pend);                /* Suspend task until events or timeout occ
 1008              		.loc 1 487 5
 1009 0248 F868     		ldr	r0, [r7, #12]
 1010 024a FFF7FEFF 		bl	OS_EventTaskWaitMulti
 488:./ucOSII/Core/os_core.c **** 
 489:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 1011              		.loc 1 489 5
 1012 024e 7869     		ldr	r0, [r7, #20]
 1013 0250 FFF7FEFF 		bl	OS_CPU_SR_Restore
 490:./ucOSII/Core/os_core.c ****     OS_Sched();                                         /* Find next highest priority task ready   
 1014              		.loc 1 490 5
 1015 0254 FFF7FEFF 		bl	OS_Sched
 491:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 1016              		.loc 1 491 5
 1017 0258 4020     		movs	r0, #64
 1018 025a FFF7FEFF 		bl	OS_CPU_SR_Save
 1019 025e 7861     		str	r0, [r7, #20]
 492:./ucOSII/Core/os_core.c **** 
 493:./ucOSII/Core/os_core.c ****     switch (OSTCBCur->OSTCBStatPend) {                  /* Handle event posted, aborted, or timed-o
 1020              		.loc 1 493 21
 1021 0260 284B     		ldr	r3, .L70+8
 1022 0262 1B68     		ldr	r3, [r3]
 1023 0264 93F83930 		ldrb	r3, [r3, #57]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 28


 1024              		.loc 1 493 5
 1025 0268 002B     		cmp	r3, #0
 1026 026a 01D0     		beq	.L53
 1027 026c 022B     		cmp	r3, #2
 1028 026e 1DD1     		bne	.L54
 1029              	.L53:
 494:./ucOSII/Core/os_core.c ****         case OS_STAT_PEND_OK:
 495:./ucOSII/Core/os_core.c ****         case OS_STAT_PEND_ABORT:
 496:./ucOSII/Core/os_core.c ****              pevent = OSTCBCur->OSTCBEventMultiRdy;
 1030              		.loc 1 496 31
 1031 0270 244B     		ldr	r3, .L70+8
 1032 0272 1B68     		ldr	r3, [r3]
 1033              		.loc 1 496 21
 1034 0274 5B6A     		ldr	r3, [r3, #36]
 1035 0276 3B62     		str	r3, [r7, #32]
 497:./ucOSII/Core/os_core.c ****              if (pevent != (OS_EVENT *)0) {             /* If task event ptr != NULL, ...          
 1036              		.loc 1 497 17
 1037 0278 3B6A     		ldr	r3, [r7, #32]
 1038 027a 002B     		cmp	r3, #0
 1039 027c 0AD0     		beq	.L55
 498:./ucOSII/Core/os_core.c ****                 *pevents_rdy++   =  pevent;             /* ... return available event ...          
 1040              		.loc 1 498 29
 1041 027e BB68     		ldr	r3, [r7, #8]
 1042 0280 1A1D     		adds	r2, r3, #4
 1043 0282 BA60     		str	r2, [r7, #8]
 1044              		.loc 1 498 34
 1045 0284 3A6A     		ldr	r2, [r7, #32]
 1046 0286 1A60     		str	r2, [r3]
 499:./ucOSII/Core/os_core.c ****                 *pevents_rdy     = (OS_EVENT *)0;       /* ... & NULL terminate return event array 
 1047              		.loc 1 499 34
 1048 0288 BB68     		ldr	r3, [r7, #8]
 1049 028a 0022     		movs	r2, #0
 1050 028c 1A60     		str	r2, [r3]
 500:./ucOSII/Core/os_core.c ****                   events_rdy_nbr =  1;
 1051              		.loc 1 500 34
 1052 028e 0123     		movs	r3, #1
 1053 0290 BB83     		strh	r3, [r7, #28]	@ movhi
 501:./ucOSII/Core/os_core.c **** 
 502:./ucOSII/Core/os_core.c ****              } else {                                   /* Else NO event available, handle as timeo
 503:./ucOSII/Core/os_core.c ****                  OSTCBCur->OSTCBStatPend = OS_STAT_PEND_TO;
 504:./ucOSII/Core/os_core.c ****                  OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 505:./ucOSII/Core/os_core.c ****              }
 506:./ucOSII/Core/os_core.c ****              break;
 1054              		.loc 1 506 14
 1055 0292 12E0     		b	.L57
 1056              	.L55:
 503:./ucOSII/Core/os_core.c ****                  OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 1057              		.loc 1 503 26
 1058 0294 1B4B     		ldr	r3, .L70+8
 1059 0296 1B68     		ldr	r3, [r3]
 503:./ucOSII/Core/os_core.c ****                  OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 1060              		.loc 1 503 42
 1061 0298 0122     		movs	r2, #1
 1062 029a 83F83920 		strb	r2, [r3, #57]
 504:./ucOSII/Core/os_core.c ****              }
 1063              		.loc 1 504 18
 1064 029e 194B     		ldr	r3, .L70+8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 29


 1065 02a0 1B68     		ldr	r3, [r3]
 1066 02a2 F968     		ldr	r1, [r7, #12]
 1067 02a4 1846     		mov	r0, r3
 1068 02a6 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 1069              		.loc 1 506 14
 1070 02aa 06E0     		b	.L57
 1071              	.L54:
 507:./ucOSII/Core/os_core.c **** 
 508:./ucOSII/Core/os_core.c ****         case OS_STAT_PEND_TO:                           /* If events timed out, ...                
 509:./ucOSII/Core/os_core.c ****         default:                                        /* ... remove task from events' wait lists 
 510:./ucOSII/Core/os_core.c ****              OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 1072              		.loc 1 510 14
 1073 02ac 154B     		ldr	r3, .L70+8
 1074 02ae 1B68     		ldr	r3, [r3]
 1075 02b0 F968     		ldr	r1, [r7, #12]
 1076 02b2 1846     		mov	r0, r3
 1077 02b4 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 511:./ucOSII/Core/os_core.c ****              break;
 1078              		.loc 1 511 14
 1079 02b8 00BF     		nop
 1080              	.L57:
 512:./ucOSII/Core/os_core.c ****     }
 513:./ucOSII/Core/os_core.c **** 
 514:./ucOSII/Core/os_core.c ****     switch (OSTCBCur->OSTCBStatPend) {
 1081              		.loc 1 514 21
 1082 02ba 124B     		ldr	r3, .L70+8
 1083 02bc 1B68     		ldr	r3, [r3]
 1084 02be 93F83930 		ldrb	r3, [r3, #57]	@ zero_extendqisi2
 1085              		.loc 1 514 5
 1086 02c2 002B     		cmp	r3, #0
 1087 02c4 02D0     		beq	.L58
 1088 02c6 022B     		cmp	r3, #2
 1089 02c8 2DD0     		beq	.L59
 1090 02ca 35E0     		b	.L66
 1091              	.L58:
 515:./ucOSII/Core/os_core.c ****         case OS_STAT_PEND_OK:
 516:./ucOSII/Core/os_core.c ****              switch (pevent->OSEventType) {             /* Return event's message                  
 1092              		.loc 1 516 28
 1093 02cc 3B6A     		ldr	r3, [r7, #32]
 1094 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1095 02d0 022B     		cmp	r3, #2
 1096 02d2 02DC     		bgt	.L61
 1097 02d4 002B     		cmp	r3, #0
 1098 02d6 08DC     		bgt	.L62
 1099 02d8 16E0     		b	.L63
 1100              	.L61:
 1101 02da 032B     		cmp	r3, #3
 1102 02dc 14D1     		bne	.L63
 517:./ucOSII/Core/os_core.c **** #if (OS_SEM_EN > 0u)
 518:./ucOSII/Core/os_core.c ****                  case OS_EVENT_TYPE_SEM:
 519:./ucOSII/Core/os_core.c ****                      *pmsgs_rdy++ = (void *)0;          /* NO message returned for semaphores      
 1103              		.loc 1 519 32
 1104 02de 7B68     		ldr	r3, [r7, #4]
 1105 02e0 1A1D     		adds	r2, r3, #4
 1106 02e2 7A60     		str	r2, [r7, #4]
 1107              		.loc 1 519 35
 1108 02e4 0022     		movs	r2, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 30


 1109 02e6 1A60     		str	r2, [r3]
 520:./ucOSII/Core/os_core.c ****                       break;
 1110              		.loc 1 520 23
 1111 02e8 19E0     		b	.L64
 1112              	.L62:
 521:./ucOSII/Core/os_core.c **** #endif
 522:./ucOSII/Core/os_core.c **** 
 523:./ucOSII/Core/os_core.c **** #if ((OS_MBOX_EN > 0u) ||                 \
 524:./ucOSII/Core/os_core.c ****     ((OS_Q_EN    > 0u) && (OS_MAX_QS > 0u)))
 525:./ucOSII/Core/os_core.c ****                  case OS_EVENT_TYPE_MBOX:
 526:./ucOSII/Core/os_core.c ****                  case OS_EVENT_TYPE_Q:
 527:./ucOSII/Core/os_core.c ****                      *pmsgs_rdy++ = (void *)OSTCBCur->OSTCBMsg;     /* Return received message     
 1113              		.loc 1 527 53
 1114 02ea 064B     		ldr	r3, .L70+8
 1115 02ec 1A68     		ldr	r2, [r3]
 1116              		.loc 1 527 32
 1117 02ee 7B68     		ldr	r3, [r7, #4]
 1118 02f0 191D     		adds	r1, r3, #4
 1119 02f2 7960     		str	r1, [r7, #4]
 1120              		.loc 1 527 37
 1121 02f4 926A     		ldr	r2, [r2, #40]
 1122              		.loc 1 527 35
 1123 02f6 1A60     		str	r2, [r3]
 528:./ucOSII/Core/os_core.c ****                       break;
 1124              		.loc 1 528 23
 1125 02f8 11E0     		b	.L64
 1126              	.L71:
 1127 02fa 00BF     		.align	2
 1128              	.L70:
 1129 02fc 00000000 		.word	OSIntNesting
 1130 0300 00000000 		.word	OSLockNesting
 1131 0304 00000000 		.word	OSTCBCur
 1132              	.L63:
 529:./ucOSII/Core/os_core.c **** #endif
 530:./ucOSII/Core/os_core.c **** 
 531:./ucOSII/Core/os_core.c ****                  case OS_EVENT_TYPE_MUTEX:
 532:./ucOSII/Core/os_core.c ****                  case OS_EVENT_TYPE_FLAG:
 533:./ucOSII/Core/os_core.c ****                  default:
 534:./ucOSII/Core/os_core.c ****                       OS_EXIT_CRITICAL();
 1133              		.loc 1 534 23
 1134 0308 7869     		ldr	r0, [r7, #20]
 1135 030a FFF7FEFF 		bl	OS_CPU_SR_Restore
 535:./ucOSII/Core/os_core.c ****                      *pevents_rdy = (OS_EVENT *)0;      /* NULL terminate return event array       
 1136              		.loc 1 535 35
 1137 030e BB68     		ldr	r3, [r7, #8]
 1138 0310 0022     		movs	r2, #0
 1139 0312 1A60     		str	r2, [r3]
 536:./ucOSII/Core/os_core.c ****                      *perr        =  OS_ERR_EVENT_TYPE;
 1140              		.loc 1 536 35
 1141 0314 3B6B     		ldr	r3, [r7, #48]
 1142 0316 0122     		movs	r2, #1
 1143 0318 1A70     		strb	r2, [r3]
 537:./ucOSII/Core/os_core.c ****                       return (events_rdy_nbr);
 1144              		.loc 1 537 30
 1145 031a BB8B     		ldrh	r3, [r7, #28]
 1146 031c 2FE0     		b	.L25
 1147              	.L64:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 31


 538:./ucOSII/Core/os_core.c ****              }
 539:./ucOSII/Core/os_core.c ****             *perr = OS_ERR_NONE;
 1148              		.loc 1 539 19
 1149 031e 3B6B     		ldr	r3, [r7, #48]
 1150 0320 0022     		movs	r2, #0
 1151 0322 1A70     		strb	r2, [r3]
 540:./ucOSII/Core/os_core.c ****              break;
 1152              		.loc 1 540 14
 1153 0324 11E0     		b	.L65
 1154              	.L59:
 541:./ucOSII/Core/os_core.c **** 
 542:./ucOSII/Core/os_core.c ****         case OS_STAT_PEND_ABORT:
 543:./ucOSII/Core/os_core.c ****             *pmsgs_rdy++ = (void *)0;                   /* NO message returned for abort           
 1155              		.loc 1 543 23
 1156 0326 7B68     		ldr	r3, [r7, #4]
 1157 0328 1A1D     		adds	r2, r3, #4
 1158 032a 7A60     		str	r2, [r7, #4]
 1159              		.loc 1 543 26
 1160 032c 0022     		movs	r2, #0
 1161 032e 1A60     		str	r2, [r3]
 544:./ucOSII/Core/os_core.c ****             *perr        =  OS_ERR_PEND_ABORT;          /* Indicate that event  aborted            
 1162              		.loc 1 544 26
 1163 0330 3B6B     		ldr	r3, [r7, #48]
 1164 0332 0E22     		movs	r2, #14
 1165 0334 1A70     		strb	r2, [r3]
 545:./ucOSII/Core/os_core.c ****              break;
 1166              		.loc 1 545 14
 1167 0336 08E0     		b	.L65
 1168              	.L66:
 546:./ucOSII/Core/os_core.c **** 
 547:./ucOSII/Core/os_core.c ****         case OS_STAT_PEND_TO:
 548:./ucOSII/Core/os_core.c ****         default:
 549:./ucOSII/Core/os_core.c ****             *pmsgs_rdy++ = (void *)0;                   /* NO message returned for timeout         
 1169              		.loc 1 549 23
 1170 0338 7B68     		ldr	r3, [r7, #4]
 1171 033a 1A1D     		adds	r2, r3, #4
 1172 033c 7A60     		str	r2, [r7, #4]
 1173              		.loc 1 549 26
 1174 033e 0022     		movs	r2, #0
 1175 0340 1A60     		str	r2, [r3]
 550:./ucOSII/Core/os_core.c ****             *perr        =  OS_ERR_TIMEOUT;             /* Indicate that events timed out          
 1176              		.loc 1 550 26
 1177 0342 3B6B     		ldr	r3, [r7, #48]
 1178 0344 0A22     		movs	r2, #10
 1179 0346 1A70     		strb	r2, [r3]
 551:./ucOSII/Core/os_core.c ****              break;
 1180              		.loc 1 551 14
 1181 0348 00BF     		nop
 1182              	.L65:
 552:./ucOSII/Core/os_core.c ****     }
 553:./ucOSII/Core/os_core.c **** 
 554:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBStat          =  OS_STAT_RDY;        /* Set   task  status to ready             
 1183              		.loc 1 554 13
 1184 034a 0F4B     		ldr	r3, .L72
 1185 034c 1B68     		ldr	r3, [r3]
 1186              		.loc 1 554 34
 1187 034e 0022     		movs	r2, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 32


 1188 0350 83F83820 		strb	r2, [r3, #56]
 555:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                      
 1189              		.loc 1 555 13
 1190 0354 0C4B     		ldr	r3, .L72
 1191 0356 1B68     		ldr	r3, [r3]
 1192              		.loc 1 555 34
 1193 0358 0022     		movs	r2, #0
 1194 035a 83F83920 		strb	r2, [r3, #57]
 556:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;      /* Clear event pointers                    
 1195              		.loc 1 556 13
 1196 035e 0A4B     		ldr	r3, .L72
 1197 0360 1B68     		ldr	r3, [r3]
 1198              		.loc 1 556 34
 1199 0362 0022     		movs	r2, #0
 1200 0364 1A62     		str	r2, [r3, #32]
 557:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBEventMultiRdy = (OS_EVENT  *)0;
 1201              		.loc 1 557 13
 1202 0366 084B     		ldr	r3, .L72
 1203 0368 1B68     		ldr	r3, [r3]
 1204              		.loc 1 557 34
 1205 036a 0022     		movs	r2, #0
 1206 036c 5A62     		str	r2, [r3, #36]
 558:./ucOSII/Core/os_core.c **** #if ((OS_MBOX_EN > 0u) ||                 \
 559:./ucOSII/Core/os_core.c ****     ((OS_Q_EN    > 0u) && (OS_MAX_QS > 0u)))
 560:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBMsg           = (void      *)0;      /* Clear task  message                     
 1207              		.loc 1 560 13
 1208 036e 064B     		ldr	r3, .L72
 1209 0370 1B68     		ldr	r3, [r3]
 1210              		.loc 1 560 34
 1211 0372 0022     		movs	r2, #0
 1212 0374 9A62     		str	r2, [r3, #40]
 561:./ucOSII/Core/os_core.c **** #endif
 562:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 1213              		.loc 1 562 5
 1214 0376 7869     		ldr	r0, [r7, #20]
 1215 0378 FFF7FEFF 		bl	OS_CPU_SR_Restore
 563:./ucOSII/Core/os_core.c **** 
 564:./ucOSII/Core/os_core.c ****     return (events_rdy_nbr);
 1216              		.loc 1 564 12
 1217 037c BB8B     		ldrh	r3, [r7, #28]
 1218              	.L25:
 565:./ucOSII/Core/os_core.c **** }
 1219              		.loc 1 565 1
 1220 037e 1846     		mov	r0, r3
 1221 0380 2837     		adds	r7, r7, #40
 1222              	.LCFI13:
 1223              		.cfi_def_cfa_offset 8
 1224 0382 BD46     		mov	sp, r7
 1225              	.LCFI14:
 1226              		.cfi_def_cfa_register 13
 1227              		@ sp needed
 1228 0384 80BD     		pop	{r7, pc}
 1229              	.L73:
 1230 0386 00BF     		.align	2
 1231              	.L72:
 1232 0388 00000000 		.word	OSTCBCur
 1233              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 33


 1234              	.LFE5:
 1236              		.section	.text.OSInit,"ax",%progbits
 1237              		.align	1
 1238              		.global	OSInit
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1243              	OSInit:
 1244              	.LFB6:
 566:./ucOSII/Core/os_core.c **** #endif
 567:./ucOSII/Core/os_core.c **** 
 568:./ucOSII/Core/os_core.c **** 
 569:./ucOSII/Core/os_core.c **** /*
 570:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 571:./ucOSII/Core/os_core.c **** *                                           INITIALIZATION
 572:./ucOSII/Core/os_core.c **** *
 573:./ucOSII/Core/os_core.c **** * Description: This function is used to initialize the internals of uC/OS-II and MUST be called pri
 574:./ucOSII/Core/os_core.c **** *              creating any uC/OS-II object and, prior to calling OSStart().
 575:./ucOSII/Core/os_core.c **** *
 576:./ucOSII/Core/os_core.c **** * Arguments  : none
 577:./ucOSII/Core/os_core.c **** *
 578:./ucOSII/Core/os_core.c **** * Returns    : none
 579:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 580:./ucOSII/Core/os_core.c **** */
 581:./ucOSII/Core/os_core.c **** 
 582:./ucOSII/Core/os_core.c **** void  OSInit (void)
 583:./ucOSII/Core/os_core.c **** {
 1245              		.loc 1 583 1
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249 0000 80B5     		push	{r7, lr}
 1250              	.LCFI15:
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 00AF     		add	r7, sp, #0
 1255              	.LCFI16:
 1256              		.cfi_def_cfa_register 7
 584:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 585:./ucOSII/Core/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 586:./ucOSII/Core/os_core.c ****     INT8U  err;
 587:./ucOSII/Core/os_core.c **** #endif
 588:./ucOSII/Core/os_core.c **** #endif
 589:./ucOSII/Core/os_core.c **** 
 590:./ucOSII/Core/os_core.c ****     OSInitHookBegin();                                           /* Call port specific initializati
 1257              		.loc 1 590 5
 1258 0004 FFF7FEFF 		bl	OSInitHookBegin
 591:./ucOSII/Core/os_core.c **** 
 592:./ucOSII/Core/os_core.c ****     OS_InitMisc();                                               /* Initialize miscellaneous variab
 1259              		.loc 1 592 5
 1260 0008 FFF7FEFF 		bl	OS_InitMisc
 593:./ucOSII/Core/os_core.c **** 
 594:./ucOSII/Core/os_core.c ****     OS_InitRdyList();                                            /* Initialize the Ready List      
 1261              		.loc 1 594 5
 1262 000c FFF7FEFF 		bl	OS_InitRdyList
 595:./ucOSII/Core/os_core.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 34


 596:./ucOSII/Core/os_core.c ****     OS_InitTCBList();                                            /* Initialize the free list of OS_
 1263              		.loc 1 596 5
 1264 0010 FFF7FEFF 		bl	OS_InitTCBList
 597:./ucOSII/Core/os_core.c **** 
 598:./ucOSII/Core/os_core.c ****     OS_InitEventList();                                          /* Initialize the free list of OS_
 1265              		.loc 1 598 5
 1266 0014 FFF7FEFF 		bl	OS_InitEventList
 599:./ucOSII/Core/os_core.c **** 
 600:./ucOSII/Core/os_core.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 601:./ucOSII/Core/os_core.c ****     OS_FlagInit();                                               /* Initialize the event flag struc
 1267              		.loc 1 601 5
 1268 0018 FFF7FEFF 		bl	OS_FlagInit
 602:./ucOSII/Core/os_core.c **** #endif
 603:./ucOSII/Core/os_core.c **** 
 604:./ucOSII/Core/os_core.c **** #if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
 605:./ucOSII/Core/os_core.c ****     OS_MemInit();                                                /* Initialize the memory manager  
 1269              		.loc 1 605 5
 1270 001c FFF7FEFF 		bl	OS_MemInit
 606:./ucOSII/Core/os_core.c **** #endif
 607:./ucOSII/Core/os_core.c **** 
 608:./ucOSII/Core/os_core.c **** #if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
 609:./ucOSII/Core/os_core.c ****     OS_QInit();                                                  /* Initialize the message queue st
 1271              		.loc 1 609 5
 1272 0020 FFF7FEFF 		bl	OS_QInit
 610:./ucOSII/Core/os_core.c **** #endif
 611:./ucOSII/Core/os_core.c **** 
 612:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 613:./ucOSII/Core/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 614:./ucOSII/Core/os_core.c ****     OS_TLS_Init(&err);                                           /* Initialize TLS, before creating
 615:./ucOSII/Core/os_core.c ****     if (err != OS_ERR_NONE) {
 616:./ucOSII/Core/os_core.c ****         return;
 617:./ucOSII/Core/os_core.c ****     }
 618:./ucOSII/Core/os_core.c **** #endif
 619:./ucOSII/Core/os_core.c **** #endif
 620:./ucOSII/Core/os_core.c **** 
 621:./ucOSII/Core/os_core.c ****     OS_InitTaskIdle();                                           /* Create the Idle Task           
 1273              		.loc 1 621 5
 1274 0024 FFF7FEFF 		bl	OS_InitTaskIdle
 622:./ucOSII/Core/os_core.c **** #if OS_TASK_STAT_EN > 0u
 623:./ucOSII/Core/os_core.c ****     OS_InitTaskStat();                                           /* Create the Statistic Task      
 1275              		.loc 1 623 5
 1276 0028 FFF7FEFF 		bl	OS_InitTaskStat
 624:./ucOSII/Core/os_core.c **** #endif
 625:./ucOSII/Core/os_core.c **** 
 626:./ucOSII/Core/os_core.c **** #if OS_TMR_EN > 0u
 627:./ucOSII/Core/os_core.c ****     OSTmr_Init();                                                /* Initialize the Timer Manager   
 1277              		.loc 1 627 5
 1278 002c FFF7FEFF 		bl	OSTmr_Init
 628:./ucOSII/Core/os_core.c **** #endif
 629:./ucOSII/Core/os_core.c **** 
 630:./ucOSII/Core/os_core.c ****     OSInitHookEnd();                                             /* Call port specific init. code  
 1279              		.loc 1 630 5
 1280 0030 FFF7FEFF 		bl	OSInitHookEnd
 631:./ucOSII/Core/os_core.c **** 
 632:./ucOSII/Core/os_core.c **** #if OS_DEBUG_EN > 0u
 633:./ucOSII/Core/os_core.c ****     OSDebugInit();
 1281              		.loc 1 633 5
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 35


 1282 0034 FFF7FEFF 		bl	OSDebugInit
 634:./ucOSII/Core/os_core.c **** #endif
 635:./ucOSII/Core/os_core.c **** }
 1283              		.loc 1 635 1
 1284 0038 00BF     		nop
 1285 003a 80BD     		pop	{r7, pc}
 1286              		.cfi_endproc
 1287              	.LFE6:
 1289              		.section	.text.OSIntEnter,"ax",%progbits
 1290              		.align	1
 1291              		.global	OSIntEnter
 1292              		.syntax unified
 1293              		.thumb
 1294              		.thumb_func
 1296              	OSIntEnter:
 1297              	.LFB7:
 636:./ucOSII/Core/os_core.c **** 
 637:./ucOSII/Core/os_core.c **** 
 638:./ucOSII/Core/os_core.c **** /*
 639:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 640:./ucOSII/Core/os_core.c **** *                                              ENTER ISR
 641:./ucOSII/Core/os_core.c **** *
 642:./ucOSII/Core/os_core.c **** * Description: This function is used to notify uC/OS-II that you are about to service an interrupt
 643:./ucOSII/Core/os_core.c **** *              service routine (ISR).  This allows uC/OS-II to keep track of interrupt nesting and 
 644:./ucOSII/Core/os_core.c **** *              only perform rescheduling at the last nested ISR.
 645:./ucOSII/Core/os_core.c **** *
 646:./ucOSII/Core/os_core.c **** * Arguments  : none
 647:./ucOSII/Core/os_core.c **** *
 648:./ucOSII/Core/os_core.c **** * Returns    : none
 649:./ucOSII/Core/os_core.c **** *
 650:./ucOSII/Core/os_core.c **** * Notes      : 1) This function should be called with interrupts already disabled
 651:./ucOSII/Core/os_core.c **** *              2) Your ISR can directly increment OSIntNesting without calling this function becaus
 652:./ucOSII/Core/os_core.c **** *                 OSIntNesting has been declared 'global'.
 653:./ucOSII/Core/os_core.c **** *              3) You MUST still call OSIntExit() even though you increment OSIntNesting directly.
 654:./ucOSII/Core/os_core.c **** *              4) You MUST invoke OSIntEnter() and OSIntExit() in pair.  In other words, for every 
 655:./ucOSII/Core/os_core.c **** *                 to OSIntEnter() at the beginning of the ISR you MUST have a call to OSIntExit() a
 656:./ucOSII/Core/os_core.c **** *                 end of the ISR.
 657:./ucOSII/Core/os_core.c **** *              5) You are allowed to nest interrupts up to 255 levels deep.
 658:./ucOSII/Core/os_core.c **** *              6) I removed the OS_ENTER_CRITICAL() and OS_EXIT_CRITICAL() around the increment bec
 659:./ucOSII/Core/os_core.c **** *                 OSIntEnter() is always called with interrupts disabled.
 660:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 661:./ucOSII/Core/os_core.c **** */
 662:./ucOSII/Core/os_core.c **** 
 663:./ucOSII/Core/os_core.c **** void  OSIntEnter (void)
 664:./ucOSII/Core/os_core.c **** {
 1298              		.loc 1 664 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 80B4     		push	{r7}
 1304              	.LCFI17:
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
 1307 0002 00AF     		add	r7, sp, #0
 1308              	.LCFI18:
 1309              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 36


 665:./ucOSII/Core/os_core.c ****     if (OSRunning == OS_TRUE) {
 1310              		.loc 1 665 19
 1311 0004 094B     		ldr	r3, .L78
 1312 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1313              		.loc 1 665 8
 1314 0008 012B     		cmp	r3, #1
 1315 000a 09D1     		bne	.L77
 666:./ucOSII/Core/os_core.c ****         if (OSIntNesting < 255u) {
 1316              		.loc 1 666 26
 1317 000c 084B     		ldr	r3, .L78+4
 1318 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1319              		.loc 1 666 12
 1320 0010 FF2B     		cmp	r3, #255
 1321 0012 05D0     		beq	.L77
 667:./ucOSII/Core/os_core.c ****             OSIntNesting++;                      /* Increment ISR nesting level                    
 1322              		.loc 1 667 25
 1323 0014 064B     		ldr	r3, .L78+4
 1324 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0018 0133     		adds	r3, r3, #1
 1326 001a DAB2     		uxtb	r2, r3
 1327 001c 044B     		ldr	r3, .L78+4
 1328 001e 1A70     		strb	r2, [r3]
 1329              	.L77:
 668:./ucOSII/Core/os_core.c ****         }
 669:./ucOSII/Core/os_core.c ****         OS_TRACE_ISR_ENTER();
 670:./ucOSII/Core/os_core.c ****     }
 671:./ucOSII/Core/os_core.c **** }
 1330              		.loc 1 671 1
 1331 0020 00BF     		nop
 1332 0022 BD46     		mov	sp, r7
 1333              	.LCFI19:
 1334              		.cfi_def_cfa_register 13
 1335              		@ sp needed
 1336 0024 5DF8047B 		ldr	r7, [sp], #4
 1337              	.LCFI20:
 1338              		.cfi_restore 7
 1339              		.cfi_def_cfa_offset 0
 1340 0028 7047     		bx	lr
 1341              	.L79:
 1342 002a 00BF     		.align	2
 1343              	.L78:
 1344 002c 00000000 		.word	OSRunning
 1345 0030 00000000 		.word	OSIntNesting
 1346              		.cfi_endproc
 1347              	.LFE7:
 1349              		.section	.text.OSIntExit,"ax",%progbits
 1350              		.align	1
 1351              		.global	OSIntExit
 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1356              	OSIntExit:
 1357              	.LFB8:
 672:./ucOSII/Core/os_core.c **** 
 673:./ucOSII/Core/os_core.c **** 
 674:./ucOSII/Core/os_core.c **** /*
 675:./ucOSII/Core/os_core.c **** ***************************************************************************************************
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 37


 676:./ucOSII/Core/os_core.c **** *                                              EXIT ISR
 677:./ucOSII/Core/os_core.c **** *
 678:./ucOSII/Core/os_core.c **** * Description: This function is used to notify uC/OS-II that you have completed servicing an ISR.  
 679:./ucOSII/Core/os_core.c **** *              the last nested ISR has completed, uC/OS-II will call the scheduler to determine whe
 680:./ucOSII/Core/os_core.c **** *              a new, high-priority task, is ready to run.
 681:./ucOSII/Core/os_core.c **** *
 682:./ucOSII/Core/os_core.c **** * Arguments  : none
 683:./ucOSII/Core/os_core.c **** *
 684:./ucOSII/Core/os_core.c **** * Returns    : none
 685:./ucOSII/Core/os_core.c **** *
 686:./ucOSII/Core/os_core.c **** * Notes      : 1) You MUST invoke OSIntEnter() and OSIntExit() in pair.  In other words, for every 
 687:./ucOSII/Core/os_core.c **** *                 to OSIntEnter() at the beginning of the ISR you MUST have a call to OSIntExit() a
 688:./ucOSII/Core/os_core.c **** *                 end of the ISR.
 689:./ucOSII/Core/os_core.c **** *              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
 690:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 691:./ucOSII/Core/os_core.c **** */
 692:./ucOSII/Core/os_core.c **** 
 693:./ucOSII/Core/os_core.c **** void  OSIntExit (void)
 694:./ucOSII/Core/os_core.c **** {
 1358              		.loc 1 694 1
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 8
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362 0000 80B5     		push	{r7, lr}
 1363              	.LCFI21:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 82B0     		sub	sp, sp, #8
 1368              	.LCFI22:
 1369              		.cfi_def_cfa_offset 16
 1370 0004 00AF     		add	r7, sp, #0
 1371              	.LCFI23:
 1372              		.cfi_def_cfa_register 7
 695:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 696:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 1373              		.loc 1 696 16
 1374 0006 0023     		movs	r3, #0
 1375 0008 7B60     		str	r3, [r7, #4]
 697:./ucOSII/Core/os_core.c **** #endif
 698:./ucOSII/Core/os_core.c **** 
 699:./ucOSII/Core/os_core.c **** 
 700:./ucOSII/Core/os_core.c **** 
 701:./ucOSII/Core/os_core.c ****     if (OSRunning == OS_TRUE) {
 1376              		.loc 1 701 19
 1377 000a 1E4B     		ldr	r3, .L85
 1378 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379              		.loc 1 701 8
 1380 000e 012B     		cmp	r3, #1
 1381 0010 34D1     		bne	.L84
 702:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 1382              		.loc 1 702 9
 1383 0012 4020     		movs	r0, #64
 1384 0014 FFF7FEFF 		bl	OS_CPU_SR_Save
 1385 0018 7860     		str	r0, [r7, #4]
 703:./ucOSII/Core/os_core.c ****         if (OSIntNesting > 0u) {                           /* Prevent OSIntNesting from wrapping   
 1386              		.loc 1 703 26
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 38


 1387 001a 1B4B     		ldr	r3, .L85+4
 1388 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389              		.loc 1 703 12
 1390 001e 002B     		cmp	r3, #0
 1391 0020 05D0     		beq	.L82
 704:./ucOSII/Core/os_core.c ****             OSIntNesting--;
 1392              		.loc 1 704 25
 1393 0022 194B     		ldr	r3, .L85+4
 1394 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1395 0026 013B     		subs	r3, r3, #1
 1396 0028 DAB2     		uxtb	r2, r3
 1397 002a 174B     		ldr	r3, .L85+4
 1398 002c 1A70     		strb	r2, [r3]
 1399              	.L82:
 705:./ucOSII/Core/os_core.c ****         }
 706:./ucOSII/Core/os_core.c ****         if (OSIntNesting == 0u) {                          /* Reschedule only if all ISRs complete 
 1400              		.loc 1 706 26
 1401 002e 164B     		ldr	r3, .L85+4
 1402 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403              		.loc 1 706 12
 1404 0032 002B     		cmp	r3, #0
 1405 0034 1FD1     		bne	.L83
 707:./ucOSII/Core/os_core.c ****             if (OSLockNesting == 0u) {                     /* ... and not locked.                  
 1406              		.loc 1 707 31
 1407 0036 154B     		ldr	r3, .L85+8
 1408 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409              		.loc 1 707 16
 1410 003a 002B     		cmp	r3, #0
 1411 003c 1BD1     		bne	.L83
 708:./ucOSII/Core/os_core.c ****                 OS_SchedNew();
 1412              		.loc 1 708 17
 1413 003e FFF7FEFF 		bl	OS_SchedNew
 709:./ucOSII/Core/os_core.c ****                 OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
 1414              		.loc 1 709 44
 1415 0042 134B     		ldr	r3, .L85+12
 1416 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 0046 1A46     		mov	r2, r3
 1418 0048 124B     		ldr	r3, .L85+16
 1419 004a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1420              		.loc 1 709 30
 1421 004e 124A     		ldr	r2, .L85+20
 1422 0050 1360     		str	r3, [r2]
 710:./ucOSII/Core/os_core.c ****                 if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest 
 1423              		.loc 1 710 35
 1424 0052 0F4B     		ldr	r3, .L85+12
 1425 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1426 0056 114B     		ldr	r3, .L85+24
 1427 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1428              		.loc 1 710 20
 1429 005a 9A42     		cmp	r2, r3
 1430 005c 0BD0     		beq	.L83
 711:./ucOSII/Core/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 712:./ucOSII/Core/os_core.c ****                     OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this ta
 1431              		.loc 1 712 33
 1432 005e 0E4B     		ldr	r3, .L85+20
 1433 0060 1B68     		ldr	r3, [r3]
 1434 0062 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 39


 1435              		.loc 1 712 48
 1436 0064 0132     		adds	r2, r2, #1
 1437 0066 1A64     		str	r2, [r3, #64]
 713:./ucOSII/Core/os_core.c **** #endif
 714:./ucOSII/Core/os_core.c ****                     OSCtxSwCtr++;                          /* Keep track of the number of ctx switc
 1438              		.loc 1 714 31
 1439 0068 0D4B     		ldr	r3, .L85+28
 1440 006a 1B68     		ldr	r3, [r3]
 1441 006c 0133     		adds	r3, r3, #1
 1442 006e 0C4A     		ldr	r2, .L85+28
 1443 0070 1360     		str	r3, [r2]
 715:./ucOSII/Core/os_core.c **** 
 716:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 717:./ucOSII/Core/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 718:./ucOSII/Core/os_core.c ****                     OS_TLS_TaskSw();
 719:./ucOSII/Core/os_core.c **** #endif
 720:./ucOSII/Core/os_core.c **** #endif
 721:./ucOSII/Core/os_core.c ****                     OS_TRACE_ISR_EXIT_TO_SCHEDULER();
 722:./ucOSII/Core/os_core.c **** 
 723:./ucOSII/Core/os_core.c ****                     OSIntCtxSw();                          /* Perform interrupt level ctx switch   
 1444              		.loc 1 723 21
 1445 0072 FFF7FEFF 		bl	OSIntCtxSw
 1446              	.L83:
 724:./ucOSII/Core/os_core.c ****                 } else {
 725:./ucOSII/Core/os_core.c ****                     OS_TRACE_ISR_EXIT();
 726:./ucOSII/Core/os_core.c ****                 }
 727:./ucOSII/Core/os_core.c ****             } else {
 728:./ucOSII/Core/os_core.c ****                 OS_TRACE_ISR_EXIT();
 729:./ucOSII/Core/os_core.c ****             }
 730:./ucOSII/Core/os_core.c ****         } else {
 731:./ucOSII/Core/os_core.c ****             OS_TRACE_ISR_EXIT();
 732:./ucOSII/Core/os_core.c ****         }
 733:./ucOSII/Core/os_core.c **** 
 734:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 1447              		.loc 1 734 9
 1448 0076 7868     		ldr	r0, [r7, #4]
 1449 0078 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1450              	.L84:
 735:./ucOSII/Core/os_core.c ****     }
 736:./ucOSII/Core/os_core.c **** }
 1451              		.loc 1 736 1
 1452 007c 00BF     		nop
 1453 007e 0837     		adds	r7, r7, #8
 1454              	.LCFI24:
 1455              		.cfi_def_cfa_offset 8
 1456 0080 BD46     		mov	sp, r7
 1457              	.LCFI25:
 1458              		.cfi_def_cfa_register 13
 1459              		@ sp needed
 1460 0082 80BD     		pop	{r7, pc}
 1461              	.L86:
 1462              		.align	2
 1463              	.L85:
 1464 0084 00000000 		.word	OSRunning
 1465 0088 00000000 		.word	OSIntNesting
 1466 008c 00000000 		.word	OSLockNesting
 1467 0090 00000000 		.word	OSPrioHighRdy
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 40


 1468 0094 00000000 		.word	OSTCBPrioTbl
 1469 0098 00000000 		.word	OSTCBHighRdy
 1470 009c 00000000 		.word	OSPrioCur
 1471 00a0 00000000 		.word	OSCtxSwCtr
 1472              		.cfi_endproc
 1473              	.LFE8:
 1475              		.section	.text.OSSchedLock,"ax",%progbits
 1476              		.align	1
 1477              		.global	OSSchedLock
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1482              	OSSchedLock:
 1483              	.LFB9:
 737:./ucOSII/Core/os_core.c **** 
 738:./ucOSII/Core/os_core.c **** 
 739:./ucOSII/Core/os_core.c **** /*
 740:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 741:./ucOSII/Core/os_core.c **** *                         INDICATE THAT IT'S NO LONGER SAFE TO CREATE OBJECTS
 742:./ucOSII/Core/os_core.c **** *
 743:./ucOSII/Core/os_core.c **** * Description: This function is called by the application code to indicate that all initialization 
 744:./ucOSII/Core/os_core.c **** *              been completed and that kernel objects are no longer allowed to be created.
 745:./ucOSII/Core/os_core.c **** *
 746:./ucOSII/Core/os_core.c **** * Arguments  : none
 747:./ucOSII/Core/os_core.c **** *
 748:./ucOSII/Core/os_core.c **** * Returns    : none
 749:./ucOSII/Core/os_core.c **** *
 750:./ucOSII/Core/os_core.c **** * Note(s)    : 1) You should call this function when you no longer want to allow application code t
 751:./ucOSII/Core/os_core.c **** *                 create kernel objects.
 752:./ucOSII/Core/os_core.c **** *              2) You need to define the macro 'OS_SAFETY_CRITICAL_IEC61508'
 753:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 754:./ucOSII/Core/os_core.c **** */
 755:./ucOSII/Core/os_core.c **** 
 756:./ucOSII/Core/os_core.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 757:./ucOSII/Core/os_core.c **** void  OSSafetyCriticalStart (void)
 758:./ucOSII/Core/os_core.c **** {
 759:./ucOSII/Core/os_core.c ****     OSSafetyCriticalStartFlag = OS_TRUE;
 760:./ucOSII/Core/os_core.c **** }
 761:./ucOSII/Core/os_core.c **** 
 762:./ucOSII/Core/os_core.c **** #endif
 763:./ucOSII/Core/os_core.c **** 
 764:./ucOSII/Core/os_core.c **** 
 765:./ucOSII/Core/os_core.c **** /*
 766:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 767:./ucOSII/Core/os_core.c **** *                                         PREVENT SCHEDULING
 768:./ucOSII/Core/os_core.c **** *
 769:./ucOSII/Core/os_core.c **** * Description: This function is used to prevent rescheduling to take place.  This allows your appli
 770:./ucOSII/Core/os_core.c **** *              to prevent context switches until you are ready to permit context switching.
 771:./ucOSII/Core/os_core.c **** *
 772:./ucOSII/Core/os_core.c **** * Arguments  : none
 773:./ucOSII/Core/os_core.c **** *
 774:./ucOSII/Core/os_core.c **** * Returns    : none
 775:./ucOSII/Core/os_core.c **** *
 776:./ucOSII/Core/os_core.c **** * Notes      : 1) You MUST invoke OSSchedLock() and OSSchedUnlock() in pair.  In other words, for e
 777:./ucOSII/Core/os_core.c **** *                 call to OSSchedLock() you MUST have a call to OSSchedUnlock().
 778:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 779:./ucOSII/Core/os_core.c **** */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 41


 780:./ucOSII/Core/os_core.c **** 
 781:./ucOSII/Core/os_core.c **** #if OS_SCHED_LOCK_EN > 0u
 782:./ucOSII/Core/os_core.c **** void  OSSchedLock (void)
 783:./ucOSII/Core/os_core.c **** {
 1484              		.loc 1 783 1
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 8
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488 0000 80B5     		push	{r7, lr}
 1489              	.LCFI26:
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 82B0     		sub	sp, sp, #8
 1494              	.LCFI27:
 1495              		.cfi_def_cfa_offset 16
 1496 0004 00AF     		add	r7, sp, #0
 1497              	.LCFI28:
 1498              		.cfi_def_cfa_register 7
 784:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 785:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 1499              		.loc 1 785 16
 1500 0006 0023     		movs	r3, #0
 1501 0008 7B60     		str	r3, [r7, #4]
 786:./ucOSII/Core/os_core.c **** #endif
 787:./ucOSII/Core/os_core.c **** 
 788:./ucOSII/Core/os_core.c **** 
 789:./ucOSII/Core/os_core.c **** 
 790:./ucOSII/Core/os_core.c ****     if (OSRunning == OS_TRUE) {                  /* Make sure multitasking is running              
 1502              		.loc 1 790 19
 1503 000a 0E4B     		ldr	r3, .L91
 1504 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505              		.loc 1 790 8
 1506 000e 012B     		cmp	r3, #1
 1507 0010 14D1     		bne	.L90
 791:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 1508              		.loc 1 791 9
 1509 0012 4020     		movs	r0, #64
 1510 0014 FFF7FEFF 		bl	OS_CPU_SR_Save
 1511 0018 7860     		str	r0, [r7, #4]
 792:./ucOSII/Core/os_core.c ****         if (OSIntNesting == 0u) {                /* Can't call from an ISR                         
 1512              		.loc 1 792 26
 1513 001a 0B4B     		ldr	r3, .L91+4
 1514 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515              		.loc 1 792 12
 1516 001e 002B     		cmp	r3, #0
 1517 0020 09D1     		bne	.L89
 793:./ucOSII/Core/os_core.c ****             if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0  
 1518              		.loc 1 793 31
 1519 0022 0A4B     		ldr	r3, .L91+8
 1520 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521              		.loc 1 793 16
 1522 0026 FF2B     		cmp	r3, #255
 1523 0028 05D0     		beq	.L89
 794:./ucOSII/Core/os_core.c ****                 OSLockNesting++;                 /* Increment lock nesting level                   
 1524              		.loc 1 794 30
 1525 002a 084B     		ldr	r3, .L91+8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 42


 1526 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1527 002e 0133     		adds	r3, r3, #1
 1528 0030 DAB2     		uxtb	r2, r3
 1529 0032 064B     		ldr	r3, .L91+8
 1530 0034 1A70     		strb	r2, [r3]
 1531              	.L89:
 795:./ucOSII/Core/os_core.c ****             }
 796:./ucOSII/Core/os_core.c ****         }
 797:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 1532              		.loc 1 797 9
 1533 0036 7868     		ldr	r0, [r7, #4]
 1534 0038 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1535              	.L90:
 798:./ucOSII/Core/os_core.c ****     }
 799:./ucOSII/Core/os_core.c **** }
 1536              		.loc 1 799 1
 1537 003c 00BF     		nop
 1538 003e 0837     		adds	r7, r7, #8
 1539              	.LCFI29:
 1540              		.cfi_def_cfa_offset 8
 1541 0040 BD46     		mov	sp, r7
 1542              	.LCFI30:
 1543              		.cfi_def_cfa_register 13
 1544              		@ sp needed
 1545 0042 80BD     		pop	{r7, pc}
 1546              	.L92:
 1547              		.align	2
 1548              	.L91:
 1549 0044 00000000 		.word	OSRunning
 1550 0048 00000000 		.word	OSIntNesting
 1551 004c 00000000 		.word	OSLockNesting
 1552              		.cfi_endproc
 1553              	.LFE9:
 1555              		.section	.text.OSSchedUnlock,"ax",%progbits
 1556              		.align	1
 1557              		.global	OSSchedUnlock
 1558              		.syntax unified
 1559              		.thumb
 1560              		.thumb_func
 1562              	OSSchedUnlock:
 1563              	.LFB10:
 800:./ucOSII/Core/os_core.c **** #endif
 801:./ucOSII/Core/os_core.c **** 
 802:./ucOSII/Core/os_core.c **** 
 803:./ucOSII/Core/os_core.c **** /*
 804:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 805:./ucOSII/Core/os_core.c **** *                                          ENABLE SCHEDULING
 806:./ucOSII/Core/os_core.c **** *
 807:./ucOSII/Core/os_core.c **** * Description: This function is used to re-allow rescheduling.
 808:./ucOSII/Core/os_core.c **** *
 809:./ucOSII/Core/os_core.c **** * Arguments  : none
 810:./ucOSII/Core/os_core.c **** *
 811:./ucOSII/Core/os_core.c **** * Returns    : none
 812:./ucOSII/Core/os_core.c **** *
 813:./ucOSII/Core/os_core.c **** * Notes      : 1) You MUST invoke OSSchedLock() and OSSchedUnlock() in pair.  In other words, for e
 814:./ucOSII/Core/os_core.c **** *                 call to OSSchedLock() you MUST have a call to OSSchedUnlock().
 815:./ucOSII/Core/os_core.c **** ***************************************************************************************************
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 43


 816:./ucOSII/Core/os_core.c **** */
 817:./ucOSII/Core/os_core.c **** 
 818:./ucOSII/Core/os_core.c **** #if OS_SCHED_LOCK_EN > 0u
 819:./ucOSII/Core/os_core.c **** void  OSSchedUnlock (void)
 820:./ucOSII/Core/os_core.c **** {
 1564              		.loc 1 820 1
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 8
 1567              		@ frame_needed = 1, uses_anonymous_args = 0
 1568 0000 80B5     		push	{r7, lr}
 1569              	.LCFI31:
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 7, -8
 1572              		.cfi_offset 14, -4
 1573 0002 82B0     		sub	sp, sp, #8
 1574              	.LCFI32:
 1575              		.cfi_def_cfa_offset 16
 1576 0004 00AF     		add	r7, sp, #0
 1577              	.LCFI33:
 1578              		.cfi_def_cfa_register 7
 821:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 822:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 1579              		.loc 1 822 16
 1580 0006 0023     		movs	r3, #0
 1581 0008 7B60     		str	r3, [r7, #4]
 823:./ucOSII/Core/os_core.c **** #endif
 824:./ucOSII/Core/os_core.c **** 
 825:./ucOSII/Core/os_core.c **** 
 826:./ucOSII/Core/os_core.c **** 
 827:./ucOSII/Core/os_core.c ****     if (OSRunning == OS_TRUE) {                            /* Make sure multitasking is running    
 1582              		.loc 1 827 19
 1583 000a 174B     		ldr	r3, .L99
 1584 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1585              		.loc 1 827 8
 1586 000e 012B     		cmp	r3, #1
 1587 0010 26D1     		bne	.L98
 828:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 1588              		.loc 1 828 9
 1589 0012 4020     		movs	r0, #64
 1590 0014 FFF7FEFF 		bl	OS_CPU_SR_Save
 1591 0018 7860     		str	r0, [r7, #4]
 829:./ucOSII/Core/os_core.c ****         if (OSIntNesting == 0u) {                          /* Can't call from an ISR               
 1592              		.loc 1 829 26
 1593 001a 144B     		ldr	r3, .L99+4
 1594 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1595              		.loc 1 829 12
 1596 001e 002B     		cmp	r3, #0
 1597 0020 1BD1     		bne	.L95
 830:./ucOSII/Core/os_core.c ****             if (OSLockNesting > 0u) {                      /* Do not decrement if already 0        
 1598              		.loc 1 830 31
 1599 0022 134B     		ldr	r3, .L99+8
 1600 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1601              		.loc 1 830 16
 1602 0026 002B     		cmp	r3, #0
 1603 0028 13D0     		beq	.L96
 831:./ucOSII/Core/os_core.c ****                 OSLockNesting--;                           /* Decrement lock nesting level         
 1604              		.loc 1 831 30
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 44


 1605 002a 114B     		ldr	r3, .L99+8
 1606 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 002e 013B     		subs	r3, r3, #1
 1608 0030 DAB2     		uxtb	r2, r3
 1609 0032 0F4B     		ldr	r3, .L99+8
 1610 0034 1A70     		strb	r2, [r3]
 832:./ucOSII/Core/os_core.c ****                 if (OSLockNesting == 0u) {                 /* See if scheduler is enabled          
 1611              		.loc 1 832 35
 1612 0036 0E4B     		ldr	r3, .L99+8
 1613 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1614              		.loc 1 832 20
 1615 003a 002B     		cmp	r3, #0
 1616 003c 05D1     		bne	.L97
 833:./ucOSII/Core/os_core.c ****                     OS_EXIT_CRITICAL();
 1617              		.loc 1 833 21
 1618 003e 7868     		ldr	r0, [r7, #4]
 1619 0040 FFF7FEFF 		bl	OS_CPU_SR_Restore
 834:./ucOSII/Core/os_core.c ****                     OS_Sched();                            /* See if a HPT is ready                
 1620              		.loc 1 834 21
 1621 0044 FFF7FEFF 		bl	OS_Sched
 835:./ucOSII/Core/os_core.c ****                 } else {
 836:./ucOSII/Core/os_core.c ****                     OS_EXIT_CRITICAL();
 837:./ucOSII/Core/os_core.c ****                 }
 838:./ucOSII/Core/os_core.c ****             } else {
 839:./ucOSII/Core/os_core.c ****                 OS_EXIT_CRITICAL();
 840:./ucOSII/Core/os_core.c ****             }
 841:./ucOSII/Core/os_core.c ****         } else {
 842:./ucOSII/Core/os_core.c ****             OS_EXIT_CRITICAL();
 843:./ucOSII/Core/os_core.c ****         }
 844:./ucOSII/Core/os_core.c ****     }
 845:./ucOSII/Core/os_core.c **** }
 1622              		.loc 1 845 1
 1623 0048 0AE0     		b	.L98
 1624              	.L97:
 836:./ucOSII/Core/os_core.c ****                 }
 1625              		.loc 1 836 21
 1626 004a 7868     		ldr	r0, [r7, #4]
 1627 004c FFF7FEFF 		bl	OS_CPU_SR_Restore
 1628              		.loc 1 845 1
 1629 0050 06E0     		b	.L98
 1630              	.L96:
 839:./ucOSII/Core/os_core.c ****             }
 1631              		.loc 1 839 17
 1632 0052 7868     		ldr	r0, [r7, #4]
 1633 0054 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1634              		.loc 1 845 1
 1635 0058 02E0     		b	.L98
 1636              	.L95:
 842:./ucOSII/Core/os_core.c ****         }
 1637              		.loc 1 842 13
 1638 005a 7868     		ldr	r0, [r7, #4]
 1639 005c FFF7FEFF 		bl	OS_CPU_SR_Restore
 1640              	.L98:
 1641              		.loc 1 845 1
 1642 0060 00BF     		nop
 1643 0062 0837     		adds	r7, r7, #8
 1644              	.LCFI34:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 45


 1645              		.cfi_def_cfa_offset 8
 1646 0064 BD46     		mov	sp, r7
 1647              	.LCFI35:
 1648              		.cfi_def_cfa_register 13
 1649              		@ sp needed
 1650 0066 80BD     		pop	{r7, pc}
 1651              	.L100:
 1652              		.align	2
 1653              	.L99:
 1654 0068 00000000 		.word	OSRunning
 1655 006c 00000000 		.word	OSIntNesting
 1656 0070 00000000 		.word	OSLockNesting
 1657              		.cfi_endproc
 1658              	.LFE10:
 1660              		.section	.text.OSStart,"ax",%progbits
 1661              		.align	1
 1662              		.global	OSStart
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1667              	OSStart:
 1668              	.LFB11:
 846:./ucOSII/Core/os_core.c **** #endif
 847:./ucOSII/Core/os_core.c **** 
 848:./ucOSII/Core/os_core.c **** 
 849:./ucOSII/Core/os_core.c **** /*
 850:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 851:./ucOSII/Core/os_core.c **** *                                         START MULTITASKING
 852:./ucOSII/Core/os_core.c **** *
 853:./ucOSII/Core/os_core.c **** * Description: This function is used to start the multitasking process which lets uC/OS-II manages 
 854:./ucOSII/Core/os_core.c **** *              task that you have created.  Before you can call OSStart(), you MUST have called OSI
 855:./ucOSII/Core/os_core.c **** *              and you MUST have created at least one task.
 856:./ucOSII/Core/os_core.c **** *
 857:./ucOSII/Core/os_core.c **** * Arguments  : none
 858:./ucOSII/Core/os_core.c **** *
 859:./ucOSII/Core/os_core.c **** * Returns    : none
 860:./ucOSII/Core/os_core.c **** *
 861:./ucOSII/Core/os_core.c **** * Note       : OSStartHighRdy() MUST:
 862:./ucOSII/Core/os_core.c **** *                 a) Call OSTaskSwHook() then,
 863:./ucOSII/Core/os_core.c **** *                 b) Set OSRunning to OS_TRUE.
 864:./ucOSII/Core/os_core.c **** *                 c) Load the context of the task pointed to by OSTCBHighRdy.
 865:./ucOSII/Core/os_core.c **** *                 d_ Execute the task.
 866:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 867:./ucOSII/Core/os_core.c **** */
 868:./ucOSII/Core/os_core.c **** 
 869:./ucOSII/Core/os_core.c **** void  OSStart (void)
 870:./ucOSII/Core/os_core.c **** {
 1669              		.loc 1 870 1
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 0000 80B5     		push	{r7, lr}
 1674              	.LCFI36:
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 7, -8
 1677              		.cfi_offset 14, -4
 1678 0002 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 46


 1679              	.LCFI37:
 1680              		.cfi_def_cfa_register 7
 871:./ucOSII/Core/os_core.c ****     if (OSRunning == OS_FALSE) {
 1681              		.loc 1 871 19
 1682 0004 0C4B     		ldr	r3, .L104
 1683 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684              		.loc 1 871 8
 1685 0008 002B     		cmp	r3, #0
 1686 000a 13D1     		bne	.L103
 872:./ucOSII/Core/os_core.c ****         OS_SchedNew();                               /* Find highest priority's task priority numbe
 1687              		.loc 1 872 9
 1688 000c FFF7FEFF 		bl	OS_SchedNew
 873:./ucOSII/Core/os_core.c ****         OSPrioCur     = OSPrioHighRdy;
 1689              		.loc 1 873 23
 1690 0010 0A4B     		ldr	r3, .L104+4
 1691 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1692 0014 0A4B     		ldr	r3, .L104+8
 1693 0016 1A70     		strb	r2, [r3]
 874:./ucOSII/Core/os_core.c ****         OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy]; /* Point to highest priority task ready to run
 1694              		.loc 1 874 37
 1695 0018 084B     		ldr	r3, .L104+4
 1696 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1697 001c 1A46     		mov	r2, r3
 1698 001e 094B     		ldr	r3, .L104+12
 1699 0020 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1700              		.loc 1 874 23
 1701 0024 084A     		ldr	r2, .L104+16
 1702 0026 1360     		str	r3, [r2]
 875:./ucOSII/Core/os_core.c ****         OSTCBCur      = OSTCBHighRdy;
 1703              		.loc 1 875 23
 1704 0028 074B     		ldr	r3, .L104+16
 1705 002a 1B68     		ldr	r3, [r3]
 1706 002c 074A     		ldr	r2, .L104+20
 1707 002e 1360     		str	r3, [r2]
 876:./ucOSII/Core/os_core.c ****         OSStartHighRdy();                            /* Execute target specific code to start task 
 1708              		.loc 1 876 9
 1709 0030 FFF7FEFF 		bl	OSStartHighRdy
 1710              	.L103:
 877:./ucOSII/Core/os_core.c ****     }
 878:./ucOSII/Core/os_core.c **** }
 1711              		.loc 1 878 1
 1712 0034 00BF     		nop
 1713 0036 80BD     		pop	{r7, pc}
 1714              	.L105:
 1715              		.align	2
 1716              	.L104:
 1717 0038 00000000 		.word	OSRunning
 1718 003c 00000000 		.word	OSPrioHighRdy
 1719 0040 00000000 		.word	OSPrioCur
 1720 0044 00000000 		.word	OSTCBPrioTbl
 1721 0048 00000000 		.word	OSTCBHighRdy
 1722 004c 00000000 		.word	OSTCBCur
 1723              		.cfi_endproc
 1724              	.LFE11:
 1726              		.section	.text.OSStatInit,"ax",%progbits
 1727              		.align	1
 1728              		.global	OSStatInit
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 47


 1729              		.syntax unified
 1730              		.thumb
 1731              		.thumb_func
 1733              	OSStatInit:
 1734              	.LFB12:
 879:./ucOSII/Core/os_core.c **** 
 880:./ucOSII/Core/os_core.c **** 
 881:./ucOSII/Core/os_core.c **** /*
 882:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 883:./ucOSII/Core/os_core.c **** *                                      STATISTICS INITIALIZATION
 884:./ucOSII/Core/os_core.c **** *
 885:./ucOSII/Core/os_core.c **** * Description: This function is called by your application to establish CPU usage by first determin
 886:./ucOSII/Core/os_core.c **** *              how high a 32-bit counter would count to in 1 second if no other tasks were to execu
 887:./ucOSII/Core/os_core.c **** *              during that time.  CPU usage is then determined by a low priority task which keeps t
 888:./ucOSII/Core/os_core.c **** *              of this 32-bit counter every second but this time, with other tasks running.  CPU us
 889:./ucOSII/Core/os_core.c **** *              determined by:
 890:./ucOSII/Core/os_core.c **** *
 891:./ucOSII/Core/os_core.c **** *                                             OSIdleCtr
 892:./ucOSII/Core/os_core.c **** *                 CPU Usage (%) = 100 * (1 - ------------)
 893:./ucOSII/Core/os_core.c **** *                                            OSIdleCtrMax
 894:./ucOSII/Core/os_core.c **** *
 895:./ucOSII/Core/os_core.c **** * Arguments  : none
 896:./ucOSII/Core/os_core.c **** *
 897:./ucOSII/Core/os_core.c **** * Returns    : none
 898:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 899:./ucOSII/Core/os_core.c **** */
 900:./ucOSII/Core/os_core.c **** 
 901:./ucOSII/Core/os_core.c **** #if OS_TASK_STAT_EN > 0u
 902:./ucOSII/Core/os_core.c **** void  OSStatInit (void)
 903:./ucOSII/Core/os_core.c **** {
 1735              		.loc 1 903 1
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 8
 1738              		@ frame_needed = 1, uses_anonymous_args = 0
 1739 0000 80B5     		push	{r7, lr}
 1740              	.LCFI38:
 1741              		.cfi_def_cfa_offset 8
 1742              		.cfi_offset 7, -8
 1743              		.cfi_offset 14, -4
 1744 0002 82B0     		sub	sp, sp, #8
 1745              	.LCFI39:
 1746              		.cfi_def_cfa_offset 16
 1747 0004 00AF     		add	r7, sp, #0
 1748              	.LCFI40:
 1749              		.cfi_def_cfa_register 7
 904:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 905:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 1750              		.loc 1 905 16
 1751 0006 0023     		movs	r3, #0
 1752 0008 7B60     		str	r3, [r7, #4]
 906:./ucOSII/Core/os_core.c **** #endif
 907:./ucOSII/Core/os_core.c **** 
 908:./ucOSII/Core/os_core.c **** 
 909:./ucOSII/Core/os_core.c **** 
 910:./ucOSII/Core/os_core.c ****     OSTimeDly(2u);                               /* Synchronize with clock tick                    
 1753              		.loc 1 910 5
 1754 000a 0220     		movs	r0, #2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 48


 1755 000c FFF7FEFF 		bl	OSTimeDly
 911:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 1756              		.loc 1 911 5
 1757 0010 4020     		movs	r0, #64
 1758 0012 FFF7FEFF 		bl	OS_CPU_SR_Save
 1759 0016 7860     		str	r0, [r7, #4]
 912:./ucOSII/Core/os_core.c ****     OSIdleCtr    = 0uL;                          /* Clear idle counter                             
 1760              		.loc 1 912 18
 1761 0018 0D4B     		ldr	r3, .L107
 1762 001a 0022     		movs	r2, #0
 1763 001c 1A60     		str	r2, [r3]
 913:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 1764              		.loc 1 913 5
 1765 001e 7868     		ldr	r0, [r7, #4]
 1766 0020 FFF7FEFF 		bl	OS_CPU_SR_Restore
 914:./ucOSII/Core/os_core.c ****     OSTimeDly(OS_TICKS_PER_SEC / 10u);           /* Determine MAX. idle counter value for 1/10 seco
 1767              		.loc 1 914 5
 1768 0024 0A20     		movs	r0, #10
 1769 0026 FFF7FEFF 		bl	OSTimeDly
 915:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 1770              		.loc 1 915 5
 1771 002a 4020     		movs	r0, #64
 1772 002c FFF7FEFF 		bl	OS_CPU_SR_Save
 1773 0030 7860     		str	r0, [r7, #4]
 916:./ucOSII/Core/os_core.c ****     OSIdleCtrMax = OSIdleCtr;                    /* Store maximum idle counter count in 1/10 second
 1774              		.loc 1 916 18
 1775 0032 074B     		ldr	r3, .L107
 1776 0034 1B68     		ldr	r3, [r3]
 1777 0036 074A     		ldr	r2, .L107+4
 1778 0038 1360     		str	r3, [r2]
 917:./ucOSII/Core/os_core.c ****     OSStatRdy    = OS_TRUE;
 1779              		.loc 1 917 18
 1780 003a 074B     		ldr	r3, .L107+8
 1781 003c 0122     		movs	r2, #1
 1782 003e 1A70     		strb	r2, [r3]
 918:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 1783              		.loc 1 918 5
 1784 0040 7868     		ldr	r0, [r7, #4]
 1785 0042 FFF7FEFF 		bl	OS_CPU_SR_Restore
 919:./ucOSII/Core/os_core.c **** }
 1786              		.loc 1 919 1
 1787 0046 00BF     		nop
 1788 0048 0837     		adds	r7, r7, #8
 1789              	.LCFI41:
 1790              		.cfi_def_cfa_offset 8
 1791 004a BD46     		mov	sp, r7
 1792              	.LCFI42:
 1793              		.cfi_def_cfa_register 13
 1794              		@ sp needed
 1795 004c 80BD     		pop	{r7, pc}
 1796              	.L108:
 1797 004e 00BF     		.align	2
 1798              	.L107:
 1799 0050 00000000 		.word	OSIdleCtr
 1800 0054 00000000 		.word	OSIdleCtrMax
 1801 0058 00000000 		.word	OSStatRdy
 1802              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 49


 1803              	.LFE12:
 1805              		.section	.text.OSTimeTick,"ax",%progbits
 1806              		.align	1
 1807              		.global	OSTimeTick
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1812              	OSTimeTick:
 1813              	.LFB13:
 920:./ucOSII/Core/os_core.c **** #endif
 921:./ucOSII/Core/os_core.c **** 
 922:./ucOSII/Core/os_core.c **** 
 923:./ucOSII/Core/os_core.c **** /*
 924:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 925:./ucOSII/Core/os_core.c **** *                                         PROCESS SYSTEM TICK
 926:./ucOSII/Core/os_core.c **** *
 927:./ucOSII/Core/os_core.c **** * Description: This function is used to signal to uC/OS-II the occurrence of a 'system tick' (also 
 928:./ucOSII/Core/os_core.c **** *              as a 'clock tick').  This function should be called by the ticker ISR but, can also 
 929:./ucOSII/Core/os_core.c **** *              called by a high priority task.
 930:./ucOSII/Core/os_core.c **** *
 931:./ucOSII/Core/os_core.c **** * Arguments  : none
 932:./ucOSII/Core/os_core.c **** *
 933:./ucOSII/Core/os_core.c **** * Returns    : none
 934:./ucOSII/Core/os_core.c **** ***************************************************************************************************
 935:./ucOSII/Core/os_core.c **** */
 936:./ucOSII/Core/os_core.c **** 
 937:./ucOSII/Core/os_core.c **** void  OSTimeTick (void)
 938:./ucOSII/Core/os_core.c **** {
 1814              		.loc 1 938 1
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 16
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 80B5     		push	{r7, lr}
 1819              	.LCFI43:
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 84B0     		sub	sp, sp, #16
 1824              	.LCFI44:
 1825              		.cfi_def_cfa_offset 24
 1826 0004 00AF     		add	r7, sp, #0
 1827              	.LCFI45:
 1828              		.cfi_def_cfa_register 7
 939:./ucOSII/Core/os_core.c ****     OS_TCB    *ptcb;
 940:./ucOSII/Core/os_core.c **** #if OS_TICK_STEP_EN > 0u
 941:./ucOSII/Core/os_core.c ****     BOOLEAN    step;
 942:./ucOSII/Core/os_core.c **** #endif
 943:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 944:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 1829              		.loc 1 944 16
 1830 0006 0023     		movs	r3, #0
 1831 0008 7B60     		str	r3, [r7, #4]
 945:./ucOSII/Core/os_core.c **** #endif
 946:./ucOSII/Core/os_core.c **** 
 947:./ucOSII/Core/os_core.c **** 
 948:./ucOSII/Core/os_core.c **** 
 949:./ucOSII/Core/os_core.c **** #if OS_TIME_TICK_HOOK_EN > 0u
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 50


 950:./ucOSII/Core/os_core.c ****     OSTimeTickHook();                                      /* Call user definable hook             
 1832              		.loc 1 950 5
 1833 000a FFF7FEFF 		bl	OSTimeTickHook
 951:./ucOSII/Core/os_core.c **** #endif
 952:./ucOSII/Core/os_core.c **** #if OS_TIME_GET_SET_EN > 0u
 953:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();                                   /* Update the 32-bit tick counter       
 1834              		.loc 1 953 5
 1835 000e 4020     		movs	r0, #64
 1836 0010 FFF7FEFF 		bl	OS_CPU_SR_Save
 1837 0014 7860     		str	r0, [r7, #4]
 954:./ucOSII/Core/os_core.c ****     OSTime++;
 1838              		.loc 1 954 11
 1839 0016 454B     		ldr	r3, .L123
 1840 0018 1B68     		ldr	r3, [r3]
 1841 001a 0133     		adds	r3, r3, #1
 1842 001c 434A     		ldr	r2, .L123
 1843 001e 1360     		str	r3, [r2]
 955:./ucOSII/Core/os_core.c ****     OS_TRACE_TICK_INCREMENT(OSTime);
 956:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 1844              		.loc 1 956 5
 1845 0020 7868     		ldr	r0, [r7, #4]
 1846 0022 FFF7FEFF 		bl	OS_CPU_SR_Restore
 957:./ucOSII/Core/os_core.c **** #endif
 958:./ucOSII/Core/os_core.c ****     if (OSRunning == OS_TRUE) {
 1847              		.loc 1 958 19
 1848 0026 424B     		ldr	r3, .L123+4
 1849 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850              		.loc 1 958 8
 1851 002a 012B     		cmp	r3, #1
 1852 002c 7AD1     		bne	.L109
 959:./ucOSII/Core/os_core.c **** #if OS_TICK_STEP_EN > 0u
 960:./ucOSII/Core/os_core.c ****         switch (OSTickStepState) {                         /* Determine whether we need to process 
 1853              		.loc 1 960 9
 1854 002e 414B     		ldr	r3, .L123+8
 1855 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1856 0032 022B     		cmp	r3, #2
 1857 0034 0CD0     		beq	.L111
 1858 0036 022B     		cmp	r3, #2
 1859 0038 10DC     		bgt	.L112
 1860 003a 002B     		cmp	r3, #0
 1861 003c 02D0     		beq	.L113
 1862 003e 012B     		cmp	r3, #1
 1863 0040 03D0     		beq	.L114
 1864 0042 0BE0     		b	.L112
 1865              	.L113:
 961:./ucOSII/Core/os_core.c ****             case OS_TICK_STEP_DIS:                         /* Yes, stepping is disabled            
 962:./ucOSII/Core/os_core.c ****                  step = OS_TRUE;
 1866              		.loc 1 962 23
 1867 0044 0123     		movs	r3, #1
 1868 0046 FB72     		strb	r3, [r7, #11]
 963:./ucOSII/Core/os_core.c ****                  break;
 1869              		.loc 1 963 18
 1870 0048 0EE0     		b	.L115
 1871              	.L114:
 964:./ucOSII/Core/os_core.c **** 
 965:./ucOSII/Core/os_core.c ****             case OS_TICK_STEP_WAIT:                        /* No,  waiting for uC/OS-View to set ..
 966:./ucOSII/Core/os_core.c ****                  step = OS_FALSE;                          /*      .. OSTickStepState to OS_TICK_ST
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 51


 1872              		.loc 1 966 23
 1873 004a 0023     		movs	r3, #0
 1874 004c FB72     		strb	r3, [r7, #11]
 967:./ucOSII/Core/os_core.c ****                  break;
 1875              		.loc 1 967 18
 1876 004e 0BE0     		b	.L115
 1877              	.L111:
 968:./ucOSII/Core/os_core.c **** 
 969:./ucOSII/Core/os_core.c ****             case OS_TICK_STEP_ONCE:                        /* Yes, process tick once and wait for n
 970:./ucOSII/Core/os_core.c ****                  step            = OS_TRUE;                /*      ... step command from uC/OS-View
 1878              		.loc 1 970 34
 1879 0050 0123     		movs	r3, #1
 1880 0052 FB72     		strb	r3, [r7, #11]
 971:./ucOSII/Core/os_core.c ****                  OSTickStepState = OS_TICK_STEP_WAIT;
 1881              		.loc 1 971 34
 1882 0054 374B     		ldr	r3, .L123+8
 1883 0056 0122     		movs	r2, #1
 1884 0058 1A70     		strb	r2, [r3]
 972:./ucOSII/Core/os_core.c ****                  break;
 1885              		.loc 1 972 18
 1886 005a 05E0     		b	.L115
 1887              	.L112:
 973:./ucOSII/Core/os_core.c **** 
 974:./ucOSII/Core/os_core.c ****             default:                                       /* Invalid case, correct situation      
 975:./ucOSII/Core/os_core.c ****                  step            = OS_TRUE;
 1888              		.loc 1 975 34
 1889 005c 0123     		movs	r3, #1
 1890 005e FB72     		strb	r3, [r7, #11]
 976:./ucOSII/Core/os_core.c ****                  OSTickStepState = OS_TICK_STEP_DIS;
 1891              		.loc 1 976 34
 1892 0060 344B     		ldr	r3, .L123+8
 1893 0062 0022     		movs	r2, #0
 1894 0064 1A70     		strb	r2, [r3]
 977:./ucOSII/Core/os_core.c ****                  break;
 1895              		.loc 1 977 18
 1896 0066 00BF     		nop
 1897              	.L115:
 978:./ucOSII/Core/os_core.c ****         }
 979:./ucOSII/Core/os_core.c ****         if (step == OS_FALSE) {                            /* Return if waiting for step command   
 1898              		.loc 1 979 12
 1899 0068 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1900 006a 002B     		cmp	r3, #0
 1901 006c 59D0     		beq	.L122
 980:./ucOSII/Core/os_core.c ****             return;
 981:./ucOSII/Core/os_core.c ****         }
 982:./ucOSII/Core/os_core.c **** #endif
 983:./ucOSII/Core/os_core.c ****         ptcb = OSTCBList;                                  /* Point at first TCB in TCB list       
 1902              		.loc 1 983 14
 1903 006e 324B     		ldr	r3, .L123+12
 1904 0070 1B68     		ldr	r3, [r3]
 1905 0072 FB60     		str	r3, [r7, #12]
 984:./ucOSII/Core/os_core.c ****         while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list      
 1906              		.loc 1 984 15
 1907 0074 4FE0     		b	.L117
 1908              	.L121:
 985:./ucOSII/Core/os_core.c ****             OS_ENTER_CRITICAL();
 1909              		.loc 1 985 13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 52


 1910 0076 4020     		movs	r0, #64
 1911 0078 FFF7FEFF 		bl	OS_CPU_SR_Save
 1912 007c 7860     		str	r0, [r7, #4]
 986:./ucOSII/Core/os_core.c ****             if (ptcb->OSTCBDly != 0u) {                    /* No, Delayed or waiting for event with
 1913              		.loc 1 986 21
 1914 007e FB68     		ldr	r3, [r7, #12]
 1915 0080 5B6B     		ldr	r3, [r3, #52]
 1916              		.loc 1 986 16
 1917 0082 002B     		cmp	r3, #0
 1918 0084 41D0     		beq	.L118
 987:./ucOSII/Core/os_core.c ****                 ptcb->OSTCBDly--;                          /* Decrement nbr of ticks to end of dela
 1919              		.loc 1 987 21
 1920 0086 FB68     		ldr	r3, [r7, #12]
 1921 0088 5B6B     		ldr	r3, [r3, #52]
 1922              		.loc 1 987 31
 1923 008a 5A1E     		subs	r2, r3, #1
 1924 008c FB68     		ldr	r3, [r7, #12]
 1925 008e 5A63     		str	r2, [r3, #52]
 988:./ucOSII/Core/os_core.c ****                 if (ptcb->OSTCBDly == 0u) {                /* Check for timeout                    
 1926              		.loc 1 988 25
 1927 0090 FB68     		ldr	r3, [r7, #12]
 1928 0092 5B6B     		ldr	r3, [r3, #52]
 1929              		.loc 1 988 20
 1930 0094 002B     		cmp	r3, #0
 1931 0096 38D1     		bne	.L118
 989:./ucOSII/Core/os_core.c **** 
 990:./ucOSII/Core/os_core.c ****                     if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
 1932              		.loc 1 990 30
 1933 0098 FB68     		ldr	r3, [r7, #12]
 1934 009a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1935              		.loc 1 990 42
 1936 009e 03F03703 		and	r3, r3, #55
 1937              		.loc 1 990 24
 1938 00a2 002B     		cmp	r3, #0
 1939 00a4 0DD0     		beq	.L119
 991:./ucOSII/Core/os_core.c ****                         ptcb->OSTCBStat  &= (INT8U)~(INT8U)OS_STAT_PEND_ANY;   /* Yes, Clear status
 1940              		.loc 1 991 42
 1941 00a6 FB68     		ldr	r3, [r7, #12]
 1942 00a8 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1943 00ac 23F03703 		bic	r3, r3, #55
 1944 00b0 DAB2     		uxtb	r2, r3
 1945 00b2 FB68     		ldr	r3, [r7, #12]
 1946 00b4 83F83820 		strb	r2, [r3, #56]
 992:./ucOSII/Core/os_core.c ****                         ptcb->OSTCBStatPend = OS_STAT_PEND_TO;                 /* Indicate PEND tim
 1947              		.loc 1 992 45
 1948 00b8 FB68     		ldr	r3, [r7, #12]
 1949 00ba 0122     		movs	r2, #1
 1950 00bc 83F83920 		strb	r2, [r3, #57]
 1951 00c0 03E0     		b	.L120
 1952              	.L119:
 993:./ucOSII/Core/os_core.c ****                     } else {
 994:./ucOSII/Core/os_core.c ****                         ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
 1953              		.loc 1 994 45
 1954 00c2 FB68     		ldr	r3, [r7, #12]
 1955 00c4 0022     		movs	r2, #0
 1956 00c6 83F83920 		strb	r2, [r3, #57]
 1957              	.L120:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 53


 995:./ucOSII/Core/os_core.c ****                     }
 996:./ucOSII/Core/os_core.c **** 
 997:./ucOSII/Core/os_core.c ****                     if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended
 1958              		.loc 1 997 30
 1959 00ca FB68     		ldr	r3, [r7, #12]
 1960 00cc 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1961              		.loc 1 997 42
 1962 00d0 03F00803 		and	r3, r3, #8
 1963              		.loc 1 997 24
 1964 00d4 002B     		cmp	r3, #0
 1965 00d6 18D1     		bne	.L118
 998:./ucOSII/Core/os_core.c ****                         OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready  
 1966              		.loc 1 998 55
 1967 00d8 FB68     		ldr	r3, [r7, #12]
 1968 00da 93F83E20 		ldrb	r2, [r3, #62]	@ zero_extendqisi2
 1969              		.loc 1 998 48
 1970 00de 174B     		ldr	r3, .L123+16
 1971 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1972 00e2 1343     		orrs	r3, r3, r2
 1973 00e4 DAB2     		uxtb	r2, r3
 1974 00e6 154B     		ldr	r3, .L123+16
 1975 00e8 1A70     		strb	r2, [r3]
 999:./ucOSII/Core/os_core.c ****                         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 1976              		.loc 1 999 38
 1977 00ea FB68     		ldr	r3, [r7, #12]
 1978 00ec 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1979              		.loc 1 999 48
 1980 00f0 1A46     		mov	r2, r3
 1981 00f2 134B     		ldr	r3, .L123+20
 1982 00f4 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1983              		.loc 1 999 55
 1984 00f6 FB68     		ldr	r3, [r7, #12]
 1985 00f8 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 1986              		.loc 1 999 38
 1987 00fc F968     		ldr	r1, [r7, #12]
 1988 00fe 91F83C10 		ldrb	r1, [r1, #60]	@ zero_extendqisi2
 1989              		.loc 1 999 48
 1990 0102 1343     		orrs	r3, r3, r2
 1991 0104 DAB2     		uxtb	r2, r3
 1992 0106 0E4B     		ldr	r3, .L123+20
 1993 0108 5A54     		strb	r2, [r3, r1]
 1994              	.L118:
1000:./ucOSII/Core/os_core.c ****                         OS_TRACE_TASK_READY(ptcb);
1001:./ucOSII/Core/os_core.c ****                     }
1002:./ucOSII/Core/os_core.c ****                 }
1003:./ucOSII/Core/os_core.c ****             }
1004:./ucOSII/Core/os_core.c ****             ptcb = ptcb->OSTCBNext;                        /* Point at next TCB in TCB list        
 1995              		.loc 1 1004 18
 1996 010a FB68     		ldr	r3, [r7, #12]
 1997 010c 5B69     		ldr	r3, [r3, #20]
 1998 010e FB60     		str	r3, [r7, #12]
1005:./ucOSII/Core/os_core.c ****             OS_EXIT_CRITICAL();
 1999              		.loc 1 1005 13
 2000 0110 7868     		ldr	r0, [r7, #4]
 2001 0112 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2002              	.L117:
 984:./ucOSII/Core/os_core.c ****             OS_ENTER_CRITICAL();
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 54


 2003              		.loc 1 984 20
 2004 0116 FB68     		ldr	r3, [r7, #12]
 2005 0118 93F83A30 		ldrb	r3, [r3, #58]	@ zero_extendqisi2
 984:./ucOSII/Core/os_core.c ****             OS_ENTER_CRITICAL();
 2006              		.loc 1 984 15
 2007 011c 3F2B     		cmp	r3, #63
 2008 011e AAD1     		bne	.L121
 2009 0120 00E0     		b	.L109
 2010              	.L122:
 980:./ucOSII/Core/os_core.c ****         }
 2011              		.loc 1 980 13
 2012 0122 00BF     		nop
 2013              	.L109:
1006:./ucOSII/Core/os_core.c ****         }
1007:./ucOSII/Core/os_core.c ****     }
1008:./ucOSII/Core/os_core.c **** }
 2014              		.loc 1 1008 1
 2015 0124 1037     		adds	r7, r7, #16
 2016              	.LCFI46:
 2017              		.cfi_def_cfa_offset 8
 2018 0126 BD46     		mov	sp, r7
 2019              	.LCFI47:
 2020              		.cfi_def_cfa_register 13
 2021              		@ sp needed
 2022 0128 80BD     		pop	{r7, pc}
 2023              	.L124:
 2024 012a 00BF     		.align	2
 2025              	.L123:
 2026 012c 00000000 		.word	OSTime
 2027 0130 00000000 		.word	OSRunning
 2028 0134 00000000 		.word	OSTickStepState
 2029 0138 00000000 		.word	OSTCBList
 2030 013c 00000000 		.word	OSRdyGrp
 2031 0140 00000000 		.word	OSRdyTbl
 2032              		.cfi_endproc
 2033              	.LFE13:
 2035              		.section	.text.OSVersion,"ax",%progbits
 2036              		.align	1
 2037              		.global	OSVersion
 2038              		.syntax unified
 2039              		.thumb
 2040              		.thumb_func
 2042              	OSVersion:
 2043              	.LFB14:
1009:./ucOSII/Core/os_core.c **** 
1010:./ucOSII/Core/os_core.c **** 
1011:./ucOSII/Core/os_core.c **** /*
1012:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1013:./ucOSII/Core/os_core.c **** *                                             GET VERSION
1014:./ucOSII/Core/os_core.c **** *
1015:./ucOSII/Core/os_core.c **** * Description: This function is used to return the version number of uC/OS-II.  The returned value
1016:./ucOSII/Core/os_core.c **** *              corresponds to uC/OS-II's version number multiplied by 10000.  In other words, versi
1017:./ucOSII/Core/os_core.c **** *              2.01.00 would be returned as 20100.
1018:./ucOSII/Core/os_core.c **** *
1019:./ucOSII/Core/os_core.c **** * Arguments  : none
1020:./ucOSII/Core/os_core.c **** *
1021:./ucOSII/Core/os_core.c **** * Returns    : The version number of uC/OS-II multiplied by 10000.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 55


1022:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1023:./ucOSII/Core/os_core.c **** */
1024:./ucOSII/Core/os_core.c **** 
1025:./ucOSII/Core/os_core.c **** INT16U  OSVersion (void)
1026:./ucOSII/Core/os_core.c **** {
 2044              		.loc 1 1026 1
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 1, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049 0000 80B4     		push	{r7}
 2050              	.LCFI48:
 2051              		.cfi_def_cfa_offset 4
 2052              		.cfi_offset 7, -4
 2053 0002 00AF     		add	r7, sp, #0
 2054              	.LCFI49:
 2055              		.cfi_def_cfa_register 7
1027:./ucOSII/Core/os_core.c ****     return (OS_VERSION);
 2056              		.loc 1 1027 12
 2057 0004 47F27423 		movw	r3, #29300
1028:./ucOSII/Core/os_core.c **** }
 2058              		.loc 1 1028 1
 2059 0008 1846     		mov	r0, r3
 2060 000a BD46     		mov	sp, r7
 2061              	.LCFI50:
 2062              		.cfi_def_cfa_register 13
 2063              		@ sp needed
 2064 000c 5DF8047B 		ldr	r7, [sp], #4
 2065              	.LCFI51:
 2066              		.cfi_restore 7
 2067              		.cfi_def_cfa_offset 0
 2068 0010 7047     		bx	lr
 2069              		.cfi_endproc
 2070              	.LFE14:
 2072              		.section	.text.OS_Dummy,"ax",%progbits
 2073              		.align	1
 2074              		.global	OS_Dummy
 2075              		.syntax unified
 2076              		.thumb
 2077              		.thumb_func
 2079              	OS_Dummy:
 2080              	.LFB15:
1029:./ucOSII/Core/os_core.c **** 
1030:./ucOSII/Core/os_core.c **** 
1031:./ucOSII/Core/os_core.c **** /*
1032:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1033:./ucOSII/Core/os_core.c **** *                                           DUMMY FUNCTION
1034:./ucOSII/Core/os_core.c **** *
1035:./ucOSII/Core/os_core.c **** * Description: This function doesn't do anything.  It is called by OSTaskDel().
1036:./ucOSII/Core/os_core.c **** *
1037:./ucOSII/Core/os_core.c **** * Arguments  : none
1038:./ucOSII/Core/os_core.c **** *
1039:./ucOSII/Core/os_core.c **** * Returns    : none
1040:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1041:./ucOSII/Core/os_core.c **** */
1042:./ucOSII/Core/os_core.c **** 
1043:./ucOSII/Core/os_core.c **** #if OS_TASK_DEL_EN > 0u
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 56


1044:./ucOSII/Core/os_core.c **** void  OS_Dummy (void)
1045:./ucOSII/Core/os_core.c **** {
 2081              		.loc 1 1045 1
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 1, uses_anonymous_args = 0
 2085              		@ link register save eliminated.
 2086 0000 80B4     		push	{r7}
 2087              	.LCFI52:
 2088              		.cfi_def_cfa_offset 4
 2089              		.cfi_offset 7, -4
 2090 0002 00AF     		add	r7, sp, #0
 2091              	.LCFI53:
 2092              		.cfi_def_cfa_register 7
1046:./ucOSII/Core/os_core.c **** }
 2093              		.loc 1 1046 1
 2094 0004 00BF     		nop
 2095 0006 BD46     		mov	sp, r7
 2096              	.LCFI54:
 2097              		.cfi_def_cfa_register 13
 2098              		@ sp needed
 2099 0008 5DF8047B 		ldr	r7, [sp], #4
 2100              	.LCFI55:
 2101              		.cfi_restore 7
 2102              		.cfi_def_cfa_offset 0
 2103 000c 7047     		bx	lr
 2104              		.cfi_endproc
 2105              	.LFE15:
 2107              		.section	.text.OS_EventTaskRdy,"ax",%progbits
 2108              		.align	1
 2109              		.global	OS_EventTaskRdy
 2110              		.syntax unified
 2111              		.thumb
 2112              		.thumb_func
 2114              	OS_EventTaskRdy:
 2115              	.LFB16:
1047:./ucOSII/Core/os_core.c **** #endif
1048:./ucOSII/Core/os_core.c **** 
1049:./ucOSII/Core/os_core.c **** 
1050:./ucOSII/Core/os_core.c **** /*
1051:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1052:./ucOSII/Core/os_core.c **** *                           MAKE TASK READY TO RUN BASED ON EVENT OCCURING
1053:./ucOSII/Core/os_core.c **** *
1054:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services and is used to ready a task that 
1055:./ucOSII/Core/os_core.c **** *              waiting for an event to occur.
1056:./ucOSII/Core/os_core.c **** *
1057:./ucOSII/Core/os_core.c **** * Arguments  : pevent      is a pointer to the event control block corresponding to the event.
1058:./ucOSII/Core/os_core.c **** *
1059:./ucOSII/Core/os_core.c **** *              pmsg        is a pointer to a message.  This pointer is used by message oriented ser
1060:./ucOSII/Core/os_core.c **** *                          such as MAILBOXEs and QUEUEs.  The pointer is not used when called by ot
1061:./ucOSII/Core/os_core.c **** *                          service functions.
1062:./ucOSII/Core/os_core.c **** *
1063:./ucOSII/Core/os_core.c **** *              msk         is a mask that is used to clear the status byte of the TCB.  For example
1064:./ucOSII/Core/os_core.c **** *                          OSSemPost() will pass OS_STAT_SEM, OSMboxPost() will pass OS_STAT_MBOX e
1065:./ucOSII/Core/os_core.c **** *
1066:./ucOSII/Core/os_core.c **** *              pend_stat   is used to indicate the readied task's pending status:
1067:./ucOSII/Core/os_core.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 57


1068:./ucOSII/Core/os_core.c **** *                          OS_STAT_PEND_OK      Task ready due to a post (or delete), not a timeout
1069:./ucOSII/Core/os_core.c **** *                                               an abort.
1070:./ucOSII/Core/os_core.c **** *                          OS_STAT_PEND_ABORT   Task ready due to an abort.
1071:./ucOSII/Core/os_core.c **** *
1072:./ucOSII/Core/os_core.c **** * Returns    : none
1073:./ucOSII/Core/os_core.c **** *
1074:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1075:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1076:./ucOSII/Core/os_core.c **** */
1077:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN)
1078:./ucOSII/Core/os_core.c **** INT8U  OS_EventTaskRdy (OS_EVENT  *pevent,
1079:./ucOSII/Core/os_core.c ****                         void      *pmsg,
1080:./ucOSII/Core/os_core.c ****                         INT8U      msk,
1081:./ucOSII/Core/os_core.c ****                         INT8U      pend_stat)
1082:./ucOSII/Core/os_core.c **** {
 2116              		.loc 1 1082 1
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 24
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0000 80B5     		push	{r7, lr}
 2121              	.LCFI56:
 2122              		.cfi_def_cfa_offset 8
 2123              		.cfi_offset 7, -8
 2124              		.cfi_offset 14, -4
 2125 0002 86B0     		sub	sp, sp, #24
 2126              	.LCFI57:
 2127              		.cfi_def_cfa_offset 32
 2128 0004 00AF     		add	r7, sp, #0
 2129              	.LCFI58:
 2130              		.cfi_def_cfa_register 7
 2131 0006 F860     		str	r0, [r7, #12]
 2132 0008 B960     		str	r1, [r7, #8]
 2133 000a 1146     		mov	r1, r2
 2134 000c 1A46     		mov	r2, r3
 2135 000e 0B46     		mov	r3, r1
 2136 0010 FB71     		strb	r3, [r7, #7]
 2137 0012 1346     		mov	r3, r2
 2138 0014 BB71     		strb	r3, [r7, #6]
1083:./ucOSII/Core/os_core.c ****     OS_TCB   *ptcb;
1084:./ucOSII/Core/os_core.c ****     INT8U     y;
1085:./ucOSII/Core/os_core.c ****     INT8U     x;
1086:./ucOSII/Core/os_core.c ****     INT8U     prio;
1087:./ucOSII/Core/os_core.c **** #if OS_LOWEST_PRIO > 63u
1088:./ucOSII/Core/os_core.c ****     OS_PRIO  *ptbl;
1089:./ucOSII/Core/os_core.c **** #endif
1090:./ucOSII/Core/os_core.c **** 
1091:./ucOSII/Core/os_core.c **** 
1092:./ucOSII/Core/os_core.c **** #if OS_LOWEST_PRIO <= 63u
1093:./ucOSII/Core/os_core.c ****     y    = OSUnMapTbl[pevent->OSEventGrp];              /* Find HPT waiting for message            
 2139              		.loc 1 1093 29
 2140 0016 FB68     		ldr	r3, [r7, #12]
 2141 0018 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2142 001a 1A46     		mov	r2, r3
 2143              		.loc 1 1093 10
 2144 001c 2F4B     		ldr	r3, .L132
 2145 001e 9B5C     		ldrb	r3, [r3, r2]
 2146 0020 FB75     		strb	r3, [r7, #23]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 58


1094:./ucOSII/Core/os_core.c ****     x    = OSUnMapTbl[pevent->OSEventTbl[y]];
 2147              		.loc 1 1094 41
 2148 0022 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2149 0024 FA68     		ldr	r2, [r7, #12]
 2150 0026 1344     		add	r3, r3, r2
 2151 0028 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2152 002a 1A46     		mov	r2, r3
 2153              		.loc 1 1094 10
 2154 002c 2B4B     		ldr	r3, .L132
 2155 002e 9B5C     		ldrb	r3, [r3, r2]
 2156 0030 BB75     		strb	r3, [r7, #22]
1095:./ucOSII/Core/os_core.c ****     prio = (INT8U)((y << 3u) + x);                      /* Find priority of task getting the msg   
 2157              		.loc 1 1095 23
 2158 0032 FB7D     		ldrb	r3, [r7, #23]
 2159 0034 DB00     		lsls	r3, r3, #3
 2160 0036 DAB2     		uxtb	r2, r3
 2161              		.loc 1 1095 10
 2162 0038 BB7D     		ldrb	r3, [r7, #22]
 2163 003a 1344     		add	r3, r3, r2
 2164 003c 7B75     		strb	r3, [r7, #21]
1096:./ucOSII/Core/os_core.c **** #else
1097:./ucOSII/Core/os_core.c ****     if ((pevent->OSEventGrp & 0xFFu) != 0u) {           /* Find HPT waiting for message            
1098:./ucOSII/Core/os_core.c ****         y = OSUnMapTbl[ pevent->OSEventGrp & 0xFFu];
1099:./ucOSII/Core/os_core.c ****     } else {
1100:./ucOSII/Core/os_core.c ****         y = OSUnMapTbl[(OS_PRIO)(pevent->OSEventGrp >> 8u) & 0xFFu] + 8u;
1101:./ucOSII/Core/os_core.c ****     }
1102:./ucOSII/Core/os_core.c ****     ptbl = &pevent->OSEventTbl[y];
1103:./ucOSII/Core/os_core.c ****     if ((*ptbl & 0xFFu) != 0u) {
1104:./ucOSII/Core/os_core.c ****         x = OSUnMapTbl[*ptbl & 0xFFu];
1105:./ucOSII/Core/os_core.c ****     } else {
1106:./ucOSII/Core/os_core.c ****         x = OSUnMapTbl[(OS_PRIO)(*ptbl >> 8u) & 0xFFu] + 8u;
1107:./ucOSII/Core/os_core.c ****     }
1108:./ucOSII/Core/os_core.c ****     prio = (INT8U)((y << 4u) + x);                      /* Find priority of task getting the msg   
1109:./ucOSII/Core/os_core.c **** #endif
1110:./ucOSII/Core/os_core.c **** 
1111:./ucOSII/Core/os_core.c ****     ptcb                  =  OSTCBPrioTbl[prio];        /* Point to this task's OS_TCB             
 2165              		.loc 1 1111 42
 2166 003e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 2167              		.loc 1 1111 27
 2168 0040 274A     		ldr	r2, .L132+4
 2169 0042 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2170 0046 3B61     		str	r3, [r7, #16]
1112:./ucOSII/Core/os_core.c ****     ptcb->OSTCBDly        =  0u;                        /* Prevent OSTimeTick() from readying task 
 2171              		.loc 1 1112 27
 2172 0048 3B69     		ldr	r3, [r7, #16]
 2173 004a 0022     		movs	r2, #0
 2174 004c 5A63     		str	r2, [r3, #52]
1113:./ucOSII/Core/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)) || (OS_MBOX_EN > 0u)
1114:./ucOSII/Core/os_core.c ****     ptcb->OSTCBMsg        =  pmsg;                      /* Send message directly to waiting task   
 2175              		.loc 1 1114 27
 2176 004e 3B69     		ldr	r3, [r7, #16]
 2177 0050 BA68     		ldr	r2, [r7, #8]
 2178 0052 9A62     		str	r2, [r3, #40]
1115:./ucOSII/Core/os_core.c **** #else
1116:./ucOSII/Core/os_core.c ****     pmsg                  =  pmsg;                      /* Prevent compiler warning if not used    
1117:./ucOSII/Core/os_core.c **** #endif
1118:./ucOSII/Core/os_core.c ****     ptcb->OSTCBStat      &= (INT8U)~msk;                /* Clear bit associated with event type    
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 59


 2179              		.loc 1 1118 26
 2180 0054 3B69     		ldr	r3, [r7, #16]
 2181 0056 93F83820 		ldrb	r2, [r3, #56]	@ zero_extendqisi2
 2182              		.loc 1 1118 29
 2183 005a FB79     		ldrb	r3, [r7, #7]
 2184 005c DB43     		mvns	r3, r3
 2185 005e DBB2     		uxtb	r3, r3
 2186              		.loc 1 1118 26
 2187 0060 1340     		ands	r3, r3, r2
 2188 0062 DAB2     		uxtb	r2, r3
 2189 0064 3B69     		ldr	r3, [r7, #16]
 2190 0066 83F83820 		strb	r2, [r3, #56]
1119:./ucOSII/Core/os_core.c ****     ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort        
 2191              		.loc 1 1119 27
 2192 006a 3B69     		ldr	r3, [r7, #16]
 2193 006c BA79     		ldrb	r2, [r7, #6]
 2194 006e 83F83920 		strb	r2, [r3, #57]
1120:./ucOSII/Core/os_core.c ****                                                         /* See if task is ready (could be susp'd)  
1121:./ucOSII/Core/os_core.c ****     if ((ptcb->OSTCBStat &   OS_STAT_SUSPEND) == OS_STAT_RDY) {
 2195              		.loc 1 1121 14
 2196 0072 3B69     		ldr	r3, [r7, #16]
 2197 0074 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2198              		.loc 1 1121 26
 2199 0078 03F00803 		and	r3, r3, #8
 2200              		.loc 1 1121 8
 2201 007c 002B     		cmp	r3, #0
 2202 007e 13D1     		bne	.L129
1122:./ucOSII/Core/os_core.c ****         OSRdyGrp         |=  ptcb->OSTCBBitY;           /* Put task in the ready to run list       
 2203              		.loc 1 1122 34
 2204 0080 3B69     		ldr	r3, [r7, #16]
 2205 0082 93F83E20 		ldrb	r2, [r3, #62]	@ zero_extendqisi2
 2206              		.loc 1 1122 26
 2207 0086 174B     		ldr	r3, .L132+8
 2208 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 008a 1343     		orrs	r3, r3, r2
 2210 008c DAB2     		uxtb	r2, r3
 2211 008e 154B     		ldr	r3, .L132+8
 2212 0090 1A70     		strb	r2, [r3]
1123:./ucOSII/Core/os_core.c ****         OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
 2213              		.loc 1 1123 26
 2214 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2215 0094 144A     		ldr	r2, .L132+12
 2216 0096 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2217              		.loc 1 1123 34
 2218 0098 3B69     		ldr	r3, [r7, #16]
 2219 009a 93F83D20 		ldrb	r2, [r3, #61]	@ zero_extendqisi2
 2220              		.loc 1 1123 26
 2221 009e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2222 00a0 0A43     		orrs	r2, r2, r1
 2223 00a2 D1B2     		uxtb	r1, r2
 2224 00a4 104A     		ldr	r2, .L132+12
 2225 00a6 D154     		strb	r1, [r2, r3]
 2226              	.L129:
1124:./ucOSII/Core/os_core.c ****         OS_TRACE_TASK_READY(ptcb);
1125:./ucOSII/Core/os_core.c ****     }
1126:./ucOSII/Core/os_core.c **** 
1127:./ucOSII/Core/os_core.c ****     OS_EventTaskRemove(ptcb, pevent);                   /* Remove this task from event   wait list 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 60


 2227              		.loc 1 1127 5
 2228 00a8 F968     		ldr	r1, [r7, #12]
 2229 00aa 3869     		ldr	r0, [r7, #16]
 2230 00ac FFF7FEFF 		bl	OS_EventTaskRemove
1128:./ucOSII/Core/os_core.c **** #if (OS_EVENT_MULTI_EN > 0u)
1129:./ucOSII/Core/os_core.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from events' wait lists
 2231              		.loc 1 1129 13
 2232 00b0 3B69     		ldr	r3, [r7, #16]
 2233 00b2 1B6A     		ldr	r3, [r3, #32]
 2234              		.loc 1 1129 8
 2235 00b4 002B     		cmp	r3, #0
 2236 00b6 0BD0     		beq	.L130
1130:./ucOSII/Core/os_core.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 2237              		.loc 1 1130 9
 2238 00b8 3B69     		ldr	r3, [r7, #16]
 2239 00ba 1B6A     		ldr	r3, [r3, #32]
 2240 00bc 1946     		mov	r1, r3
 2241 00be 3869     		ldr	r0, [r7, #16]
 2242 00c0 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
1131:./ucOSII/Core/os_core.c ****         ptcb->OSTCBEventMultiPtr  = (OS_EVENT **)0;     /* No longer pending on multi list         
 2243              		.loc 1 1131 35
 2244 00c4 3B69     		ldr	r3, [r7, #16]
 2245 00c6 0022     		movs	r2, #0
 2246 00c8 1A62     		str	r2, [r3, #32]
1132:./ucOSII/Core/os_core.c ****         ptcb->OSTCBEventMultiRdy  = (OS_EVENT  *)pevent;/* Return event as first multi-pend event r
 2247              		.loc 1 1132 35
 2248 00ca 3B69     		ldr	r3, [r7, #16]
 2249 00cc FA68     		ldr	r2, [r7, #12]
 2250 00ce 5A62     		str	r2, [r3, #36]
 2251              	.L130:
1133:./ucOSII/Core/os_core.c ****     }
1134:./ucOSII/Core/os_core.c **** #endif
1135:./ucOSII/Core/os_core.c **** 
1136:./ucOSII/Core/os_core.c ****     return (prio);
 2252              		.loc 1 1136 12
 2253 00d0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1137:./ucOSII/Core/os_core.c **** }
 2254              		.loc 1 1137 1
 2255 00d2 1846     		mov	r0, r3
 2256 00d4 1837     		adds	r7, r7, #24
 2257              	.LCFI59:
 2258              		.cfi_def_cfa_offset 8
 2259 00d6 BD46     		mov	sp, r7
 2260              	.LCFI60:
 2261              		.cfi_def_cfa_register 13
 2262              		@ sp needed
 2263 00d8 80BD     		pop	{r7, pc}
 2264              	.L133:
 2265 00da 00BF     		.align	2
 2266              	.L132:
 2267 00dc 00000000 		.word	OSUnMapTbl
 2268 00e0 00000000 		.word	OSTCBPrioTbl
 2269 00e4 00000000 		.word	OSRdyGrp
 2270 00e8 00000000 		.word	OSRdyTbl
 2271              		.cfi_endproc
 2272              	.LFE16:
 2274              		.section	.text.OS_EventTaskWait,"ax",%progbits
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 61


 2275              		.align	1
 2276              		.global	OS_EventTaskWait
 2277              		.syntax unified
 2278              		.thumb
 2279              		.thumb_func
 2281              	OS_EventTaskWait:
 2282              	.LFB17:
1138:./ucOSII/Core/os_core.c **** #endif
1139:./ucOSII/Core/os_core.c **** 
1140:./ucOSII/Core/os_core.c **** 
1141:./ucOSII/Core/os_core.c **** /*
1142:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1143:./ucOSII/Core/os_core.c **** *                                  MAKE TASK WAIT FOR EVENT TO OCCUR
1144:./ucOSII/Core/os_core.c **** *
1145:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to suspend a task because an even
1146:./ucOSII/Core/os_core.c **** *              not occurred.
1147:./ucOSII/Core/os_core.c **** *
1148:./ucOSII/Core/os_core.c **** * Arguments  : pevent   is a pointer to the event control block for which the task will be waiting 
1149:./ucOSII/Core/os_core.c **** *
1150:./ucOSII/Core/os_core.c **** * Returns    : none
1151:./ucOSII/Core/os_core.c **** *
1152:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1153:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1154:./ucOSII/Core/os_core.c **** */
1155:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN)
1156:./ucOSII/Core/os_core.c **** void  OS_EventTaskWait (OS_EVENT *pevent)
1157:./ucOSII/Core/os_core.c **** {
 2283              		.loc 1 1157 1
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 16
 2286              		@ frame_needed = 1, uses_anonymous_args = 0
 2287              		@ link register save eliminated.
 2288 0000 80B4     		push	{r7}
 2289              	.LCFI61:
 2290              		.cfi_def_cfa_offset 4
 2291              		.cfi_offset 7, -4
 2292 0002 85B0     		sub	sp, sp, #20
 2293              	.LCFI62:
 2294              		.cfi_def_cfa_offset 24
 2295 0004 00AF     		add	r7, sp, #0
 2296              	.LCFI63:
 2297              		.cfi_def_cfa_register 7
 2298 0006 7860     		str	r0, [r7, #4]
1158:./ucOSII/Core/os_core.c ****     INT8U  y;
1159:./ucOSII/Core/os_core.c **** 
1160:./ucOSII/Core/os_core.c **** 
1161:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBEventPtr               = pevent;                 /* Store ptr to ECB in TCB     
 2299              		.loc 1 1161 13
 2300 0008 264B     		ldr	r3, .L137
 2301 000a 1B68     		ldr	r3, [r3]
 2302              		.loc 1 1161 43
 2303 000c 7A68     		ldr	r2, [r7, #4]
 2304 000e DA61     		str	r2, [r3, #28]
1162:./ucOSII/Core/os_core.c **** 
1163:./ucOSII/Core/os_core.c ****     pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;    /* Put task in waiting list    
 2305              		.loc 1 1163 32
 2306 0010 244B     		ldr	r3, .L137
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 62


 2307 0012 1B68     		ldr	r3, [r3]
 2308 0014 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2309              		.loc 1 1163 42
 2310 0018 1A46     		mov	r2, r3
 2311 001a 7B68     		ldr	r3, [r7, #4]
 2312 001c 1344     		add	r3, r3, r2
 2313 001e DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 2314              		.loc 1 1163 53
 2315 0020 204B     		ldr	r3, .L137
 2316 0022 1B68     		ldr	r3, [r3]
 2317 0024 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 2318              		.loc 1 1163 32
 2319 0028 1E49     		ldr	r1, .L137
 2320 002a 0968     		ldr	r1, [r1]
 2321 002c 91F83C10 		ldrb	r1, [r1, #60]	@ zero_extendqisi2
 2322              		.loc 1 1163 42
 2323 0030 1343     		orrs	r3, r3, r2
 2324 0032 DAB2     		uxtb	r2, r3
 2325 0034 7B68     		ldr	r3, [r7, #4]
 2326 0036 0B44     		add	r3, r3, r1
 2327 0038 DA72     		strb	r2, [r3, #11]
1164:./ucOSII/Core/os_core.c ****     pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 2328              		.loc 1 1164 42
 2329 003a 7B68     		ldr	r3, [r7, #4]
 2330 003c 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2331              		.loc 1 1164 53
 2332 003e 194B     		ldr	r3, .L137
 2333 0040 1B68     		ldr	r3, [r3]
 2334 0042 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 2335              		.loc 1 1164 42
 2336 0046 1343     		orrs	r3, r3, r2
 2337 0048 DAB2     		uxtb	r2, r3
 2338 004a 7B68     		ldr	r3, [r7, #4]
 2339 004c 9A72     		strb	r2, [r3, #10]
1165:./ucOSII/Core/os_core.c **** 
1166:./ucOSII/Core/os_core.c ****     y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                          
 2340              		.loc 1 1166 30
 2341 004e 154B     		ldr	r3, .L137
 2342 0050 1B68     		ldr	r3, [r3]
 2343              		.loc 1 1166 19
 2344 0052 93F83C30 		ldrb	r3, [r3, #60]
 2345 0056 FB73     		strb	r3, [r7, #15]
1167:./ucOSII/Core/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 2346              		.loc 1 1167 18
 2347 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2348 005a 134A     		ldr	r2, .L137+4
 2349 005c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2350              		.loc 1 1167 39
 2351 005e 114B     		ldr	r3, .L137
 2352 0060 1B68     		ldr	r3, [r3]
 2353 0062 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 2354              		.loc 1 1167 21
 2355 0066 DB43     		mvns	r3, r3
 2356 0068 DAB2     		uxtb	r2, r3
 2357              		.loc 1 1167 18
 2358 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2359 006c 0A40     		ands	r2, r2, r1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 63


 2360 006e D1B2     		uxtb	r1, r2
 2361 0070 0D4A     		ldr	r2, .L137+4
 2362 0072 D154     		strb	r1, [r2, r3]
1168:./ucOSII/Core/os_core.c ****     OS_TRACE_TASK_SUSPENDED(OSTCBCur);
1169:./ucOSII/Core/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 2363              		.loc 1 1169 17
 2364 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2365 0076 0C4A     		ldr	r2, .L137+4
 2366 0078 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2367              		.loc 1 1169 8
 2368 007a 002B     		cmp	r3, #0
 2369 007c 0BD1     		bne	.L136
1170:./ucOSII/Core/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 2370              		.loc 1 1170 39
 2371 007e 094B     		ldr	r3, .L137
 2372 0080 1B68     		ldr	r3, [r3]
 2373 0082 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 2374              		.loc 1 1170 21
 2375 0086 DB43     		mvns	r3, r3
 2376 0088 DAB2     		uxtb	r2, r3
 2377              		.loc 1 1170 18
 2378 008a 084B     		ldr	r3, .L137+8
 2379 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2380 008e 1340     		ands	r3, r3, r2
 2381 0090 DAB2     		uxtb	r2, r3
 2382 0092 064B     		ldr	r3, .L137+8
 2383 0094 1A70     		strb	r2, [r3]
 2384              	.L136:
1171:./ucOSII/Core/os_core.c ****     }
1172:./ucOSII/Core/os_core.c **** }
 2385              		.loc 1 1172 1
 2386 0096 00BF     		nop
 2387 0098 1437     		adds	r7, r7, #20
 2388              	.LCFI64:
 2389              		.cfi_def_cfa_offset 4
 2390 009a BD46     		mov	sp, r7
 2391              	.LCFI65:
 2392              		.cfi_def_cfa_register 13
 2393              		@ sp needed
 2394 009c 5DF8047B 		ldr	r7, [sp], #4
 2395              	.LCFI66:
 2396              		.cfi_restore 7
 2397              		.cfi_def_cfa_offset 0
 2398 00a0 7047     		bx	lr
 2399              	.L138:
 2400 00a2 00BF     		.align	2
 2401              	.L137:
 2402 00a4 00000000 		.word	OSTCBCur
 2403 00a8 00000000 		.word	OSRdyTbl
 2404 00ac 00000000 		.word	OSRdyGrp
 2405              		.cfi_endproc
 2406              	.LFE17:
 2408              		.section	.text.OS_EventTaskWaitMulti,"ax",%progbits
 2409              		.align	1
 2410              		.global	OS_EventTaskWaitMulti
 2411              		.syntax unified
 2412              		.thumb
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 64


 2413              		.thumb_func
 2415              	OS_EventTaskWaitMulti:
 2416              	.LFB18:
1173:./ucOSII/Core/os_core.c **** #endif
1174:./ucOSII/Core/os_core.c **** 
1175:./ucOSII/Core/os_core.c **** 
1176:./ucOSII/Core/os_core.c **** /*
1177:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1178:./ucOSII/Core/os_core.c **** *                         MAKE TASK WAIT FOR ANY OF MULTIPLE EVENTS TO OCCUR
1179:./ucOSII/Core/os_core.c **** *
1180:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to suspend a task because any one
1181:./ucOSII/Core/os_core.c **** *              multiple events has not occurred.
1182:./ucOSII/Core/os_core.c **** *
1183:./ucOSII/Core/os_core.c **** * Arguments  : pevents_wait     is a pointer to an array of event control blocks, NULL-terminated, 
1184:./ucOSII/Core/os_core.c **** *                               which the task will be waiting for.
1185:./ucOSII/Core/os_core.c **** *
1186:./ucOSII/Core/os_core.c **** * Returns    : none.
1187:./ucOSII/Core/os_core.c **** *
1188:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1189:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1190:./ucOSII/Core/os_core.c **** */
1191:./ucOSII/Core/os_core.c **** #if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
1192:./ucOSII/Core/os_core.c **** void  OS_EventTaskWaitMulti (OS_EVENT **pevents_wait)
1193:./ucOSII/Core/os_core.c **** {
 2417              		.loc 1 1193 1
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 24
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421              		@ link register save eliminated.
 2422 0000 80B4     		push	{r7}
 2423              	.LCFI67:
 2424              		.cfi_def_cfa_offset 4
 2425              		.cfi_offset 7, -4
 2426 0002 87B0     		sub	sp, sp, #28
 2427              	.LCFI68:
 2428              		.cfi_def_cfa_offset 32
 2429 0004 00AF     		add	r7, sp, #0
 2430              	.LCFI69:
 2431              		.cfi_def_cfa_register 7
 2432 0006 7860     		str	r0, [r7, #4]
1194:./ucOSII/Core/os_core.c ****     OS_EVENT **pevents;
1195:./ucOSII/Core/os_core.c ****     OS_EVENT  *pevent;
1196:./ucOSII/Core/os_core.c ****     INT8U      y;
1197:./ucOSII/Core/os_core.c **** 
1198:./ucOSII/Core/os_core.c **** 
1199:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB    
 2433              		.loc 1 1199 13
 2434 0008 2F4B     		ldr	r3, .L144
 2435 000a 1B68     		ldr	r3, [r3]
 2436              		.loc 1 1199 34
 2437 000c 7A68     		ldr	r2, [r7, #4]
 2438 000e 1A62     		str	r2, [r3, #32]
1200:./ucOSII/Core/os_core.c ****     OSTCBCur->OSTCBEventMultiRdy = (OS_EVENT  *)0;
 2439              		.loc 1 1200 13
 2440 0010 2D4B     		ldr	r3, .L144
 2441 0012 1B68     		ldr	r3, [r3]
 2442              		.loc 1 1200 34
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 65


 2443 0014 0022     		movs	r2, #0
 2444 0016 5A62     		str	r2, [r3, #36]
1201:./ucOSII/Core/os_core.c **** 
1202:./ucOSII/Core/os_core.c ****     pevents =  pevents_wait;
 2445              		.loc 1 1202 13
 2446 0018 7B68     		ldr	r3, [r7, #4]
 2447 001a 7B61     		str	r3, [r7, #20]
1203:./ucOSII/Core/os_core.c ****     pevent  = *pevents;
 2448              		.loc 1 1203 13
 2449 001c 7B69     		ldr	r3, [r7, #20]
 2450 001e 1B68     		ldr	r3, [r3]
 2451 0020 3B61     		str	r3, [r7, #16]
1204:./ucOSII/Core/os_core.c ****     while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists   
 2452              		.loc 1 1204 11
 2453 0022 24E0     		b	.L140
 2454              	.L141:
1205:./ucOSII/Core/os_core.c ****         pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
 2455              		.loc 1 1205 36
 2456 0024 284B     		ldr	r3, .L144
 2457 0026 1B68     		ldr	r3, [r3]
 2458 0028 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2459              		.loc 1 1205 46
 2460 002c 1A46     		mov	r2, r3
 2461 002e 3B69     		ldr	r3, [r7, #16]
 2462 0030 1344     		add	r3, r3, r2
 2463 0032 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 2464              		.loc 1 1205 57
 2465 0034 244B     		ldr	r3, .L144
 2466 0036 1B68     		ldr	r3, [r3]
 2467 0038 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 2468              		.loc 1 1205 36
 2469 003c 2249     		ldr	r1, .L144
 2470 003e 0968     		ldr	r1, [r1]
 2471 0040 91F83C10 		ldrb	r1, [r1, #60]	@ zero_extendqisi2
 2472              		.loc 1 1205 46
 2473 0044 1343     		orrs	r3, r3, r2
 2474 0046 DAB2     		uxtb	r2, r3
 2475 0048 3B69     		ldr	r3, [r7, #16]
 2476 004a 0B44     		add	r3, r3, r1
 2477 004c DA72     		strb	r2, [r3, #11]
1206:./ucOSII/Core/os_core.c ****         pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 2478              		.loc 1 1206 46
 2479 004e 3B69     		ldr	r3, [r7, #16]
 2480 0050 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2481              		.loc 1 1206 57
 2482 0052 1D4B     		ldr	r3, .L144
 2483 0054 1B68     		ldr	r3, [r3]
 2484 0056 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 2485              		.loc 1 1206 46
 2486 005a 1343     		orrs	r3, r3, r2
 2487 005c DAB2     		uxtb	r2, r3
 2488 005e 3B69     		ldr	r3, [r7, #16]
 2489 0060 9A72     		strb	r2, [r3, #10]
1207:./ucOSII/Core/os_core.c ****         pevents++;
 2490              		.loc 1 1207 16
 2491 0062 7B69     		ldr	r3, [r7, #20]
 2492 0064 0433     		adds	r3, r3, #4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 66


 2493 0066 7B61     		str	r3, [r7, #20]
1208:./ucOSII/Core/os_core.c ****         pevent = *pevents;
 2494              		.loc 1 1208 16
 2495 0068 7B69     		ldr	r3, [r7, #20]
 2496 006a 1B68     		ldr	r3, [r3]
 2497 006c 3B61     		str	r3, [r7, #16]
 2498              	.L140:
1204:./ucOSII/Core/os_core.c ****         pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
 2499              		.loc 1 1204 11
 2500 006e 3B69     		ldr	r3, [r7, #16]
 2501 0070 002B     		cmp	r3, #0
 2502 0072 D7D1     		bne	.L141
1209:./ucOSII/Core/os_core.c ****     }
1210:./ucOSII/Core/os_core.c **** 
1211:./ucOSII/Core/os_core.c ****     y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                          
 2503              		.loc 1 1211 30
 2504 0074 144B     		ldr	r3, .L144
 2505 0076 1B68     		ldr	r3, [r3]
 2506              		.loc 1 1211 19
 2507 0078 93F83C30 		ldrb	r3, [r3, #60]
 2508 007c FB73     		strb	r3, [r7, #15]
1212:./ucOSII/Core/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 2509              		.loc 1 1212 18
 2510 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2511 0080 124A     		ldr	r2, .L144+4
 2512 0082 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2513              		.loc 1 1212 39
 2514 0084 104B     		ldr	r3, .L144
 2515 0086 1B68     		ldr	r3, [r3]
 2516 0088 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 2517              		.loc 1 1212 21
 2518 008c DB43     		mvns	r3, r3
 2519 008e DAB2     		uxtb	r2, r3
 2520              		.loc 1 1212 18
 2521 0090 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2522 0092 0A40     		ands	r2, r2, r1
 2523 0094 D1B2     		uxtb	r1, r2
 2524 0096 0D4A     		ldr	r2, .L144+4
 2525 0098 D154     		strb	r1, [r2, r3]
1213:./ucOSII/Core/os_core.c ****     OS_TRACE_TASK_SUSPENDED(OSTCBCur);
1214:./ucOSII/Core/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 2526              		.loc 1 1214 17
 2527 009a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2528 009c 0B4A     		ldr	r2, .L144+4
 2529 009e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2530              		.loc 1 1214 8
 2531 00a0 002B     		cmp	r3, #0
 2532 00a2 0BD1     		bne	.L143
1215:./ucOSII/Core/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 2533              		.loc 1 1215 39
 2534 00a4 084B     		ldr	r3, .L144
 2535 00a6 1B68     		ldr	r3, [r3]
 2536 00a8 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 2537              		.loc 1 1215 21
 2538 00ac DB43     		mvns	r3, r3
 2539 00ae DAB2     		uxtb	r2, r3
 2540              		.loc 1 1215 18
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 67


 2541 00b0 074B     		ldr	r3, .L144+8
 2542 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2543 00b4 1340     		ands	r3, r3, r2
 2544 00b6 DAB2     		uxtb	r2, r3
 2545 00b8 054B     		ldr	r3, .L144+8
 2546 00ba 1A70     		strb	r2, [r3]
 2547              	.L143:
1216:./ucOSII/Core/os_core.c ****     }
1217:./ucOSII/Core/os_core.c **** }
 2548              		.loc 1 1217 1
 2549 00bc 00BF     		nop
 2550 00be 1C37     		adds	r7, r7, #28
 2551              	.LCFI70:
 2552              		.cfi_def_cfa_offset 4
 2553 00c0 BD46     		mov	sp, r7
 2554              	.LCFI71:
 2555              		.cfi_def_cfa_register 13
 2556              		@ sp needed
 2557 00c2 5DF8047B 		ldr	r7, [sp], #4
 2558              	.LCFI72:
 2559              		.cfi_restore 7
 2560              		.cfi_def_cfa_offset 0
 2561 00c6 7047     		bx	lr
 2562              	.L145:
 2563              		.align	2
 2564              	.L144:
 2565 00c8 00000000 		.word	OSTCBCur
 2566 00cc 00000000 		.word	OSRdyTbl
 2567 00d0 00000000 		.word	OSRdyGrp
 2568              		.cfi_endproc
 2569              	.LFE18:
 2571              		.section	.text.OS_EventTaskRemove,"ax",%progbits
 2572              		.align	1
 2573              		.global	OS_EventTaskRemove
 2574              		.syntax unified
 2575              		.thumb
 2576              		.thumb_func
 2578              	OS_EventTaskRemove:
 2579              	.LFB19:
1218:./ucOSII/Core/os_core.c **** #endif
1219:./ucOSII/Core/os_core.c **** 
1220:./ucOSII/Core/os_core.c **** 
1221:./ucOSII/Core/os_core.c **** /*
1222:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1223:./ucOSII/Core/os_core.c **** *                                  REMOVE TASK FROM EVENT WAIT LIST
1224:./ucOSII/Core/os_core.c **** *
1225:./ucOSII/Core/os_core.c **** * Description: Remove a task from an event's wait list.
1226:./ucOSII/Core/os_core.c **** *
1227:./ucOSII/Core/os_core.c **** * Arguments  : ptcb     is a pointer to the task to remove.
1228:./ucOSII/Core/os_core.c **** *
1229:./ucOSII/Core/os_core.c **** *              pevent   is a pointer to the event control block.
1230:./ucOSII/Core/os_core.c **** *
1231:./ucOSII/Core/os_core.c **** * Returns    : none
1232:./ucOSII/Core/os_core.c **** *
1233:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1234:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1235:./ucOSII/Core/os_core.c **** */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 68


1236:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN)
1237:./ucOSII/Core/os_core.c **** void  OS_EventTaskRemove (OS_TCB   *ptcb,
1238:./ucOSII/Core/os_core.c ****                           OS_EVENT *pevent)
1239:./ucOSII/Core/os_core.c **** {
 2580              		.loc 1 1239 1
 2581              		.cfi_startproc
 2582              		@ args = 0, pretend = 0, frame = 16
 2583              		@ frame_needed = 1, uses_anonymous_args = 0
 2584              		@ link register save eliminated.
 2585 0000 80B4     		push	{r7}
 2586              	.LCFI73:
 2587              		.cfi_def_cfa_offset 4
 2588              		.cfi_offset 7, -4
 2589 0002 85B0     		sub	sp, sp, #20
 2590              	.LCFI74:
 2591              		.cfi_def_cfa_offset 24
 2592 0004 00AF     		add	r7, sp, #0
 2593              	.LCFI75:
 2594              		.cfi_def_cfa_register 7
 2595 0006 7860     		str	r0, [r7, #4]
 2596 0008 3960     		str	r1, [r7]
1240:./ucOSII/Core/os_core.c ****     INT8U  y;
1241:./ucOSII/Core/os_core.c **** 
1242:./ucOSII/Core/os_core.c **** 
1243:./ucOSII/Core/os_core.c ****     y                       =  ptcb->OSTCBY;
 2597              		.loc 1 1243 29
 2598 000a 7B68     		ldr	r3, [r7, #4]
 2599 000c 93F83C30 		ldrb	r3, [r3, #60]
 2600 0010 FB73     		strb	r3, [r7, #15]
1244:./ucOSII/Core/os_core.c ****     pevent->OSEventTbl[y]  &= (OS_PRIO)~ptcb->OSTCBBitX;    /* Remove task from wait list          
 2601              		.loc 1 1244 28
 2602 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2603 0014 3A68     		ldr	r2, [r7]
 2604 0016 1344     		add	r3, r3, r2
 2605 0018 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 2606              		.loc 1 1244 45
 2607 001a 7B68     		ldr	r3, [r7, #4]
 2608 001c 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 2609              		.loc 1 1244 31
 2610 0020 DB43     		mvns	r3, r3
 2611 0022 DAB2     		uxtb	r2, r3
 2612              		.loc 1 1244 28
 2613 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2614 0026 0A40     		ands	r2, r2, r1
 2615 0028 D1B2     		uxtb	r1, r2
 2616 002a 3A68     		ldr	r2, [r7]
 2617 002c 1344     		add	r3, r3, r2
 2618 002e 0A46     		mov	r2, r1
 2619 0030 DA72     		strb	r2, [r3, #11]
1245:./ucOSII/Core/os_core.c ****     if (pevent->OSEventTbl[y] == 0u) {
 2620              		.loc 1 1245 27
 2621 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2622 0034 3A68     		ldr	r2, [r7]
 2623 0036 1344     		add	r3, r3, r2
 2624 0038 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2625              		.loc 1 1245 8
 2626 003a 002B     		cmp	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 69


 2627 003c 0AD1     		bne	.L147
1246:./ucOSII/Core/os_core.c ****         pevent->OSEventGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
 2628              		.loc 1 1246 28
 2629 003e 3B68     		ldr	r3, [r7]
 2630 0040 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2631              		.loc 1 1246 45
 2632 0042 7B68     		ldr	r3, [r7, #4]
 2633 0044 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 2634              		.loc 1 1246 31
 2635 0048 DB43     		mvns	r3, r3
 2636 004a DBB2     		uxtb	r3, r3
 2637              		.loc 1 1246 28
 2638 004c 1340     		ands	r3, r3, r2
 2639 004e DAB2     		uxtb	r2, r3
 2640 0050 3B68     		ldr	r3, [r7]
 2641 0052 9A72     		strb	r2, [r3, #10]
 2642              	.L147:
1247:./ucOSII/Core/os_core.c ****     }
1248:./ucOSII/Core/os_core.c ****     ptcb->OSTCBEventPtr     = (OS_EVENT  *)0;               /* Unlink OS_EVENT from OS_TCB         
 2643              		.loc 1 1248 29
 2644 0054 7B68     		ldr	r3, [r7, #4]
 2645 0056 0022     		movs	r2, #0
 2646 0058 DA61     		str	r2, [r3, #28]
1249:./ucOSII/Core/os_core.c **** }
 2647              		.loc 1 1249 1
 2648 005a 00BF     		nop
 2649 005c 1437     		adds	r7, r7, #20
 2650              	.LCFI76:
 2651              		.cfi_def_cfa_offset 4
 2652 005e BD46     		mov	sp, r7
 2653              	.LCFI77:
 2654              		.cfi_def_cfa_register 13
 2655              		@ sp needed
 2656 0060 5DF8047B 		ldr	r7, [sp], #4
 2657              	.LCFI78:
 2658              		.cfi_restore 7
 2659              		.cfi_def_cfa_offset 0
 2660 0064 7047     		bx	lr
 2661              		.cfi_endproc
 2662              	.LFE19:
 2664              		.section	.text.OS_EventTaskRemoveMulti,"ax",%progbits
 2665              		.align	1
 2666              		.global	OS_EventTaskRemoveMulti
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2671              	OS_EventTaskRemoveMulti:
 2672              	.LFB20:
1250:./ucOSII/Core/os_core.c **** #endif
1251:./ucOSII/Core/os_core.c **** 
1252:./ucOSII/Core/os_core.c **** 
1253:./ucOSII/Core/os_core.c **** /*
1254:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1255:./ucOSII/Core/os_core.c **** *                             REMOVE TASK FROM MULTIPLE EVENTS WAIT LISTS
1256:./ucOSII/Core/os_core.c **** *
1257:./ucOSII/Core/os_core.c **** * Description: Remove a task from multiple events' wait lists.
1258:./ucOSII/Core/os_core.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 70


1259:./ucOSII/Core/os_core.c **** * Arguments  : ptcb             is a pointer to the task to remove.
1260:./ucOSII/Core/os_core.c **** *
1261:./ucOSII/Core/os_core.c **** *              pevents_multi    is a pointer to the array of event control blocks, NULL-terminated.
1262:./ucOSII/Core/os_core.c **** *
1263:./ucOSII/Core/os_core.c **** * Returns    : none
1264:./ucOSII/Core/os_core.c **** *
1265:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1266:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1267:./ucOSII/Core/os_core.c **** */
1268:./ucOSII/Core/os_core.c **** #if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
1269:./ucOSII/Core/os_core.c **** void  OS_EventTaskRemoveMulti (OS_TCB    *ptcb,
1270:./ucOSII/Core/os_core.c ****                                OS_EVENT **pevents_multi)
1271:./ucOSII/Core/os_core.c **** {
 2673              		.loc 1 1271 1
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 24
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
 2678 0000 80B4     		push	{r7}
 2679              	.LCFI79:
 2680              		.cfi_def_cfa_offset 4
 2681              		.cfi_offset 7, -4
 2682 0002 87B0     		sub	sp, sp, #28
 2683              	.LCFI80:
 2684              		.cfi_def_cfa_offset 32
 2685 0004 00AF     		add	r7, sp, #0
 2686              	.LCFI81:
 2687              		.cfi_def_cfa_register 7
 2688 0006 7860     		str	r0, [r7, #4]
 2689 0008 3960     		str	r1, [r7]
1272:./ucOSII/Core/os_core.c ****     OS_EVENT **pevents;
1273:./ucOSII/Core/os_core.c ****     OS_EVENT  *pevent;
1274:./ucOSII/Core/os_core.c ****     INT8U      y;
1275:./ucOSII/Core/os_core.c ****     OS_PRIO    bity;
1276:./ucOSII/Core/os_core.c ****     OS_PRIO    bitx;
1277:./ucOSII/Core/os_core.c **** 
1278:./ucOSII/Core/os_core.c **** 
1279:./ucOSII/Core/os_core.c ****     y       =  ptcb->OSTCBY;
 2690              		.loc 1 1279 13
 2691 000a 7B68     		ldr	r3, [r7, #4]
 2692 000c 93F83C30 		ldrb	r3, [r3, #60]
 2693 0010 FB73     		strb	r3, [r7, #15]
1280:./ucOSII/Core/os_core.c ****     bity    =  ptcb->OSTCBBitY;
 2694              		.loc 1 1280 13
 2695 0012 7B68     		ldr	r3, [r7, #4]
 2696 0014 93F83E30 		ldrb	r3, [r3, #62]
 2697 0018 BB73     		strb	r3, [r7, #14]
1281:./ucOSII/Core/os_core.c ****     bitx    =  ptcb->OSTCBBitX;
 2698              		.loc 1 1281 13
 2699 001a 7B68     		ldr	r3, [r7, #4]
 2700 001c 93F83D30 		ldrb	r3, [r3, #61]
 2701 0020 7B73     		strb	r3, [r7, #13]
1282:./ucOSII/Core/os_core.c ****     pevents =  pevents_multi;
 2702              		.loc 1 1282 13
 2703 0022 3B68     		ldr	r3, [r7]
 2704 0024 7B61     		str	r3, [r7, #20]
1283:./ucOSII/Core/os_core.c ****     pevent  = *pevents;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 71


 2705              		.loc 1 1283 13
 2706 0026 7B69     		ldr	r3, [r7, #20]
 2707 0028 1B68     		ldr	r3, [r3]
 2708 002a 3B61     		str	r3, [r7, #16]
1284:./ucOSII/Core/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists 
 2709              		.loc 1 1284 11
 2710 002c 22E0     		b	.L149
 2711              	.L151:
1285:./ucOSII/Core/os_core.c ****         pevent->OSEventTbl[y]  &= (OS_PRIO)~bitx;
 2712              		.loc 1 1285 32
 2713 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2714 0030 3A69     		ldr	r2, [r7, #16]
 2715 0032 1344     		add	r3, r3, r2
 2716 0034 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 2717              		.loc 1 1285 35
 2718 0036 7B7B     		ldrb	r3, [r7, #13]
 2719 0038 DB43     		mvns	r3, r3
 2720 003a DAB2     		uxtb	r2, r3
 2721              		.loc 1 1285 32
 2722 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2723 003e 0A40     		ands	r2, r2, r1
 2724 0040 D1B2     		uxtb	r1, r2
 2725 0042 3A69     		ldr	r2, [r7, #16]
 2726 0044 1344     		add	r3, r3, r2
 2727 0046 0A46     		mov	r2, r1
 2728 0048 DA72     		strb	r2, [r3, #11]
1286:./ucOSII/Core/os_core.c ****         if (pevent->OSEventTbl[y] == 0u) {
 2729              		.loc 1 1286 31
 2730 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2731 004c 3A69     		ldr	r2, [r7, #16]
 2732 004e 1344     		add	r3, r3, r2
 2733 0050 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2734              		.loc 1 1286 12
 2735 0052 002B     		cmp	r3, #0
 2736 0054 08D1     		bne	.L150
1287:./ucOSII/Core/os_core.c ****             pevent->OSEventGrp &= (OS_PRIO)~bity;
 2737              		.loc 1 1287 32
 2738 0056 3B69     		ldr	r3, [r7, #16]
 2739 0058 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2740              		.loc 1 1287 35
 2741 005a BB7B     		ldrb	r3, [r7, #14]
 2742 005c DB43     		mvns	r3, r3
 2743 005e DBB2     		uxtb	r3, r3
 2744              		.loc 1 1287 32
 2745 0060 1340     		ands	r3, r3, r2
 2746 0062 DAB2     		uxtb	r2, r3
 2747 0064 3B69     		ldr	r3, [r7, #16]
 2748 0066 9A72     		strb	r2, [r3, #10]
 2749              	.L150:
1288:./ucOSII/Core/os_core.c ****         }
1289:./ucOSII/Core/os_core.c ****         pevents++;
 2750              		.loc 1 1289 16
 2751 0068 7B69     		ldr	r3, [r7, #20]
 2752 006a 0433     		adds	r3, r3, #4
 2753 006c 7B61     		str	r3, [r7, #20]
1290:./ucOSII/Core/os_core.c ****         pevent = *pevents;
 2754              		.loc 1 1290 16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 72


 2755 006e 7B69     		ldr	r3, [r7, #20]
 2756 0070 1B68     		ldr	r3, [r3]
 2757 0072 3B61     		str	r3, [r7, #16]
 2758              	.L149:
1284:./ucOSII/Core/os_core.c ****         pevent->OSEventTbl[y]  &= (OS_PRIO)~bitx;
 2759              		.loc 1 1284 11
 2760 0074 3B69     		ldr	r3, [r7, #16]
 2761 0076 002B     		cmp	r3, #0
 2762 0078 D9D1     		bne	.L151
1291:./ucOSII/Core/os_core.c ****     }
1292:./ucOSII/Core/os_core.c **** }
 2763              		.loc 1 1292 1
 2764 007a 00BF     		nop
 2765 007c 00BF     		nop
 2766 007e 1C37     		adds	r7, r7, #28
 2767              	.LCFI82:
 2768              		.cfi_def_cfa_offset 4
 2769 0080 BD46     		mov	sp, r7
 2770              	.LCFI83:
 2771              		.cfi_def_cfa_register 13
 2772              		@ sp needed
 2773 0082 5DF8047B 		ldr	r7, [sp], #4
 2774              	.LCFI84:
 2775              		.cfi_restore 7
 2776              		.cfi_def_cfa_offset 0
 2777 0086 7047     		bx	lr
 2778              		.cfi_endproc
 2779              	.LFE20:
 2781              		.section	.text.OS_EventWaitListInit,"ax",%progbits
 2782              		.align	1
 2783              		.global	OS_EventWaitListInit
 2784              		.syntax unified
 2785              		.thumb
 2786              		.thumb_func
 2788              	OS_EventWaitListInit:
 2789              	.LFB21:
1293:./ucOSII/Core/os_core.c **** #endif
1294:./ucOSII/Core/os_core.c **** 
1295:./ucOSII/Core/os_core.c **** 
1296:./ucOSII/Core/os_core.c **** /*
1297:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1298:./ucOSII/Core/os_core.c **** *                             INITIALIZE EVENT CONTROL BLOCK'S WAIT LIST
1299:./ucOSII/Core/os_core.c **** *
1300:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to initialize the event wait list
1301:./ucOSII/Core/os_core.c **** *
1302:./ucOSII/Core/os_core.c **** * Arguments  : pevent    is a pointer to the event control block allocated to the event.
1303:./ucOSII/Core/os_core.c **** *
1304:./ucOSII/Core/os_core.c **** * Returns    : none
1305:./ucOSII/Core/os_core.c **** *
1306:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1307:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1308:./ucOSII/Core/os_core.c **** */
1309:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN)
1310:./ucOSII/Core/os_core.c **** void  OS_EventWaitListInit (OS_EVENT *pevent)
1311:./ucOSII/Core/os_core.c **** {
 2790              		.loc 1 1311 1
 2791              		.cfi_startproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 73


 2792              		@ args = 0, pretend = 0, frame = 16
 2793              		@ frame_needed = 1, uses_anonymous_args = 0
 2794              		@ link register save eliminated.
 2795 0000 80B4     		push	{r7}
 2796              	.LCFI85:
 2797              		.cfi_def_cfa_offset 4
 2798              		.cfi_offset 7, -4
 2799 0002 85B0     		sub	sp, sp, #20
 2800              	.LCFI86:
 2801              		.cfi_def_cfa_offset 24
 2802 0004 00AF     		add	r7, sp, #0
 2803              	.LCFI87:
 2804              		.cfi_def_cfa_register 7
 2805 0006 7860     		str	r0, [r7, #4]
1312:./ucOSII/Core/os_core.c ****     INT8U  i;
1313:./ucOSII/Core/os_core.c **** 
1314:./ucOSII/Core/os_core.c **** 
1315:./ucOSII/Core/os_core.c ****     pevent->OSEventGrp = 0u;                     /* No task waiting on event                       
 2806              		.loc 1 1315 24
 2807 0008 7B68     		ldr	r3, [r7, #4]
 2808 000a 0022     		movs	r2, #0
 2809 000c 9A72     		strb	r2, [r3, #10]
1316:./ucOSII/Core/os_core.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 2810              		.loc 1 1316 12
 2811 000e 0023     		movs	r3, #0
 2812 0010 FB73     		strb	r3, [r7, #15]
 2813              		.loc 1 1316 5
 2814 0012 07E0     		b	.L153
 2815              	.L154:
1317:./ucOSII/Core/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 2816              		.loc 1 1317 27 discriminator 3
 2817 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2818              		.loc 1 1317 31 discriminator 3
 2819 0016 7A68     		ldr	r2, [r7, #4]
 2820 0018 1344     		add	r3, r3, r2
 2821 001a 0022     		movs	r2, #0
 2822 001c DA72     		strb	r2, [r3, #11]
1316:./ucOSII/Core/os_core.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 2823              		.loc 1 1316 42 discriminator 3
 2824 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2825 0020 0133     		adds	r3, r3, #1
 2826 0022 FB73     		strb	r3, [r7, #15]
 2827              	.L153:
1316:./ucOSII/Core/os_core.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 2828              		.loc 1 1316 5 discriminator 1
 2829 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2830 0026 072B     		cmp	r3, #7
 2831 0028 F4D9     		bls	.L154
1318:./ucOSII/Core/os_core.c ****     }
1319:./ucOSII/Core/os_core.c **** }
 2832              		.loc 1 1319 1
 2833 002a 00BF     		nop
 2834 002c 00BF     		nop
 2835 002e 1437     		adds	r7, r7, #20
 2836              	.LCFI88:
 2837              		.cfi_def_cfa_offset 4
 2838 0030 BD46     		mov	sp, r7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 74


 2839              	.LCFI89:
 2840              		.cfi_def_cfa_register 13
 2841              		@ sp needed
 2842 0032 5DF8047B 		ldr	r7, [sp], #4
 2843              	.LCFI90:
 2844              		.cfi_restore 7
 2845              		.cfi_def_cfa_offset 0
 2846 0036 7047     		bx	lr
 2847              		.cfi_endproc
 2848              	.LFE21:
 2850              		.section	.rodata
 2851              		.align	2
 2852              	.LC0:
 2853 0000 3F00     		.ascii	"?\000"
 2854              		.section	.text.OS_InitEventList,"ax",%progbits
 2855              		.align	1
 2856              		.syntax unified
 2857              		.thumb
 2858              		.thumb_func
 2860              	OS_InitEventList:
 2861              	.LFB22:
1320:./ucOSII/Core/os_core.c **** #endif
1321:./ucOSII/Core/os_core.c **** 
1322:./ucOSII/Core/os_core.c **** 
1323:./ucOSII/Core/os_core.c **** /*
1324:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1325:./ucOSII/Core/os_core.c **** *                                             INITIALIZATION
1326:./ucOSII/Core/os_core.c **** *                           INITIALIZE THE FREE LIST OF EVENT CONTROL BLOCKS
1327:./ucOSII/Core/os_core.c **** *
1328:./ucOSII/Core/os_core.c **** * Description: This function is called by OSInit() to initialize the free list of event control blo
1329:./ucOSII/Core/os_core.c **** *
1330:./ucOSII/Core/os_core.c **** * Arguments  : none
1331:./ucOSII/Core/os_core.c **** *
1332:./ucOSII/Core/os_core.c **** * Returns    : none
1333:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1334:./ucOSII/Core/os_core.c **** */
1335:./ucOSII/Core/os_core.c **** 
1336:./ucOSII/Core/os_core.c **** static  void  OS_InitEventList (void)
1337:./ucOSII/Core/os_core.c **** {
 2862              		.loc 1 1337 1
 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 16
 2865              		@ frame_needed = 1, uses_anonymous_args = 0
 2866 0000 80B5     		push	{r7, lr}
 2867              	.LCFI91:
 2868              		.cfi_def_cfa_offset 8
 2869              		.cfi_offset 7, -8
 2870              		.cfi_offset 14, -4
 2871 0002 84B0     		sub	sp, sp, #16
 2872              	.LCFI92:
 2873              		.cfi_def_cfa_offset 24
 2874 0004 00AF     		add	r7, sp, #0
 2875              	.LCFI93:
 2876              		.cfi_def_cfa_register 7
1338:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
1339:./ucOSII/Core/os_core.c **** #if (OS_MAX_EVENTS > 1u)
1340:./ucOSII/Core/os_core.c ****     INT16U     ix;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 75


1341:./ucOSII/Core/os_core.c ****     INT16U     ix_next;
1342:./ucOSII/Core/os_core.c ****     OS_EVENT  *pevent1;
1343:./ucOSII/Core/os_core.c ****     OS_EVENT  *pevent2;
1344:./ucOSII/Core/os_core.c **** 
1345:./ucOSII/Core/os_core.c **** 
1346:./ucOSII/Core/os_core.c ****     OS_MemClr((INT8U *)&OSEventTbl[0], sizeof(OSEventTbl)); /* Clear the event table               
 2877              		.loc 1 1346 5
 2878 0006 F021     		movs	r1, #240
 2879 0008 1F48     		ldr	r0, .L158
 2880 000a FFF7FEFF 		bl	OS_MemClr
1347:./ucOSII/Core/os_core.c ****     for (ix = 0u; ix < (OS_MAX_EVENTS - 1u); ix++) {        /* Init. list of free EVENT control blo
 2881              		.loc 1 1347 13
 2882 000e 0023     		movs	r3, #0
 2883 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 2884              		.loc 1 1347 5
 2885 0012 1EE0     		b	.L156
 2886              	.L157:
1348:./ucOSII/Core/os_core.c ****         ix_next = ix + 1u;
 2887              		.loc 1 1348 17 discriminator 3
 2888 0014 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2889 0016 0133     		adds	r3, r3, #1
 2890 0018 FB80     		strh	r3, [r7, #6]	@ movhi
1349:./ucOSII/Core/os_core.c ****         pevent1 = &OSEventTbl[ix];
 2891              		.loc 1 1349 30 discriminator 3
 2892 001a FA89     		ldrh	r2, [r7, #14]
 2893              		.loc 1 1349 17 discriminator 3
 2894 001c 1346     		mov	r3, r2
 2895 001e 5B00     		lsls	r3, r3, #1
 2896 0020 1344     		add	r3, r3, r2
 2897 0022 DB00     		lsls	r3, r3, #3
 2898 0024 184A     		ldr	r2, .L158
 2899 0026 1344     		add	r3, r3, r2
 2900 0028 BB60     		str	r3, [r7, #8]
1350:./ucOSII/Core/os_core.c ****         pevent2 = &OSEventTbl[ix_next];
 2901              		.loc 1 1350 30 discriminator 3
 2902 002a FA88     		ldrh	r2, [r7, #6]
 2903              		.loc 1 1350 17 discriminator 3
 2904 002c 1346     		mov	r3, r2
 2905 002e 5B00     		lsls	r3, r3, #1
 2906 0030 1344     		add	r3, r3, r2
 2907 0032 DB00     		lsls	r3, r3, #3
 2908 0034 144A     		ldr	r2, .L158
 2909 0036 1344     		add	r3, r3, r2
 2910 0038 3B60     		str	r3, [r7]
1351:./ucOSII/Core/os_core.c ****         pevent1->OSEventType    = OS_EVENT_TYPE_UNUSED;
 2911              		.loc 1 1351 33 discriminator 3
 2912 003a BB68     		ldr	r3, [r7, #8]
 2913 003c 0022     		movs	r2, #0
 2914 003e 1A70     		strb	r2, [r3]
1352:./ucOSII/Core/os_core.c ****         pevent1->OSEventPtr     = pevent2;
 2915              		.loc 1 1352 33 discriminator 3
 2916 0040 BB68     		ldr	r3, [r7, #8]
 2917 0042 3A68     		ldr	r2, [r7]
 2918 0044 5A60     		str	r2, [r3, #4]
1353:./ucOSII/Core/os_core.c **** #if OS_EVENT_NAME_EN > 0u
1354:./ucOSII/Core/os_core.c ****         pevent1->OSEventName    = (INT8U *)(void *)"?";     /* Unknown name                        
 2919              		.loc 1 1354 33 discriminator 3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 76


 2920 0046 BB68     		ldr	r3, [r7, #8]
 2921 0048 104A     		ldr	r2, .L158+4
 2922 004a 5A61     		str	r2, [r3, #20]
1347:./ucOSII/Core/os_core.c ****         ix_next = ix + 1u;
 2923              		.loc 1 1347 48 discriminator 3
 2924 004c FB89     		ldrh	r3, [r7, #14]
 2925 004e 0133     		adds	r3, r3, #1
 2926 0050 FB81     		strh	r3, [r7, #14]	@ movhi
 2927              	.L156:
1347:./ucOSII/Core/os_core.c ****         ix_next = ix + 1u;
 2928              		.loc 1 1347 5 discriminator 1
 2929 0052 FB89     		ldrh	r3, [r7, #14]
 2930 0054 082B     		cmp	r3, #8
 2931 0056 DDD9     		bls	.L157
1355:./ucOSII/Core/os_core.c **** #endif
1356:./ucOSII/Core/os_core.c ****     }
1357:./ucOSII/Core/os_core.c ****     pevent1                         = &OSEventTbl[ix];
 2932              		.loc 1 1357 50
 2933 0058 FA89     		ldrh	r2, [r7, #14]
 2934              		.loc 1 1357 37
 2935 005a 1346     		mov	r3, r2
 2936 005c 5B00     		lsls	r3, r3, #1
 2937 005e 1344     		add	r3, r3, r2
 2938 0060 DB00     		lsls	r3, r3, #3
 2939 0062 094A     		ldr	r2, .L158
 2940 0064 1344     		add	r3, r3, r2
 2941 0066 BB60     		str	r3, [r7, #8]
1358:./ucOSII/Core/os_core.c ****     pevent1->OSEventType            = OS_EVENT_TYPE_UNUSED;
 2942              		.loc 1 1358 37
 2943 0068 BB68     		ldr	r3, [r7, #8]
 2944 006a 0022     		movs	r2, #0
 2945 006c 1A70     		strb	r2, [r3]
1359:./ucOSII/Core/os_core.c ****     pevent1->OSEventPtr             = (OS_EVENT *)0;
 2946              		.loc 1 1359 37
 2947 006e BB68     		ldr	r3, [r7, #8]
 2948 0070 0022     		movs	r2, #0
 2949 0072 5A60     		str	r2, [r3, #4]
1360:./ucOSII/Core/os_core.c **** #if OS_EVENT_NAME_EN > 0u
1361:./ucOSII/Core/os_core.c ****     pevent1->OSEventName            = (INT8U *)(void *)"?"; /* Unknown name                        
 2950              		.loc 1 1361 37
 2951 0074 BB68     		ldr	r3, [r7, #8]
 2952 0076 054A     		ldr	r2, .L158+4
 2953 0078 5A61     		str	r2, [r3, #20]
1362:./ucOSII/Core/os_core.c **** #endif
1363:./ucOSII/Core/os_core.c ****     OSEventFreeList                 = &OSEventTbl[0];
 2954              		.loc 1 1363 37
 2955 007a 054B     		ldr	r3, .L158+8
 2956 007c 024A     		ldr	r2, .L158
 2957 007e 1A60     		str	r2, [r3]
1364:./ucOSII/Core/os_core.c **** #else
1365:./ucOSII/Core/os_core.c ****     OSEventFreeList                 = &OSEventTbl[0];       /* Only have ONE event control block   
1366:./ucOSII/Core/os_core.c ****     OSEventFreeList->OSEventType    = OS_EVENT_TYPE_UNUSED;
1367:./ucOSII/Core/os_core.c ****     OSEventFreeList->OSEventPtr     = (OS_EVENT *)0;
1368:./ucOSII/Core/os_core.c **** #if OS_EVENT_NAME_EN > 0u
1369:./ucOSII/Core/os_core.c ****     OSEventFreeList->OSEventName    = (INT8U *)"?";         /* Unknown name                        
1370:./ucOSII/Core/os_core.c **** #endif
1371:./ucOSII/Core/os_core.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 77


1372:./ucOSII/Core/os_core.c **** #endif
1373:./ucOSII/Core/os_core.c **** }
 2958              		.loc 1 1373 1
 2959 0080 00BF     		nop
 2960 0082 1037     		adds	r7, r7, #16
 2961              	.LCFI94:
 2962              		.cfi_def_cfa_offset 8
 2963 0084 BD46     		mov	sp, r7
 2964              	.LCFI95:
 2965              		.cfi_def_cfa_register 13
 2966              		@ sp needed
 2967 0086 80BD     		pop	{r7, pc}
 2968              	.L159:
 2969              		.align	2
 2970              	.L158:
 2971 0088 00000000 		.word	OSEventTbl
 2972 008c 00000000 		.word	.LC0
 2973 0090 00000000 		.word	OSEventFreeList
 2974              		.cfi_endproc
 2975              	.LFE22:
 2977              		.section	.text.OS_InitMisc,"ax",%progbits
 2978              		.align	1
 2979              		.syntax unified
 2980              		.thumb
 2981              		.thumb_func
 2983              	OS_InitMisc:
 2984              	.LFB23:
1374:./ucOSII/Core/os_core.c **** 
1375:./ucOSII/Core/os_core.c **** 
1376:./ucOSII/Core/os_core.c **** /*
1377:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1378:./ucOSII/Core/os_core.c **** *                                             INITIALIZATION
1379:./ucOSII/Core/os_core.c **** *                                    INITIALIZE MISCELLANEOUS VARIABLES
1380:./ucOSII/Core/os_core.c **** *
1381:./ucOSII/Core/os_core.c **** * Description: This function is called by OSInit() to initialize miscellaneous variables.
1382:./ucOSII/Core/os_core.c **** *
1383:./ucOSII/Core/os_core.c **** * Arguments  : none
1384:./ucOSII/Core/os_core.c **** *
1385:./ucOSII/Core/os_core.c **** * Returns    : none
1386:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1387:./ucOSII/Core/os_core.c **** */
1388:./ucOSII/Core/os_core.c **** 
1389:./ucOSII/Core/os_core.c **** static  void  OS_InitMisc (void)
1390:./ucOSII/Core/os_core.c **** {
 2985              		.loc 1 1390 1
 2986              		.cfi_startproc
 2987              		@ args = 0, pretend = 0, frame = 0
 2988              		@ frame_needed = 1, uses_anonymous_args = 0
 2989              		@ link register save eliminated.
 2990 0000 80B4     		push	{r7}
 2991              	.LCFI96:
 2992              		.cfi_def_cfa_offset 4
 2993              		.cfi_offset 7, -4
 2994 0002 00AF     		add	r7, sp, #0
 2995              	.LCFI97:
 2996              		.cfi_def_cfa_register 7
1391:./ucOSII/Core/os_core.c **** #if OS_TIME_GET_SET_EN > 0u
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 78


1392:./ucOSII/Core/os_core.c ****     OSTime                    = 0uL;                       /* Clear the 32-bit system clock        
 2997              		.loc 1 1392 31
 2998 0004 124B     		ldr	r3, .L161
 2999 0006 0022     		movs	r2, #0
 3000 0008 1A60     		str	r2, [r3]
1393:./ucOSII/Core/os_core.c **** #endif
1394:./ucOSII/Core/os_core.c **** 
1395:./ucOSII/Core/os_core.c ****     OSIntNesting              = 0u;                        /* Clear the interrupt nesting counter  
 3001              		.loc 1 1395 31
 3002 000a 124B     		ldr	r3, .L161+4
 3003 000c 0022     		movs	r2, #0
 3004 000e 1A70     		strb	r2, [r3]
1396:./ucOSII/Core/os_core.c ****     OSLockNesting             = 0u;                        /* Clear the scheduling lock counter    
 3005              		.loc 1 1396 31
 3006 0010 114B     		ldr	r3, .L161+8
 3007 0012 0022     		movs	r2, #0
 3008 0014 1A70     		strb	r2, [r3]
1397:./ucOSII/Core/os_core.c **** 
1398:./ucOSII/Core/os_core.c ****     OSTaskCtr                 = 0u;                        /* Clear the number of tasks            
 3009              		.loc 1 1398 31
 3010 0016 114B     		ldr	r3, .L161+12
 3011 0018 0022     		movs	r2, #0
 3012 001a 1A70     		strb	r2, [r3]
1399:./ucOSII/Core/os_core.c **** 
1400:./ucOSII/Core/os_core.c ****     OSRunning                 = OS_FALSE;                  /* Indicate that multitasking not starte
 3013              		.loc 1 1400 31
 3014 001c 104B     		ldr	r3, .L161+16
 3015 001e 0022     		movs	r2, #0
 3016 0020 1A70     		strb	r2, [r3]
1401:./ucOSII/Core/os_core.c **** 
1402:./ucOSII/Core/os_core.c ****     OSCtxSwCtr                = 0u;                        /* Clear the context switch counter     
 3017              		.loc 1 1402 31
 3018 0022 104B     		ldr	r3, .L161+20
 3019 0024 0022     		movs	r2, #0
 3020 0026 1A60     		str	r2, [r3]
1403:./ucOSII/Core/os_core.c ****     OSIdleCtr                 = 0uL;                       /* Clear the 32-bit idle counter        
 3021              		.loc 1 1403 31
 3022 0028 0F4B     		ldr	r3, .L161+24
 3023 002a 0022     		movs	r2, #0
 3024 002c 1A60     		str	r2, [r3]
1404:./ucOSII/Core/os_core.c **** 
1405:./ucOSII/Core/os_core.c **** #if OS_TASK_STAT_EN > 0u
1406:./ucOSII/Core/os_core.c ****     OSIdleCtrRun              = 0uL;
 3025              		.loc 1 1406 31
 3026 002e 0F4B     		ldr	r3, .L161+28
 3027 0030 0022     		movs	r2, #0
 3028 0032 1A60     		str	r2, [r3]
1407:./ucOSII/Core/os_core.c ****     OSIdleCtrMax              = 0uL;
 3029              		.loc 1 1407 31
 3030 0034 0E4B     		ldr	r3, .L161+32
 3031 0036 0022     		movs	r2, #0
 3032 0038 1A60     		str	r2, [r3]
1408:./ucOSII/Core/os_core.c ****     OSStatRdy                 = OS_FALSE;                  /* Statistic task is not ready          
 3033              		.loc 1 1408 31
 3034 003a 0E4B     		ldr	r3, .L161+36
 3035 003c 0022     		movs	r2, #0
 3036 003e 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 79


1409:./ucOSII/Core/os_core.c **** #endif
1410:./ucOSII/Core/os_core.c **** 
1411:./ucOSII/Core/os_core.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
1412:./ucOSII/Core/os_core.c ****     OSSafetyCriticalStartFlag = OS_FALSE;                  /* Still allow creation of objects      
1413:./ucOSII/Core/os_core.c **** #endif
1414:./ucOSII/Core/os_core.c **** 
1415:./ucOSII/Core/os_core.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1416:./ucOSII/Core/os_core.c ****     OSTaskRegNextAvailID      = 0u;                        /* Initialize the task register ID      
 3037              		.loc 1 1416 31
 3038 0040 0D4B     		ldr	r3, .L161+40
 3039 0042 0022     		movs	r2, #0
 3040 0044 1A70     		strb	r2, [r3]
1417:./ucOSII/Core/os_core.c **** #endif
1418:./ucOSII/Core/os_core.c **** }
 3041              		.loc 1 1418 1
 3042 0046 00BF     		nop
 3043 0048 BD46     		mov	sp, r7
 3044              	.LCFI98:
 3045              		.cfi_def_cfa_register 13
 3046              		@ sp needed
 3047 004a 5DF8047B 		ldr	r7, [sp], #4
 3048              	.LCFI99:
 3049              		.cfi_restore 7
 3050              		.cfi_def_cfa_offset 0
 3051 004e 7047     		bx	lr
 3052              	.L162:
 3053              		.align	2
 3054              	.L161:
 3055 0050 00000000 		.word	OSTime
 3056 0054 00000000 		.word	OSIntNesting
 3057 0058 00000000 		.word	OSLockNesting
 3058 005c 00000000 		.word	OSTaskCtr
 3059 0060 00000000 		.word	OSRunning
 3060 0064 00000000 		.word	OSCtxSwCtr
 3061 0068 00000000 		.word	OSIdleCtr
 3062 006c 00000000 		.word	OSIdleCtrRun
 3063 0070 00000000 		.word	OSIdleCtrMax
 3064 0074 00000000 		.word	OSStatRdy
 3065 0078 00000000 		.word	OSTaskRegNextAvailID
 3066              		.cfi_endproc
 3067              	.LFE23:
 3069              		.section	.text.OS_InitRdyList,"ax",%progbits
 3070              		.align	1
 3071              		.syntax unified
 3072              		.thumb
 3073              		.thumb_func
 3075              	OS_InitRdyList:
 3076              	.LFB24:
1419:./ucOSII/Core/os_core.c **** 
1420:./ucOSII/Core/os_core.c **** 
1421:./ucOSII/Core/os_core.c **** /*
1422:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1423:./ucOSII/Core/os_core.c **** *                                             INITIALIZATION
1424:./ucOSII/Core/os_core.c **** *                                       INITIALIZE THE READY LIST
1425:./ucOSII/Core/os_core.c **** *
1426:./ucOSII/Core/os_core.c **** * Description: This function is called by OSInit() to initialize the Ready List.
1427:./ucOSII/Core/os_core.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 80


1428:./ucOSII/Core/os_core.c **** * Arguments  : none
1429:./ucOSII/Core/os_core.c **** *
1430:./ucOSII/Core/os_core.c **** * Returns    : none
1431:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1432:./ucOSII/Core/os_core.c **** */
1433:./ucOSII/Core/os_core.c **** 
1434:./ucOSII/Core/os_core.c **** static  void  OS_InitRdyList (void)
1435:./ucOSII/Core/os_core.c **** {
 3077              		.loc 1 1435 1
 3078              		.cfi_startproc
 3079              		@ args = 0, pretend = 0, frame = 8
 3080              		@ frame_needed = 1, uses_anonymous_args = 0
 3081              		@ link register save eliminated.
 3082 0000 80B4     		push	{r7}
 3083              	.LCFI100:
 3084              		.cfi_def_cfa_offset 4
 3085              		.cfi_offset 7, -4
 3086 0002 83B0     		sub	sp, sp, #12
 3087              	.LCFI101:
 3088              		.cfi_def_cfa_offset 16
 3089 0004 00AF     		add	r7, sp, #0
 3090              	.LCFI102:
 3091              		.cfi_def_cfa_register 7
1436:./ucOSII/Core/os_core.c ****     INT8U  i;
1437:./ucOSII/Core/os_core.c **** 
1438:./ucOSII/Core/os_core.c **** 
1439:./ucOSII/Core/os_core.c ****     OSRdyGrp      = 0u;                                    /* Clear the ready list                 
 3092              		.loc 1 1439 19
 3093 0006 114B     		ldr	r3, .L166
 3094 0008 0022     		movs	r2, #0
 3095 000a 1A70     		strb	r2, [r3]
1440:./ucOSII/Core/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 3096              		.loc 1 1440 12
 3097 000c 0023     		movs	r3, #0
 3098 000e FB71     		strb	r3, [r7, #7]
 3099              		.loc 1 1440 5
 3100 0010 06E0     		b	.L164
 3101              	.L165:
1441:./ucOSII/Core/os_core.c ****         OSRdyTbl[i] = 0u;
 3102              		.loc 1 1441 17 discriminator 3
 3103 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3104              		.loc 1 1441 21 discriminator 3
 3105 0014 0E4A     		ldr	r2, .L166+4
 3106 0016 0021     		movs	r1, #0
 3107 0018 D154     		strb	r1, [r2, r3]
1440:./ucOSII/Core/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 3108              		.loc 1 1440 40 discriminator 3
 3109 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3110 001c 0133     		adds	r3, r3, #1
 3111 001e FB71     		strb	r3, [r7, #7]
 3112              	.L164:
1440:./ucOSII/Core/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 3113              		.loc 1 1440 5 discriminator 1
 3114 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3115 0022 072B     		cmp	r3, #7
 3116 0024 F5D9     		bls	.L165
1442:./ucOSII/Core/os_core.c ****     }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 81


1443:./ucOSII/Core/os_core.c **** 
1444:./ucOSII/Core/os_core.c ****     OSPrioCur     = 0u;
 3117              		.loc 1 1444 19
 3118 0026 0B4B     		ldr	r3, .L166+8
 3119 0028 0022     		movs	r2, #0
 3120 002a 1A70     		strb	r2, [r3]
1445:./ucOSII/Core/os_core.c ****     OSPrioHighRdy = 0u;
 3121              		.loc 1 1445 19
 3122 002c 0A4B     		ldr	r3, .L166+12
 3123 002e 0022     		movs	r2, #0
 3124 0030 1A70     		strb	r2, [r3]
1446:./ucOSII/Core/os_core.c **** 
1447:./ucOSII/Core/os_core.c ****     OSTCBHighRdy  = (OS_TCB *)0;
 3125              		.loc 1 1447 19
 3126 0032 0A4B     		ldr	r3, .L166+16
 3127 0034 0022     		movs	r2, #0
 3128 0036 1A60     		str	r2, [r3]
1448:./ucOSII/Core/os_core.c ****     OSTCBCur      = (OS_TCB *)0;
 3129              		.loc 1 1448 19
 3130 0038 094B     		ldr	r3, .L166+20
 3131 003a 0022     		movs	r2, #0
 3132 003c 1A60     		str	r2, [r3]
1449:./ucOSII/Core/os_core.c **** }
 3133              		.loc 1 1449 1
 3134 003e 00BF     		nop
 3135 0040 0C37     		adds	r7, r7, #12
 3136              	.LCFI103:
 3137              		.cfi_def_cfa_offset 4
 3138 0042 BD46     		mov	sp, r7
 3139              	.LCFI104:
 3140              		.cfi_def_cfa_register 13
 3141              		@ sp needed
 3142 0044 5DF8047B 		ldr	r7, [sp], #4
 3143              	.LCFI105:
 3144              		.cfi_restore 7
 3145              		.cfi_def_cfa_offset 0
 3146 0048 7047     		bx	lr
 3147              	.L167:
 3148 004a 00BF     		.align	2
 3149              	.L166:
 3150 004c 00000000 		.word	OSRdyGrp
 3151 0050 00000000 		.word	OSRdyTbl
 3152 0054 00000000 		.word	OSPrioCur
 3153 0058 00000000 		.word	OSPrioHighRdy
 3154 005c 00000000 		.word	OSTCBHighRdy
 3155 0060 00000000 		.word	OSTCBCur
 3156              		.cfi_endproc
 3157              	.LFE24:
 3159              		.section	.rodata
 3160 0002 0000     		.align	2
 3161              	.LC1:
 3162 0004 75432F4F 		.ascii	"uC/OS-II Idle\000"
 3162      532D4949 
 3162      2049646C 
 3162      6500
 3163              		.section	.text.OS_InitTaskIdle,"ax",%progbits
 3164              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 82


 3165              		.syntax unified
 3166              		.thumb
 3167              		.thumb_func
 3169              	OS_InitTaskIdle:
 3170              	.LFB25:
1450:./ucOSII/Core/os_core.c **** 
1451:./ucOSII/Core/os_core.c **** 
1452:./ucOSII/Core/os_core.c **** /*
1453:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1454:./ucOSII/Core/os_core.c **** *                                             INITIALIZATION
1455:./ucOSII/Core/os_core.c **** *                                         CREATING THE IDLE TASK
1456:./ucOSII/Core/os_core.c **** *
1457:./ucOSII/Core/os_core.c **** * Description: This function creates the Idle Task.
1458:./ucOSII/Core/os_core.c **** *
1459:./ucOSII/Core/os_core.c **** * Arguments  : none
1460:./ucOSII/Core/os_core.c **** *
1461:./ucOSII/Core/os_core.c **** * Returns    : none
1462:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1463:./ucOSII/Core/os_core.c **** */
1464:./ucOSII/Core/os_core.c **** 
1465:./ucOSII/Core/os_core.c **** static  void  OS_InitTaskIdle (void)
1466:./ucOSII/Core/os_core.c **** {
 3171              		.loc 1 1466 1
 3172              		.cfi_startproc
 3173              		@ args = 0, pretend = 0, frame = 8
 3174              		@ frame_needed = 1, uses_anonymous_args = 0
 3175 0000 80B5     		push	{r7, lr}
 3176              	.LCFI106:
 3177              		.cfi_def_cfa_offset 8
 3178              		.cfi_offset 7, -8
 3179              		.cfi_offset 14, -4
 3180 0002 88B0     		sub	sp, sp, #32
 3181              	.LCFI107:
 3182              		.cfi_def_cfa_offset 40
 3183 0004 06AF     		add	r7, sp, #24
 3184              	.LCFI108:
 3185              		.cfi_def_cfa 7, 16
1467:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
1468:./ucOSII/Core/os_core.c ****     INT8U  err;
1469:./ucOSII/Core/os_core.c **** #endif
1470:./ucOSII/Core/os_core.c **** 
1471:./ucOSII/Core/os_core.c **** 
1472:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1473:./ucOSII/Core/os_core.c ****     #if OS_STK_GROWTH == 1u
1474:./ucOSII/Core/os_core.c ****     (void)OSTaskCreateExt(OS_TaskIdle,
 3186              		.loc 1 1474 11
 3187 0006 0323     		movs	r3, #3
 3188 0008 0493     		str	r3, [sp, #16]
 3189 000a 0023     		movs	r3, #0
 3190 000c 0393     		str	r3, [sp, #12]
 3191 000e 8023     		movs	r3, #128
 3192 0010 0293     		str	r3, [sp, #8]
 3193 0012 0A4B     		ldr	r3, .L169
 3194 0014 0193     		str	r3, [sp, #4]
 3195 0016 4FF6FF73 		movw	r3, #65535
 3196 001a 0093     		str	r3, [sp]
 3197 001c 3F23     		movs	r3, #63
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 83


 3198 001e 084A     		ldr	r2, .L169+4
 3199 0020 0021     		movs	r1, #0
 3200 0022 0848     		ldr	r0, .L169+8
 3201 0024 FFF7FEFF 		bl	OSTaskCreateExt
1475:./ucOSII/Core/os_core.c ****                           (void *)0,                                 /* No arguments passed to OS_T
1476:./ucOSII/Core/os_core.c ****                           &OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE - 1u],/* Set Top-Of-Stack           
1477:./ucOSII/Core/os_core.c ****                           OS_TASK_IDLE_PRIO,                         /* Lowest priority level      
1478:./ucOSII/Core/os_core.c ****                           OS_TASK_IDLE_ID,
1479:./ucOSII/Core/os_core.c ****                           &OSTaskIdleStk[0],                         /* Set Bottom-Of-Stack        
1480:./ucOSII/Core/os_core.c ****                           OS_TASK_IDLE_STK_SIZE,
1481:./ucOSII/Core/os_core.c ****                           (void *)0,                                 /* No TCB extension           
1482:./ucOSII/Core/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);/* Enable stack checking + cle
1483:./ucOSII/Core/os_core.c ****     #else
1484:./ucOSII/Core/os_core.c ****     (void)OSTaskCreateExt(OS_TaskIdle,
1485:./ucOSII/Core/os_core.c ****                           (void *)0,                                 /* No arguments passed to OS_T
1486:./ucOSII/Core/os_core.c ****                           &OSTaskIdleStk[0],                         /* Set Top-Of-Stack           
1487:./ucOSII/Core/os_core.c ****                           OS_TASK_IDLE_PRIO,                         /* Lowest priority level      
1488:./ucOSII/Core/os_core.c ****                           OS_TASK_IDLE_ID,
1489:./ucOSII/Core/os_core.c ****                           &OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE - 1u],/* Set Bottom-Of-Stack        
1490:./ucOSII/Core/os_core.c ****                           OS_TASK_IDLE_STK_SIZE,
1491:./ucOSII/Core/os_core.c ****                           (void *)0,                                 /* No TCB extension           
1492:./ucOSII/Core/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);/* Enable stack checking + cle
1493:./ucOSII/Core/os_core.c ****     #endif
1494:./ucOSII/Core/os_core.c **** #else
1495:./ucOSII/Core/os_core.c ****     #if OS_STK_GROWTH == 1u
1496:./ucOSII/Core/os_core.c ****     (void)OSTaskCreate(OS_TaskIdle,
1497:./ucOSII/Core/os_core.c ****                        (void *)0,
1498:./ucOSII/Core/os_core.c ****                        &OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE - 1u],
1499:./ucOSII/Core/os_core.c ****                        OS_TASK_IDLE_PRIO);
1500:./ucOSII/Core/os_core.c ****     #else
1501:./ucOSII/Core/os_core.c ****     (void)OSTaskCreate(OS_TaskIdle,
1502:./ucOSII/Core/os_core.c ****                        (void *)0,
1503:./ucOSII/Core/os_core.c ****                        &OSTaskIdleStk[0],
1504:./ucOSII/Core/os_core.c ****                        OS_TASK_IDLE_PRIO);
1505:./ucOSII/Core/os_core.c ****     #endif
1506:./ucOSII/Core/os_core.c **** #endif
1507:./ucOSII/Core/os_core.c **** 
1508:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
1509:./ucOSII/Core/os_core.c ****     OSTaskNameSet(OS_TASK_IDLE_PRIO, (INT8U *)(void *)"uC/OS-II Idle", &err);
 3202              		.loc 1 1509 5
 3203 0028 FB1D     		adds	r3, r7, #7
 3204 002a 1A46     		mov	r2, r3
 3205 002c 0649     		ldr	r1, .L169+12
 3206 002e 3F20     		movs	r0, #63
 3207 0030 FFF7FEFF 		bl	OSTaskNameSet
1510:./ucOSII/Core/os_core.c **** #endif
1511:./ucOSII/Core/os_core.c **** }
 3208              		.loc 1 1511 1
 3209 0034 00BF     		nop
 3210 0036 0837     		adds	r7, r7, #8
 3211              	.LCFI109:
 3212              		.cfi_def_cfa_offset 8
 3213 0038 BD46     		mov	sp, r7
 3214              	.LCFI110:
 3215              		.cfi_def_cfa_register 13
 3216              		@ sp needed
 3217 003a 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 84


 3218              	.L170:
 3219              		.align	2
 3220              	.L169:
 3221 003c 00000000 		.word	OSTaskIdleStk
 3222 0040 FC010000 		.word	OSTaskIdleStk+508
 3223 0044 00000000 		.word	OS_TaskIdle
 3224 0048 04000000 		.word	.LC1
 3225              		.cfi_endproc
 3226              	.LFE25:
 3228              		.section	.rodata
 3229 0012 0000     		.align	2
 3230              	.LC2:
 3231 0014 75432F4F 		.ascii	"uC/OS-II Stat\000"
 3231      532D4949 
 3231      20537461 
 3231      7400
 3232              		.section	.text.OS_InitTaskStat,"ax",%progbits
 3233              		.align	1
 3234              		.syntax unified
 3235              		.thumb
 3236              		.thumb_func
 3238              	OS_InitTaskStat:
 3239              	.LFB26:
1512:./ucOSII/Core/os_core.c **** 
1513:./ucOSII/Core/os_core.c **** 
1514:./ucOSII/Core/os_core.c **** /*
1515:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1516:./ucOSII/Core/os_core.c **** *                                             INITIALIZATION
1517:./ucOSII/Core/os_core.c **** *                                      CREATING THE STATISTIC TASK
1518:./ucOSII/Core/os_core.c **** *
1519:./ucOSII/Core/os_core.c **** * Description: This function creates the Statistic Task.
1520:./ucOSII/Core/os_core.c **** *
1521:./ucOSII/Core/os_core.c **** * Arguments  : none
1522:./ucOSII/Core/os_core.c **** *
1523:./ucOSII/Core/os_core.c **** * Returns    : none
1524:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1525:./ucOSII/Core/os_core.c **** */
1526:./ucOSII/Core/os_core.c **** 
1527:./ucOSII/Core/os_core.c **** #if OS_TASK_STAT_EN > 0u
1528:./ucOSII/Core/os_core.c **** static  void  OS_InitTaskStat (void)
1529:./ucOSII/Core/os_core.c **** {
 3240              		.loc 1 1529 1
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 8
 3243              		@ frame_needed = 1, uses_anonymous_args = 0
 3244 0000 80B5     		push	{r7, lr}
 3245              	.LCFI111:
 3246              		.cfi_def_cfa_offset 8
 3247              		.cfi_offset 7, -8
 3248              		.cfi_offset 14, -4
 3249 0002 88B0     		sub	sp, sp, #32
 3250              	.LCFI112:
 3251              		.cfi_def_cfa_offset 40
 3252 0004 06AF     		add	r7, sp, #24
 3253              	.LCFI113:
 3254              		.cfi_def_cfa 7, 16
1530:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 85


1531:./ucOSII/Core/os_core.c ****     INT8U  err;
1532:./ucOSII/Core/os_core.c **** #endif
1533:./ucOSII/Core/os_core.c **** 
1534:./ucOSII/Core/os_core.c **** 
1535:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1536:./ucOSII/Core/os_core.c ****     #if OS_STK_GROWTH == 1u
1537:./ucOSII/Core/os_core.c ****     (void)OSTaskCreateExt(OS_TaskStat,
 3255              		.loc 1 1537 11
 3256 0006 0323     		movs	r3, #3
 3257 0008 0493     		str	r3, [sp, #16]
 3258 000a 0023     		movs	r3, #0
 3259 000c 0393     		str	r3, [sp, #12]
 3260 000e 8023     		movs	r3, #128
 3261 0010 0293     		str	r3, [sp, #8]
 3262 0012 0A4B     		ldr	r3, .L172
 3263 0014 0193     		str	r3, [sp, #4]
 3264 0016 4FF6FE73 		movw	r3, #65534
 3265 001a 0093     		str	r3, [sp]
 3266 001c 3E23     		movs	r3, #62
 3267 001e 084A     		ldr	r2, .L172+4
 3268 0020 0021     		movs	r1, #0
 3269 0022 0848     		ldr	r0, .L172+8
 3270 0024 FFF7FEFF 		bl	OSTaskCreateExt
1538:./ucOSII/Core/os_core.c ****                           (void *)0,                                   /* No args passed to OS_Task
1539:./ucOSII/Core/os_core.c ****                           &OSTaskStatStk[OS_TASK_STAT_STK_SIZE - 1u],  /* Set Top-Of-Stack         
1540:./ucOSII/Core/os_core.c ****                           OS_TASK_STAT_PRIO,                           /* One higher than the idle 
1541:./ucOSII/Core/os_core.c ****                           OS_TASK_STAT_ID,
1542:./ucOSII/Core/os_core.c ****                           &OSTaskStatStk[0],                           /* Set Bottom-Of-Stack      
1543:./ucOSII/Core/os_core.c ****                           OS_TASK_STAT_STK_SIZE,
1544:./ucOSII/Core/os_core.c ****                           (void *)0,                                   /* No TCB extension         
1545:./ucOSII/Core/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);  /* Enable stack checking + c
1546:./ucOSII/Core/os_core.c ****     #else
1547:./ucOSII/Core/os_core.c ****     (void)OSTaskCreateExt(OS_TaskStat,
1548:./ucOSII/Core/os_core.c ****                           (void *)0,                                   /* No args passed to OS_Task
1549:./ucOSII/Core/os_core.c ****                           &OSTaskStatStk[0],                           /* Set Top-Of-Stack         
1550:./ucOSII/Core/os_core.c ****                           OS_TASK_STAT_PRIO,                           /* One higher than the idle 
1551:./ucOSII/Core/os_core.c ****                           OS_TASK_STAT_ID,
1552:./ucOSII/Core/os_core.c ****                           &OSTaskStatStk[OS_TASK_STAT_STK_SIZE - 1u],  /* Set Bottom-Of-Stack      
1553:./ucOSII/Core/os_core.c ****                           OS_TASK_STAT_STK_SIZE,
1554:./ucOSII/Core/os_core.c ****                           (void *)0,                                   /* No TCB extension         
1555:./ucOSII/Core/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);  /* Enable stack checking + c
1556:./ucOSII/Core/os_core.c ****     #endif
1557:./ucOSII/Core/os_core.c **** #else
1558:./ucOSII/Core/os_core.c ****     #if OS_STK_GROWTH == 1u
1559:./ucOSII/Core/os_core.c ****     (void)OSTaskCreate(OS_TaskStat,
1560:./ucOSII/Core/os_core.c ****                        (void *)0,                                      /* No args passed to OS_Task
1561:./ucOSII/Core/os_core.c ****                        &OSTaskStatStk[OS_TASK_STAT_STK_SIZE - 1u],     /* Set Top-Of-Stack         
1562:./ucOSII/Core/os_core.c ****                        OS_TASK_STAT_PRIO);                             /* One higher than the idle 
1563:./ucOSII/Core/os_core.c ****     #else
1564:./ucOSII/Core/os_core.c ****     (void)OSTaskCreate(OS_TaskStat,
1565:./ucOSII/Core/os_core.c ****                        (void *)0,                                      /* No args passed to OS_Task
1566:./ucOSII/Core/os_core.c ****                        &OSTaskStatStk[0],                              /* Set Top-Of-Stack         
1567:./ucOSII/Core/os_core.c ****                        OS_TASK_STAT_PRIO);                             /* One higher than the idle 
1568:./ucOSII/Core/os_core.c ****     #endif
1569:./ucOSII/Core/os_core.c **** #endif
1570:./ucOSII/Core/os_core.c **** 
1571:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 86


1572:./ucOSII/Core/os_core.c ****     OSTaskNameSet(OS_TASK_STAT_PRIO, (INT8U *)(void *)"uC/OS-II Stat", &err);
 3271              		.loc 1 1572 5
 3272 0028 FB1D     		adds	r3, r7, #7
 3273 002a 1A46     		mov	r2, r3
 3274 002c 0649     		ldr	r1, .L172+12
 3275 002e 3E20     		movs	r0, #62
 3276 0030 FFF7FEFF 		bl	OSTaskNameSet
1573:./ucOSII/Core/os_core.c **** #endif
1574:./ucOSII/Core/os_core.c **** }
 3277              		.loc 1 1574 1
 3278 0034 00BF     		nop
 3279 0036 0837     		adds	r7, r7, #8
 3280              	.LCFI114:
 3281              		.cfi_def_cfa_offset 8
 3282 0038 BD46     		mov	sp, r7
 3283              	.LCFI115:
 3284              		.cfi_def_cfa_register 13
 3285              		@ sp needed
 3286 003a 80BD     		pop	{r7, pc}
 3287              	.L173:
 3288              		.align	2
 3289              	.L172:
 3290 003c 00000000 		.word	OSTaskStatStk
 3291 0040 FC010000 		.word	OSTaskStatStk+508
 3292 0044 00000000 		.word	OS_TaskStat
 3293 0048 14000000 		.word	.LC2
 3294              		.cfi_endproc
 3295              	.LFE26:
 3297              		.section	.text.OS_InitTCBList,"ax",%progbits
 3298              		.align	1
 3299              		.syntax unified
 3300              		.thumb
 3301              		.thumb_func
 3303              	OS_InitTCBList:
 3304              	.LFB27:
1575:./ucOSII/Core/os_core.c **** #endif
1576:./ucOSII/Core/os_core.c **** 
1577:./ucOSII/Core/os_core.c **** 
1578:./ucOSII/Core/os_core.c **** /*
1579:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1580:./ucOSII/Core/os_core.c **** *                                             INITIALIZATION
1581:./ucOSII/Core/os_core.c **** *                            INITIALIZE THE FREE LIST OF TASK CONTROL BLOCKS
1582:./ucOSII/Core/os_core.c **** *
1583:./ucOSII/Core/os_core.c **** * Description: This function is called by OSInit() to initialize the free list of OS_TCBs.
1584:./ucOSII/Core/os_core.c **** *
1585:./ucOSII/Core/os_core.c **** * Arguments  : none
1586:./ucOSII/Core/os_core.c **** *
1587:./ucOSII/Core/os_core.c **** * Returns    : none
1588:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1589:./ucOSII/Core/os_core.c **** */
1590:./ucOSII/Core/os_core.c **** 
1591:./ucOSII/Core/os_core.c **** static  void  OS_InitTCBList (void)
1592:./ucOSII/Core/os_core.c **** {
 3305              		.loc 1 1592 1
 3306              		.cfi_startproc
 3307              		@ args = 0, pretend = 0, frame = 16
 3308              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 87


 3309 0000 80B5     		push	{r7, lr}
 3310              	.LCFI116:
 3311              		.cfi_def_cfa_offset 8
 3312              		.cfi_offset 7, -8
 3313              		.cfi_offset 14, -4
 3314 0002 84B0     		sub	sp, sp, #16
 3315              	.LCFI117:
 3316              		.cfi_def_cfa_offset 24
 3317 0004 00AF     		add	r7, sp, #0
 3318              	.LCFI118:
 3319              		.cfi_def_cfa_register 7
1593:./ucOSII/Core/os_core.c ****     INT8U    ix;
1594:./ucOSII/Core/os_core.c ****     INT8U    ix_next;
1595:./ucOSII/Core/os_core.c ****     OS_TCB  *ptcb1;
1596:./ucOSII/Core/os_core.c ****     OS_TCB  *ptcb2;
1597:./ucOSII/Core/os_core.c **** 
1598:./ucOSII/Core/os_core.c **** 
1599:./ucOSII/Core/os_core.c ****     OS_MemClr((INT8U *)&OSTCBTbl[0],     sizeof(OSTCBTbl));      /* Clear all the TCBs             
 3320              		.loc 1 1599 5
 3321 0006 4FF4FD61 		mov	r1, #2024
 3322 000a 1F48     		ldr	r0, .L177
 3323 000c FFF7FEFF 		bl	OS_MemClr
1600:./ucOSII/Core/os_core.c ****     OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table       
 3324              		.loc 1 1600 5
 3325 0010 4FF48071 		mov	r1, #256
 3326 0014 1D48     		ldr	r0, .L177+4
 3327 0016 FFF7FEFF 		bl	OS_MemClr
1601:./ucOSII/Core/os_core.c ****     for (ix = 0u; ix < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1u); ix++) {    /* Init. list of free TCBs 
 3328              		.loc 1 1601 13
 3329 001a 0023     		movs	r3, #0
 3330 001c FB73     		strb	r3, [r7, #15]
 3331              		.loc 1 1601 5
 3332 001e 19E0     		b	.L175
 3333              	.L176:
1602:./ucOSII/Core/os_core.c ****         ix_next =  ix + 1u;
 3334              		.loc 1 1602 17 discriminator 3
 3335 0020 FB7B     		ldrb	r3, [r7, #15]
 3336 0022 0133     		adds	r3, r3, #1
 3337 0024 FB71     		strb	r3, [r7, #7]
1603:./ucOSII/Core/os_core.c ****         ptcb1   = &OSTCBTbl[ix];
 3338              		.loc 1 1603 28 discriminator 3
 3339 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3340              		.loc 1 1603 17 discriminator 3
 3341 0028 5C22     		movs	r2, #92
 3342 002a 02FB03F3 		mul	r3, r2, r3
 3343 002e 164A     		ldr	r2, .L177
 3344 0030 1344     		add	r3, r3, r2
 3345 0032 BB60     		str	r3, [r7, #8]
1604:./ucOSII/Core/os_core.c ****         ptcb2   = &OSTCBTbl[ix_next];
 3346              		.loc 1 1604 28 discriminator 3
 3347 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3348              		.loc 1 1604 17 discriminator 3
 3349 0036 5C22     		movs	r2, #92
 3350 0038 02FB03F3 		mul	r3, r2, r3
 3351 003c 124A     		ldr	r2, .L177
 3352 003e 1344     		add	r3, r3, r2
 3353 0040 3B60     		str	r3, [r7]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 88


1605:./ucOSII/Core/os_core.c ****         ptcb1->OSTCBNext = ptcb2;
 3354              		.loc 1 1605 26 discriminator 3
 3355 0042 BB68     		ldr	r3, [r7, #8]
 3356 0044 3A68     		ldr	r2, [r7]
 3357 0046 5A61     		str	r2, [r3, #20]
1606:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
1607:./ucOSII/Core/os_core.c ****         ptcb1->OSTCBTaskName = (INT8U *)(void *)"?";             /* Unknown name                   
 3358              		.loc 1 1607 30 discriminator 3
 3359 0048 BB68     		ldr	r3, [r7, #8]
 3360 004a 114A     		ldr	r2, .L177+8
 3361 004c 5A65     		str	r2, [r3, #84]
1601:./ucOSII/Core/os_core.c ****         ix_next =  ix + 1u;
 3362              		.loc 1 1601 64 discriminator 3
 3363 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3364 0050 0133     		adds	r3, r3, #1
 3365 0052 FB73     		strb	r3, [r7, #15]
 3366              	.L175:
1601:./ucOSII/Core/os_core.c ****         ix_next =  ix + 1u;
 3367              		.loc 1 1601 5 discriminator 1
 3368 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3369 0056 142B     		cmp	r3, #20
 3370 0058 E2D9     		bls	.L176
1608:./ucOSII/Core/os_core.c **** #endif
1609:./ucOSII/Core/os_core.c ****     }
1610:./ucOSII/Core/os_core.c ****     ptcb1                   = &OSTCBTbl[ix];
 3371              		.loc 1 1610 40
 3372 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3373              		.loc 1 1610 29
 3374 005c 5C22     		movs	r2, #92
 3375 005e 02FB03F3 		mul	r3, r2, r3
 3376 0062 094A     		ldr	r2, .L177
 3377 0064 1344     		add	r3, r3, r2
 3378 0066 BB60     		str	r3, [r7, #8]
1611:./ucOSII/Core/os_core.c ****     ptcb1->OSTCBNext        = (OS_TCB *)0;                       /* Last OS_TCB                    
 3379              		.loc 1 1611 29
 3380 0068 BB68     		ldr	r3, [r7, #8]
 3381 006a 0022     		movs	r2, #0
 3382 006c 5A61     		str	r2, [r3, #20]
1612:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
1613:./ucOSII/Core/os_core.c ****     ptcb1->OSTCBTaskName    = (INT8U *)(void *)"?";              /* Unknown name                   
 3383              		.loc 1 1613 29
 3384 006e BB68     		ldr	r3, [r7, #8]
 3385 0070 074A     		ldr	r2, .L177+8
 3386 0072 5A65     		str	r2, [r3, #84]
1614:./ucOSII/Core/os_core.c **** #endif
1615:./ucOSII/Core/os_core.c ****     OSTCBList               = (OS_TCB *)0;                       /* TCB lists initializations      
 3387              		.loc 1 1615 29
 3388 0074 074B     		ldr	r3, .L177+12
 3389 0076 0022     		movs	r2, #0
 3390 0078 1A60     		str	r2, [r3]
1616:./ucOSII/Core/os_core.c ****     OSTCBFreeList           = &OSTCBTbl[0];
 3391              		.loc 1 1616 29
 3392 007a 074B     		ldr	r3, .L177+16
 3393 007c 024A     		ldr	r2, .L177
 3394 007e 1A60     		str	r2, [r3]
1617:./ucOSII/Core/os_core.c **** }
 3395              		.loc 1 1617 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 89


 3396 0080 00BF     		nop
 3397 0082 1037     		adds	r7, r7, #16
 3398              	.LCFI119:
 3399              		.cfi_def_cfa_offset 8
 3400 0084 BD46     		mov	sp, r7
 3401              	.LCFI120:
 3402              		.cfi_def_cfa_register 13
 3403              		@ sp needed
 3404 0086 80BD     		pop	{r7, pc}
 3405              	.L178:
 3406              		.align	2
 3407              	.L177:
 3408 0088 00000000 		.word	OSTCBTbl
 3409 008c 00000000 		.word	OSTCBPrioTbl
 3410 0090 00000000 		.word	.LC0
 3411 0094 00000000 		.word	OSTCBList
 3412 0098 00000000 		.word	OSTCBFreeList
 3413              		.cfi_endproc
 3414              	.LFE27:
 3416              		.section	.text.OS_MemClr,"ax",%progbits
 3417              		.align	1
 3418              		.global	OS_MemClr
 3419              		.syntax unified
 3420              		.thumb
 3421              		.thumb_func
 3423              	OS_MemClr:
 3424              	.LFB28:
1618:./ucOSII/Core/os_core.c **** 
1619:./ucOSII/Core/os_core.c **** 
1620:./ucOSII/Core/os_core.c **** /*
1621:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1622:./ucOSII/Core/os_core.c **** *                                      CLEAR A SECTION OF MEMORY
1623:./ucOSII/Core/os_core.c **** *
1624:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to clear a contiguous block of RA
1625:./ucOSII/Core/os_core.c **** *
1626:./ucOSII/Core/os_core.c **** * Arguments  : pdest    is the start of the RAM to clear (i.e. write 0x00 to)
1627:./ucOSII/Core/os_core.c **** *
1628:./ucOSII/Core/os_core.c **** *              size     is the number of bytes to clear.
1629:./ucOSII/Core/os_core.c **** *
1630:./ucOSII/Core/os_core.c **** * Returns    : none
1631:./ucOSII/Core/os_core.c **** *
1632:./ucOSII/Core/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1633:./ucOSII/Core/os_core.c **** *              2) Note that we can only clear up to 64K bytes of RAM.  This is not an issue because
1634:./ucOSII/Core/os_core.c **** *                 of the uses of this function gets close to this limit.
1635:./ucOSII/Core/os_core.c **** *              3) The clear is done one byte at a time since this will work on any processor irresp
1636:./ucOSII/Core/os_core.c **** *                 of the alignment of the destination.
1637:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1638:./ucOSII/Core/os_core.c **** */
1639:./ucOSII/Core/os_core.c **** 
1640:./ucOSII/Core/os_core.c **** void  OS_MemClr (INT8U  *pdest,
1641:./ucOSII/Core/os_core.c ****                  INT16U  size)
1642:./ucOSII/Core/os_core.c **** {
 3425              		.loc 1 1642 1
 3426              		.cfi_startproc
 3427              		@ args = 0, pretend = 0, frame = 8
 3428              		@ frame_needed = 1, uses_anonymous_args = 0
 3429              		@ link register save eliminated.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 90


 3430 0000 80B4     		push	{r7}
 3431              	.LCFI121:
 3432              		.cfi_def_cfa_offset 4
 3433              		.cfi_offset 7, -4
 3434 0002 83B0     		sub	sp, sp, #12
 3435              	.LCFI122:
 3436              		.cfi_def_cfa_offset 16
 3437 0004 00AF     		add	r7, sp, #0
 3438              	.LCFI123:
 3439              		.cfi_def_cfa_register 7
 3440 0006 7860     		str	r0, [r7, #4]
 3441 0008 0B46     		mov	r3, r1
 3442 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1643:./ucOSII/Core/os_core.c ****     while (size > 0u) {
 3443              		.loc 1 1643 11
 3444 000c 07E0     		b	.L180
 3445              	.L181:
1644:./ucOSII/Core/os_core.c ****         *pdest++ = (INT8U)0;
 3446              		.loc 1 1644 15
 3447 000e 7B68     		ldr	r3, [r7, #4]
 3448 0010 5A1C     		adds	r2, r3, #1
 3449 0012 7A60     		str	r2, [r7, #4]
 3450              		.loc 1 1644 18
 3451 0014 0022     		movs	r2, #0
 3452 0016 1A70     		strb	r2, [r3]
1645:./ucOSII/Core/os_core.c ****         size--;
 3453              		.loc 1 1645 13
 3454 0018 7B88     		ldrh	r3, [r7, #2]
 3455 001a 013B     		subs	r3, r3, #1
 3456 001c 7B80     		strh	r3, [r7, #2]	@ movhi
 3457              	.L180:
1643:./ucOSII/Core/os_core.c ****     while (size > 0u) {
 3458              		.loc 1 1643 11
 3459 001e 7B88     		ldrh	r3, [r7, #2]
 3460 0020 002B     		cmp	r3, #0
 3461 0022 F4D1     		bne	.L181
1646:./ucOSII/Core/os_core.c ****     }
1647:./ucOSII/Core/os_core.c **** }
 3462              		.loc 1 1647 1
 3463 0024 00BF     		nop
 3464 0026 00BF     		nop
 3465 0028 0C37     		adds	r7, r7, #12
 3466              	.LCFI124:
 3467              		.cfi_def_cfa_offset 4
 3468 002a BD46     		mov	sp, r7
 3469              	.LCFI125:
 3470              		.cfi_def_cfa_register 13
 3471              		@ sp needed
 3472 002c 5DF8047B 		ldr	r7, [sp], #4
 3473              	.LCFI126:
 3474              		.cfi_restore 7
 3475              		.cfi_def_cfa_offset 0
 3476 0030 7047     		bx	lr
 3477              		.cfi_endproc
 3478              	.LFE28:
 3480              		.section	.text.OS_MemCopy,"ax",%progbits
 3481              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 91


 3482              		.global	OS_MemCopy
 3483              		.syntax unified
 3484              		.thumb
 3485              		.thumb_func
 3487              	OS_MemCopy:
 3488              	.LFB29:
1648:./ucOSII/Core/os_core.c **** 
1649:./ucOSII/Core/os_core.c **** 
1650:./ucOSII/Core/os_core.c **** /*
1651:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1652:./ucOSII/Core/os_core.c **** *                                       COPY A BLOCK OF MEMORY
1653:./ucOSII/Core/os_core.c **** *
1654:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to copy a block of memory from on
1655:./ucOSII/Core/os_core.c **** *              location to another.
1656:./ucOSII/Core/os_core.c **** *
1657:./ucOSII/Core/os_core.c **** * Arguments  : pdest    is a pointer to the 'destination' memory block
1658:./ucOSII/Core/os_core.c **** *
1659:./ucOSII/Core/os_core.c **** *              psrc     is a pointer to the 'source'      memory block
1660:./ucOSII/Core/os_core.c **** *
1661:./ucOSII/Core/os_core.c **** *              size     is the number of bytes to copy.
1662:./ucOSII/Core/os_core.c **** *
1663:./ucOSII/Core/os_core.c **** * Returns    : none
1664:./ucOSII/Core/os_core.c **** *
1665:./ucOSII/Core/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.  T
1666:./ucOSII/Core/os_core.c **** *                 no provision to handle overlapping memory copy.  However, that's not a problem si
1667:./ucOSII/Core/os_core.c **** *                 is not a situation that will happen.
1668:./ucOSII/Core/os_core.c **** *              2) Note that we can only copy up to 64K bytes of RAM
1669:./ucOSII/Core/os_core.c **** *              3) The copy is done one byte at a time since this will work on any processor irrespe
1670:./ucOSII/Core/os_core.c **** *                 of the alignment of the source and destination.
1671:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1672:./ucOSII/Core/os_core.c **** */
1673:./ucOSII/Core/os_core.c **** 
1674:./ucOSII/Core/os_core.c **** void  OS_MemCopy (INT8U  *pdest,
1675:./ucOSII/Core/os_core.c ****                   INT8U  *psrc,
1676:./ucOSII/Core/os_core.c ****                   INT16U  size)
1677:./ucOSII/Core/os_core.c **** {
 3489              		.loc 1 1677 1
 3490              		.cfi_startproc
 3491              		@ args = 0, pretend = 0, frame = 16
 3492              		@ frame_needed = 1, uses_anonymous_args = 0
 3493              		@ link register save eliminated.
 3494 0000 80B4     		push	{r7}
 3495              	.LCFI127:
 3496              		.cfi_def_cfa_offset 4
 3497              		.cfi_offset 7, -4
 3498 0002 85B0     		sub	sp, sp, #20
 3499              	.LCFI128:
 3500              		.cfi_def_cfa_offset 24
 3501 0004 00AF     		add	r7, sp, #0
 3502              	.LCFI129:
 3503              		.cfi_def_cfa_register 7
 3504 0006 F860     		str	r0, [r7, #12]
 3505 0008 B960     		str	r1, [r7, #8]
 3506 000a 1346     		mov	r3, r2
 3507 000c FB80     		strh	r3, [r7, #6]	@ movhi
1678:./ucOSII/Core/os_core.c ****     while (size > 0u) {
 3508              		.loc 1 1678 11
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 92


 3509 000e 0AE0     		b	.L183
 3510              	.L184:
1679:./ucOSII/Core/os_core.c ****         *pdest++ = *psrc++;
 3511              		.loc 1 1679 25
 3512 0010 BA68     		ldr	r2, [r7, #8]
 3513 0012 531C     		adds	r3, r2, #1
 3514 0014 BB60     		str	r3, [r7, #8]
 3515              		.loc 1 1679 15
 3516 0016 FB68     		ldr	r3, [r7, #12]
 3517 0018 591C     		adds	r1, r3, #1
 3518 001a F960     		str	r1, [r7, #12]
 3519              		.loc 1 1679 20
 3520 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3521              		.loc 1 1679 18
 3522 001e 1A70     		strb	r2, [r3]
1680:./ucOSII/Core/os_core.c ****         size--;
 3523              		.loc 1 1680 13
 3524 0020 FB88     		ldrh	r3, [r7, #6]
 3525 0022 013B     		subs	r3, r3, #1
 3526 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 3527              	.L183:
1678:./ucOSII/Core/os_core.c ****     while (size > 0u) {
 3528              		.loc 1 1678 11
 3529 0026 FB88     		ldrh	r3, [r7, #6]
 3530 0028 002B     		cmp	r3, #0
 3531 002a F1D1     		bne	.L184
1681:./ucOSII/Core/os_core.c ****     }
1682:./ucOSII/Core/os_core.c **** }
 3532              		.loc 1 1682 1
 3533 002c 00BF     		nop
 3534 002e 00BF     		nop
 3535 0030 1437     		adds	r7, r7, #20
 3536              	.LCFI130:
 3537              		.cfi_def_cfa_offset 4
 3538 0032 BD46     		mov	sp, r7
 3539              	.LCFI131:
 3540              		.cfi_def_cfa_register 13
 3541              		@ sp needed
 3542 0034 5DF8047B 		ldr	r7, [sp], #4
 3543              	.LCFI132:
 3544              		.cfi_restore 7
 3545              		.cfi_def_cfa_offset 0
 3546 0038 7047     		bx	lr
 3547              		.cfi_endproc
 3548              	.LFE29:
 3550              		.section	.text.OS_Sched,"ax",%progbits
 3551              		.align	1
 3552              		.global	OS_Sched
 3553              		.syntax unified
 3554              		.thumb
 3555              		.thumb_func
 3557              	OS_Sched:
 3558              	.LFB30:
1683:./ucOSII/Core/os_core.c **** 
1684:./ucOSII/Core/os_core.c **** 
1685:./ucOSII/Core/os_core.c **** /*
1686:./ucOSII/Core/os_core.c **** ***************************************************************************************************
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 93


1687:./ucOSII/Core/os_core.c **** *                                              SCHEDULER
1688:./ucOSII/Core/os_core.c **** *
1689:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to determine whether a new, high
1690:./ucOSII/Core/os_core.c **** *              priority task has been made ready to run.  This function is invoked by TASK level co
1691:./ucOSII/Core/os_core.c **** *              and is not used to reschedule tasks from ISRs (see OSIntExit() for ISR rescheduling)
1692:./ucOSII/Core/os_core.c **** *
1693:./ucOSII/Core/os_core.c **** * Arguments  : none
1694:./ucOSII/Core/os_core.c **** *
1695:./ucOSII/Core/os_core.c **** * Returns    : none
1696:./ucOSII/Core/os_core.c **** *
1697:./ucOSII/Core/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1698:./ucOSII/Core/os_core.c **** *              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
1699:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1700:./ucOSII/Core/os_core.c **** */
1701:./ucOSII/Core/os_core.c **** 
1702:./ucOSII/Core/os_core.c **** void  OS_Sched (void)
1703:./ucOSII/Core/os_core.c **** {
 3559              		.loc 1 1703 1
 3560              		.cfi_startproc
 3561              		@ args = 0, pretend = 0, frame = 8
 3562              		@ frame_needed = 1, uses_anonymous_args = 0
 3563 0000 80B5     		push	{r7, lr}
 3564              	.LCFI133:
 3565              		.cfi_def_cfa_offset 8
 3566              		.cfi_offset 7, -8
 3567              		.cfi_offset 14, -4
 3568 0002 82B0     		sub	sp, sp, #8
 3569              	.LCFI134:
 3570              		.cfi_def_cfa_offset 16
 3571 0004 00AF     		add	r7, sp, #0
 3572              	.LCFI135:
 3573              		.cfi_def_cfa_register 7
1704:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register 
1705:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 3574              		.loc 1 1705 16
 3575 0006 0023     		movs	r3, #0
 3576 0008 7B60     		str	r3, [r7, #4]
1706:./ucOSII/Core/os_core.c **** #endif
1707:./ucOSII/Core/os_core.c **** 
1708:./ucOSII/Core/os_core.c **** 
1709:./ucOSII/Core/os_core.c **** 
1710:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 3577              		.loc 1 1710 5
 3578 000a 4020     		movs	r0, #64
 3579 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 3580 0010 7860     		str	r0, [r7, #4]
1711:./ucOSII/Core/os_core.c ****     if (OSIntNesting == 0u) {                          /* Schedule only if all ISRs done and ...   
 3581              		.loc 1 1711 22
 3582 0012 154B     		ldr	r3, .L187
 3583 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3584              		.loc 1 1711 8
 3585 0016 002B     		cmp	r3, #0
 3586 0018 1FD1     		bne	.L186
1712:./ucOSII/Core/os_core.c ****         if (OSLockNesting == 0u) {                     /* ... scheduler is not locked              
 3587              		.loc 1 1712 27
 3588 001a 144B     		ldr	r3, .L187+4
 3589 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 94


 3590              		.loc 1 1712 12
 3591 001e 002B     		cmp	r3, #0
 3592 0020 1BD1     		bne	.L186
1713:./ucOSII/Core/os_core.c ****             OS_SchedNew();
 3593              		.loc 1 1713 13
 3594 0022 FFF7FEFF 		bl	OS_SchedNew
1714:./ucOSII/Core/os_core.c ****             OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
 3595              		.loc 1 1714 40
 3596 0026 124B     		ldr	r3, .L187+8
 3597 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3598 002a 1A46     		mov	r2, r3
 3599 002c 114B     		ldr	r3, .L187+12
 3600 002e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3601              		.loc 1 1714 26
 3602 0032 114A     		ldr	r2, .L187+16
 3603 0034 1360     		str	r3, [r2]
1715:./ucOSII/Core/os_core.c ****             if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy 
 3604              		.loc 1 1715 31
 3605 0036 0E4B     		ldr	r3, .L187+8
 3606 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3607 003a 104B     		ldr	r3, .L187+20
 3608 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3609              		.loc 1 1715 16
 3610 003e 9A42     		cmp	r2, r3
 3611 0040 0BD0     		beq	.L186
1716:./ucOSII/Core/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
1717:./ucOSII/Core/os_core.c ****                 OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this task  
 3612              		.loc 1 1717 29
 3613 0042 0D4B     		ldr	r3, .L187+16
 3614 0044 1B68     		ldr	r3, [r3]
 3615 0046 1A6C     		ldr	r2, [r3, #64]
 3616              		.loc 1 1717 44
 3617 0048 0132     		adds	r2, r2, #1
 3618 004a 1A64     		str	r2, [r3, #64]
1718:./ucOSII/Core/os_core.c **** #endif
1719:./ucOSII/Core/os_core.c ****                 OSCtxSwCtr++;                          /* Increment context switch counter         
 3619              		.loc 1 1719 27
 3620 004c 0C4B     		ldr	r3, .L187+24
 3621 004e 1B68     		ldr	r3, [r3]
 3622 0050 0133     		adds	r3, r3, #1
 3623 0052 0B4A     		ldr	r2, .L187+24
 3624 0054 1360     		str	r3, [r2]
1720:./ucOSII/Core/os_core.c **** 
1721:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1722:./ucOSII/Core/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
1723:./ucOSII/Core/os_core.c ****                 OS_TLS_TaskSw();
1724:./ucOSII/Core/os_core.c **** #endif
1725:./ucOSII/Core/os_core.c **** #endif
1726:./ucOSII/Core/os_core.c **** 
1727:./ucOSII/Core/os_core.c ****                 OS_TASK_SW();                          /* Perform a context switch                 
 3625              		.loc 1 1727 17
 3626 0056 FFF7FEFF 		bl	OSCtxSw
 3627              	.L186:
1728:./ucOSII/Core/os_core.c ****             }
1729:./ucOSII/Core/os_core.c ****         }
1730:./ucOSII/Core/os_core.c ****     }
1731:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 95


 3628              		.loc 1 1731 5
 3629 005a 7868     		ldr	r0, [r7, #4]
 3630 005c FFF7FEFF 		bl	OS_CPU_SR_Restore
1732:./ucOSII/Core/os_core.c **** }
 3631              		.loc 1 1732 1
 3632 0060 00BF     		nop
 3633 0062 0837     		adds	r7, r7, #8
 3634              	.LCFI136:
 3635              		.cfi_def_cfa_offset 8
 3636 0064 BD46     		mov	sp, r7
 3637              	.LCFI137:
 3638              		.cfi_def_cfa_register 13
 3639              		@ sp needed
 3640 0066 80BD     		pop	{r7, pc}
 3641              	.L188:
 3642              		.align	2
 3643              	.L187:
 3644 0068 00000000 		.word	OSIntNesting
 3645 006c 00000000 		.word	OSLockNesting
 3646 0070 00000000 		.word	OSPrioHighRdy
 3647 0074 00000000 		.word	OSTCBPrioTbl
 3648 0078 00000000 		.word	OSTCBHighRdy
 3649 007c 00000000 		.word	OSPrioCur
 3650 0080 00000000 		.word	OSCtxSwCtr
 3651              		.cfi_endproc
 3652              	.LFE30:
 3654              		.section	.text.OS_SchedNew,"ax",%progbits
 3655              		.align	1
 3656              		.syntax unified
 3657              		.thumb
 3658              		.thumb_func
 3660              	OS_SchedNew:
 3661              	.LFB31:
1733:./ucOSII/Core/os_core.c **** 
1734:./ucOSII/Core/os_core.c **** 
1735:./ucOSII/Core/os_core.c **** /*
1736:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1737:./ucOSII/Core/os_core.c **** *                               FIND HIGHEST PRIORITY TASK READY TO RUN
1738:./ucOSII/Core/os_core.c **** *
1739:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to determine the highest priority
1740:./ucOSII/Core/os_core.c **** *              that is ready to run.  The global variable 'OSPrioHighRdy' is changed accordingly.
1741:./ucOSII/Core/os_core.c **** *
1742:./ucOSII/Core/os_core.c **** * Arguments  : none
1743:./ucOSII/Core/os_core.c **** *
1744:./ucOSII/Core/os_core.c **** * Returns    : none
1745:./ucOSII/Core/os_core.c **** *
1746:./ucOSII/Core/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1747:./ucOSII/Core/os_core.c **** *              2) Interrupts are assumed to be disabled when this function is called.
1748:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1749:./ucOSII/Core/os_core.c **** */
1750:./ucOSII/Core/os_core.c **** 
1751:./ucOSII/Core/os_core.c **** static  void  OS_SchedNew (void)
1752:./ucOSII/Core/os_core.c **** {
 3662              		.loc 1 1752 1
 3663              		.cfi_startproc
 3664              		@ args = 0, pretend = 0, frame = 8
 3665              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 96


 3666              		@ link register save eliminated.
 3667 0000 80B4     		push	{r7}
 3668              	.LCFI138:
 3669              		.cfi_def_cfa_offset 4
 3670              		.cfi_offset 7, -4
 3671 0002 83B0     		sub	sp, sp, #12
 3672              	.LCFI139:
 3673              		.cfi_def_cfa_offset 16
 3674 0004 00AF     		add	r7, sp, #0
 3675              	.LCFI140:
 3676              		.cfi_def_cfa_register 7
1753:./ucOSII/Core/os_core.c **** #if OS_LOWEST_PRIO <= 63u                        /* See if we support up to 64 tasks               
1754:./ucOSII/Core/os_core.c ****     INT8U   y;
1755:./ucOSII/Core/os_core.c **** 
1756:./ucOSII/Core/os_core.c **** 
1757:./ucOSII/Core/os_core.c ****     y             = OSUnMapTbl[OSRdyGrp];
 3677              		.loc 1 1757 31
 3678 0006 0C4B     		ldr	r3, .L190
 3679 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3680 000a 1A46     		mov	r2, r3
 3681              		.loc 1 1757 19
 3682 000c 0B4B     		ldr	r3, .L190+4
 3683 000e 9B5C     		ldrb	r3, [r3, r2]
 3684 0010 FB71     		strb	r3, [r7, #7]
1758:./ucOSII/Core/os_core.c ****     OSPrioHighRdy = (INT8U)((y << 3u) + OSUnMapTbl[OSRdyTbl[y]]);
 3685              		.loc 1 1758 32
 3686 0012 FB79     		ldrb	r3, [r7, #7]
 3687 0014 DB00     		lsls	r3, r3, #3
 3688 0016 DAB2     		uxtb	r2, r3
 3689              		.loc 1 1758 60
 3690 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3691 001a 0949     		ldr	r1, .L190+8
 3692 001c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3693 001e 1946     		mov	r1, r3
 3694              		.loc 1 1758 51
 3695 0020 064B     		ldr	r3, .L190+4
 3696 0022 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3697              		.loc 1 1758 21
 3698 0024 1344     		add	r3, r3, r2
 3699 0026 DAB2     		uxtb	r2, r3
 3700              		.loc 1 1758 19
 3701 0028 064B     		ldr	r3, .L190+12
 3702 002a 1A70     		strb	r2, [r3]
1759:./ucOSII/Core/os_core.c **** #else                                            /* We support up to 256 tasks                     
1760:./ucOSII/Core/os_core.c ****     INT8U     y;
1761:./ucOSII/Core/os_core.c ****     OS_PRIO  *ptbl;
1762:./ucOSII/Core/os_core.c **** 
1763:./ucOSII/Core/os_core.c **** 
1764:./ucOSII/Core/os_core.c ****     if ((OSRdyGrp & 0xFFu) != 0u) {
1765:./ucOSII/Core/os_core.c ****         y = OSUnMapTbl[OSRdyGrp & 0xFFu];
1766:./ucOSII/Core/os_core.c ****     } else {
1767:./ucOSII/Core/os_core.c ****         y = OSUnMapTbl[(OS_PRIO)(OSRdyGrp >> 8u) & 0xFFu] + 8u;
1768:./ucOSII/Core/os_core.c ****     }
1769:./ucOSII/Core/os_core.c ****     ptbl = &OSRdyTbl[y];
1770:./ucOSII/Core/os_core.c ****     if ((*ptbl & 0xFFu) != 0u) {
1771:./ucOSII/Core/os_core.c ****         OSPrioHighRdy = (INT8U)((y << 4u) + OSUnMapTbl[(*ptbl & 0xFFu)]);
1772:./ucOSII/Core/os_core.c ****     } else {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 97


1773:./ucOSII/Core/os_core.c ****         OSPrioHighRdy = (INT8U)((y << 4u) + OSUnMapTbl[(OS_PRIO)(*ptbl >> 8u) & 0xFFu] + 8u);
1774:./ucOSII/Core/os_core.c ****     }
1775:./ucOSII/Core/os_core.c **** #endif
1776:./ucOSII/Core/os_core.c **** }
 3703              		.loc 1 1776 1
 3704 002c 00BF     		nop
 3705 002e 0C37     		adds	r7, r7, #12
 3706              	.LCFI141:
 3707              		.cfi_def_cfa_offset 4
 3708 0030 BD46     		mov	sp, r7
 3709              	.LCFI142:
 3710              		.cfi_def_cfa_register 13
 3711              		@ sp needed
 3712 0032 5DF8047B 		ldr	r7, [sp], #4
 3713              	.LCFI143:
 3714              		.cfi_restore 7
 3715              		.cfi_def_cfa_offset 0
 3716 0036 7047     		bx	lr
 3717              	.L191:
 3718              		.align	2
 3719              	.L190:
 3720 0038 00000000 		.word	OSRdyGrp
 3721 003c 00000000 		.word	OSUnMapTbl
 3722 0040 00000000 		.word	OSRdyTbl
 3723 0044 00000000 		.word	OSPrioHighRdy
 3724              		.cfi_endproc
 3725              	.LFE31:
 3727              		.section	.text.OS_StrLen,"ax",%progbits
 3728              		.align	1
 3729              		.global	OS_StrLen
 3730              		.syntax unified
 3731              		.thumb
 3732              		.thumb_func
 3734              	OS_StrLen:
 3735              	.LFB32:
1777:./ucOSII/Core/os_core.c **** 
1778:./ucOSII/Core/os_core.c **** 
1779:./ucOSII/Core/os_core.c **** /*
1780:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1781:./ucOSII/Core/os_core.c **** *                               DETERMINE THE LENGTH OF AN ASCII STRING
1782:./ucOSII/Core/os_core.c **** *
1783:./ucOSII/Core/os_core.c **** * Description: This function is called by other uC/OS-II services to determine the size of an ASCII
1784:./ucOSII/Core/os_core.c **** *              (excluding the NUL character).
1785:./ucOSII/Core/os_core.c **** *
1786:./ucOSII/Core/os_core.c **** * Arguments  : psrc     is a pointer to the string for which we need to know the size.
1787:./ucOSII/Core/os_core.c **** *
1788:./ucOSII/Core/os_core.c **** * Returns    : The size of the string (excluding the NUL terminating character)
1789:./ucOSII/Core/os_core.c **** *
1790:./ucOSII/Core/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1791:./ucOSII/Core/os_core.c **** *              2) The string to check must be less than 255 characters long.
1792:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1793:./ucOSII/Core/os_core.c **** */
1794:./ucOSII/Core/os_core.c **** 
1795:./ucOSII/Core/os_core.c **** #if (OS_EVENT_NAME_EN > 0u) || (OS_FLAG_NAME_EN > 0u) || (OS_MEM_NAME_EN > 0u) || (OS_TASK_NAME_EN 
1796:./ucOSII/Core/os_core.c **** INT8U  OS_StrLen (INT8U *psrc)
1797:./ucOSII/Core/os_core.c **** {
 3736              		.loc 1 1797 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 98


 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 16
 3739              		@ frame_needed = 1, uses_anonymous_args = 0
 3740              		@ link register save eliminated.
 3741 0000 80B4     		push	{r7}
 3742              	.LCFI144:
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 7, -4
 3745 0002 85B0     		sub	sp, sp, #20
 3746              	.LCFI145:
 3747              		.cfi_def_cfa_offset 24
 3748 0004 00AF     		add	r7, sp, #0
 3749              	.LCFI146:
 3750              		.cfi_def_cfa_register 7
 3751 0006 7860     		str	r0, [r7, #4]
1798:./ucOSII/Core/os_core.c ****     INT8U  len;
1799:./ucOSII/Core/os_core.c **** 
1800:./ucOSII/Core/os_core.c **** 
1801:./ucOSII/Core/os_core.c **** #if OS_ARG_CHK_EN > 0u
1802:./ucOSII/Core/os_core.c ****     if (psrc == (INT8U *)0) {
 3752              		.loc 1 1802 8
 3753 0008 7B68     		ldr	r3, [r7, #4]
 3754 000a 002B     		cmp	r3, #0
 3755 000c 01D1     		bne	.L193
1803:./ucOSII/Core/os_core.c ****         return (0u);
 3756              		.loc 1 1803 16
 3757 000e 0023     		movs	r3, #0
 3758 0010 0DE0     		b	.L194
 3759              	.L193:
1804:./ucOSII/Core/os_core.c ****     }
1805:./ucOSII/Core/os_core.c **** #endif
1806:./ucOSII/Core/os_core.c **** 
1807:./ucOSII/Core/os_core.c ****     len = 0u;
 3760              		.loc 1 1807 9
 3761 0012 0023     		movs	r3, #0
 3762 0014 FB73     		strb	r3, [r7, #15]
1808:./ucOSII/Core/os_core.c ****     while (*psrc != OS_ASCII_NUL) {
 3763              		.loc 1 1808 11
 3764 0016 05E0     		b	.L195
 3765              	.L196:
1809:./ucOSII/Core/os_core.c ****         psrc++;
 3766              		.loc 1 1809 13
 3767 0018 7B68     		ldr	r3, [r7, #4]
 3768 001a 0133     		adds	r3, r3, #1
 3769 001c 7B60     		str	r3, [r7, #4]
1810:./ucOSII/Core/os_core.c ****         len++;
 3770              		.loc 1 1810 12
 3771 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3772 0020 0133     		adds	r3, r3, #1
 3773 0022 FB73     		strb	r3, [r7, #15]
 3774              	.L195:
1808:./ucOSII/Core/os_core.c ****     while (*psrc != OS_ASCII_NUL) {
 3775              		.loc 1 1808 12
 3776 0024 7B68     		ldr	r3, [r7, #4]
 3777 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1808:./ucOSII/Core/os_core.c ****     while (*psrc != OS_ASCII_NUL) {
 3778              		.loc 1 1808 11
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 99


 3779 0028 002B     		cmp	r3, #0
 3780 002a F5D1     		bne	.L196
1811:./ucOSII/Core/os_core.c ****     }
1812:./ucOSII/Core/os_core.c ****     return (len);
 3781              		.loc 1 1812 12
 3782 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3783              	.L194:
1813:./ucOSII/Core/os_core.c **** }
 3784              		.loc 1 1813 1
 3785 002e 1846     		mov	r0, r3
 3786 0030 1437     		adds	r7, r7, #20
 3787              	.LCFI147:
 3788              		.cfi_def_cfa_offset 4
 3789 0032 BD46     		mov	sp, r7
 3790              	.LCFI148:
 3791              		.cfi_def_cfa_register 13
 3792              		@ sp needed
 3793 0034 5DF8047B 		ldr	r7, [sp], #4
 3794              	.LCFI149:
 3795              		.cfi_restore 7
 3796              		.cfi_def_cfa_offset 0
 3797 0038 7047     		bx	lr
 3798              		.cfi_endproc
 3799              	.LFE32:
 3801              		.section	.text.OS_TaskIdle,"ax",%progbits
 3802              		.align	1
 3803              		.global	OS_TaskIdle
 3804              		.syntax unified
 3805              		.thumb
 3806              		.thumb_func
 3808              	OS_TaskIdle:
 3809              	.LFB33:
1814:./ucOSII/Core/os_core.c **** #endif
1815:./ucOSII/Core/os_core.c **** 
1816:./ucOSII/Core/os_core.c **** 
1817:./ucOSII/Core/os_core.c **** /*
1818:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1819:./ucOSII/Core/os_core.c **** *                                              IDLE TASK
1820:./ucOSII/Core/os_core.c **** *
1821:./ucOSII/Core/os_core.c **** * Description: This task is internal to uC/OS-II and executes whenever no other higher priority tas
1822:./ucOSII/Core/os_core.c **** *              executes because they are ALL waiting for event(s) to occur.
1823:./ucOSII/Core/os_core.c **** *
1824:./ucOSII/Core/os_core.c **** * Arguments  : none
1825:./ucOSII/Core/os_core.c **** *
1826:./ucOSII/Core/os_core.c **** * Returns    : none
1827:./ucOSII/Core/os_core.c **** *
1828:./ucOSII/Core/os_core.c **** * Note(s)    : 1) OSTaskIdleHook() is called after the critical section to ensure that interrupts w
1829:./ucOSII/Core/os_core.c **** *                 enabled for at least a few instructions.  On some processors (ex. Philips XA), en
1830:./ucOSII/Core/os_core.c **** *                 and then disabling interrupts didn't allow the processor enough time to have inte
1831:./ucOSII/Core/os_core.c **** *                 enabled before they were disabled again.  uC/OS-II would thus never recognize
1832:./ucOSII/Core/os_core.c **** *                 interrupts.
1833:./ucOSII/Core/os_core.c **** *              2) This hook has been added to allow you to do such things as STOP the CPU to conser
1834:./ucOSII/Core/os_core.c **** *                 power.
1835:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1836:./ucOSII/Core/os_core.c **** */
1837:./ucOSII/Core/os_core.c **** 
1838:./ucOSII/Core/os_core.c **** void  OS_TaskIdle (void *p_arg)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 100


1839:./ucOSII/Core/os_core.c **** {
 3810              		.loc 1 1839 1
 3811              		.cfi_startproc
 3812              		@ args = 0, pretend = 0, frame = 16
 3813              		@ frame_needed = 1, uses_anonymous_args = 0
 3814 0000 80B5     		push	{r7, lr}
 3815              	.LCFI150:
 3816              		.cfi_def_cfa_offset 8
 3817              		.cfi_offset 7, -8
 3818              		.cfi_offset 14, -4
 3819 0002 84B0     		sub	sp, sp, #16
 3820              	.LCFI151:
 3821              		.cfi_def_cfa_offset 24
 3822 0004 00AF     		add	r7, sp, #0
 3823              	.LCFI152:
 3824              		.cfi_def_cfa_register 7
 3825 0006 7860     		str	r0, [r7, #4]
1840:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1841:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 3826              		.loc 1 1841 16
 3827 0008 0023     		movs	r3, #0
 3828 000a FB60     		str	r3, [r7, #12]
 3829              	.L198:
1842:./ucOSII/Core/os_core.c **** #endif
1843:./ucOSII/Core/os_core.c **** 
1844:./ucOSII/Core/os_core.c ****     (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg' 
1845:./ucOSII/Core/os_core.c ****     for (;;) {
1846:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 3830              		.loc 1 1846 9 discriminator 1
 3831 000c 4020     		movs	r0, #64
 3832 000e FFF7FEFF 		bl	OS_CPU_SR_Save
 3833 0012 F860     		str	r0, [r7, #12]
1847:./ucOSII/Core/os_core.c ****         OSIdleCtr++;
 3834              		.loc 1 1847 18 discriminator 1
 3835 0014 054B     		ldr	r3, .L199
 3836 0016 1B68     		ldr	r3, [r3]
 3837 0018 0133     		adds	r3, r3, #1
 3838 001a 044A     		ldr	r2, .L199
 3839 001c 1360     		str	r3, [r2]
1848:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 3840              		.loc 1 1848 9 discriminator 1
 3841 001e F868     		ldr	r0, [r7, #12]
 3842 0020 FFF7FEFF 		bl	OS_CPU_SR_Restore
1849:./ucOSII/Core/os_core.c ****         OSTaskIdleHook();                        /* Call user definable HOOK                       
 3843              		.loc 1 1849 9 discriminator 1
 3844 0024 FFF7FEFF 		bl	OSTaskIdleHook
1846:./ucOSII/Core/os_core.c ****         OSIdleCtr++;
 3845              		.loc 1 1846 9 discriminator 1
 3846 0028 F0E7     		b	.L198
 3847              	.L200:
 3848 002a 00BF     		.align	2
 3849              	.L199:
 3850 002c 00000000 		.word	OSIdleCtr
 3851              		.cfi_endproc
 3852              	.LFE33:
 3854              		.section	.text.OS_TaskStat,"ax",%progbits
 3855              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 101


 3856              		.global	OS_TaskStat
 3857              		.syntax unified
 3858              		.thumb
 3859              		.thumb_func
 3861              	OS_TaskStat:
 3862              	.LFB34:
1850:./ucOSII/Core/os_core.c ****     }
1851:./ucOSII/Core/os_core.c **** }
1852:./ucOSII/Core/os_core.c **** 
1853:./ucOSII/Core/os_core.c **** 
1854:./ucOSII/Core/os_core.c **** /*
1855:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1856:./ucOSII/Core/os_core.c **** *                                           STATISTICS TASK
1857:./ucOSII/Core/os_core.c **** *
1858:./ucOSII/Core/os_core.c **** * Description: This task is internal to uC/OS-II and is used to compute some statistics about the
1859:./ucOSII/Core/os_core.c **** *              multitasking environment.  Specifically, OS_TaskStat() computes the CPU usage.
1860:./ucOSII/Core/os_core.c **** *              CPU usage is determined by:
1861:./ucOSII/Core/os_core.c **** *
1862:./ucOSII/Core/os_core.c **** *                                          OSIdleCtr
1863:./ucOSII/Core/os_core.c **** *                 OSCPUUsage = 100 * (1 - ------------)     (units are in %)
1864:./ucOSII/Core/os_core.c **** *                                         OSIdleCtrMax
1865:./ucOSII/Core/os_core.c **** *
1866:./ucOSII/Core/os_core.c **** * Arguments  : parg     this pointer is not used at this time.
1867:./ucOSII/Core/os_core.c **** *
1868:./ucOSII/Core/os_core.c **** * Returns    : none
1869:./ucOSII/Core/os_core.c **** *
1870:./ucOSII/Core/os_core.c **** * Notes      : 1) This task runs at a priority level higher than the idle task.  In fact, it runs a
1871:./ucOSII/Core/os_core.c **** *                 next higher priority, OS_TASK_IDLE_PRIO-1.
1872:./ucOSII/Core/os_core.c **** *              2) You can disable this task by setting the configuration #define OS_TASK_STAT_EN to
1873:./ucOSII/Core/os_core.c **** *              3) You MUST have at least a delay of 2/10 seconds to allow for the system to establi
1874:./ucOSII/Core/os_core.c **** *                 maximum value for the idle counter.
1875:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1876:./ucOSII/Core/os_core.c **** */
1877:./ucOSII/Core/os_core.c **** 
1878:./ucOSII/Core/os_core.c **** #if OS_TASK_STAT_EN > 0u
1879:./ucOSII/Core/os_core.c **** void  OS_TaskStat (void *p_arg)
1880:./ucOSII/Core/os_core.c **** {
 3863              		.loc 1 1880 1
 3864              		.cfi_startproc
 3865              		@ args = 0, pretend = 0, frame = 16
 3866              		@ frame_needed = 1, uses_anonymous_args = 0
 3867 0000 80B5     		push	{r7, lr}
 3868              	.LCFI153:
 3869              		.cfi_def_cfa_offset 8
 3870              		.cfi_offset 7, -8
 3871              		.cfi_offset 14, -4
 3872 0002 84B0     		sub	sp, sp, #16
 3873              	.LCFI154:
 3874              		.cfi_def_cfa_offset 24
 3875 0004 00AF     		add	r7, sp, #0
 3876              	.LCFI155:
 3877              		.cfi_def_cfa_register 7
 3878 0006 7860     		str	r0, [r7, #4]
1881:./ucOSII/Core/os_core.c ****     INT8S  usage;
1882:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1883:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 3879              		.loc 1 1883 16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 102


 3880 0008 0023     		movs	r3, #0
 3881 000a FB60     		str	r3, [r7, #12]
1884:./ucOSII/Core/os_core.c **** #endif
1885:./ucOSII/Core/os_core.c **** 
1886:./ucOSII/Core/os_core.c **** 
1887:./ucOSII/Core/os_core.c **** 
1888:./ucOSII/Core/os_core.c ****     p_arg = p_arg;                               /* Prevent compiler warning for not using 'p_arg' 
1889:./ucOSII/Core/os_core.c ****     while (OSStatRdy == OS_FALSE) {
 3882              		.loc 1 1889 11
 3883 000c 02E0     		b	.L202
 3884              	.L203:
1890:./ucOSII/Core/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3885              		.loc 1 1890 9
 3886 000e 1420     		movs	r0, #20
 3887 0010 FFF7FEFF 		bl	OSTimeDly
 3888              	.L202:
1889:./ucOSII/Core/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3889              		.loc 1 1889 22
 3890 0014 304B     		ldr	r3, .L208
 3891 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1889:./ucOSII/Core/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3892              		.loc 1 1889 11
 3893 0018 002B     		cmp	r3, #0
 3894 001a F8D0     		beq	.L203
1891:./ucOSII/Core/os_core.c ****     }
1892:./ucOSII/Core/os_core.c ****     OSIdleCtrMax /= 100uL;
 3895              		.loc 1 1892 18
 3896 001c 2F4B     		ldr	r3, .L208+4
 3897 001e 1B68     		ldr	r3, [r3]
 3898 0020 2F4A     		ldr	r2, .L208+8
 3899 0022 A2FB0323 		umull	r2, r3, r2, r3
 3900 0026 5B09     		lsrs	r3, r3, #5
 3901 0028 2C4A     		ldr	r2, .L208+4
 3902 002a 1360     		str	r3, [r2]
1893:./ucOSII/Core/os_core.c ****     if (OSIdleCtrMax == 0uL) {
 3903              		.loc 1 1893 22
 3904 002c 2B4B     		ldr	r3, .L208+4
 3905 002e 1B68     		ldr	r3, [r3]
 3906              		.loc 1 1893 8
 3907 0030 002B     		cmp	r3, #0
 3908 0032 05D1     		bne	.L204
1894:./ucOSII/Core/os_core.c ****         OSCPUUsage = 0u;
 3909              		.loc 1 1894 20
 3910 0034 2B4B     		ldr	r3, .L208+12
 3911 0036 0022     		movs	r2, #0
 3912 0038 1A70     		strb	r2, [r3]
1895:./ucOSII/Core/os_core.c **** #if OS_TASK_SUSPEND_EN > 0u
1896:./ucOSII/Core/os_core.c ****         (void)OSTaskSuspend(OS_PRIO_SELF);
 3913              		.loc 1 1896 15
 3914 003a FF20     		movs	r0, #255
 3915 003c FFF7FEFF 		bl	OSTaskSuspend
 3916              	.L204:
1897:./ucOSII/Core/os_core.c **** #else
1898:./ucOSII/Core/os_core.c ****         for (;;) {
1899:./ucOSII/Core/os_core.c ****             OSTimeDly(OS_TICKS_PER_SEC);
1900:./ucOSII/Core/os_core.c ****         }
1901:./ucOSII/Core/os_core.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 103


1902:./ucOSII/Core/os_core.c ****     }
1903:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 3917              		.loc 1 1903 5
 3918 0040 4020     		movs	r0, #64
 3919 0042 FFF7FEFF 		bl	OS_CPU_SR_Save
 3920 0046 F860     		str	r0, [r7, #12]
1904:./ucOSII/Core/os_core.c ****     OSIdleCtr = OSIdleCtrMax * 100uL;            /* Set initial CPU usage as 0%                    
 3921              		.loc 1 1904 30
 3922 0048 244B     		ldr	r3, .L208+4
 3923 004a 1B68     		ldr	r3, [r3]
 3924 004c 6422     		movs	r2, #100
 3925 004e 02FB03F3 		mul	r3, r2, r3
 3926              		.loc 1 1904 15
 3927 0052 254A     		ldr	r2, .L208+16
 3928 0054 1360     		str	r3, [r2]
1905:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 3929              		.loc 1 1905 5
 3930 0056 F868     		ldr	r0, [r7, #12]
 3931 0058 FFF7FEFF 		bl	OS_CPU_SR_Restore
 3932              	.L207:
1906:./ucOSII/Core/os_core.c ****     for (;;) {
1907:./ucOSII/Core/os_core.c ****         OSTimeDly(1);                            /* Synchronize with clock tick                    
 3933              		.loc 1 1907 9
 3934 005c 0120     		movs	r0, #1
 3935 005e FFF7FEFF 		bl	OSTimeDly
1908:./ucOSII/Core/os_core.c **** 
1909:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 3936              		.loc 1 1909 9
 3937 0062 4020     		movs	r0, #64
 3938 0064 FFF7FEFF 		bl	OS_CPU_SR_Save
 3939 0068 F860     		str	r0, [r7, #12]
1910:./ucOSII/Core/os_core.c ****         OSIdleCtr = 0uL;                        /* Reset the idle counter for the next second      
 3940              		.loc 1 1910 19
 3941 006a 1F4B     		ldr	r3, .L208+16
 3942 006c 0022     		movs	r2, #0
 3943 006e 1A60     		str	r2, [r3]
1911:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 3944              		.loc 1 1911 9
 3945 0070 F868     		ldr	r0, [r7, #12]
 3946 0072 FFF7FEFF 		bl	OS_CPU_SR_Restore
1912:./ucOSII/Core/os_core.c **** 
1913:./ucOSII/Core/os_core.c ****         OSTimeDly(OS_TICKS_PER_SEC / 10u);       /* Accumulate OSIdleCtr for the next 1/10 second  
 3947              		.loc 1 1913 9
 3948 0076 0A20     		movs	r0, #10
 3949 0078 FFF7FEFF 		bl	OSTimeDly
1914:./ucOSII/Core/os_core.c **** 
1915:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 3950              		.loc 1 1915 9
 3951 007c 4020     		movs	r0, #64
 3952 007e FFF7FEFF 		bl	OS_CPU_SR_Save
 3953 0082 F860     		str	r0, [r7, #12]
1916:./ucOSII/Core/os_core.c ****         OSIdleCtrRun = OSIdleCtr;                /* Store number of cycles which elapsed while idle
 3954              		.loc 1 1916 22
 3955 0084 184B     		ldr	r3, .L208+16
 3956 0086 1B68     		ldr	r3, [r3]
 3957 0088 184A     		ldr	r2, .L208+20
 3958 008a 1360     		str	r3, [r2]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 104


1917:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 3959              		.loc 1 1917 9
 3960 008c F868     		ldr	r0, [r7, #12]
 3961 008e FFF7FEFF 		bl	OS_CPU_SR_Restore
1918:./ucOSII/Core/os_core.c **** 
1919:./ucOSII/Core/os_core.c ****         usage            = 100 - (INT8S)(OSIdleCtrRun / OSIdleCtrMax);
 3962              		.loc 1 1919 55
 3963 0092 164B     		ldr	r3, .L208+20
 3964 0094 1A68     		ldr	r2, [r3]
 3965 0096 114B     		ldr	r3, .L208+4
 3966 0098 1B68     		ldr	r3, [r3]
 3967 009a B2FBF3F3 		udiv	r3, r2, r3
 3968              		.loc 1 1919 34
 3969 009e DBB2     		uxtb	r3, r3
 3970              		.loc 1 1919 32
 3971 00a0 C3F16403 		rsb	r3, r3, #100
 3972 00a4 DBB2     		uxtb	r3, r3
 3973              		.loc 1 1919 26
 3974 00a6 FB72     		strb	r3, [r7, #11]
1920:./ucOSII/Core/os_core.c ****         if (usage >= 0) {                        /* Make sure we don't have a negative percentage  
 3975              		.loc 1 1920 12
 3976 00a8 97F90B30 		ldrsb	r3, [r7, #11]
 3977 00ac 002B     		cmp	r3, #0
 3978 00ae 03DB     		blt	.L205
1921:./ucOSII/Core/os_core.c ****             OSCPUUsage   = (INT8U)usage;
 3979              		.loc 1 1921 28
 3980 00b0 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 3981              		.loc 1 1921 26
 3982 00b2 0C4B     		ldr	r3, .L208+12
 3983 00b4 1A70     		strb	r2, [r3]
 3984 00b6 0AE0     		b	.L206
 3985              	.L205:
1922:./ucOSII/Core/os_core.c ****         } else {
1923:./ucOSII/Core/os_core.c ****             OSCPUUsage   = 0u;
 3986              		.loc 1 1923 26
 3987 00b8 0A4B     		ldr	r3, .L208+12
 3988 00ba 0022     		movs	r2, #0
 3989 00bc 1A70     		strb	r2, [r3]
1924:./ucOSII/Core/os_core.c ****             OSIdleCtrMax = OSIdleCtrRun / 100uL; /* Update max counter value to current one        
 3990              		.loc 1 1924 41
 3991 00be 0B4B     		ldr	r3, .L208+20
 3992 00c0 1B68     		ldr	r3, [r3]
 3993 00c2 074A     		ldr	r2, .L208+8
 3994 00c4 A2FB0323 		umull	r2, r3, r2, r3
 3995 00c8 5B09     		lsrs	r3, r3, #5
 3996              		.loc 1 1924 26
 3997 00ca 044A     		ldr	r2, .L208+4
 3998 00cc 1360     		str	r3, [r2]
 3999              	.L206:
1925:./ucOSII/Core/os_core.c ****         }
1926:./ucOSII/Core/os_core.c **** 
1927:./ucOSII/Core/os_core.c ****         OSTaskStatHook();                        /* Invoke user definable hook                     
 4000              		.loc 1 1927 9
 4001 00ce FFF7FEFF 		bl	OSTaskStatHook
1928:./ucOSII/Core/os_core.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1929:./ucOSII/Core/os_core.c ****         OS_TaskStatStkChk();                     /* Check the stacks for each task                 
 4002              		.loc 1 1929 9
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 105


 4003 00d2 FFF7FEFF 		bl	OS_TaskStatStkChk
1907:./ucOSII/Core/os_core.c **** 
 4004              		.loc 1 1907 9
 4005 00d6 C1E7     		b	.L207
 4006              	.L209:
 4007              		.align	2
 4008              	.L208:
 4009 00d8 00000000 		.word	OSStatRdy
 4010 00dc 00000000 		.word	OSIdleCtrMax
 4011 00e0 1F85EB51 		.word	1374389535
 4012 00e4 00000000 		.word	OSCPUUsage
 4013 00e8 00000000 		.word	OSIdleCtr
 4014 00ec 00000000 		.word	OSIdleCtrRun
 4015              		.cfi_endproc
 4016              	.LFE34:
 4018              		.section	.text.OS_TaskStatStkChk,"ax",%progbits
 4019              		.align	1
 4020              		.global	OS_TaskStatStkChk
 4021              		.syntax unified
 4022              		.thumb
 4023              		.thumb_func
 4025              	OS_TaskStatStkChk:
 4026              	.LFB35:
1930:./ucOSII/Core/os_core.c **** #endif
1931:./ucOSII/Core/os_core.c ****     }
1932:./ucOSII/Core/os_core.c **** }
1933:./ucOSII/Core/os_core.c **** #endif
1934:./ucOSII/Core/os_core.c **** 
1935:./ucOSII/Core/os_core.c **** 
1936:./ucOSII/Core/os_core.c **** /*
1937:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1938:./ucOSII/Core/os_core.c **** *                                        CHECK ALL TASK STACKS
1939:./ucOSII/Core/os_core.c **** *
1940:./ucOSII/Core/os_core.c **** * Description: This function is called by OS_TaskStat() to check the stacks of each active task.
1941:./ucOSII/Core/os_core.c **** *
1942:./ucOSII/Core/os_core.c **** * Arguments  : none
1943:./ucOSII/Core/os_core.c **** *
1944:./ucOSII/Core/os_core.c **** * Returns    : none
1945:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1946:./ucOSII/Core/os_core.c **** */
1947:./ucOSII/Core/os_core.c **** 
1948:./ucOSII/Core/os_core.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1949:./ucOSII/Core/os_core.c **** void  OS_TaskStatStkChk (void)
1950:./ucOSII/Core/os_core.c **** {
 4027              		.loc 1 1950 1
 4028              		.cfi_startproc
 4029              		@ args = 0, pretend = 0, frame = 16
 4030              		@ frame_needed = 1, uses_anonymous_args = 0
 4031 0000 80B5     		push	{r7, lr}
 4032              	.LCFI156:
 4033              		.cfi_def_cfa_offset 8
 4034              		.cfi_offset 7, -8
 4035              		.cfi_offset 14, -4
 4036 0002 84B0     		sub	sp, sp, #16
 4037              	.LCFI157:
 4038              		.cfi_def_cfa_offset 24
 4039 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 106


 4040              	.LCFI158:
 4041              		.cfi_def_cfa_register 7
1951:./ucOSII/Core/os_core.c ****     OS_TCB      *ptcb;
1952:./ucOSII/Core/os_core.c ****     OS_STK_DATA  stk_data;
1953:./ucOSII/Core/os_core.c ****     INT8U        err;
1954:./ucOSII/Core/os_core.c ****     INT8U        prio;
1955:./ucOSII/Core/os_core.c **** 
1956:./ucOSII/Core/os_core.c **** 
1957:./ucOSII/Core/os_core.c ****     for (prio = 0u; prio <= OS_TASK_IDLE_PRIO; prio++) {
 4042              		.loc 1 1957 15
 4043 0006 0023     		movs	r3, #0
 4044 0008 FB73     		strb	r3, [r7, #15]
 4045              		.loc 1 1957 5
 4046 000a 23E0     		b	.L211
 4047              	.L213:
1958:./ucOSII/Core/os_core.c ****         err = OSTaskStkChk(prio, &stk_data);
 4048              		.loc 1 1958 15
 4049 000c 3A46     		mov	r2, r7
 4050 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4051 0010 1146     		mov	r1, r2
 4052 0012 1846     		mov	r0, r3
 4053 0014 FFF7FEFF 		bl	OSTaskStkChk
 4054 0018 0346     		mov	r3, r0
 4055 001a BB73     		strb	r3, [r7, #14]
1959:./ucOSII/Core/os_core.c ****         if (err == OS_ERR_NONE) {
 4056              		.loc 1 1959 12
 4057 001c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4058 001e 002B     		cmp	r3, #0
 4059 0020 15D1     		bne	.L212
1960:./ucOSII/Core/os_core.c ****             ptcb = OSTCBPrioTbl[prio];
 4060              		.loc 1 1960 32
 4061 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4062              		.loc 1 1960 18
 4063 0024 0F4A     		ldr	r2, .L214
 4064 0026 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4065 002a BB60     		str	r3, [r7, #8]
1961:./ucOSII/Core/os_core.c ****             if (ptcb != (OS_TCB *)0) {                               /* Make sure task 'ptcb' is ..
 4066              		.loc 1 1961 16
 4067 002c BB68     		ldr	r3, [r7, #8]
 4068 002e 002B     		cmp	r3, #0
 4069 0030 0DD0     		beq	.L212
1962:./ucOSII/Core/os_core.c ****                 if (ptcb != OS_TCB_RESERVED) {                       /* ... still valid.           
 4070              		.loc 1 1962 20
 4071 0032 BB68     		ldr	r3, [r7, #8]
 4072 0034 012B     		cmp	r3, #1
 4073 0036 0AD0     		beq	.L212
1963:./ucOSII/Core/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
1964:./ucOSII/Core/os_core.c ****                     #if OS_STK_GROWTH == 1u
1965:./ucOSII/Core/os_core.c ****                     ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom + ptcb->OSTCBStkSize;
 4074              		.loc 1 1965 46
 4075 0038 BB68     		ldr	r3, [r7, #8]
 4076 003a 9A68     		ldr	r2, [r3, #8]
 4077              		.loc 1 1965 69
 4078 003c BB68     		ldr	r3, [r7, #8]
 4079 003e DB68     		ldr	r3, [r3, #12]
 4080              		.loc 1 1965 63
 4081 0040 9B00     		lsls	r3, r3, #2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 107


 4082 0042 1A44     		add	r2, r2, r3
 4083              		.loc 1 1965 40
 4084 0044 BB68     		ldr	r3, [r7, #8]
 4085 0046 DA64     		str	r2, [r3, #76]
1966:./ucOSII/Core/os_core.c ****                     #else
1967:./ucOSII/Core/os_core.c ****                     ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom - ptcb->OSTCBStkSize;
1968:./ucOSII/Core/os_core.c ****                     #endif
1969:./ucOSII/Core/os_core.c ****                     ptcb->OSTCBStkUsed = stk_data.OSUsed;            /* Store number of entries use
 4086              		.loc 1 1969 50
 4087 0048 7A68     		ldr	r2, [r7, #4]
 4088              		.loc 1 1969 40
 4089 004a BB68     		ldr	r3, [r7, #8]
 4090 004c 1A65     		str	r2, [r3, #80]
 4091              	.L212:
1957:./ucOSII/Core/os_core.c ****         err = OSTaskStkChk(prio, &stk_data);
 4092              		.loc 1 1957 52 discriminator 2
 4093 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4094 0050 0133     		adds	r3, r3, #1
 4095 0052 FB73     		strb	r3, [r7, #15]
 4096              	.L211:
1957:./ucOSII/Core/os_core.c ****         err = OSTaskStkChk(prio, &stk_data);
 4097              		.loc 1 1957 5 discriminator 1
 4098 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4099 0056 3F2B     		cmp	r3, #63
 4100 0058 D8D9     		bls	.L213
1970:./ucOSII/Core/os_core.c **** #endif
1971:./ucOSII/Core/os_core.c ****                 }
1972:./ucOSII/Core/os_core.c ****             }
1973:./ucOSII/Core/os_core.c ****         }
1974:./ucOSII/Core/os_core.c ****     }
1975:./ucOSII/Core/os_core.c **** }
 4101              		.loc 1 1975 1
 4102 005a 00BF     		nop
 4103 005c 00BF     		nop
 4104 005e 1037     		adds	r7, r7, #16
 4105              	.LCFI159:
 4106              		.cfi_def_cfa_offset 8
 4107 0060 BD46     		mov	sp, r7
 4108              	.LCFI160:
 4109              		.cfi_def_cfa_register 13
 4110              		@ sp needed
 4111 0062 80BD     		pop	{r7, pc}
 4112              	.L215:
 4113              		.align	2
 4114              	.L214:
 4115 0064 00000000 		.word	OSTCBPrioTbl
 4116              		.cfi_endproc
 4117              	.LFE35:
 4119              		.section	.text.OS_TCBInit,"ax",%progbits
 4120              		.align	1
 4121              		.global	OS_TCBInit
 4122              		.syntax unified
 4123              		.thumb
 4124              		.thumb_func
 4126              	OS_TCBInit:
 4127              	.LFB36:
1976:./ucOSII/Core/os_core.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 108


1977:./ucOSII/Core/os_core.c **** 
1978:./ucOSII/Core/os_core.c **** 
1979:./ucOSII/Core/os_core.c **** /*
1980:./ucOSII/Core/os_core.c **** ***************************************************************************************************
1981:./ucOSII/Core/os_core.c **** *                                           INITIALIZE TCB
1982:./ucOSII/Core/os_core.c **** *
1983:./ucOSII/Core/os_core.c **** * Description: This function is internal to uC/OS-II and is used to initialize a Task Control Block
1984:./ucOSII/Core/os_core.c **** *              a task is created (see OSTaskCreate() and OSTaskCreateExt()).
1985:./ucOSII/Core/os_core.c **** *
1986:./ucOSII/Core/os_core.c **** * Arguments  : prio          is the priority of the task being created
1987:./ucOSII/Core/os_core.c **** *
1988:./ucOSII/Core/os_core.c **** *              ptos          is a pointer to the task's top-of-stack assuming that the CPU register
1989:./ucOSII/Core/os_core.c **** *                            have been placed on the stack.  Note that the top-of-stack corresponds
1990:./ucOSII/Core/os_core.c **** *                            'high' memory location is OS_STK_GROWTH is set to 1 and a 'low' memory
1991:./ucOSII/Core/os_core.c **** *                            location if OS_STK_GROWTH is set to 0.  Note that stack growth is CPU
1992:./ucOSII/Core/os_core.c **** *                            specific.
1993:./ucOSII/Core/os_core.c **** *
1994:./ucOSII/Core/os_core.c **** *              pbos          is a pointer to the bottom of stack.  A NULL pointer is passed if call
1995:./ucOSII/Core/os_core.c **** *                            'OSTaskCreate()'.
1996:./ucOSII/Core/os_core.c **** *
1997:./ucOSII/Core/os_core.c **** *              id            is the task's ID (0..65535)
1998:./ucOSII/Core/os_core.c **** *
1999:./ucOSII/Core/os_core.c **** *              stk_size      is the size of the stack (in 'stack units').  If the stack units are I
2000:./ucOSII/Core/os_core.c **** *                            then, 'stk_size' contains the number of bytes for the stack.  If the s
2001:./ucOSII/Core/os_core.c **** *                            units are INT32Us then, the stack contains '4 * stk_size' bytes.  The 
2002:./ucOSII/Core/os_core.c **** *                            units are established by the #define constant OS_STK which is CPU
2003:./ucOSII/Core/os_core.c **** *                            specific.  'stk_size' is 0 if called by 'OSTaskCreate()'.
2004:./ucOSII/Core/os_core.c **** *
2005:./ucOSII/Core/os_core.c **** *              pext          is a pointer to a user supplied memory area that is used to extend the
2006:./ucOSII/Core/os_core.c **** *                            control block.  This allows you to store the contents of floating-poin
2007:./ucOSII/Core/os_core.c **** *                            registers, MMU registers or anything else you could find useful during
2008:./ucOSII/Core/os_core.c **** *                            context switch.  You can even assign a name to each task and store thi
2009:./ucOSII/Core/os_core.c **** *                            in this TCB extension.  A NULL pointer is passed if called by OSTaskCr
2010:./ucOSII/Core/os_core.c **** *
2011:./ucOSII/Core/os_core.c **** *              opt           options as passed to 'OSTaskCreateExt()' or,
2012:./ucOSII/Core/os_core.c **** *                            0 if called from 'OSTaskCreate()'.
2013:./ucOSII/Core/os_core.c **** *
2014:./ucOSII/Core/os_core.c **** * Returns    : OS_ERR_NONE              if the call was successful
2015:./ucOSII/Core/os_core.c **** *              OS_ERR_TASK_NO_MORE_TCB  if there are no more free TCBs to be allocated and thus, th
2016:./ucOSII/Core/os_core.c **** *                                       cannot be created.
2017:./ucOSII/Core/os_core.c **** *
2018:./ucOSII/Core/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
2019:./ucOSII/Core/os_core.c **** ***************************************************************************************************
2020:./ucOSII/Core/os_core.c **** */
2021:./ucOSII/Core/os_core.c **** 
2022:./ucOSII/Core/os_core.c **** INT8U  OS_TCBInit (INT8U    prio,
2023:./ucOSII/Core/os_core.c ****                    OS_STK  *ptos,
2024:./ucOSII/Core/os_core.c ****                    OS_STK  *pbos,
2025:./ucOSII/Core/os_core.c ****                    INT16U   id,
2026:./ucOSII/Core/os_core.c ****                    INT32U   stk_size,
2027:./ucOSII/Core/os_core.c ****                    void    *pext,
2028:./ucOSII/Core/os_core.c ****                    INT16U   opt)
2029:./ucOSII/Core/os_core.c **** {
 4128              		.loc 1 2029 1
 4129              		.cfi_startproc
 4130              		@ args = 12, pretend = 0, frame = 32
 4131              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 109


 4132 0000 80B5     		push	{r7, lr}
 4133              	.LCFI161:
 4134              		.cfi_def_cfa_offset 8
 4135              		.cfi_offset 7, -8
 4136              		.cfi_offset 14, -4
 4137 0002 88B0     		sub	sp, sp, #32
 4138              	.LCFI162:
 4139              		.cfi_def_cfa_offset 40
 4140 0004 00AF     		add	r7, sp, #0
 4141              	.LCFI163:
 4142              		.cfi_def_cfa_register 7
 4143 0006 B960     		str	r1, [r7, #8]
 4144 0008 7A60     		str	r2, [r7, #4]
 4145 000a 1A46     		mov	r2, r3
 4146 000c 0346     		mov	r3, r0
 4147 000e FB73     		strb	r3, [r7, #15]
 4148 0010 1346     		mov	r3, r2	@ movhi
 4149 0012 BB81     		strh	r3, [r7, #12]	@ movhi
2030:./ucOSII/Core/os_core.c ****     OS_TCB    *ptcb;
2031:./ucOSII/Core/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
2032:./ucOSII/Core/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 4150              		.loc 1 2032 16
 4151 0014 0023     		movs	r3, #0
 4152 0016 BB61     		str	r3, [r7, #24]
2033:./ucOSII/Core/os_core.c **** #endif
2034:./ucOSII/Core/os_core.c **** #if OS_TASK_REG_TBL_SIZE > 0u
2035:./ucOSII/Core/os_core.c ****     INT8U      i;
2036:./ucOSII/Core/os_core.c **** #endif
2037:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
2038:./ucOSII/Core/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
2039:./ucOSII/Core/os_core.c ****     INT8U      j;
2040:./ucOSII/Core/os_core.c **** #endif
2041:./ucOSII/Core/os_core.c **** #endif
2042:./ucOSII/Core/os_core.c **** 
2043:./ucOSII/Core/os_core.c **** 
2044:./ucOSII/Core/os_core.c ****     OS_ENTER_CRITICAL();
 4153              		.loc 1 2044 5
 4154 0018 4020     		movs	r0, #64
 4155 001a FFF7FEFF 		bl	OS_CPU_SR_Save
 4156 001e B861     		str	r0, [r7, #24]
2045:./ucOSII/Core/os_core.c ****     ptcb = OSTCBFreeList;                                  /* Get a free TCB from the free TCB list
 4157              		.loc 1 2045 10
 4158 0020 6B4B     		ldr	r3, .L222
 4159 0022 1B68     		ldr	r3, [r3]
 4160 0024 7B61     		str	r3, [r7, #20]
2046:./ucOSII/Core/os_core.c ****     if (ptcb != (OS_TCB *)0) {
 4161              		.loc 1 2046 8
 4162 0026 7B69     		ldr	r3, [r7, #20]
 4163 0028 002B     		cmp	r3, #0
 4164 002a 00F0C980 		beq	.L217
2047:./ucOSII/Core/os_core.c ****         OSTCBFreeList            = ptcb->OSTCBNext;        /* Update pointer to free TCB list      
 4165              		.loc 1 2047 40
 4166 002e 7B69     		ldr	r3, [r7, #20]
 4167 0030 5B69     		ldr	r3, [r3, #20]
 4168              		.loc 1 2047 34
 4169 0032 674A     		ldr	r2, .L222
 4170 0034 1360     		str	r3, [r2]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 110


2048:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 4171              		.loc 1 2048 9
 4172 0036 B869     		ldr	r0, [r7, #24]
 4173 0038 FFF7FEFF 		bl	OS_CPU_SR_Restore
2049:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStkPtr        = ptos;                   /* Load Stack pointer in TCB            
 4174              		.loc 1 2049 34
 4175 003c 7B69     		ldr	r3, [r7, #20]
 4176 003e BA68     		ldr	r2, [r7, #8]
 4177 0040 1A60     		str	r2, [r3]
2050:./ucOSII/Core/os_core.c ****         ptcb->OSTCBPrio          = prio;                   /* Load task priority into TCB          
 4178              		.loc 1 2050 34
 4179 0042 7B69     		ldr	r3, [r7, #20]
 4180 0044 FA7B     		ldrb	r2, [r7, #15]
 4181 0046 83F83A20 		strb	r2, [r3, #58]
2051:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStat          = OS_STAT_RDY;            /* Task is ready to run                 
 4182              		.loc 1 2051 34
 4183 004a 7B69     		ldr	r3, [r7, #20]
 4184 004c 0022     		movs	r2, #0
 4185 004e 83F83820 		strb	r2, [r3, #56]
2052:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStatPend      = OS_STAT_PEND_OK;        /* Clear pend status                    
 4186              		.loc 1 2052 34
 4187 0052 7B69     		ldr	r3, [r7, #20]
 4188 0054 0022     		movs	r2, #0
 4189 0056 83F83920 		strb	r2, [r3, #57]
2053:./ucOSII/Core/os_core.c ****         ptcb->OSTCBDly           = 0u;                     /* Task is not delayed                  
 4190              		.loc 1 2053 34
 4191 005a 7B69     		ldr	r3, [r7, #20]
 4192 005c 0022     		movs	r2, #0
 4193 005e 5A63     		str	r2, [r3, #52]
2054:./ucOSII/Core/os_core.c **** 
2055:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
2056:./ucOSII/Core/os_core.c ****         ptcb->OSTCBExtPtr        = pext;                   /* Store pointer to TCB extension       
 4194              		.loc 1 2056 34
 4195 0060 7B69     		ldr	r3, [r7, #20]
 4196 0062 FA6A     		ldr	r2, [r7, #44]
 4197 0064 5A60     		str	r2, [r3, #4]
2057:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStkSize       = stk_size;               /* Store stack size                     
 4198              		.loc 1 2057 34
 4199 0066 7B69     		ldr	r3, [r7, #20]
 4200 0068 BA6A     		ldr	r2, [r7, #40]
 4201 006a DA60     		str	r2, [r3, #12]
2058:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStkBottom     = pbos;                   /* Store pointer to bottom of stack     
 4202              		.loc 1 2058 34
 4203 006c 7B69     		ldr	r3, [r7, #20]
 4204 006e 7A68     		ldr	r2, [r7, #4]
 4205 0070 9A60     		str	r2, [r3, #8]
2059:./ucOSII/Core/os_core.c ****         ptcb->OSTCBOpt           = opt;                    /* Store task options                   
 4206              		.loc 1 2059 34
 4207 0072 7B69     		ldr	r3, [r7, #20]
 4208 0074 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 4209 0076 1A82     		strh	r2, [r3, #16]	@ movhi
2060:./ucOSII/Core/os_core.c ****         ptcb->OSTCBId            = id;                     /* Store task ID                        
 4210              		.loc 1 2060 34
 4211 0078 7B69     		ldr	r3, [r7, #20]
 4212 007a BA89     		ldrh	r2, [r7, #12]	@ movhi
 4213 007c 5A82     		strh	r2, [r3, #18]	@ movhi
2061:./ucOSII/Core/os_core.c **** #else
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 111


2062:./ucOSII/Core/os_core.c ****         pext                     = pext;                   /* Prevent compiler warning if not used 
2063:./ucOSII/Core/os_core.c ****         stk_size                 = stk_size;
2064:./ucOSII/Core/os_core.c ****         pbos                     = pbos;
2065:./ucOSII/Core/os_core.c ****         opt                      = opt;
2066:./ucOSII/Core/os_core.c ****         id                       = id;
2067:./ucOSII/Core/os_core.c **** #endif
2068:./ucOSII/Core/os_core.c **** 
2069:./ucOSII/Core/os_core.c **** #if OS_TASK_DEL_EN > 0u
2070:./ucOSII/Core/os_core.c ****         ptcb->OSTCBDelReq        = OS_ERR_NONE;
 4214              		.loc 1 2070 34
 4215 007e 7B69     		ldr	r3, [r7, #20]
 4216 0080 0022     		movs	r2, #0
 4217 0082 83F83F20 		strb	r2, [r3, #63]
2071:./ucOSII/Core/os_core.c **** #endif
2072:./ucOSII/Core/os_core.c **** 
2073:./ucOSII/Core/os_core.c **** #if OS_LOWEST_PRIO <= 63u                                         /* Pre-compute X, Y              
2074:./ucOSII/Core/os_core.c ****         ptcb->OSTCBY             = (INT8U)(prio >> 3u);
 4218              		.loc 1 2074 36
 4219 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4220 0088 DB08     		lsrs	r3, r3, #3
 4221 008a DAB2     		uxtb	r2, r3
 4222              		.loc 1 2074 34
 4223 008c 7B69     		ldr	r3, [r7, #20]
 4224 008e 83F83C20 		strb	r2, [r3, #60]
2075:./ucOSII/Core/os_core.c ****         ptcb->OSTCBX             = (INT8U)(prio & 0x07u);
 4225              		.loc 1 2075 36
 4226 0092 FB7B     		ldrb	r3, [r7, #15]
 4227 0094 03F00703 		and	r3, r3, #7
 4228 0098 DAB2     		uxtb	r2, r3
 4229              		.loc 1 2075 34
 4230 009a 7B69     		ldr	r3, [r7, #20]
 4231 009c 83F83B20 		strb	r2, [r3, #59]
2076:./ucOSII/Core/os_core.c **** #else                                                             /* Pre-compute X, Y              
2077:./ucOSII/Core/os_core.c ****         ptcb->OSTCBY             = (INT8U)((INT8U)(prio >> 4u) & 0xFFu);
2078:./ucOSII/Core/os_core.c ****         ptcb->OSTCBX             = (INT8U) (prio & 0x0Fu);
2079:./ucOSII/Core/os_core.c **** #endif
2080:./ucOSII/Core/os_core.c ****                                                                   /* Pre-compute BitX and BitY     
2081:./ucOSII/Core/os_core.c ****         ptcb->OSTCBBitY          = (OS_PRIO)(1uL << ptcb->OSTCBY);
 4232              		.loc 1 2081 57
 4233 00a0 7B69     		ldr	r3, [r7, #20]
 4234 00a2 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4235 00a6 1A46     		mov	r2, r3
 4236              		.loc 1 2081 50
 4237 00a8 0123     		movs	r3, #1
 4238 00aa 9340     		lsls	r3, r3, r2
 4239              		.loc 1 2081 36
 4240 00ac DAB2     		uxtb	r2, r3
 4241              		.loc 1 2081 34
 4242 00ae 7B69     		ldr	r3, [r7, #20]
 4243 00b0 83F83E20 		strb	r2, [r3, #62]
2082:./ucOSII/Core/os_core.c ****         ptcb->OSTCBBitX          = (OS_PRIO)(1uL << ptcb->OSTCBX);
 4244              		.loc 1 2082 57
 4245 00b4 7B69     		ldr	r3, [r7, #20]
 4246 00b6 93F83B30 		ldrb	r3, [r3, #59]	@ zero_extendqisi2
 4247 00ba 1A46     		mov	r2, r3
 4248              		.loc 1 2082 50
 4249 00bc 0123     		movs	r3, #1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 112


 4250 00be 9340     		lsls	r3, r3, r2
 4251              		.loc 1 2082 36
 4252 00c0 DAB2     		uxtb	r2, r3
 4253              		.loc 1 2082 34
 4254 00c2 7B69     		ldr	r3, [r7, #20]
 4255 00c4 83F83D20 		strb	r2, [r3, #61]
2083:./ucOSII/Core/os_core.c **** 
2084:./ucOSII/Core/os_core.c **** #if (OS_EVENT_EN)
2085:./ucOSII/Core/os_core.c ****         ptcb->OSTCBEventPtr      = (OS_EVENT  *)0;         /* Task is not pending on an  event     
 4256              		.loc 1 2085 34
 4257 00c8 7B69     		ldr	r3, [r7, #20]
 4258 00ca 0022     		movs	r2, #0
 4259 00cc DA61     		str	r2, [r3, #28]
2086:./ucOSII/Core/os_core.c **** #if (OS_EVENT_MULTI_EN > 0u)
2087:./ucOSII/Core/os_core.c ****         ptcb->OSTCBEventMultiPtr = (OS_EVENT **)0;         /* Task is not pending on any events    
 4260              		.loc 1 2087 34
 4261 00ce 7B69     		ldr	r3, [r7, #20]
 4262 00d0 0022     		movs	r2, #0
 4263 00d2 1A62     		str	r2, [r3, #32]
2088:./ucOSII/Core/os_core.c ****         ptcb->OSTCBEventMultiRdy = (OS_EVENT  *)0;         /* No events readied for Multipend      
 4264              		.loc 1 2088 34
 4265 00d4 7B69     		ldr	r3, [r7, #20]
 4266 00d6 0022     		movs	r2, #0
 4267 00d8 5A62     		str	r2, [r3, #36]
2089:./ucOSII/Core/os_core.c **** #endif
2090:./ucOSII/Core/os_core.c **** #endif
2091:./ucOSII/Core/os_core.c **** 
2092:./ucOSII/Core/os_core.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u) && (OS_TASK_DEL_EN > 0u)
2093:./ucOSII/Core/os_core.c ****         ptcb->OSTCBFlagNode      = (OS_FLAG_NODE *)0;      /* Task is not pending on an event flag 
 4268              		.loc 1 2093 34
 4269 00da 7B69     		ldr	r3, [r7, #20]
 4270 00dc 0022     		movs	r2, #0
 4271 00de DA62     		str	r2, [r3, #44]
2094:./ucOSII/Core/os_core.c **** #endif
2095:./ucOSII/Core/os_core.c **** 
2096:./ucOSII/Core/os_core.c **** #if (OS_MBOX_EN > 0u) || ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
2097:./ucOSII/Core/os_core.c ****         ptcb->OSTCBMsg           = (void *)0;              /* No message received                  
 4272              		.loc 1 2097 34
 4273 00e0 7B69     		ldr	r3, [r7, #20]
 4274 00e2 0022     		movs	r2, #0
 4275 00e4 9A62     		str	r2, [r3, #40]
2098:./ucOSII/Core/os_core.c **** #endif
2099:./ucOSII/Core/os_core.c **** 
2100:./ucOSII/Core/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
2101:./ucOSII/Core/os_core.c ****         ptcb->OSTCBCtxSwCtr      = 0uL;                    /* Initialize profiling variables       
 4276              		.loc 1 2101 34
 4277 00e6 7B69     		ldr	r3, [r7, #20]
 4278 00e8 0022     		movs	r2, #0
 4279 00ea 1A64     		str	r2, [r3, #64]
2102:./ucOSII/Core/os_core.c ****         ptcb->OSTCBCyclesStart   = 0uL;
 4280              		.loc 1 2102 34
 4281 00ec 7B69     		ldr	r3, [r7, #20]
 4282 00ee 0022     		movs	r2, #0
 4283 00f0 9A64     		str	r2, [r3, #72]
2103:./ucOSII/Core/os_core.c ****         ptcb->OSTCBCyclesTot     = 0uL;
 4284              		.loc 1 2103 34
 4285 00f2 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 113


 4286 00f4 0022     		movs	r2, #0
 4287 00f6 5A64     		str	r2, [r3, #68]
2104:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStkBase       = (OS_STK *)0;
 4288              		.loc 1 2104 34
 4289 00f8 7B69     		ldr	r3, [r7, #20]
 4290 00fa 0022     		movs	r2, #0
 4291 00fc DA64     		str	r2, [r3, #76]
2105:./ucOSII/Core/os_core.c ****         ptcb->OSTCBStkUsed       = 0uL;
 4292              		.loc 1 2105 34
 4293 00fe 7B69     		ldr	r3, [r7, #20]
 4294 0100 0022     		movs	r2, #0
 4295 0102 1A65     		str	r2, [r3, #80]
2106:./ucOSII/Core/os_core.c **** #endif
2107:./ucOSII/Core/os_core.c **** 
2108:./ucOSII/Core/os_core.c **** #if OS_TASK_NAME_EN > 0u
2109:./ucOSII/Core/os_core.c ****         ptcb->OSTCBTaskName      = (INT8U *)(void *)"?";
 4296              		.loc 1 2109 34
 4297 0104 7B69     		ldr	r3, [r7, #20]
 4298 0106 334A     		ldr	r2, .L222+4
 4299 0108 5A65     		str	r2, [r3, #84]
2110:./ucOSII/Core/os_core.c **** #endif
2111:./ucOSII/Core/os_core.c **** 
2112:./ucOSII/Core/os_core.c **** #if OS_TASK_REG_TBL_SIZE > 0u                              /* Initialize the task variables        
2113:./ucOSII/Core/os_core.c ****         for (i = 0u; i < OS_TASK_REG_TBL_SIZE; i++) {
 4300              		.loc 1 2113 16
 4301 010a 0023     		movs	r3, #0
 4302 010c FB77     		strb	r3, [r7, #31]
 4303              		.loc 1 2113 9
 4304 010e 08E0     		b	.L218
 4305              	.L219:
2114:./ucOSII/Core/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 4306              		.loc 1 2114 30 discriminator 3
 4307 0110 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 4308              		.loc 1 2114 34 discriminator 3
 4309 0112 7B69     		ldr	r3, [r7, #20]
 4310 0114 1632     		adds	r2, r2, #22
 4311 0116 0021     		movs	r1, #0
 4312 0118 43F82210 		str	r1, [r3, r2, lsl #2]
2113:./ucOSII/Core/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 4313              		.loc 1 2113 49 discriminator 3
 4314 011c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4315 011e 0133     		adds	r3, r3, #1
 4316 0120 FB77     		strb	r3, [r7, #31]
 4317              	.L218:
2113:./ucOSII/Core/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 4318              		.loc 1 2113 9 discriminator 1
 4319 0122 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4320 0124 002B     		cmp	r3, #0
 4321 0126 F3D0     		beq	.L219
2115:./ucOSII/Core/os_core.c ****         }
2116:./ucOSII/Core/os_core.c **** #endif
2117:./ucOSII/Core/os_core.c **** 
2118:./ucOSII/Core/os_core.c ****         OSTCBInitHook(ptcb);
 4322              		.loc 1 2118 9
 4323 0128 7869     		ldr	r0, [r7, #20]
 4324 012a FFF7FEFF 		bl	OSTCBInitHook
2119:./ucOSII/Core/os_core.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 114


2120:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 4325              		.loc 1 2120 9
 4326 012e 4020     		movs	r0, #64
 4327 0130 FFF7FEFF 		bl	OS_CPU_SR_Save
 4328 0134 B861     		str	r0, [r7, #24]
2121:./ucOSII/Core/os_core.c ****         OSTCBPrioTbl[prio] = ptcb;
 4329              		.loc 1 2121 21
 4330 0136 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4331              		.loc 1 2121 28
 4332 0138 2749     		ldr	r1, .L222+8
 4333 013a 7A69     		ldr	r2, [r7, #20]
 4334 013c 41F82320 		str	r2, [r1, r3, lsl #2]
2122:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 4335              		.loc 1 2122 9
 4336 0140 B869     		ldr	r0, [r7, #24]
 4337 0142 FFF7FEFF 		bl	OS_CPU_SR_Restore
2123:./ucOSII/Core/os_core.c **** 
2124:./ucOSII/Core/os_core.c ****         OSTaskCreateHook(ptcb);                            /* Call user defined hook               
 4338              		.loc 1 2124 9
 4339 0146 7869     		ldr	r0, [r7, #20]
 4340 0148 FFF7FEFF 		bl	OSTaskCreateHook
2125:./ucOSII/Core/os_core.c **** 
2126:./ucOSII/Core/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
2127:./ucOSII/Core/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
2128:./ucOSII/Core/os_core.c ****         for (j = 0u; j < OS_TLS_TBL_SIZE; j++) {
2129:./ucOSII/Core/os_core.c ****             ptcb->OSTCBTLSTbl[j] = (OS_TLS)0;
2130:./ucOSII/Core/os_core.c ****         }
2131:./ucOSII/Core/os_core.c ****         OS_TLS_TaskCreate(ptcb);                           /* Call TLS hook                        
2132:./ucOSII/Core/os_core.c **** #endif
2133:./ucOSII/Core/os_core.c **** #endif
2134:./ucOSII/Core/os_core.c **** 
2135:./ucOSII/Core/os_core.c ****         OS_ENTER_CRITICAL();
 4341              		.loc 1 2135 9
 4342 014c 4020     		movs	r0, #64
 4343 014e FFF7FEFF 		bl	OS_CPU_SR_Save
 4344 0152 B861     		str	r0, [r7, #24]
2136:./ucOSII/Core/os_core.c ****         ptcb->OSTCBNext = OSTCBList;                       /* Link into TCB chain                  
 4345              		.loc 1 2136 25
 4346 0154 214B     		ldr	r3, .L222+12
 4347 0156 1A68     		ldr	r2, [r3]
 4348 0158 7B69     		ldr	r3, [r7, #20]
 4349 015a 5A61     		str	r2, [r3, #20]
2137:./ucOSII/Core/os_core.c ****         ptcb->OSTCBPrev = (OS_TCB *)0;
 4350              		.loc 1 2137 25
 4351 015c 7B69     		ldr	r3, [r7, #20]
 4352 015e 0022     		movs	r2, #0
 4353 0160 9A61     		str	r2, [r3, #24]
2138:./ucOSII/Core/os_core.c ****         if (OSTCBList != (OS_TCB *)0) {
 4354              		.loc 1 2138 23
 4355 0162 1E4B     		ldr	r3, .L222+12
 4356 0164 1B68     		ldr	r3, [r3]
 4357              		.loc 1 2138 12
 4358 0166 002B     		cmp	r3, #0
 4359 0168 03D0     		beq	.L220
2139:./ucOSII/Core/os_core.c ****             OSTCBList->OSTCBPrev = ptcb;
 4360              		.loc 1 2139 22
 4361 016a 1C4B     		ldr	r3, .L222+12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 115


 4362 016c 1B68     		ldr	r3, [r3]
 4363              		.loc 1 2139 34
 4364 016e 7A69     		ldr	r2, [r7, #20]
 4365 0170 9A61     		str	r2, [r3, #24]
 4366              	.L220:
2140:./ucOSII/Core/os_core.c ****         }
2141:./ucOSII/Core/os_core.c ****         OSTCBList               = ptcb;
 4367              		.loc 1 2141 33
 4368 0172 1A4A     		ldr	r2, .L222+12
 4369 0174 7B69     		ldr	r3, [r7, #20]
 4370 0176 1360     		str	r3, [r2]
2142:./ucOSII/Core/os_core.c ****         OSRdyGrp               |= ptcb->OSTCBBitY;         /* Make task ready to run               
 4371              		.loc 1 2142 39
 4372 0178 7B69     		ldr	r3, [r7, #20]
 4373 017a 93F83E20 		ldrb	r2, [r3, #62]	@ zero_extendqisi2
 4374              		.loc 1 2142 32
 4375 017e 184B     		ldr	r3, .L222+16
 4376 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4377 0182 1343     		orrs	r3, r3, r2
 4378 0184 DAB2     		uxtb	r2, r3
 4379 0186 164B     		ldr	r3, .L222+16
 4380 0188 1A70     		strb	r2, [r3]
2143:./ucOSII/Core/os_core.c ****         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 4381              		.loc 1 2143 22
 4382 018a 7B69     		ldr	r3, [r7, #20]
 4383 018c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4384              		.loc 1 2143 32
 4385 0190 1A46     		mov	r2, r3
 4386 0192 144B     		ldr	r3, .L222+20
 4387 0194 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 4388              		.loc 1 2143 39
 4389 0196 7B69     		ldr	r3, [r7, #20]
 4390 0198 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 4391              		.loc 1 2143 22
 4392 019c 7969     		ldr	r1, [r7, #20]
 4393 019e 91F83C10 		ldrb	r1, [r1, #60]	@ zero_extendqisi2
 4394              		.loc 1 2143 32
 4395 01a2 1343     		orrs	r3, r3, r2
 4396 01a4 DAB2     		uxtb	r2, r3
 4397 01a6 0F4B     		ldr	r3, .L222+20
 4398 01a8 5A54     		strb	r2, [r3, r1]
2144:./ucOSII/Core/os_core.c ****         OSTaskCtr++;                                       /* Increment the #tasks counter         
 4399              		.loc 1 2144 18
 4400 01aa 0F4B     		ldr	r3, .L222+24
 4401 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4402 01ae 0133     		adds	r3, r3, #1
 4403 01b0 DAB2     		uxtb	r2, r3
 4404 01b2 0D4B     		ldr	r3, .L222+24
 4405 01b4 1A70     		strb	r2, [r3]
2145:./ucOSII/Core/os_core.c ****         OS_TRACE_TASK_READY(ptcb);
2146:./ucOSII/Core/os_core.c ****         OS_EXIT_CRITICAL();
 4406              		.loc 1 2146 9
 4407 01b6 B869     		ldr	r0, [r7, #24]
 4408 01b8 FFF7FEFF 		bl	OS_CPU_SR_Restore
2147:./ucOSII/Core/os_core.c ****         return (OS_ERR_NONE);
 4409              		.loc 1 2147 16
 4410 01bc 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 116


 4411 01be 03E0     		b	.L221
 4412              	.L217:
2148:./ucOSII/Core/os_core.c ****     }
2149:./ucOSII/Core/os_core.c ****     OS_EXIT_CRITICAL();
 4413              		.loc 1 2149 5
 4414 01c0 B869     		ldr	r0, [r7, #24]
 4415 01c2 FFF7FEFF 		bl	OS_CPU_SR_Restore
2150:./ucOSII/Core/os_core.c ****     return (OS_ERR_TASK_NO_MORE_TCB);
 4416              		.loc 1 2150 12
 4417 01c6 4223     		movs	r3, #66
 4418              	.L221:
2151:./ucOSII/Core/os_core.c **** }
 4419              		.loc 1 2151 1
 4420 01c8 1846     		mov	r0, r3
 4421 01ca 2037     		adds	r7, r7, #32
 4422              	.LCFI164:
 4423              		.cfi_def_cfa_offset 8
 4424 01cc BD46     		mov	sp, r7
 4425              	.LCFI165:
 4426              		.cfi_def_cfa_register 13
 4427              		@ sp needed
 4428 01ce 80BD     		pop	{r7, pc}
 4429              	.L223:
 4430              		.align	2
 4431              	.L222:
 4432 01d0 00000000 		.word	OSTCBFreeList
 4433 01d4 00000000 		.word	.LC0
 4434 01d8 00000000 		.word	OSTCBPrioTbl
 4435 01dc 00000000 		.word	OSTCBList
 4436 01e0 00000000 		.word	OSRdyGrp
 4437 01e4 00000000 		.word	OSRdyTbl
 4438 01e8 00000000 		.word	OSTaskCtr
 4439              		.cfi_endproc
 4440              	.LFE36:
 4442              		.text
 4443              	.Letext0:
 4444              		.file 2 "./ucOSII/Port/os_cpu.h"
 4445              		.file 3 "./ucOSII/Core/ucos_ii.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 117


DEFINED SYMBOLS
                            *ABS*:0000000000000000 os_core.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:24     .bss.OSCtxSwCtr:0000000000000000 OSCtxSwCtr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:21     .bss.OSCtxSwCtr:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:31     .bss.OSEventFreeList:0000000000000000 OSEventFreeList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:28     .bss.OSEventFreeList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:38     .bss.OSEventTbl:0000000000000000 OSEventTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:35     .bss.OSEventTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:45     .bss.OSFlagTbl:0000000000000000 OSFlagTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:42     .bss.OSFlagTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:52     .bss.OSFlagFreeList:0000000000000000 OSFlagFreeList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:49     .bss.OSFlagFreeList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:58     .bss.OSCPUUsage:0000000000000000 OSCPUUsage
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:59     .bss.OSCPUUsage:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:65     .bss.OSIdleCtrMax:0000000000000000 OSIdleCtrMax
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:62     .bss.OSIdleCtrMax:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:72     .bss.OSIdleCtrRun:0000000000000000 OSIdleCtrRun
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:69     .bss.OSIdleCtrRun:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:78     .bss.OSStatRdy:0000000000000000 OSStatRdy
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:79     .bss.OSStatRdy:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:85     .bss.OSTaskStatStk:0000000000000000 OSTaskStatStk
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:82     .bss.OSTaskStatStk:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:91     .bss.OSIntNesting:0000000000000000 OSIntNesting
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:92     .bss.OSIntNesting:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:97     .bss.OSLockNesting:0000000000000000 OSLockNesting
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:98     .bss.OSLockNesting:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:103    .bss.OSPrioCur:0000000000000000 OSPrioCur
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:104    .bss.OSPrioCur:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:109    .bss.OSPrioHighRdy:0000000000000000 OSPrioHighRdy
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:110    .bss.OSPrioHighRdy:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:115    .bss.OSRdyGrp:0000000000000000 OSRdyGrp
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:116    .bss.OSRdyGrp:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:122    .bss.OSRdyTbl:0000000000000000 OSRdyTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:119    .bss.OSRdyTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:128    .bss.OSRunning:0000000000000000 OSRunning
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:129    .bss.OSRunning:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:134    .bss.OSTaskCtr:0000000000000000 OSTaskCtr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:135    .bss.OSTaskCtr:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:141    .bss.OSIdleCtr:0000000000000000 OSIdleCtr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:138    .bss.OSIdleCtr:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:148    .bss.OSTaskIdleStk:0000000000000000 OSTaskIdleStk
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:145    .bss.OSTaskIdleStk:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:155    .bss.OSTCBCur:0000000000000000 OSTCBCur
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:152    .bss.OSTCBCur:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:162    .bss.OSTCBFreeList:0000000000000000 OSTCBFreeList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:159    .bss.OSTCBFreeList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:169    .bss.OSTCBHighRdy:0000000000000000 OSTCBHighRdy
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:166    .bss.OSTCBHighRdy:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:176    .bss.OSTCBList:0000000000000000 OSTCBList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:173    .bss.OSTCBList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:183    .bss.OSTCBPrioTbl:0000000000000000 OSTCBPrioTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:180    .bss.OSTCBPrioTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:190    .bss.OSTCBTbl:0000000000000000 OSTCBTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:187    .bss.OSTCBTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:196    .bss.OSTickStepState:0000000000000000 OSTickStepState
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:197    .bss.OSTickStepState:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:203    .bss.OSMemFreeList:0000000000000000 OSMemFreeList
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 118


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:200    .bss.OSMemFreeList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:210    .bss.OSMemTbl:0000000000000000 OSMemTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:207    .bss.OSMemTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:217    .bss.OSQFreeList:0000000000000000 OSQFreeList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:214    .bss.OSQFreeList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:224    .bss.OSQTbl:0000000000000000 OSQTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:221    .bss.OSQTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:230    .bss.OSTaskRegNextAvailID:0000000000000000 OSTaskRegNextAvailID
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:231    .bss.OSTaskRegNextAvailID:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:237    .bss.OSTime:0000000000000000 OSTime
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:234    .bss.OSTime:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:244    .bss.OSTmrFree:0000000000000000 OSTmrFree
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:241    .bss.OSTmrFree:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:251    .bss.OSTmrUsed:0000000000000000 OSTmrUsed
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:248    .bss.OSTmrUsed:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:258    .bss.OSTmrTime:0000000000000000 OSTmrTime
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:255    .bss.OSTmrTime:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:265    .bss.OSTmrSem:0000000000000000 OSTmrSem
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:262    .bss.OSTmrSem:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:272    .bss.OSTmrSemSignal:0000000000000000 OSTmrSemSignal
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:269    .bss.OSTmrSemSignal:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:279    .bss.OSTmrTbl:0000000000000000 OSTmrTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:276    .bss.OSTmrTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:286    .bss.OSTmrFreeList:0000000000000000 OSTmrFreeList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:283    .bss.OSTmrFreeList:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:293    .bss.OSTmrTaskStk:0000000000000000 OSTmrTaskStk
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:290    .bss.OSTmrTaskStk:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:300    .bss.OSTmrWheelTbl:0000000000000000 OSTmrWheelTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:297    .bss.OSTmrWheelTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:307    .rodata.OSUnMapTbl:0000000000000000 OSUnMapTbl
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:304    .rodata.OSUnMapTbl:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:329    .text.OSEventNameGet:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:335    .text.OSEventNameGet:0000000000000000 OSEventNameGet
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3734   .text.OS_StrLen:0000000000000000 OS_StrLen
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:454    .text.OSEventNameGet:000000000000008c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:459    .text.OSEventNameSet:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:465    .text.OSEventNameSet:0000000000000000 OSEventNameSet
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:567    .text.OSEventNameSet:0000000000000070 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:572    .text.OSEventPendMulti:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:578    .text.OSEventPendMulti:0000000000000000 OSEventPendMulti
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2415   .text.OS_EventTaskWaitMulti:0000000000000000 OS_EventTaskWaitMulti
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3557   .text.OS_Sched:0000000000000000 OS_Sched
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2671   .text.OS_EventTaskRemoveMulti:0000000000000000 OS_EventTaskRemoveMulti
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1129   .text.OSEventPendMulti:00000000000002fc $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1134   .text.OSEventPendMulti:0000000000000308 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1232   .text.OSEventPendMulti:0000000000000388 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1237   .text.OSInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1243   .text.OSInit:0000000000000000 OSInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2983   .text.OS_InitMisc:0000000000000000 OS_InitMisc
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3075   .text.OS_InitRdyList:0000000000000000 OS_InitRdyList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3303   .text.OS_InitTCBList:0000000000000000 OS_InitTCBList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2860   .text.OS_InitEventList:0000000000000000 OS_InitEventList
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3169   .text.OS_InitTaskIdle:0000000000000000 OS_InitTaskIdle
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3238   .text.OS_InitTaskStat:0000000000000000 OS_InitTaskStat
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1290   .text.OSIntEnter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1296   .text.OSIntEnter:0000000000000000 OSIntEnter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1344   .text.OSIntEnter:000000000000002c $d
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 119


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1350   .text.OSIntExit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1356   .text.OSIntExit:0000000000000000 OSIntExit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3660   .text.OS_SchedNew:0000000000000000 OS_SchedNew
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1464   .text.OSIntExit:0000000000000084 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1476   .text.OSSchedLock:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1482   .text.OSSchedLock:0000000000000000 OSSchedLock
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1549   .text.OSSchedLock:0000000000000044 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1556   .text.OSSchedUnlock:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1562   .text.OSSchedUnlock:0000000000000000 OSSchedUnlock
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1654   .text.OSSchedUnlock:0000000000000068 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1661   .text.OSStart:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1667   .text.OSStart:0000000000000000 OSStart
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1717   .text.OSStart:0000000000000038 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1727   .text.OSStatInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1733   .text.OSStatInit:0000000000000000 OSStatInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1799   .text.OSStatInit:0000000000000050 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1806   .text.OSTimeTick:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:1812   .text.OSTimeTick:0000000000000000 OSTimeTick
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2026   .text.OSTimeTick:000000000000012c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2036   .text.OSVersion:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2042   .text.OSVersion:0000000000000000 OSVersion
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2073   .text.OS_Dummy:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2079   .text.OS_Dummy:0000000000000000 OS_Dummy
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2108   .text.OS_EventTaskRdy:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2114   .text.OS_EventTaskRdy:0000000000000000 OS_EventTaskRdy
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2578   .text.OS_EventTaskRemove:0000000000000000 OS_EventTaskRemove
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2267   .text.OS_EventTaskRdy:00000000000000dc $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2275   .text.OS_EventTaskWait:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2281   .text.OS_EventTaskWait:0000000000000000 OS_EventTaskWait
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2402   .text.OS_EventTaskWait:00000000000000a4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2409   .text.OS_EventTaskWaitMulti:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2565   .text.OS_EventTaskWaitMulti:00000000000000c8 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2572   .text.OS_EventTaskRemove:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2665   .text.OS_EventTaskRemoveMulti:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2782   .text.OS_EventWaitListInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2788   .text.OS_EventWaitListInit:0000000000000000 OS_EventWaitListInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2851   .rodata:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2855   .text.OS_InitEventList:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3423   .text.OS_MemClr:0000000000000000 OS_MemClr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2971   .text.OS_InitEventList:0000000000000088 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:2978   .text.OS_InitMisc:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3055   .text.OS_InitMisc:0000000000000050 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3070   .text.OS_InitRdyList:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3150   .text.OS_InitRdyList:000000000000004c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3164   .text.OS_InitTaskIdle:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3221   .text.OS_InitTaskIdle:000000000000003c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3808   .text.OS_TaskIdle:0000000000000000 OS_TaskIdle
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3233   .text.OS_InitTaskStat:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3290   .text.OS_InitTaskStat:000000000000003c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3861   .text.OS_TaskStat:0000000000000000 OS_TaskStat
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3298   .text.OS_InitTCBList:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3408   .text.OS_InitTCBList:0000000000000088 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3417   .text.OS_MemClr:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3481   .text.OS_MemCopy:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3487   .text.OS_MemCopy:0000000000000000 OS_MemCopy
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3551   .text.OS_Sched:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3644   .text.OS_Sched:0000000000000068 $d
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s 			page 120


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3655   .text.OS_SchedNew:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3720   .text.OS_SchedNew:0000000000000038 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3728   .text.OS_StrLen:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3802   .text.OS_TaskIdle:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3850   .text.OS_TaskIdle:000000000000002c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:3855   .text.OS_TaskStat:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4025   .text.OS_TaskStatStkChk:0000000000000000 OS_TaskStatStkChk
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4009   .text.OS_TaskStat:00000000000000d8 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4019   .text.OS_TaskStatStkChk:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4115   .text.OS_TaskStatStkChk:0000000000000064 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4120   .text.OS_TCBInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4126   .text.OS_TCBInit:0000000000000000 OS_TCBInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccDNOR0U.s:4432   .text.OS_TCBInit:00000000000001d0 $d

UNDEFINED SYMBOLS
OS_CPU_SR_Save
OS_CPU_SR_Restore
OSInitHookBegin
OS_FlagInit
OS_MemInit
OS_QInit
OSTmr_Init
OSInitHookEnd
OSDebugInit
OSIntCtxSw
OSStartHighRdy
OSTimeDly
OSTimeTickHook
OSTaskCreateExt
OSTaskNameSet
OSCtxSw
OSTaskIdleHook
OSTaskSuspend
OSTaskStatHook
OSTaskStkChk
OSTCBInitHook
OSTaskCreateHook
