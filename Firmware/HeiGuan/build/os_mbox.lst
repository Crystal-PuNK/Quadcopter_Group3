ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"os_mbox.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OSMboxAccept,"ax",%progbits
  20              		.align	1
  21              		.global	OSMboxAccept
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	OSMboxAccept:
  27              	.LFB3:
  28              		.file 1 "./ucOSII/Core/os_mbox.c"
   1:./ucOSII/Core/os_mbox.c **** /*
   2:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
   3:./ucOSII/Core/os_mbox.c **** *                                              uC/OS-II
   4:./ucOSII/Core/os_mbox.c **** *                                        The Real-Time Kernel
   5:./ucOSII/Core/os_mbox.c **** *
   6:./ucOSII/Core/os_mbox.c **** *                    Copyright 1992-2021 Silicon Laboratories Inc. www.silabs.com
   7:./ucOSII/Core/os_mbox.c **** *
   8:./ucOSII/Core/os_mbox.c **** *                                 SPDX-License-Identifier: APACHE-2.0
   9:./ucOSII/Core/os_mbox.c **** *
  10:./ucOSII/Core/os_mbox.c **** *               This software is subject to an open source license and is distributed by
  11:./ucOSII/Core/os_mbox.c **** *                Silicon Laboratories Inc. pursuant to the terms of the Apache License,
  12:./ucOSII/Core/os_mbox.c **** *                    Version 2.0 available at www.apache.org/licenses/LICENSE-2.0.
  13:./ucOSII/Core/os_mbox.c **** *
  14:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  15:./ucOSII/Core/os_mbox.c **** */
  16:./ucOSII/Core/os_mbox.c **** 
  17:./ucOSII/Core/os_mbox.c **** 
  18:./ucOSII/Core/os_mbox.c **** /*
  19:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  20:./ucOSII/Core/os_mbox.c **** *
  21:./ucOSII/Core/os_mbox.c **** *                                      MESSAGE MAILBOX MANAGEMENT
  22:./ucOSII/Core/os_mbox.c **** *
  23:./ucOSII/Core/os_mbox.c **** * Filename : os_mbox.c
  24:./ucOSII/Core/os_mbox.c **** * Version  : V2.93.01
  25:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  26:./ucOSII/Core/os_mbox.c **** */
  27:./ucOSII/Core/os_mbox.c **** 
  28:./ucOSII/Core/os_mbox.c **** #ifndef  OS_MBOX_C
  29:./ucOSII/Core/os_mbox.c **** #define  OS_MBOX_C
  30:./ucOSII/Core/os_mbox.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 2


  31:./ucOSII/Core/os_mbox.c **** #define  MICRIUM_SOURCE
  32:./ucOSII/Core/os_mbox.c **** 
  33:./ucOSII/Core/os_mbox.c **** #ifndef  OS_MASTER_FILE
  34:./ucOSII/Core/os_mbox.c **** #include <ucos_ii.h>
  35:./ucOSII/Core/os_mbox.c **** #endif
  36:./ucOSII/Core/os_mbox.c **** 
  37:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_EN > 0u
  38:./ucOSII/Core/os_mbox.c **** /*
  39:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  40:./ucOSII/Core/os_mbox.c **** *                                        ACCEPT MESSAGE FROM MAILBOX
  41:./ucOSII/Core/os_mbox.c **** *
  42:./ucOSII/Core/os_mbox.c **** * Description: This function checks the mailbox to see if a message is available.  Unlike OSMboxPen
  43:./ucOSII/Core/os_mbox.c **** *              OSMboxAccept() does not suspend the calling task if a message is not available.
  44:./ucOSII/Core/os_mbox.c **** *
  45:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block
  46:./ucOSII/Core/os_mbox.c **** *
  47:./ucOSII/Core/os_mbox.c **** * Returns    : != (void *)0  is the message in the mailbox if one is available.  The mailbox is cle
  48:./ucOSII/Core/os_mbox.c **** *                            so the next time OSMboxAccept() is called, the mailbox will be empty.
  49:./ucOSII/Core/os_mbox.c **** *              == (void *)0  if the mailbox is empty or,
  50:./ucOSII/Core/os_mbox.c **** *                            if 'pevent' is a NULL pointer or,
  51:./ucOSII/Core/os_mbox.c **** *                            if you didn't pass the proper event pointer.
  52:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  53:./ucOSII/Core/os_mbox.c **** */
  54:./ucOSII/Core/os_mbox.c **** 
  55:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_ACCEPT_EN > 0u
  56:./ucOSII/Core/os_mbox.c **** void  *OSMboxAccept (OS_EVENT *pevent)
  57:./ucOSII/Core/os_mbox.c **** {
  29              		.loc 1 57 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  58:./ucOSII/Core/os_mbox.c ****     void      *pmsg;
  59:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                              /* Allocate storage for CPU status regist
  60:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
  45              		.loc 1 60 16
  46 0008 0023     		movs	r3, #0
  47 000a FB60     		str	r3, [r7, #12]
  61:./ucOSII/Core/os_mbox.c **** #endif
  62:./ucOSII/Core/os_mbox.c **** 
  63:./ucOSII/Core/os_mbox.c **** 
  64:./ucOSII/Core/os_mbox.c **** 
  65:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
  66:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                        /* Validate 'pevent'                     
  48              		.loc 1 66 8
  49 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 3


  50 000e 002B     		cmp	r3, #0
  51 0010 01D1     		bne	.L2
  67:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
  52              		.loc 1 67 16
  53 0012 0023     		movs	r3, #0
  54 0014 13E0     		b	.L3
  55              	.L2:
  68:./ucOSII/Core/os_mbox.c ****     }
  69:./ucOSII/Core/os_mbox.c **** #endif
  70:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {      /* Validate event block type             
  56              		.loc 1 70 15
  57 0016 7B68     		ldr	r3, [r7, #4]
  58 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  59              		.loc 1 70 8
  60 001a 012B     		cmp	r3, #1
  61 001c 01D0     		beq	.L4
  71:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
  62              		.loc 1 71 16
  63 001e 0023     		movs	r3, #0
  64 0020 0DE0     		b	.L3
  65              	.L4:
  72:./ucOSII/Core/os_mbox.c ****     }
  73:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
  66              		.loc 1 73 5
  67 0022 4020     		movs	r0, #64
  68 0024 FFF7FEFF 		bl	OS_CPU_SR_Save
  69 0028 F860     		str	r0, [r7, #12]
  74:./ucOSII/Core/os_mbox.c ****     pmsg               = pevent->OSEventPtr;
  70              		.loc 1 74 24
  71 002a 7B68     		ldr	r3, [r7, #4]
  72 002c 5B68     		ldr	r3, [r3, #4]
  73 002e BB60     		str	r3, [r7, #8]
  75:./ucOSII/Core/os_mbox.c ****     pevent->OSEventPtr = (void *)0;                       /* Clear the mailbox                     
  74              		.loc 1 75 24
  75 0030 7B68     		ldr	r3, [r7, #4]
  76 0032 0022     		movs	r2, #0
  77 0034 5A60     		str	r2, [r3, #4]
  76:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
  78              		.loc 1 76 5
  79 0036 F868     		ldr	r0, [r7, #12]
  80 0038 FFF7FEFF 		bl	OS_CPU_SR_Restore
  77:./ucOSII/Core/os_mbox.c ****     return (pmsg);                                        /* Return the message received (or NULL) 
  81              		.loc 1 77 12
  82 003c BB68     		ldr	r3, [r7, #8]
  83              	.L3:
  78:./ucOSII/Core/os_mbox.c **** }
  84              		.loc 1 78 1
  85 003e 1846     		mov	r0, r3
  86 0040 1037     		adds	r7, r7, #16
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 8
  89 0042 BD46     		mov	sp, r7
  90              	.LCFI4:
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0044 80BD     		pop	{r7, pc}
  94              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 4


  95              	.LFE3:
  97              		.section	.rodata
  98              		.align	2
  99              	.LC0:
 100 0000 3F00     		.ascii	"?\000"
 101              		.section	.text.OSMboxCreate,"ax",%progbits
 102              		.align	1
 103              		.global	OSMboxCreate
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	OSMboxCreate:
 109              	.LFB4:
  79:./ucOSII/Core/os_mbox.c **** #endif
  80:./ucOSII/Core/os_mbox.c **** 
  81:./ucOSII/Core/os_mbox.c **** 
  82:./ucOSII/Core/os_mbox.c **** /*
  83:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  84:./ucOSII/Core/os_mbox.c **** *                                          CREATE A MESSAGE MAILBOX
  85:./ucOSII/Core/os_mbox.c **** *
  86:./ucOSII/Core/os_mbox.c **** * Description: This function creates a message mailbox if free event control blocks are available.
  87:./ucOSII/Core/os_mbox.c **** *
  88:./ucOSII/Core/os_mbox.c **** * Arguments  : pmsg          is a pointer to a message that you wish to deposit in the mailbox.  If
  89:./ucOSII/Core/os_mbox.c **** *                            you set this value to the NULL pointer (i.e. (void *)0) then the mailb
  90:./ucOSII/Core/os_mbox.c **** *                            will be considered empty.
  91:./ucOSII/Core/os_mbox.c **** *
  92:./ucOSII/Core/os_mbox.c **** * Returns    : != (OS_EVENT *)0  is a pointer to the event control clock (OS_EVENT) associated with
  93:./ucOSII/Core/os_mbox.c **** *                                created mailbox
  94:./ucOSII/Core/os_mbox.c **** *              == (OS_EVENT *)0  if no event control blocks were available
  95:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
  96:./ucOSII/Core/os_mbox.c **** */
  97:./ucOSII/Core/os_mbox.c **** 
  98:./ucOSII/Core/os_mbox.c **** OS_EVENT  *OSMboxCreate (void *pmsg)
  99:./ucOSII/Core/os_mbox.c **** {
 110              		.loc 1 99 1
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 16
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              	.LCFI5:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 84B0     		sub	sp, sp, #16
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 24
 122 0004 00AF     		add	r7, sp, #0
 123              	.LCFI7:
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]
 100:./ucOSII/Core/os_mbox.c ****     OS_EVENT  *pevent;
 101:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 102:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
 126              		.loc 1 102 16
 127 0008 0023     		movs	r3, #0
 128 000a FB60     		str	r3, [r7, #12]
 103:./ucOSII/Core/os_mbox.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 5


 104:./ucOSII/Core/os_mbox.c **** 
 105:./ucOSII/Core/os_mbox.c **** 
 106:./ucOSII/Core/os_mbox.c **** 
 107:./ucOSII/Core/os_mbox.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 108:./ucOSII/Core/os_mbox.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 109:./ucOSII/Core/os_mbox.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 110:./ucOSII/Core/os_mbox.c ****         return ((OS_EVENT *)0);
 111:./ucOSII/Core/os_mbox.c ****     }
 112:./ucOSII/Core/os_mbox.c **** #endif
 113:./ucOSII/Core/os_mbox.c **** 
 114:./ucOSII/Core/os_mbox.c ****     if (OSIntNesting > 0u) {                     /* See if called from ISR ...                     
 129              		.loc 1 114 22
 130 000c 174B     		ldr	r3, .L10
 131 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132              		.loc 1 114 8
 133 0010 002B     		cmp	r3, #0
 134 0012 01D0     		beq	.L6
 115:./ucOSII/Core/os_mbox.c ****         return ((OS_EVENT *)0);                  /* ... can't CREATE from an ISR                   
 135              		.loc 1 115 16
 136 0014 0023     		movs	r3, #0
 137 0016 25E0     		b	.L7
 138              	.L6:
 116:./ucOSII/Core/os_mbox.c ****     }
 117:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 139              		.loc 1 117 5
 140 0018 4020     		movs	r0, #64
 141 001a FFF7FEFF 		bl	OS_CPU_SR_Save
 142 001e F860     		str	r0, [r7, #12]
 118:./ucOSII/Core/os_mbox.c ****     pevent = OSEventFreeList;                    /* Get next free event control block              
 143              		.loc 1 118 12
 144 0020 134B     		ldr	r3, .L10+4
 145 0022 1B68     		ldr	r3, [r3]
 146 0024 BB60     		str	r3, [r7, #8]
 119:./ucOSII/Core/os_mbox.c ****     if (OSEventFreeList != (OS_EVENT *)0) {      /* See if pool of free ECB pool was empty         
 147              		.loc 1 119 25
 148 0026 124B     		ldr	r3, .L10+4
 149 0028 1B68     		ldr	r3, [r3]
 150              		.loc 1 119 8
 151 002a 002B     		cmp	r3, #0
 152 002c 04D0     		beq	.L8
 120:./ucOSII/Core/os_mbox.c ****         OSEventFreeList = (OS_EVENT *)OSEventFreeList->OSEventPtr;
 153              		.loc 1 120 54
 154 002e 104B     		ldr	r3, .L10+4
 155 0030 1B68     		ldr	r3, [r3]
 156 0032 5B68     		ldr	r3, [r3, #4]
 157              		.loc 1 120 25
 158 0034 0E4A     		ldr	r2, .L10+4
 159 0036 1360     		str	r3, [r2]
 160              	.L8:
 121:./ucOSII/Core/os_mbox.c ****     }
 122:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 161              		.loc 1 122 5
 162 0038 F868     		ldr	r0, [r7, #12]
 163 003a FFF7FEFF 		bl	OS_CPU_SR_Restore
 123:./ucOSII/Core/os_mbox.c ****     if (pevent != (OS_EVENT *)0) {
 164              		.loc 1 123 8
 165 003e BB68     		ldr	r3, [r7, #8]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 6


 166 0040 002B     		cmp	r3, #0
 167 0042 0ED0     		beq	.L9
 124:./ucOSII/Core/os_mbox.c ****         pevent->OSEventType    = OS_EVENT_TYPE_MBOX;
 168              		.loc 1 124 32
 169 0044 BB68     		ldr	r3, [r7, #8]
 170 0046 0122     		movs	r2, #1
 171 0048 1A70     		strb	r2, [r3]
 125:./ucOSII/Core/os_mbox.c ****         pevent->OSEventCnt     = 0u;
 172              		.loc 1 125 32
 173 004a BB68     		ldr	r3, [r7, #8]
 174 004c 0022     		movs	r2, #0
 175 004e 1A81     		strh	r2, [r3, #8]	@ movhi
 126:./ucOSII/Core/os_mbox.c ****         pevent->OSEventPtr     = pmsg;           /* Deposit message in event control block         
 176              		.loc 1 126 32
 177 0050 BB68     		ldr	r3, [r7, #8]
 178 0052 7A68     		ldr	r2, [r7, #4]
 179 0054 5A60     		str	r2, [r3, #4]
 127:./ucOSII/Core/os_mbox.c **** #if OS_EVENT_NAME_EN > 0u
 128:./ucOSII/Core/os_mbox.c ****         pevent->OSEventName    = (INT8U *)(void *)"?";
 180              		.loc 1 128 32
 181 0056 BB68     		ldr	r3, [r7, #8]
 182 0058 064A     		ldr	r2, .L10+8
 183 005a 5A61     		str	r2, [r3, #20]
 129:./ucOSII/Core/os_mbox.c **** #endif
 130:./ucOSII/Core/os_mbox.c ****         OS_EventWaitListInit(pevent);
 184              		.loc 1 130 9
 185 005c B868     		ldr	r0, [r7, #8]
 186 005e FFF7FEFF 		bl	OS_EventWaitListInit
 187              	.L9:
 131:./ucOSII/Core/os_mbox.c **** 
 132:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_CREATE(pevent, pevent->OSEventName);
 133:./ucOSII/Core/os_mbox.c ****     }
 134:./ucOSII/Core/os_mbox.c ****     return (pevent);                             /* Return pointer to event control block          
 188              		.loc 1 134 12
 189 0062 BB68     		ldr	r3, [r7, #8]
 190              	.L7:
 135:./ucOSII/Core/os_mbox.c **** }
 191              		.loc 1 135 1
 192 0064 1846     		mov	r0, r3
 193 0066 1037     		adds	r7, r7, #16
 194              	.LCFI8:
 195              		.cfi_def_cfa_offset 8
 196 0068 BD46     		mov	sp, r7
 197              	.LCFI9:
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 006a 80BD     		pop	{r7, pc}
 201              	.L11:
 202              		.align	2
 203              	.L10:
 204 006c 00000000 		.word	OSIntNesting
 205 0070 00000000 		.word	OSEventFreeList
 206 0074 00000000 		.word	.LC0
 207              		.cfi_endproc
 208              	.LFE4:
 210              		.section	.text.OSMboxDel,"ax",%progbits
 211              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 7


 212              		.global	OSMboxDel
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	OSMboxDel:
 218              	.LFB5:
 136:./ucOSII/Core/os_mbox.c **** 
 137:./ucOSII/Core/os_mbox.c **** 
 138:./ucOSII/Core/os_mbox.c **** /*
 139:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 140:./ucOSII/Core/os_mbox.c **** *                                           DELETE A MAIBOX
 141:./ucOSII/Core/os_mbox.c **** *
 142:./ucOSII/Core/os_mbox.c **** * Description: This function deletes a mailbox and readies all tasks pending on the mailbox.
 143:./ucOSII/Core/os_mbox.c **** *
 144:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block associated with the desired
 145:./ucOSII/Core/os_mbox.c **** *                            mailbox.
 146:./ucOSII/Core/os_mbox.c **** *
 147:./ucOSII/Core/os_mbox.c **** *              opt           determines delete options as follows:
 148:./ucOSII/Core/os_mbox.c **** *                            opt == OS_DEL_NO_PEND   Delete the mailbox ONLY if no task pending
 149:./ucOSII/Core/os_mbox.c **** *                            opt == OS_DEL_ALWAYS    Deletes the mailbox even if tasks are waiting.
 150:./ucOSII/Core/os_mbox.c **** *                                                    In this case, all the tasks pending will be re
 151:./ucOSII/Core/os_mbox.c **** *
 152:./ucOSII/Core/os_mbox.c **** *              perr          is a pointer to an error code that can contain one of the following va
 153:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_NONE                  The call was successful and the mailbox w
 154:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_DEL_ISR               If you attempted to delete the mailbox fr
 155:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_INVALID_OPT           An invalid option was specified
 156:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_ILLEGAL_DEL_RUN_TIME  If you tried to delete a mailbox after sa
 157:./ucOSII/Core/os_mbox.c **** *                                                         critical operation started.
 158:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_TASK_WAITING          One or more tasks were waiting on the mai
 159:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_EVENT_TYPE            If you didn't pass a pointer to a mailbox
 160:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEVENT_NULL           If 'pevent' is a NULL pointer.
 161:./ucOSII/Core/os_mbox.c **** *
 162:./ucOSII/Core/os_mbox.c **** * Returns    : pevent        upon error
 163:./ucOSII/Core/os_mbox.c **** *              (OS_EVENT *)0 if the mailbox was successfully deleted.
 164:./ucOSII/Core/os_mbox.c **** *
 165:./ucOSII/Core/os_mbox.c **** * Note(s)    : 1) This function must be used with care.  Tasks that would normally expect the prese
 166:./ucOSII/Core/os_mbox.c **** *                 the mailbox MUST check the return code of OSMboxPend().
 167:./ucOSII/Core/os_mbox.c **** *              2) OSMboxAccept() callers will not know that the intended mailbox has been deleted!
 168:./ucOSII/Core/os_mbox.c **** *              3) This call can potentially disable interrupts for a long time.  The interrupt disa
 169:./ucOSII/Core/os_mbox.c **** *                 time is directly proportional to the number of tasks waiting on the mailbox.
 170:./ucOSII/Core/os_mbox.c **** *              4) Because ALL tasks pending on the mailbox will be readied, you MUST be careful in
 171:./ucOSII/Core/os_mbox.c **** *                 applications where the mailbox is used for mutual exclusion because the resource(
 172:./ucOSII/Core/os_mbox.c **** *                 will no longer be guarded by the mailbox.
 173:./ucOSII/Core/os_mbox.c **** *              5) All tasks that were waiting for the mailbox will be readied and returned an
 174:./ucOSII/Core/os_mbox.c **** *                 OS_ERR_PEND_ABORT if OSMboxDel() was called with OS_DEL_ALWAYS
 175:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 176:./ucOSII/Core/os_mbox.c **** */
 177:./ucOSII/Core/os_mbox.c **** 
 178:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_DEL_EN > 0u
 179:./ucOSII/Core/os_mbox.c **** OS_EVENT  *OSMboxDel (OS_EVENT  *pevent,
 180:./ucOSII/Core/os_mbox.c ****                       INT8U      opt,
 181:./ucOSII/Core/os_mbox.c ****                       INT8U     *perr)
 182:./ucOSII/Core/os_mbox.c **** {
 219              		.loc 1 182 1
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 32
 222              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 8


 223 0000 80B5     		push	{r7, lr}
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 88B0     		sub	sp, sp, #32
 229              	.LCFI11:
 230              		.cfi_def_cfa_offset 40
 231 0004 00AF     		add	r7, sp, #0
 232              	.LCFI12:
 233              		.cfi_def_cfa_register 7
 234 0006 F860     		str	r0, [r7, #12]
 235 0008 0B46     		mov	r3, r1
 236 000a 7A60     		str	r2, [r7, #4]
 237 000c FB72     		strb	r3, [r7, #11]
 183:./ucOSII/Core/os_mbox.c ****     BOOLEAN    tasks_waiting;
 184:./ucOSII/Core/os_mbox.c ****     OS_EVENT  *pevent_return;
 185:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 186:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
 238              		.loc 1 186 16
 239 000e 0023     		movs	r3, #0
 240 0010 7B61     		str	r3, [r7, #20]
 187:./ucOSII/Core/os_mbox.c **** #endif
 188:./ucOSII/Core/os_mbox.c **** 
 189:./ucOSII/Core/os_mbox.c **** 
 190:./ucOSII/Core/os_mbox.c **** 
 191:./ucOSII/Core/os_mbox.c **** #ifdef OS_SAFETY_CRITICAL
 192:./ucOSII/Core/os_mbox.c ****     if (perr == (INT8U *)0) {
 193:./ucOSII/Core/os_mbox.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 194:./ucOSII/Core/os_mbox.c ****         return ((OS_EVENT *)0);
 195:./ucOSII/Core/os_mbox.c ****     }
 196:./ucOSII/Core/os_mbox.c **** #endif
 197:./ucOSII/Core/os_mbox.c **** 
 198:./ucOSII/Core/os_mbox.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 199:./ucOSII/Core/os_mbox.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 200:./ucOSII/Core/os_mbox.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 201:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_ILLEGAL_DEL_RUN_TIME;
 202:./ucOSII/Core/os_mbox.c ****         return ((OS_EVENT *)0);
 203:./ucOSII/Core/os_mbox.c ****     }
 204:./ucOSII/Core/os_mbox.c **** #endif
 205:./ucOSII/Core/os_mbox.c **** 
 206:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
 207:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                    
 241              		.loc 1 207 8
 242 0012 FB68     		ldr	r3, [r7, #12]
 243 0014 002B     		cmp	r3, #0
 244 0016 04D1     		bne	.L13
 208:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_PEVENT_NULL;
 245              		.loc 1 208 15
 246 0018 7B68     		ldr	r3, [r7, #4]
 247 001a 0422     		movs	r2, #4
 248 001c 1A70     		strb	r2, [r3]
 209:./ucOSII/Core/os_mbox.c ****         return (pevent);
 249              		.loc 1 209 16
 250 001e FB68     		ldr	r3, [r7, #12]
 251 0020 7BE0     		b	.L14
 252              	.L13:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 9


 210:./ucOSII/Core/os_mbox.c ****     }
 211:./ucOSII/Core/os_mbox.c **** #endif
 212:./ucOSII/Core/os_mbox.c **** 
 213:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_DEL_ENTER(pevent, opt);
 214:./ucOSII/Core/os_mbox.c **** 
 215:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {       /* Validate event block type            
 253              		.loc 1 215 15
 254 0022 FB68     		ldr	r3, [r7, #12]
 255 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 256              		.loc 1 215 8
 257 0026 012B     		cmp	r3, #1
 258 0028 04D0     		beq	.L15
 216:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_EVENT_TYPE;
 259              		.loc 1 216 15
 260 002a 7B68     		ldr	r3, [r7, #4]
 261 002c 0122     		movs	r2, #1
 262 002e 1A70     		strb	r2, [r3]
 217:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_DEL_EXIT(*perr);
 218:./ucOSII/Core/os_mbox.c ****         return (pevent);
 263              		.loc 1 218 16
 264 0030 FB68     		ldr	r3, [r7, #12]
 265 0032 72E0     		b	.L14
 266              	.L15:
 219:./ucOSII/Core/os_mbox.c ****     }
 220:./ucOSII/Core/os_mbox.c ****     if (OSIntNesting > 0u) {                               /* See if called from ISR ...           
 267              		.loc 1 220 22
 268 0034 3B4B     		ldr	r3, .L29
 269 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270              		.loc 1 220 8
 271 0038 002B     		cmp	r3, #0
 272 003a 04D0     		beq	.L16
 221:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR         
 273              		.loc 1 221 15
 274 003c 7B68     		ldr	r3, [r7, #4]
 275 003e 0F22     		movs	r2, #15
 276 0040 1A70     		strb	r2, [r3]
 222:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_DEL_EXIT(*perr);
 223:./ucOSII/Core/os_mbox.c ****         return (pevent);
 277              		.loc 1 223 16
 278 0042 FB68     		ldr	r3, [r7, #12]
 279 0044 69E0     		b	.L14
 280              	.L16:
 224:./ucOSII/Core/os_mbox.c ****     }
 225:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 281              		.loc 1 225 5
 282 0046 4020     		movs	r0, #64
 283 0048 FFF7FEFF 		bl	OS_CPU_SR_Save
 284 004c 7861     		str	r0, [r7, #20]
 226:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventGrp != 0u) {                        /* See if any tasks waiting on mailbox  
 285              		.loc 1 226 15
 286 004e FB68     		ldr	r3, [r7, #12]
 287 0050 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 288              		.loc 1 226 8
 289 0052 002B     		cmp	r3, #0
 290 0054 02D0     		beq	.L17
 227:./ucOSII/Core/os_mbox.c ****         tasks_waiting = OS_TRUE;                           /* Yes                                  
 291              		.loc 1 227 23
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 10


 292 0056 0123     		movs	r3, #1
 293 0058 FB77     		strb	r3, [r7, #31]
 294 005a 01E0     		b	.L18
 295              	.L17:
 228:./ucOSII/Core/os_mbox.c ****     } else {
 229:./ucOSII/Core/os_mbox.c ****         tasks_waiting = OS_FALSE;                          /* No                                   
 296              		.loc 1 229 23
 297 005c 0023     		movs	r3, #0
 298 005e FB77     		strb	r3, [r7, #31]
 299              	.L18:
 230:./ucOSII/Core/os_mbox.c ****     }
 231:./ucOSII/Core/os_mbox.c ****     switch (opt) {
 300              		.loc 1 231 5
 301 0060 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 302 0062 002B     		cmp	r3, #0
 303 0064 02D0     		beq	.L19
 304 0066 012B     		cmp	r3, #1
 305 0068 2BD0     		beq	.L25
 306 006a 4CE0     		b	.L28
 307              	.L19:
 232:./ucOSII/Core/os_mbox.c ****         case OS_DEL_NO_PEND:                               /* Delete mailbox only if no task waitin
 233:./ucOSII/Core/os_mbox.c ****              if (tasks_waiting == OS_FALSE) {
 308              		.loc 1 233 17
 309 006c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 310 006e 002B     		cmp	r3, #0
 311 0070 18D1     		bne	.L22
 234:./ucOSII/Core/os_mbox.c **** #if OS_EVENT_NAME_EN > 0u
 235:./ucOSII/Core/os_mbox.c ****                  pevent->OSEventName = (INT8U *)(void *)"?";
 312              		.loc 1 235 38
 313 0072 FB68     		ldr	r3, [r7, #12]
 314 0074 2C4A     		ldr	r2, .L29+4
 315 0076 5A61     		str	r2, [r3, #20]
 236:./ucOSII/Core/os_mbox.c **** #endif
 237:./ucOSII/Core/os_mbox.c ****                  pevent->OSEventType = OS_EVENT_TYPE_UNUSED;
 316              		.loc 1 237 38
 317 0078 FB68     		ldr	r3, [r7, #12]
 318 007a 0022     		movs	r2, #0
 319 007c 1A70     		strb	r2, [r3]
 238:./ucOSII/Core/os_mbox.c ****                  pevent->OSEventPtr  = OSEventFreeList;    /* Return Event Control Block to free li
 320              		.loc 1 238 38
 321 007e 2B4B     		ldr	r3, .L29+8
 322 0080 1A68     		ldr	r2, [r3]
 323 0082 FB68     		ldr	r3, [r7, #12]
 324 0084 5A60     		str	r2, [r3, #4]
 239:./ucOSII/Core/os_mbox.c ****                  pevent->OSEventCnt  = 0u;
 325              		.loc 1 239 38
 326 0086 FB68     		ldr	r3, [r7, #12]
 327 0088 0022     		movs	r2, #0
 328 008a 1A81     		strh	r2, [r3, #8]	@ movhi
 240:./ucOSII/Core/os_mbox.c ****                  OSEventFreeList     = pevent;             /* Get next free event control block    
 329              		.loc 1 240 38
 330 008c 274A     		ldr	r2, .L29+8
 331 008e FB68     		ldr	r3, [r7, #12]
 332 0090 1360     		str	r3, [r2]
 241:./ucOSII/Core/os_mbox.c ****                  OS_EXIT_CRITICAL();
 333              		.loc 1 241 18
 334 0092 7869     		ldr	r0, [r7, #20]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 11


 335 0094 FFF7FEFF 		bl	OS_CPU_SR_Restore
 242:./ucOSII/Core/os_mbox.c ****                  *perr               = OS_ERR_NONE;
 336              		.loc 1 242 38
 337 0098 7B68     		ldr	r3, [r7, #4]
 338 009a 0022     		movs	r2, #0
 339 009c 1A70     		strb	r2, [r3]
 243:./ucOSII/Core/os_mbox.c ****                  pevent_return       = (OS_EVENT *)0;      /* Mailbox has been deleted             
 340              		.loc 1 243 38
 341 009e 0023     		movs	r3, #0
 342 00a0 BB61     		str	r3, [r7, #24]
 244:./ucOSII/Core/os_mbox.c ****              } else {
 245:./ucOSII/Core/os_mbox.c ****                  OS_EXIT_CRITICAL();
 246:./ucOSII/Core/os_mbox.c ****                  *perr               = OS_ERR_TASK_WAITING;
 247:./ucOSII/Core/os_mbox.c ****                  pevent_return       = pevent;
 248:./ucOSII/Core/os_mbox.c ****              }
 249:./ucOSII/Core/os_mbox.c ****              break;
 343              		.loc 1 249 14
 344 00a2 39E0     		b	.L24
 345              	.L22:
 245:./ucOSII/Core/os_mbox.c ****                  *perr               = OS_ERR_TASK_WAITING;
 346              		.loc 1 245 18
 347 00a4 7869     		ldr	r0, [r7, #20]
 348 00a6 FFF7FEFF 		bl	OS_CPU_SR_Restore
 246:./ucOSII/Core/os_mbox.c ****                  pevent_return       = pevent;
 349              		.loc 1 246 38
 350 00aa 7B68     		ldr	r3, [r7, #4]
 351 00ac 4922     		movs	r2, #73
 352 00ae 1A70     		strb	r2, [r3]
 247:./ucOSII/Core/os_mbox.c ****              }
 353              		.loc 1 247 38
 354 00b0 FB68     		ldr	r3, [r7, #12]
 355 00b2 BB61     		str	r3, [r7, #24]
 356              		.loc 1 249 14
 357 00b4 30E0     		b	.L24
 358              	.L26:
 250:./ucOSII/Core/os_mbox.c **** 
 251:./ucOSII/Core/os_mbox.c ****         case OS_DEL_ALWAYS:                                /* Always delete the mailbox            
 252:./ucOSII/Core/os_mbox.c ****              while (pevent->OSEventGrp != 0u) {            /* Ready ALL tasks waiting for mailbox  
 253:./ucOSII/Core/os_mbox.c ****                  (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 359              		.loc 1 253 24
 360 00b6 0223     		movs	r3, #2
 361 00b8 0222     		movs	r2, #2
 362 00ba 0021     		movs	r1, #0
 363 00bc F868     		ldr	r0, [r7, #12]
 364 00be FFF7FEFF 		bl	OS_EventTaskRdy
 365              	.L25:
 252:./ucOSII/Core/os_mbox.c ****                  (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 366              		.loc 1 252 27
 367 00c2 FB68     		ldr	r3, [r7, #12]
 368 00c4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 252:./ucOSII/Core/os_mbox.c ****                  (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 369              		.loc 1 252 20
 370 00c6 002B     		cmp	r3, #0
 371 00c8 F5D1     		bne	.L26
 254:./ucOSII/Core/os_mbox.c ****              }
 255:./ucOSII/Core/os_mbox.c **** #if OS_EVENT_NAME_EN > 0u
 256:./ucOSII/Core/os_mbox.c ****              pevent->OSEventName    = (INT8U *)(void *)"?";
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 12


 372              		.loc 1 256 37
 373 00ca FB68     		ldr	r3, [r7, #12]
 374 00cc 164A     		ldr	r2, .L29+4
 375 00ce 5A61     		str	r2, [r3, #20]
 257:./ucOSII/Core/os_mbox.c **** #endif
 258:./ucOSII/Core/os_mbox.c ****              pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
 376              		.loc 1 258 37
 377 00d0 FB68     		ldr	r3, [r7, #12]
 378 00d2 0022     		movs	r2, #0
 379 00d4 1A70     		strb	r2, [r3]
 259:./ucOSII/Core/os_mbox.c ****              pevent->OSEventPtr     = OSEventFreeList;     /* Return Event Control Block to free li
 380              		.loc 1 259 37
 381 00d6 154B     		ldr	r3, .L29+8
 382 00d8 1A68     		ldr	r2, [r3]
 383 00da FB68     		ldr	r3, [r7, #12]
 384 00dc 5A60     		str	r2, [r3, #4]
 260:./ucOSII/Core/os_mbox.c ****              pevent->OSEventCnt     = 0u;
 385              		.loc 1 260 37
 386 00de FB68     		ldr	r3, [r7, #12]
 387 00e0 0022     		movs	r2, #0
 388 00e2 1A81     		strh	r2, [r3, #8]	@ movhi
 261:./ucOSII/Core/os_mbox.c ****              OSEventFreeList        = pevent;              /* Get next free event control block    
 389              		.loc 1 261 37
 390 00e4 114A     		ldr	r2, .L29+8
 391 00e6 FB68     		ldr	r3, [r7, #12]
 392 00e8 1360     		str	r3, [r2]
 262:./ucOSII/Core/os_mbox.c ****              OS_EXIT_CRITICAL();
 393              		.loc 1 262 14
 394 00ea 7869     		ldr	r0, [r7, #20]
 395 00ec FFF7FEFF 		bl	OS_CPU_SR_Restore
 263:./ucOSII/Core/os_mbox.c ****              if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiti
 396              		.loc 1 263 17
 397 00f0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 398 00f2 012B     		cmp	r3, #1
 399 00f4 01D1     		bne	.L27
 264:./ucOSII/Core/os_mbox.c ****                  OS_Sched();                               /* Find highest priority task ready to r
 400              		.loc 1 264 18
 401 00f6 FFF7FEFF 		bl	OS_Sched
 402              	.L27:
 265:./ucOSII/Core/os_mbox.c ****              }
 266:./ucOSII/Core/os_mbox.c ****              *perr         = OS_ERR_NONE;
 403              		.loc 1 266 28
 404 00fa 7B68     		ldr	r3, [r7, #4]
 405 00fc 0022     		movs	r2, #0
 406 00fe 1A70     		strb	r2, [r3]
 267:./ucOSII/Core/os_mbox.c ****              pevent_return = (OS_EVENT *)0;                /* Mailbox has been deleted             
 407              		.loc 1 267 28
 408 0100 0023     		movs	r3, #0
 409 0102 BB61     		str	r3, [r7, #24]
 268:./ucOSII/Core/os_mbox.c ****              break;
 410              		.loc 1 268 14
 411 0104 08E0     		b	.L24
 412              	.L28:
 269:./ucOSII/Core/os_mbox.c **** 
 270:./ucOSII/Core/os_mbox.c ****         default:
 271:./ucOSII/Core/os_mbox.c ****              OS_EXIT_CRITICAL();
 413              		.loc 1 271 14
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 13


 414 0106 7869     		ldr	r0, [r7, #20]
 415 0108 FFF7FEFF 		bl	OS_CPU_SR_Restore
 272:./ucOSII/Core/os_mbox.c ****              *perr         = OS_ERR_INVALID_OPT;
 416              		.loc 1 272 28
 417 010c 7B68     		ldr	r3, [r7, #4]
 418 010e 0722     		movs	r2, #7
 419 0110 1A70     		strb	r2, [r3]
 273:./ucOSII/Core/os_mbox.c ****              pevent_return = pevent;
 420              		.loc 1 273 28
 421 0112 FB68     		ldr	r3, [r7, #12]
 422 0114 BB61     		str	r3, [r7, #24]
 274:./ucOSII/Core/os_mbox.c ****              break;
 423              		.loc 1 274 14
 424 0116 00BF     		nop
 425              	.L24:
 275:./ucOSII/Core/os_mbox.c ****     }
 276:./ucOSII/Core/os_mbox.c **** 
 277:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_DEL_EXIT(*perr);
 278:./ucOSII/Core/os_mbox.c **** 
 279:./ucOSII/Core/os_mbox.c ****     return (pevent_return);
 426              		.loc 1 279 12
 427 0118 BB69     		ldr	r3, [r7, #24]
 428              	.L14:
 280:./ucOSII/Core/os_mbox.c **** }
 429              		.loc 1 280 1
 430 011a 1846     		mov	r0, r3
 431 011c 2037     		adds	r7, r7, #32
 432              	.LCFI13:
 433              		.cfi_def_cfa_offset 8
 434 011e BD46     		mov	sp, r7
 435              	.LCFI14:
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 0120 80BD     		pop	{r7, pc}
 439              	.L30:
 440 0122 00BF     		.align	2
 441              	.L29:
 442 0124 00000000 		.word	OSIntNesting
 443 0128 00000000 		.word	.LC0
 444 012c 00000000 		.word	OSEventFreeList
 445              		.cfi_endproc
 446              	.LFE5:
 448              		.section	.text.OSMboxPend,"ax",%progbits
 449              		.align	1
 450              		.global	OSMboxPend
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	OSMboxPend:
 456              	.LFB6:
 281:./ucOSII/Core/os_mbox.c **** #endif
 282:./ucOSII/Core/os_mbox.c **** 
 283:./ucOSII/Core/os_mbox.c **** 
 284:./ucOSII/Core/os_mbox.c **** /*
 285:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 286:./ucOSII/Core/os_mbox.c **** *                                    PEND ON MAILBOX FOR A MESSAGE
 287:./ucOSII/Core/os_mbox.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 14


 288:./ucOSII/Core/os_mbox.c **** * Description: This function waits for a message to be sent to a mailbox
 289:./ucOSII/Core/os_mbox.c **** *
 290:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block associated with the desired ma
 291:./ucOSII/Core/os_mbox.c **** *
 292:./ucOSII/Core/os_mbox.c **** *              timeout       is an optional timeout period (in clock ticks).  If non-zero, your tas
 293:./ucOSII/Core/os_mbox.c **** *                            wait for a message to arrive at the mailbox up to the amount of time
 294:./ucOSII/Core/os_mbox.c **** *                            specified by this argument.  If you specify 0, however, your task will
 295:./ucOSII/Core/os_mbox.c **** *                            forever at the specified mailbox or, until a message arrives.
 296:./ucOSII/Core/os_mbox.c **** *
 297:./ucOSII/Core/os_mbox.c **** *              perr          is a pointer to where an error message will be deposited.  Possible er
 298:./ucOSII/Core/os_mbox.c **** *                            messages are:
 299:./ucOSII/Core/os_mbox.c **** *
 300:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_NONE         The call was successful and your task received a
 301:./ucOSII/Core/os_mbox.c **** *                                                message.
 302:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_TIMEOUT      A message was not received within the specified 't
 303:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEND_ABORT   The wait on the mailbox was aborted.
 304:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_EVENT_TYPE   Invalid event type
 305:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEND_ISR     If you called this function from an ISR and the re
 306:./ucOSII/Core/os_mbox.c **** *                                                would lead to a suspension.
 307:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEVENT_NULL  If 'pevent' is a NULL pointer
 308:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEND_LOCKED  If you called this function when the scheduler is 
 309:./ucOSII/Core/os_mbox.c **** *
 310:./ucOSII/Core/os_mbox.c **** * Returns    : != (void *)0  is a pointer to the message received
 311:./ucOSII/Core/os_mbox.c **** *              == (void *)0  if no message was received or,
 312:./ucOSII/Core/os_mbox.c **** *                            if 'pevent' is a NULL pointer or,
 313:./ucOSII/Core/os_mbox.c **** *                            if you didn't pass the proper pointer to the event control block.
 314:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 315:./ucOSII/Core/os_mbox.c **** */
 316:./ucOSII/Core/os_mbox.c **** 
 317:./ucOSII/Core/os_mbox.c **** void  *OSMboxPend (OS_EVENT  *pevent,
 318:./ucOSII/Core/os_mbox.c ****                    INT32U     timeout,
 319:./ucOSII/Core/os_mbox.c ****                    INT8U     *perr)
 320:./ucOSII/Core/os_mbox.c **** {
 457              		.loc 1 320 1
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 24
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              	.LCFI15:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 86B0     		sub	sp, sp, #24
 467              	.LCFI16:
 468              		.cfi_def_cfa_offset 32
 469 0004 00AF     		add	r7, sp, #0
 470              	.LCFI17:
 471              		.cfi_def_cfa_register 7
 472 0006 F860     		str	r0, [r7, #12]
 473 0008 B960     		str	r1, [r7, #8]
 474 000a 7A60     		str	r2, [r7, #4]
 321:./ucOSII/Core/os_mbox.c ****     void      *pmsg;
 322:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                          /* Allocate storage for CPU status register  
 323:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
 475              		.loc 1 323 16
 476 000c 0023     		movs	r3, #0
 477 000e 3B61     		str	r3, [r7, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 15


 324:./ucOSII/Core/os_mbox.c **** #endif
 325:./ucOSII/Core/os_mbox.c **** 
 326:./ucOSII/Core/os_mbox.c **** 
 327:./ucOSII/Core/os_mbox.c **** #ifdef OS_SAFETY_CRITICAL
 328:./ucOSII/Core/os_mbox.c ****     if (perr == (INT8U *)0) {
 329:./ucOSII/Core/os_mbox.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 330:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
 331:./ucOSII/Core/os_mbox.c ****     }
 332:./ucOSII/Core/os_mbox.c **** #endif
 333:./ucOSII/Core/os_mbox.c **** 
 334:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
 335:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                         
 478              		.loc 1 335 8
 479 0010 FB68     		ldr	r3, [r7, #12]
 480 0012 002B     		cmp	r3, #0
 481 0014 04D1     		bne	.L32
 336:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_PEVENT_NULL;
 482              		.loc 1 336 15
 483 0016 7B68     		ldr	r3, [r7, #4]
 484 0018 0422     		movs	r2, #4
 485 001a 1A70     		strb	r2, [r3]
 337:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
 486              		.loc 1 337 16
 487 001c 0023     		movs	r3, #0
 488 001e 90E0     		b	.L33
 489              	.L32:
 338:./ucOSII/Core/os_mbox.c ****     }
 339:./ucOSII/Core/os_mbox.c **** #endif
 340:./ucOSII/Core/os_mbox.c **** 
 341:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_PEND_ENTER(pevent, timeout);
 342:./ucOSII/Core/os_mbox.c **** 
 343:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {  /* Validate event block type                 
 490              		.loc 1 343 15
 491 0020 FB68     		ldr	r3, [r7, #12]
 492 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 493              		.loc 1 343 8
 494 0024 012B     		cmp	r3, #1
 495 0026 04D0     		beq	.L34
 344:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_EVENT_TYPE;
 496              		.loc 1 344 15
 497 0028 7B68     		ldr	r3, [r7, #4]
 498 002a 0122     		movs	r2, #1
 499 002c 1A70     		strb	r2, [r3]
 345:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_PEND_EXIT(*perr);
 346:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
 500              		.loc 1 346 16
 501 002e 0023     		movs	r3, #0
 502 0030 87E0     		b	.L33
 503              	.L34:
 347:./ucOSII/Core/os_mbox.c ****     }
 348:./ucOSII/Core/os_mbox.c ****     if (OSIntNesting > 0u) {                          /* See if called from ISR ...                
 504              		.loc 1 348 22
 505 0032 464B     		ldr	r3, .L43
 506 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 507              		.loc 1 348 8
 508 0036 002B     		cmp	r3, #0
 509 0038 04D0     		beq	.L35
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 16


 349:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_PEND_ISR;                      /* ... can't PEND from an ISR                
 510              		.loc 1 349 15
 511 003a 7B68     		ldr	r3, [r7, #4]
 512 003c 0222     		movs	r2, #2
 513 003e 1A70     		strb	r2, [r3]
 350:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_PEND_EXIT(*perr);
 351:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
 514              		.loc 1 351 16
 515 0040 0023     		movs	r3, #0
 516 0042 7EE0     		b	.L33
 517              	.L35:
 352:./ucOSII/Core/os_mbox.c ****     }
 353:./ucOSII/Core/os_mbox.c ****     if (OSLockNesting > 0u) {                         /* See if called with scheduler locked ...   
 518              		.loc 1 353 23
 519 0044 424B     		ldr	r3, .L43+4
 520 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521              		.loc 1 353 8
 522 0048 002B     		cmp	r3, #0
 523 004a 04D0     		beq	.L36
 354:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_PEND_LOCKED;                   /* ... can't PEND when locked                
 524              		.loc 1 354 15
 525 004c 7B68     		ldr	r3, [r7, #4]
 526 004e 0D22     		movs	r2, #13
 527 0050 1A70     		strb	r2, [r3]
 355:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_PEND_EXIT(*perr);
 356:./ucOSII/Core/os_mbox.c ****         return ((void *)0);
 528              		.loc 1 356 16
 529 0052 0023     		movs	r3, #0
 530 0054 75E0     		b	.L33
 531              	.L36:
 357:./ucOSII/Core/os_mbox.c ****     }
 358:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 532              		.loc 1 358 5
 533 0056 4020     		movs	r0, #64
 534 0058 FFF7FEFF 		bl	OS_CPU_SR_Save
 535 005c 3861     		str	r0, [r7, #16]
 359:./ucOSII/Core/os_mbox.c ****     pmsg = pevent->OSEventPtr;
 536              		.loc 1 359 10
 537 005e FB68     		ldr	r3, [r7, #12]
 538 0060 5B68     		ldr	r3, [r3, #4]
 539 0062 7B61     		str	r3, [r7, #20]
 360:./ucOSII/Core/os_mbox.c ****     if (pmsg != (void *)0) {                          /* See if there is already a message         
 540              		.loc 1 360 8
 541 0064 7B69     		ldr	r3, [r7, #20]
 542 0066 002B     		cmp	r3, #0
 543 0068 0AD0     		beq	.L37
 361:./ucOSII/Core/os_mbox.c ****         pevent->OSEventPtr = (void *)0;               /* Clear the mailbox                         
 544              		.loc 1 361 28
 545 006a FB68     		ldr	r3, [r7, #12]
 546 006c 0022     		movs	r2, #0
 547 006e 5A60     		str	r2, [r3, #4]
 362:./ucOSII/Core/os_mbox.c ****         OS_EXIT_CRITICAL();
 548              		.loc 1 362 9
 549 0070 3869     		ldr	r0, [r7, #16]
 550 0072 FFF7FEFF 		bl	OS_CPU_SR_Restore
 363:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_NONE;
 551              		.loc 1 363 15
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 17


 552 0076 7B68     		ldr	r3, [r7, #4]
 553 0078 0022     		movs	r2, #0
 554 007a 1A70     		strb	r2, [r3]
 364:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_PEND_EXIT(*perr);
 365:./ucOSII/Core/os_mbox.c ****         return (pmsg);                                /* Return the message received (or NULL)     
 555              		.loc 1 365 16
 556 007c 7B69     		ldr	r3, [r7, #20]
 557 007e 60E0     		b	.L33
 558              	.L37:
 366:./ucOSII/Core/os_mbox.c ****     }
 367:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBStat     |= OS_STAT_MBOX;          /* Message not available, task will pend     
 559              		.loc 1 367 29
 560 0080 344B     		ldr	r3, .L43+8
 561 0082 1B68     		ldr	r3, [r3]
 562 0084 93F83820 		ldrb	r2, [r3, #56]	@ zero_extendqisi2
 563 0088 324B     		ldr	r3, .L43+8
 564 008a 1B68     		ldr	r3, [r3]
 565 008c 42F00202 		orr	r2, r2, #2
 566 0090 D2B2     		uxtb	r2, r2
 567 0092 83F83820 		strb	r2, [r3, #56]
 368:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
 568              		.loc 1 368 13
 569 0096 2F4B     		ldr	r3, .L43+8
 570 0098 1B68     		ldr	r3, [r3]
 571              		.loc 1 368 30
 572 009a 0022     		movs	r2, #0
 573 009c 83F83920 		strb	r2, [r3, #57]
 369:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBDly       = timeout;               /* Load timeout in TCB                       
 574              		.loc 1 369 13
 575 00a0 2C4B     		ldr	r3, .L43+8
 576 00a2 1B68     		ldr	r3, [r3]
 577              		.loc 1 369 30
 578 00a4 BA68     		ldr	r2, [r7, #8]
 579 00a6 5A63     		str	r2, [r3, #52]
 370:./ucOSII/Core/os_mbox.c ****     OS_EventTaskWait(pevent);                         /* Suspend task until event or timeout occurs
 580              		.loc 1 370 5
 581 00a8 F868     		ldr	r0, [r7, #12]
 582 00aa FFF7FEFF 		bl	OS_EventTaskWait
 371:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 583              		.loc 1 371 5
 584 00ae 3869     		ldr	r0, [r7, #16]
 585 00b0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 372:./ucOSII/Core/os_mbox.c ****     OS_Sched();                                       /* Find next highest priority task ready to r
 586              		.loc 1 372 5
 587 00b4 FFF7FEFF 		bl	OS_Sched
 373:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 588              		.loc 1 373 5
 589 00b8 4020     		movs	r0, #64
 590 00ba FFF7FEFF 		bl	OS_CPU_SR_Save
 591 00be 3861     		str	r0, [r7, #16]
 374:./ucOSII/Core/os_mbox.c ****     switch (OSTCBCur->OSTCBStatPend) {                /* See if we timed-out or aborted            
 592              		.loc 1 374 21
 593 00c0 244B     		ldr	r3, .L43+8
 594 00c2 1B68     		ldr	r3, [r3]
 595 00c4 93F83930 		ldrb	r3, [r3, #57]	@ zero_extendqisi2
 596              		.loc 1 374 5
 597 00c8 002B     		cmp	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 18


 598 00ca 02D0     		beq	.L38
 599 00cc 022B     		cmp	r3, #2
 600 00ce 08D0     		beq	.L39
 601 00d0 0DE0     		b	.L42
 602              	.L38:
 375:./ucOSII/Core/os_mbox.c ****         case OS_STAT_PEND_OK:
 376:./ucOSII/Core/os_mbox.c ****              pmsg =  OSTCBCur->OSTCBMsg;
 603              		.loc 1 376 30
 604 00d2 204B     		ldr	r3, .L43+8
 605 00d4 1B68     		ldr	r3, [r3]
 606              		.loc 1 376 19
 607 00d6 9B6A     		ldr	r3, [r3, #40]
 608 00d8 7B61     		str	r3, [r7, #20]
 377:./ucOSII/Core/os_mbox.c ****             *perr =  OS_ERR_NONE;
 609              		.loc 1 377 19
 610 00da 7B68     		ldr	r3, [r7, #4]
 611 00dc 0022     		movs	r2, #0
 612 00de 1A70     		strb	r2, [r3]
 378:./ucOSII/Core/os_mbox.c ****              break;
 613              		.loc 1 378 14
 614 00e0 11E0     		b	.L41
 615              	.L39:
 379:./ucOSII/Core/os_mbox.c **** 
 380:./ucOSII/Core/os_mbox.c ****         case OS_STAT_PEND_ABORT:
 381:./ucOSII/Core/os_mbox.c ****              pmsg = (void *)0;
 616              		.loc 1 381 19
 617 00e2 0023     		movs	r3, #0
 618 00e4 7B61     		str	r3, [r7, #20]
 382:./ucOSII/Core/os_mbox.c ****             *perr =  OS_ERR_PEND_ABORT;               /* Indicate that we aborted                  
 619              		.loc 1 382 19
 620 00e6 7B68     		ldr	r3, [r7, #4]
 621 00e8 0E22     		movs	r2, #14
 622 00ea 1A70     		strb	r2, [r3]
 383:./ucOSII/Core/os_mbox.c ****              break;
 623              		.loc 1 383 14
 624 00ec 0BE0     		b	.L41
 625              	.L42:
 384:./ucOSII/Core/os_mbox.c **** 
 385:./ucOSII/Core/os_mbox.c ****         case OS_STAT_PEND_TO:
 386:./ucOSII/Core/os_mbox.c ****         default:
 387:./ucOSII/Core/os_mbox.c ****              OS_EventTaskRemove(OSTCBCur, pevent);
 626              		.loc 1 387 14
 627 00ee 194B     		ldr	r3, .L43+8
 628 00f0 1B68     		ldr	r3, [r3]
 629 00f2 F968     		ldr	r1, [r7, #12]
 630 00f4 1846     		mov	r0, r3
 631 00f6 FFF7FEFF 		bl	OS_EventTaskRemove
 388:./ucOSII/Core/os_mbox.c ****              pmsg = (void *)0;
 632              		.loc 1 388 19
 633 00fa 0023     		movs	r3, #0
 634 00fc 7B61     		str	r3, [r7, #20]
 389:./ucOSII/Core/os_mbox.c ****             *perr =  OS_ERR_TIMEOUT;                  /* Indicate that we didn't get event within T
 635              		.loc 1 389 19
 636 00fe 7B68     		ldr	r3, [r7, #4]
 637 0100 0A22     		movs	r2, #10
 638 0102 1A70     		strb	r2, [r3]
 390:./ucOSII/Core/os_mbox.c ****              break;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 19


 639              		.loc 1 390 14
 640 0104 00BF     		nop
 641              	.L41:
 391:./ucOSII/Core/os_mbox.c ****     }
 392:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBStat          =  OS_STAT_RDY;      /* Set   task  status to ready               
 642              		.loc 1 392 13
 643 0106 134B     		ldr	r3, .L43+8
 644 0108 1B68     		ldr	r3, [r3]
 645              		.loc 1 392 34
 646 010a 0022     		movs	r2, #0
 647 010c 83F83820 		strb	r2, [r3, #56]
 393:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;  /* Clear pend  status                        
 648              		.loc 1 393 13
 649 0110 104B     		ldr	r3, .L43+8
 650 0112 1B68     		ldr	r3, [r3]
 651              		.loc 1 393 34
 652 0114 0022     		movs	r2, #0
 653 0116 83F83920 		strb	r2, [r3, #57]
 394:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                      
 654              		.loc 1 394 13
 655 011a 0E4B     		ldr	r3, .L43+8
 656 011c 1B68     		ldr	r3, [r3]
 657              		.loc 1 394 34
 658 011e 0022     		movs	r2, #0
 659 0120 DA61     		str	r2, [r3, #28]
 395:./ucOSII/Core/os_mbox.c **** #if (OS_EVENT_MULTI_EN > 0u)
 396:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
 660              		.loc 1 396 13
 661 0122 0C4B     		ldr	r3, .L43+8
 662 0124 1B68     		ldr	r3, [r3]
 663              		.loc 1 396 34
 664 0126 0022     		movs	r2, #0
 665 0128 1A62     		str	r2, [r3, #32]
 397:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBEventMultiRdy = (OS_EVENT  *)0;
 666              		.loc 1 397 13
 667 012a 0A4B     		ldr	r3, .L43+8
 668 012c 1B68     		ldr	r3, [r3]
 669              		.loc 1 397 34
 670 012e 0022     		movs	r2, #0
 671 0130 5A62     		str	r2, [r3, #36]
 398:./ucOSII/Core/os_mbox.c **** #endif
 399:./ucOSII/Core/os_mbox.c ****     OSTCBCur->OSTCBMsg           = (void      *)0;    /* Clear  received message                   
 672              		.loc 1 399 13
 673 0132 084B     		ldr	r3, .L43+8
 674 0134 1B68     		ldr	r3, [r3]
 675              		.loc 1 399 34
 676 0136 0022     		movs	r2, #0
 677 0138 9A62     		str	r2, [r3, #40]
 400:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 678              		.loc 1 400 5
 679 013a 3869     		ldr	r0, [r7, #16]
 680 013c FFF7FEFF 		bl	OS_CPU_SR_Restore
 401:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_PEND_EXIT(*perr);
 402:./ucOSII/Core/os_mbox.c **** 
 403:./ucOSII/Core/os_mbox.c ****     return (pmsg);                                    /* Return received message                   
 681              		.loc 1 403 12
 682 0140 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 20


 683              	.L33:
 404:./ucOSII/Core/os_mbox.c **** }
 684              		.loc 1 404 1
 685 0142 1846     		mov	r0, r3
 686 0144 1837     		adds	r7, r7, #24
 687              	.LCFI18:
 688              		.cfi_def_cfa_offset 8
 689 0146 BD46     		mov	sp, r7
 690              	.LCFI19:
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 0148 80BD     		pop	{r7, pc}
 694              	.L44:
 695 014a 00BF     		.align	2
 696              	.L43:
 697 014c 00000000 		.word	OSIntNesting
 698 0150 00000000 		.word	OSLockNesting
 699 0154 00000000 		.word	OSTCBCur
 700              		.cfi_endproc
 701              	.LFE6:
 703              		.section	.text.OSMboxPendAbort,"ax",%progbits
 704              		.align	1
 705              		.global	OSMboxPendAbort
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 710              	OSMboxPendAbort:
 711              	.LFB7:
 405:./ucOSII/Core/os_mbox.c **** 
 406:./ucOSII/Core/os_mbox.c **** 
 407:./ucOSII/Core/os_mbox.c **** /*
 408:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 409:./ucOSII/Core/os_mbox.c **** *                                     ABORT WAITING ON A MESSAGE MAILBOX
 410:./ucOSII/Core/os_mbox.c **** *
 411:./ucOSII/Core/os_mbox.c **** * Description: This function aborts & readies any tasks currently waiting on a mailbox.  This funct
 412:./ucOSII/Core/os_mbox.c **** *              should be used to fault-abort the wait on the mailbox, rather than to normally signa
 413:./ucOSII/Core/os_mbox.c **** *              the mailbox via OSMboxPost() or OSMboxPostOpt().
 414:./ucOSII/Core/os_mbox.c **** *
 415:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block associated with the desired ma
 416:./ucOSII/Core/os_mbox.c **** *
 417:./ucOSII/Core/os_mbox.c **** *              opt           determines the type of ABORT performed:
 418:./ucOSII/Core/os_mbox.c **** *                            OS_PEND_OPT_NONE         ABORT wait for a single task (HPT) waiting on
 419:./ucOSII/Core/os_mbox.c **** *                                                     mailbox
 420:./ucOSII/Core/os_mbox.c **** *                            OS_PEND_OPT_BROADCAST    ABORT wait for ALL tasks that are  waiting on
 421:./ucOSII/Core/os_mbox.c **** *                                                     mailbox
 422:./ucOSII/Core/os_mbox.c **** *
 423:./ucOSII/Core/os_mbox.c **** *              perr          is a pointer to where an error message will be deposited.  Possible er
 424:./ucOSII/Core/os_mbox.c **** *                            messages are:
 425:./ucOSII/Core/os_mbox.c **** *
 426:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_NONE         No tasks were     waiting on the mailbox.
 427:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEND_ABORT   At least one task waiting on the mailbox was readi
 428:./ucOSII/Core/os_mbox.c **** *                                                and informed of the aborted wait; check return val
 429:./ucOSII/Core/os_mbox.c **** *                                                for the number of tasks whose wait on the mailbox
 430:./ucOSII/Core/os_mbox.c **** *                                                was aborted.
 431:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_EVENT_TYPE   If you didn't pass a pointer to a mailbox.
 432:./ucOSII/Core/os_mbox.c **** *                            OS_ERR_PEVENT_NULL  If 'pevent' is a NULL pointer.
 433:./ucOSII/Core/os_mbox.c **** *
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 21


 434:./ucOSII/Core/os_mbox.c **** * Returns    : == 0          if no tasks were waiting on the mailbox, or upon error.
 435:./ucOSII/Core/os_mbox.c **** *              >  0          if one or more tasks waiting on the mailbox are now readied and inform
 436:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 437:./ucOSII/Core/os_mbox.c **** */
 438:./ucOSII/Core/os_mbox.c **** 
 439:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_PEND_ABORT_EN > 0u
 440:./ucOSII/Core/os_mbox.c **** INT8U  OSMboxPendAbort (OS_EVENT  *pevent,
 441:./ucOSII/Core/os_mbox.c ****                         INT8U      opt,
 442:./ucOSII/Core/os_mbox.c ****                         INT8U     *perr)
 443:./ucOSII/Core/os_mbox.c **** {
 712              		.loc 1 443 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 24
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716 0000 80B5     		push	{r7, lr}
 717              	.LCFI20:
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 86B0     		sub	sp, sp, #24
 722              	.LCFI21:
 723              		.cfi_def_cfa_offset 32
 724 0004 00AF     		add	r7, sp, #0
 725              	.LCFI22:
 726              		.cfi_def_cfa_register 7
 727 0006 F860     		str	r0, [r7, #12]
 728 0008 0B46     		mov	r3, r1
 729 000a 7A60     		str	r2, [r7, #4]
 730 000c FB72     		strb	r3, [r7, #11]
 444:./ucOSII/Core/os_mbox.c ****     INT8U      nbr_tasks;
 445:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 446:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
 731              		.loc 1 446 16
 732 000e 0023     		movs	r3, #0
 733 0010 3B61     		str	r3, [r7, #16]
 447:./ucOSII/Core/os_mbox.c **** #endif
 448:./ucOSII/Core/os_mbox.c **** 
 449:./ucOSII/Core/os_mbox.c **** 
 450:./ucOSII/Core/os_mbox.c **** 
 451:./ucOSII/Core/os_mbox.c **** #ifdef OS_SAFETY_CRITICAL
 452:./ucOSII/Core/os_mbox.c ****     if (perr == (INT8U *)0) {
 453:./ucOSII/Core/os_mbox.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 454:./ucOSII/Core/os_mbox.c ****         return (0u);
 455:./ucOSII/Core/os_mbox.c ****     }
 456:./ucOSII/Core/os_mbox.c **** #endif
 457:./ucOSII/Core/os_mbox.c **** 
 458:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
 459:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                    
 734              		.loc 1 459 8
 735 0012 FB68     		ldr	r3, [r7, #12]
 736 0014 002B     		cmp	r3, #0
 737 0016 04D1     		bne	.L46
 460:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_PEVENT_NULL;
 738              		.loc 1 460 15
 739 0018 7B68     		ldr	r3, [r7, #4]
 740 001a 0422     		movs	r2, #4
 741 001c 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 22


 461:./ucOSII/Core/os_mbox.c ****         return (0u);
 742              		.loc 1 461 16
 743 001e 0023     		movs	r3, #0
 744 0020 3FE0     		b	.L47
 745              	.L46:
 462:./ucOSII/Core/os_mbox.c ****     }
 463:./ucOSII/Core/os_mbox.c **** #endif
 464:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {       /* Validate event block type            
 746              		.loc 1 464 15
 747 0022 FB68     		ldr	r3, [r7, #12]
 748 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 749              		.loc 1 464 8
 750 0026 012B     		cmp	r3, #1
 751 0028 04D0     		beq	.L48
 465:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_EVENT_TYPE;
 752              		.loc 1 465 15
 753 002a 7B68     		ldr	r3, [r7, #4]
 754 002c 0122     		movs	r2, #1
 755 002e 1A70     		strb	r2, [r3]
 466:./ucOSII/Core/os_mbox.c ****         return (0u);
 756              		.loc 1 466 16
 757 0030 0023     		movs	r3, #0
 758 0032 36E0     		b	.L47
 759              	.L48:
 467:./ucOSII/Core/os_mbox.c ****     }
 468:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 760              		.loc 1 468 5
 761 0034 4020     		movs	r0, #64
 762 0036 FFF7FEFF 		bl	OS_CPU_SR_Save
 763 003a 3861     		str	r0, [r7, #16]
 469:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventGrp != 0u) {                        /* See if any task waiting on mailbox?  
 764              		.loc 1 469 15
 765 003c FB68     		ldr	r3, [r7, #12]
 766 003e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 767              		.loc 1 469 8
 768 0040 002B     		cmp	r3, #0
 769 0042 27D0     		beq	.L49
 470:./ucOSII/Core/os_mbox.c ****         nbr_tasks = 0u;
 770              		.loc 1 470 19
 771 0044 0023     		movs	r3, #0
 772 0046 FB75     		strb	r3, [r7, #23]
 471:./ucOSII/Core/os_mbox.c ****         switch (opt) {
 773              		.loc 1 471 9
 774 0048 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 775 004a 012B     		cmp	r3, #1
 776 004c 0ED1     		bne	.L50
 472:./ucOSII/Core/os_mbox.c ****             case OS_PEND_OPT_BROADCAST:                    /* Do we need to abort ALL waiting tasks
 473:./ucOSII/Core/os_mbox.c ****                  while (pevent->OSEventGrp != 0u) {        /* Yes, ready ALL tasks waiting on mailb
 777              		.loc 1 473 24
 778 004e 08E0     		b	.L51
 779              	.L52:
 474:./ucOSII/Core/os_mbox.c ****                      (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 780              		.loc 1 474 28
 781 0050 0223     		movs	r3, #2
 782 0052 0222     		movs	r2, #2
 783 0054 0021     		movs	r1, #0
 784 0056 F868     		ldr	r0, [r7, #12]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 23


 785 0058 FFF7FEFF 		bl	OS_EventTaskRdy
 475:./ucOSII/Core/os_mbox.c ****                      nbr_tasks++;
 786              		.loc 1 475 31
 787 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 788 005e 0133     		adds	r3, r3, #1
 789 0060 FB75     		strb	r3, [r7, #23]
 790              	.L51:
 473:./ucOSII/Core/os_mbox.c ****                      (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 791              		.loc 1 473 31
 792 0062 FB68     		ldr	r3, [r7, #12]
 793 0064 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 473:./ucOSII/Core/os_mbox.c ****                      (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 794              		.loc 1 473 24
 795 0066 002B     		cmp	r3, #0
 796 0068 F2D1     		bne	.L52
 476:./ucOSII/Core/os_mbox.c ****                  }
 477:./ucOSII/Core/os_mbox.c ****                  break;
 797              		.loc 1 477 18
 798 006a 09E0     		b	.L53
 799              	.L50:
 478:./ucOSII/Core/os_mbox.c **** 
 479:./ucOSII/Core/os_mbox.c ****             case OS_PEND_OPT_NONE:
 480:./ucOSII/Core/os_mbox.c ****             default:                                       /* No,  ready HPT       waiting on mailb
 481:./ucOSII/Core/os_mbox.c ****                  (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_MBOX, OS_STAT_PEND_ABORT);
 800              		.loc 1 481 24
 801 006c 0223     		movs	r3, #2
 802 006e 0222     		movs	r2, #2
 803 0070 0021     		movs	r1, #0
 804 0072 F868     		ldr	r0, [r7, #12]
 805 0074 FFF7FEFF 		bl	OS_EventTaskRdy
 482:./ucOSII/Core/os_mbox.c ****                  nbr_tasks++;
 806              		.loc 1 482 27
 807 0078 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 808 007a 0133     		adds	r3, r3, #1
 809 007c FB75     		strb	r3, [r7, #23]
 483:./ucOSII/Core/os_mbox.c ****                  break;
 810              		.loc 1 483 18
 811 007e 00BF     		nop
 812              	.L53:
 484:./ucOSII/Core/os_mbox.c ****         }
 485:./ucOSII/Core/os_mbox.c ****         OS_EXIT_CRITICAL();
 813              		.loc 1 485 9
 814 0080 3869     		ldr	r0, [r7, #16]
 815 0082 FFF7FEFF 		bl	OS_CPU_SR_Restore
 486:./ucOSII/Core/os_mbox.c ****         OS_Sched();                                        /* Find HPT ready to run                
 816              		.loc 1 486 9
 817 0086 FFF7FEFF 		bl	OS_Sched
 487:./ucOSII/Core/os_mbox.c ****         *perr = OS_ERR_PEND_ABORT;
 818              		.loc 1 487 15
 819 008a 7B68     		ldr	r3, [r7, #4]
 820 008c 0E22     		movs	r2, #14
 821 008e 1A70     		strb	r2, [r3]
 488:./ucOSII/Core/os_mbox.c ****         return (nbr_tasks);
 822              		.loc 1 488 16
 823 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 824 0092 06E0     		b	.L47
 825              	.L49:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 24


 489:./ucOSII/Core/os_mbox.c ****     }
 490:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 826              		.loc 1 490 5
 827 0094 3869     		ldr	r0, [r7, #16]
 828 0096 FFF7FEFF 		bl	OS_CPU_SR_Restore
 491:./ucOSII/Core/os_mbox.c ****     *perr = OS_ERR_NONE;
 829              		.loc 1 491 11
 830 009a 7B68     		ldr	r3, [r7, #4]
 831 009c 0022     		movs	r2, #0
 832 009e 1A70     		strb	r2, [r3]
 492:./ucOSII/Core/os_mbox.c ****     return (0u);                                           /* No tasks waiting on mailbox          
 833              		.loc 1 492 12
 834 00a0 0023     		movs	r3, #0
 835              	.L47:
 493:./ucOSII/Core/os_mbox.c **** }
 836              		.loc 1 493 1
 837 00a2 1846     		mov	r0, r3
 838 00a4 1837     		adds	r7, r7, #24
 839              	.LCFI23:
 840              		.cfi_def_cfa_offset 8
 841 00a6 BD46     		mov	sp, r7
 842              	.LCFI24:
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 00a8 80BD     		pop	{r7, pc}
 846              		.cfi_endproc
 847              	.LFE7:
 849              		.section	.text.OSMboxPost,"ax",%progbits
 850              		.align	1
 851              		.global	OSMboxPost
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 856              	OSMboxPost:
 857              	.LFB8:
 494:./ucOSII/Core/os_mbox.c **** #endif
 495:./ucOSII/Core/os_mbox.c **** 
 496:./ucOSII/Core/os_mbox.c **** 
 497:./ucOSII/Core/os_mbox.c **** /*
 498:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 499:./ucOSII/Core/os_mbox.c **** *                                      POST MESSAGE TO A MAILBOX
 500:./ucOSII/Core/os_mbox.c **** *
 501:./ucOSII/Core/os_mbox.c **** * Description: This function sends a message to a mailbox
 502:./ucOSII/Core/os_mbox.c **** *
 503:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block associated with the desired ma
 504:./ucOSII/Core/os_mbox.c **** *
 505:./ucOSII/Core/os_mbox.c **** *              pmsg          is a pointer to the message to send.  You MUST NOT send a NULL pointer
 506:./ucOSII/Core/os_mbox.c **** *
 507:./ucOSII/Core/os_mbox.c **** * Returns    : OS_ERR_NONE          The call was successful and the message was sent
 508:./ucOSII/Core/os_mbox.c **** *              OS_ERR_MBOX_FULL     If the mailbox already contains a message.  You can can only se
 509:./ucOSII/Core/os_mbox.c **** *                                   message at a time and thus, the message MUST be consumed before
 510:./ucOSII/Core/os_mbox.c **** *                                   are allowed to send another one.
 511:./ucOSII/Core/os_mbox.c **** *              OS_ERR_EVENT_TYPE    If you are attempting to post to a non mailbox.
 512:./ucOSII/Core/os_mbox.c **** *              OS_ERR_PEVENT_NULL   If 'pevent' is a NULL pointer
 513:./ucOSII/Core/os_mbox.c **** *              OS_ERR_POST_NULL_PTR If you are attempting to post a NULL pointer
 514:./ucOSII/Core/os_mbox.c **** *
 515:./ucOSII/Core/os_mbox.c **** * Note(s)    : 1) HPT means Highest Priority Task
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 25


 516:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 517:./ucOSII/Core/os_mbox.c **** */
 518:./ucOSII/Core/os_mbox.c **** 
 519:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_POST_EN > 0u
 520:./ucOSII/Core/os_mbox.c **** INT8U  OSMboxPost (OS_EVENT  *pevent,
 521:./ucOSII/Core/os_mbox.c ****                    void      *pmsg)
 522:./ucOSII/Core/os_mbox.c **** {
 858              		.loc 1 522 1
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 16
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              	.LCFI25:
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
 866              		.cfi_offset 14, -4
 867 0002 84B0     		sub	sp, sp, #16
 868              	.LCFI26:
 869              		.cfi_def_cfa_offset 24
 870 0004 00AF     		add	r7, sp, #0
 871              	.LCFI27:
 872              		.cfi_def_cfa_register 7
 873 0006 7860     		str	r0, [r7, #4]
 874 0008 3960     		str	r1, [r7]
 523:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                          /* Allocate storage for CPU status register  
 524:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
 875              		.loc 1 524 16
 876 000a 0023     		movs	r3, #0
 877 000c FB60     		str	r3, [r7, #12]
 525:./ucOSII/Core/os_mbox.c **** #endif
 526:./ucOSII/Core/os_mbox.c **** 
 527:./ucOSII/Core/os_mbox.c **** 
 528:./ucOSII/Core/os_mbox.c **** 
 529:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
 530:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                         
 878              		.loc 1 530 8
 879 000e 7B68     		ldr	r3, [r7, #4]
 880 0010 002B     		cmp	r3, #0
 881 0012 01D1     		bne	.L55
 531:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_PEVENT_NULL);
 882              		.loc 1 531 16
 883 0014 0423     		movs	r3, #4
 884 0016 2FE0     		b	.L56
 885              	.L55:
 532:./ucOSII/Core/os_mbox.c ****     }
 533:./ucOSII/Core/os_mbox.c ****     if (pmsg == (void *)0) {                          /* Make sure we are not posting a NULL pointe
 886              		.loc 1 533 8
 887 0018 3B68     		ldr	r3, [r7]
 888 001a 002B     		cmp	r3, #0
 889 001c 01D1     		bne	.L57
 534:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_POST_NULL_PTR);
 890              		.loc 1 534 16
 891 001e 0323     		movs	r3, #3
 892 0020 2AE0     		b	.L56
 893              	.L57:
 535:./ucOSII/Core/os_mbox.c ****     }
 536:./ucOSII/Core/os_mbox.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 26


 537:./ucOSII/Core/os_mbox.c **** 
 538:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_POST_ENTER(pevent);
 539:./ucOSII/Core/os_mbox.c **** 
 540:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {  /* Validate event block type                 
 894              		.loc 1 540 15
 895 0022 7B68     		ldr	r3, [r7, #4]
 896 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 897              		.loc 1 540 8
 898 0026 012B     		cmp	r3, #1
 899 0028 01D0     		beq	.L58
 541:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_POST_EXIT(OS_ERR_EVENT_TYPE);
 542:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_EVENT_TYPE);
 900              		.loc 1 542 16
 901 002a 0123     		movs	r3, #1
 902 002c 24E0     		b	.L56
 903              	.L58:
 543:./ucOSII/Core/os_mbox.c ****     }
 544:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 904              		.loc 1 544 5
 905 002e 4020     		movs	r0, #64
 906 0030 FFF7FEFF 		bl	OS_CPU_SR_Save
 907 0034 F860     		str	r0, [r7, #12]
 545:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventGrp != 0u) {                   /* See if any task pending on mailbox        
 908              		.loc 1 545 15
 909 0036 7B68     		ldr	r3, [r7, #4]
 910 0038 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 911              		.loc 1 545 8
 912 003a 002B     		cmp	r3, #0
 913 003c 0CD0     		beq	.L59
 546:./ucOSII/Core/os_mbox.c ****                                                       /* Ready HPT waiting on event                
 547:./ucOSII/Core/os_mbox.c ****         (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_MBOX, OS_STAT_PEND_OK);
 914              		.loc 1 547 15
 915 003e 0023     		movs	r3, #0
 916 0040 0222     		movs	r2, #2
 917 0042 3968     		ldr	r1, [r7]
 918 0044 7868     		ldr	r0, [r7, #4]
 919 0046 FFF7FEFF 		bl	OS_EventTaskRdy
 548:./ucOSII/Core/os_mbox.c ****         OS_EXIT_CRITICAL();
 920              		.loc 1 548 9
 921 004a F868     		ldr	r0, [r7, #12]
 922 004c FFF7FEFF 		bl	OS_CPU_SR_Restore
 549:./ucOSII/Core/os_mbox.c ****         OS_Sched();                                   /* Find highest priority task ready to run   
 923              		.loc 1 549 9
 924 0050 FFF7FEFF 		bl	OS_Sched
 550:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_POST_EXIT(OS_ERR_NONE);
 551:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_NONE);
 925              		.loc 1 551 16
 926 0054 0023     		movs	r3, #0
 927 0056 0FE0     		b	.L56
 928              	.L59:
 552:./ucOSII/Core/os_mbox.c ****     }
 553:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventPtr != (void *)0) {            /* Make sure mailbox doesn't already have a m
 929              		.loc 1 553 15
 930 0058 7B68     		ldr	r3, [r7, #4]
 931 005a 5B68     		ldr	r3, [r3, #4]
 932              		.loc 1 553 8
 933 005c 002B     		cmp	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 27


 934 005e 04D0     		beq	.L60
 554:./ucOSII/Core/os_mbox.c ****         OS_EXIT_CRITICAL();
 935              		.loc 1 554 9
 936 0060 F868     		ldr	r0, [r7, #12]
 937 0062 FFF7FEFF 		bl	OS_CPU_SR_Restore
 555:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_POST_EXIT(OS_ERR_MBOX_FULL);
 556:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_MBOX_FULL);
 938              		.loc 1 556 16
 939 0066 1423     		movs	r3, #20
 940 0068 06E0     		b	.L56
 941              	.L60:
 557:./ucOSII/Core/os_mbox.c ****     }
 558:./ucOSII/Core/os_mbox.c ****     pevent->OSEventPtr = pmsg;                        /* Place message in mailbox                  
 942              		.loc 1 558 24
 943 006a 7B68     		ldr	r3, [r7, #4]
 944 006c 3A68     		ldr	r2, [r7]
 945 006e 5A60     		str	r2, [r3, #4]
 559:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 946              		.loc 1 559 5
 947 0070 F868     		ldr	r0, [r7, #12]
 948 0072 FFF7FEFF 		bl	OS_CPU_SR_Restore
 560:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_POST_EXIT(OS_ERR_NONE);
 561:./ucOSII/Core/os_mbox.c ****     return (OS_ERR_NONE);
 949              		.loc 1 561 12
 950 0076 0023     		movs	r3, #0
 951              	.L56:
 562:./ucOSII/Core/os_mbox.c **** }
 952              		.loc 1 562 1
 953 0078 1846     		mov	r0, r3
 954 007a 1037     		adds	r7, r7, #16
 955              	.LCFI28:
 956              		.cfi_def_cfa_offset 8
 957 007c BD46     		mov	sp, r7
 958              	.LCFI29:
 959              		.cfi_def_cfa_register 13
 960              		@ sp needed
 961 007e 80BD     		pop	{r7, pc}
 962              		.cfi_endproc
 963              	.LFE8:
 965              		.section	.text.OSMboxPostOpt,"ax",%progbits
 966              		.align	1
 967              		.global	OSMboxPostOpt
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 972              	OSMboxPostOpt:
 973              	.LFB9:
 563:./ucOSII/Core/os_mbox.c **** #endif
 564:./ucOSII/Core/os_mbox.c **** 
 565:./ucOSII/Core/os_mbox.c **** 
 566:./ucOSII/Core/os_mbox.c **** /*
 567:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 568:./ucOSII/Core/os_mbox.c **** *                                      POST MESSAGE TO A MAILBOX
 569:./ucOSII/Core/os_mbox.c **** *
 570:./ucOSII/Core/os_mbox.c **** * Description: This function sends a message to a mailbox
 571:./ucOSII/Core/os_mbox.c **** *
 572:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block associated with the desired ma
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 28


 573:./ucOSII/Core/os_mbox.c **** *
 574:./ucOSII/Core/os_mbox.c **** *              pmsg          is a pointer to the message to send.  You MUST NOT send a NULL pointer
 575:./ucOSII/Core/os_mbox.c **** *
 576:./ucOSII/Core/os_mbox.c **** *              opt           determines the type of POST performed:
 577:./ucOSII/Core/os_mbox.c **** *                            OS_POST_OPT_NONE         POST to a single waiting task
 578:./ucOSII/Core/os_mbox.c **** *                                                     (Identical to OSMboxPost())
 579:./ucOSII/Core/os_mbox.c **** *                            OS_POST_OPT_BROADCAST    POST to ALL tasks that are waiting on the mai
 580:./ucOSII/Core/os_mbox.c **** *
 581:./ucOSII/Core/os_mbox.c **** *                            OS_POST_OPT_NO_SCHED     Indicates that the scheduler will NOT be invo
 582:./ucOSII/Core/os_mbox.c **** *
 583:./ucOSII/Core/os_mbox.c **** * Returns    : OS_ERR_NONE          The call was successful and the message was sent
 584:./ucOSII/Core/os_mbox.c **** *              OS_ERR_MBOX_FULL     If the mailbox already contains a message.  You can can only se
 585:./ucOSII/Core/os_mbox.c **** *                                   message at a time and thus, the message MUST be consumed before
 586:./ucOSII/Core/os_mbox.c **** *                                   are allowed to send another one.
 587:./ucOSII/Core/os_mbox.c **** *              OS_ERR_EVENT_TYPE    If you are attempting to post to a non mailbox.
 588:./ucOSII/Core/os_mbox.c **** *              OS_ERR_PEVENT_NULL   If 'pevent' is a NULL pointer
 589:./ucOSII/Core/os_mbox.c **** *              OS_ERR_POST_NULL_PTR If you are attempting to post a NULL pointer
 590:./ucOSII/Core/os_mbox.c **** *
 591:./ucOSII/Core/os_mbox.c **** * Note(s)    : 1) HPT means Highest Priority Task
 592:./ucOSII/Core/os_mbox.c **** *
 593:./ucOSII/Core/os_mbox.c **** * Warning    : Interrupts can be disabled for a long time if you do a 'broadcast'.  In fact, the
 594:./ucOSII/Core/os_mbox.c **** *              interrupt disable time is proportional to the number of tasks waiting on the mailbox
 595:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 596:./ucOSII/Core/os_mbox.c **** */
 597:./ucOSII/Core/os_mbox.c **** 
 598:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_POST_OPT_EN > 0u
 599:./ucOSII/Core/os_mbox.c **** INT8U  OSMboxPostOpt (OS_EVENT  *pevent,
 600:./ucOSII/Core/os_mbox.c ****                       void      *pmsg,
 601:./ucOSII/Core/os_mbox.c ****                       INT8U      opt)
 602:./ucOSII/Core/os_mbox.c **** {
 974              		.loc 1 602 1
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 24
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978 0000 80B5     		push	{r7, lr}
 979              	.LCFI30:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 86B0     		sub	sp, sp, #24
 984              	.LCFI31:
 985              		.cfi_def_cfa_offset 32
 986 0004 00AF     		add	r7, sp, #0
 987              	.LCFI32:
 988              		.cfi_def_cfa_register 7
 989 0006 F860     		str	r0, [r7, #12]
 990 0008 B960     		str	r1, [r7, #8]
 991 000a 1346     		mov	r3, r2
 992 000c FB71     		strb	r3, [r7, #7]
 603:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                          /* Allocate storage for CPU status register  
 604:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR  cpu_sr = 0u;
 993              		.loc 1 604 16
 994 000e 0023     		movs	r3, #0
 995 0010 7B61     		str	r3, [r7, #20]
 605:./ucOSII/Core/os_mbox.c **** #endif
 606:./ucOSII/Core/os_mbox.c **** 
 607:./ucOSII/Core/os_mbox.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 29


 608:./ucOSII/Core/os_mbox.c **** 
 609:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
 610:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                         
 996              		.loc 1 610 8
 997 0012 FB68     		ldr	r3, [r7, #12]
 998 0014 002B     		cmp	r3, #0
 999 0016 01D1     		bne	.L62
 611:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_PEVENT_NULL);
 1000              		.loc 1 611 16
 1001 0018 0423     		movs	r3, #4
 1002 001a 45E0     		b	.L63
 1003              	.L62:
 612:./ucOSII/Core/os_mbox.c ****     }
 613:./ucOSII/Core/os_mbox.c ****     if (pmsg == (void *)0) {                          /* Make sure we are not posting a NULL pointe
 1004              		.loc 1 613 8
 1005 001c BB68     		ldr	r3, [r7, #8]
 1006 001e 002B     		cmp	r3, #0
 1007 0020 01D1     		bne	.L64
 614:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_POST_NULL_PTR);
 1008              		.loc 1 614 16
 1009 0022 0323     		movs	r3, #3
 1010 0024 40E0     		b	.L63
 1011              	.L64:
 615:./ucOSII/Core/os_mbox.c ****     }
 616:./ucOSII/Core/os_mbox.c **** #endif
 617:./ucOSII/Core/os_mbox.c **** 
 618:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_POST_OPT_ENTER(pevent, opt);
 619:./ucOSII/Core/os_mbox.c **** 
 620:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {  /* Validate event block type                 
 1012              		.loc 1 620 15
 1013 0026 FB68     		ldr	r3, [r7, #12]
 1014 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015              		.loc 1 620 8
 1016 002a 012B     		cmp	r3, #1
 1017 002c 01D0     		beq	.L65
 621:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_POST_OPT_EXIT(OS_ERR_EVENT_TYPE);
 622:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_EVENT_TYPE);
 1018              		.loc 1 622 16
 1019 002e 0123     		movs	r3, #1
 1020 0030 3AE0     		b	.L63
 1021              	.L65:
 623:./ucOSII/Core/os_mbox.c ****     }
 624:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 1022              		.loc 1 624 5
 1023 0032 4020     		movs	r0, #64
 1024 0034 FFF7FEFF 		bl	OS_CPU_SR_Save
 1025 0038 7861     		str	r0, [r7, #20]
 625:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventGrp != 0u) {                   /* See if any task pending on mailbox        
 1026              		.loc 1 625 15
 1027 003a FB68     		ldr	r3, [r7, #12]
 1028 003c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1029              		.loc 1 625 8
 1030 003e 002B     		cmp	r3, #0
 1031 0040 22D0     		beq	.L66
 626:./ucOSII/Core/os_mbox.c ****         if ((opt & OS_POST_OPT_BROADCAST) != 0x00u) { /* Do we need to post msg to ALL waiting task
 1032              		.loc 1 626 18
 1033 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 30


 1034 0044 03F00103 		and	r3, r3, #1
 1035              		.loc 1 626 12
 1036 0048 002B     		cmp	r3, #0
 1037 004a 0BD0     		beq	.L67
 627:./ucOSII/Core/os_mbox.c ****             while (pevent->OSEventGrp != 0u) {        /* Yes, Post to ALL tasks waiting on mailbox 
 1038              		.loc 1 627 19
 1039 004c 05E0     		b	.L68
 1040              	.L69:
 628:./ucOSII/Core/os_mbox.c ****                 (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_MBOX, OS_STAT_PEND_OK);
 1041              		.loc 1 628 23
 1042 004e 0023     		movs	r3, #0
 1043 0050 0222     		movs	r2, #2
 1044 0052 B968     		ldr	r1, [r7, #8]
 1045 0054 F868     		ldr	r0, [r7, #12]
 1046 0056 FFF7FEFF 		bl	OS_EventTaskRdy
 1047              	.L68:
 627:./ucOSII/Core/os_mbox.c ****             while (pevent->OSEventGrp != 0u) {        /* Yes, Post to ALL tasks waiting on mailbox 
 1048              		.loc 1 627 26
 1049 005a FB68     		ldr	r3, [r7, #12]
 1050 005c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 627:./ucOSII/Core/os_mbox.c ****             while (pevent->OSEventGrp != 0u) {        /* Yes, Post to ALL tasks waiting on mailbox 
 1051              		.loc 1 627 19
 1052 005e 002B     		cmp	r3, #0
 1053 0060 F5D1     		bne	.L69
 1054 0062 05E0     		b	.L70
 1055              	.L67:
 629:./ucOSII/Core/os_mbox.c ****             }
 630:./ucOSII/Core/os_mbox.c ****         } else {                                      /* No,  Post to HPT waiting on mbox          
 631:./ucOSII/Core/os_mbox.c ****             (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_MBOX, OS_STAT_PEND_OK);
 1056              		.loc 1 631 19
 1057 0064 0023     		movs	r3, #0
 1058 0066 0222     		movs	r2, #2
 1059 0068 B968     		ldr	r1, [r7, #8]
 1060 006a F868     		ldr	r0, [r7, #12]
 1061 006c FFF7FEFF 		bl	OS_EventTaskRdy
 1062              	.L70:
 632:./ucOSII/Core/os_mbox.c ****         }
 633:./ucOSII/Core/os_mbox.c ****         OS_EXIT_CRITICAL();
 1063              		.loc 1 633 9
 1064 0070 7869     		ldr	r0, [r7, #20]
 1065 0072 FFF7FEFF 		bl	OS_CPU_SR_Restore
 634:./ucOSII/Core/os_mbox.c ****         if ((opt & OS_POST_OPT_NO_SCHED) == 0u) {     /* See if scheduler needs to be invoked      
 1066              		.loc 1 634 18
 1067 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1068 0078 03F00403 		and	r3, r3, #4
 1069              		.loc 1 634 12
 1070 007c 002B     		cmp	r3, #0
 1071 007e 01D1     		bne	.L71
 635:./ucOSII/Core/os_mbox.c ****             OS_Sched();                               /* Find HPT ready to run                     
 1072              		.loc 1 635 13
 1073 0080 FFF7FEFF 		bl	OS_Sched
 1074              	.L71:
 636:./ucOSII/Core/os_mbox.c ****         }
 637:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_POST_OPT_EXIT(OS_ERR_NONE);
 638:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_NONE);
 1075              		.loc 1 638 16
 1076 0084 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 31


 1077 0086 0FE0     		b	.L63
 1078              	.L66:
 639:./ucOSII/Core/os_mbox.c ****     }
 640:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventPtr != (void *)0) {            /* Make sure mailbox doesn't already have a m
 1079              		.loc 1 640 15
 1080 0088 FB68     		ldr	r3, [r7, #12]
 1081 008a 5B68     		ldr	r3, [r3, #4]
 1082              		.loc 1 640 8
 1083 008c 002B     		cmp	r3, #0
 1084 008e 04D0     		beq	.L72
 641:./ucOSII/Core/os_mbox.c ****         OS_EXIT_CRITICAL();
 1085              		.loc 1 641 9
 1086 0090 7869     		ldr	r0, [r7, #20]
 1087 0092 FFF7FEFF 		bl	OS_CPU_SR_Restore
 642:./ucOSII/Core/os_mbox.c ****         OS_TRACE_MBOX_POST_OPT_EXIT(OS_ERR_MBOX_FULL);
 643:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_MBOX_FULL);
 1088              		.loc 1 643 16
 1089 0096 1423     		movs	r3, #20
 1090 0098 06E0     		b	.L63
 1091              	.L72:
 644:./ucOSII/Core/os_mbox.c ****     }
 645:./ucOSII/Core/os_mbox.c ****     pevent->OSEventPtr = pmsg;                        /* Place message in mailbox                  
 1092              		.loc 1 645 24
 1093 009a FB68     		ldr	r3, [r7, #12]
 1094 009c BA68     		ldr	r2, [r7, #8]
 1095 009e 5A60     		str	r2, [r3, #4]
 646:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 1096              		.loc 1 646 5
 1097 00a0 7869     		ldr	r0, [r7, #20]
 1098 00a2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 647:./ucOSII/Core/os_mbox.c ****     OS_TRACE_MBOX_POST_OPT_EXIT(OS_ERR_NONE);
 648:./ucOSII/Core/os_mbox.c ****     return (OS_ERR_NONE);
 1099              		.loc 1 648 12
 1100 00a6 0023     		movs	r3, #0
 1101              	.L63:
 649:./ucOSII/Core/os_mbox.c **** }
 1102              		.loc 1 649 1
 1103 00a8 1846     		mov	r0, r3
 1104 00aa 1837     		adds	r7, r7, #24
 1105              	.LCFI33:
 1106              		.cfi_def_cfa_offset 8
 1107 00ac BD46     		mov	sp, r7
 1108              	.LCFI34:
 1109              		.cfi_def_cfa_register 13
 1110              		@ sp needed
 1111 00ae 80BD     		pop	{r7, pc}
 1112              		.cfi_endproc
 1113              	.LFE9:
 1115              		.section	.text.OSMboxQuery,"ax",%progbits
 1116              		.align	1
 1117              		.global	OSMboxQuery
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1122              	OSMboxQuery:
 1123              	.LFB10:
 650:./ucOSII/Core/os_mbox.c **** #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 32


 651:./ucOSII/Core/os_mbox.c **** 
 652:./ucOSII/Core/os_mbox.c **** 
 653:./ucOSII/Core/os_mbox.c **** /*
 654:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 655:./ucOSII/Core/os_mbox.c **** *                                       QUERY A MESSAGE MAILBOX
 656:./ucOSII/Core/os_mbox.c **** *
 657:./ucOSII/Core/os_mbox.c **** * Description: This function obtains information about a message mailbox.
 658:./ucOSII/Core/os_mbox.c **** *
 659:./ucOSII/Core/os_mbox.c **** * Arguments  : pevent        is a pointer to the event control block associated with the desired ma
 660:./ucOSII/Core/os_mbox.c **** *
 661:./ucOSII/Core/os_mbox.c **** *              p_mbox_data   is a pointer to a structure that will contain information about the me
 662:./ucOSII/Core/os_mbox.c **** *                            mailbox.
 663:./ucOSII/Core/os_mbox.c **** *
 664:./ucOSII/Core/os_mbox.c **** * Returns    : OS_ERR_NONE         The call was successful and the message was sent
 665:./ucOSII/Core/os_mbox.c **** *              OS_ERR_EVENT_TYPE   If you are attempting to obtain data from a non mailbox.
 666:./ucOSII/Core/os_mbox.c **** *              OS_ERR_PEVENT_NULL  If 'pevent'      is a NULL pointer
 667:./ucOSII/Core/os_mbox.c **** *              OS_ERR_PDATA_NULL   If 'p_mbox_data' is a NULL pointer
 668:./ucOSII/Core/os_mbox.c **** ***************************************************************************************************
 669:./ucOSII/Core/os_mbox.c **** */
 670:./ucOSII/Core/os_mbox.c **** 
 671:./ucOSII/Core/os_mbox.c **** #if OS_MBOX_QUERY_EN > 0u
 672:./ucOSII/Core/os_mbox.c **** INT8U  OSMboxQuery (OS_EVENT      *pevent,
 673:./ucOSII/Core/os_mbox.c ****                     OS_MBOX_DATA  *p_mbox_data)
 674:./ucOSII/Core/os_mbox.c **** {
 1124              		.loc 1 674 1
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 24
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128 0000 80B5     		push	{r7, lr}
 1129              	.LCFI35:
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 7, -8
 1132              		.cfi_offset 14, -4
 1133 0002 86B0     		sub	sp, sp, #24
 1134              	.LCFI36:
 1135              		.cfi_def_cfa_offset 32
 1136 0004 00AF     		add	r7, sp, #0
 1137              	.LCFI37:
 1138              		.cfi_def_cfa_register 7
 1139 0006 7860     		str	r0, [r7, #4]
 1140 0008 3960     		str	r1, [r7]
 675:./ucOSII/Core/os_mbox.c ****     INT8U       i;
 676:./ucOSII/Core/os_mbox.c ****     OS_PRIO    *psrc;
 677:./ucOSII/Core/os_mbox.c ****     OS_PRIO    *pdest;
 678:./ucOSII/Core/os_mbox.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 679:./ucOSII/Core/os_mbox.c ****     OS_CPU_SR   cpu_sr = 0u;
 1141              		.loc 1 679 17
 1142 000a 0023     		movs	r3, #0
 1143 000c BB60     		str	r3, [r7, #8]
 680:./ucOSII/Core/os_mbox.c **** #endif
 681:./ucOSII/Core/os_mbox.c **** 
 682:./ucOSII/Core/os_mbox.c **** 
 683:./ucOSII/Core/os_mbox.c **** 
 684:./ucOSII/Core/os_mbox.c **** #if OS_ARG_CHK_EN > 0u
 685:./ucOSII/Core/os_mbox.c ****     if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                    
 1144              		.loc 1 685 8
 1145 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 33


 1146 0010 002B     		cmp	r3, #0
 1147 0012 01D1     		bne	.L74
 686:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_PEVENT_NULL);
 1148              		.loc 1 686 16
 1149 0014 0423     		movs	r3, #4
 1150 0016 31E0     		b	.L75
 1151              	.L74:
 687:./ucOSII/Core/os_mbox.c ****     }
 688:./ucOSII/Core/os_mbox.c ****     if (p_mbox_data == (OS_MBOX_DATA *)0) {                /* Validate 'p_mbox_data'               
 1152              		.loc 1 688 8
 1153 0018 3B68     		ldr	r3, [r7]
 1154 001a 002B     		cmp	r3, #0
 1155 001c 01D1     		bne	.L76
 689:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_PDATA_NULL);
 1156              		.loc 1 689 16
 1157 001e 0923     		movs	r3, #9
 1158 0020 2CE0     		b	.L75
 1159              	.L76:
 690:./ucOSII/Core/os_mbox.c ****     }
 691:./ucOSII/Core/os_mbox.c **** #endif
 692:./ucOSII/Core/os_mbox.c ****     if (pevent->OSEventType != OS_EVENT_TYPE_MBOX) {       /* Validate event block type            
 1160              		.loc 1 692 15
 1161 0022 7B68     		ldr	r3, [r7, #4]
 1162 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1163              		.loc 1 692 8
 1164 0026 012B     		cmp	r3, #1
 1165 0028 01D0     		beq	.L77
 693:./ucOSII/Core/os_mbox.c ****         return (OS_ERR_EVENT_TYPE);
 1166              		.loc 1 693 16
 1167 002a 0123     		movs	r3, #1
 1168 002c 26E0     		b	.L75
 1169              	.L77:
 694:./ucOSII/Core/os_mbox.c ****     }
 695:./ucOSII/Core/os_mbox.c ****     OS_ENTER_CRITICAL();
 1170              		.loc 1 695 5
 1171 002e 4020     		movs	r0, #64
 1172 0030 FFF7FEFF 		bl	OS_CPU_SR_Save
 1173 0034 B860     		str	r0, [r7, #8]
 696:./ucOSII/Core/os_mbox.c ****     p_mbox_data->OSEventGrp = pevent->OSEventGrp;          /* Copy message mailbox wait list       
 1174              		.loc 1 696 37
 1175 0036 7B68     		ldr	r3, [r7, #4]
 1176 0038 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 1177              		.loc 1 696 29
 1178 003a 3B68     		ldr	r3, [r7]
 1179 003c 1A73     		strb	r2, [r3, #12]
 697:./ucOSII/Core/os_mbox.c ****     psrc                    = &pevent->OSEventTbl[0];
 1180              		.loc 1 697 29
 1181 003e 7B68     		ldr	r3, [r7, #4]
 1182 0040 0B33     		adds	r3, r3, #11
 1183 0042 3B61     		str	r3, [r7, #16]
 698:./ucOSII/Core/os_mbox.c ****     pdest                   = &p_mbox_data->OSEventTbl[0];
 1184              		.loc 1 698 29
 1185 0044 3B68     		ldr	r3, [r7]
 1186 0046 0433     		adds	r3, r3, #4
 1187 0048 FB60     		str	r3, [r7, #12]
 699:./ucOSII/Core/os_mbox.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 1188              		.loc 1 699 12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 34


 1189 004a 0023     		movs	r3, #0
 1190 004c FB75     		strb	r3, [r7, #23]
 1191              		.loc 1 699 5
 1192 004e 0AE0     		b	.L78
 1193              	.L79:
 700:./ucOSII/Core/os_mbox.c ****         *pdest++ = *psrc++;
 1194              		.loc 1 700 25 discriminator 3
 1195 0050 3A69     		ldr	r2, [r7, #16]
 1196 0052 531C     		adds	r3, r2, #1
 1197 0054 3B61     		str	r3, [r7, #16]
 1198              		.loc 1 700 15 discriminator 3
 1199 0056 FB68     		ldr	r3, [r7, #12]
 1200 0058 591C     		adds	r1, r3, #1
 1201 005a F960     		str	r1, [r7, #12]
 1202              		.loc 1 700 20 discriminator 3
 1203 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1204              		.loc 1 700 18 discriminator 3
 1205 005e 1A70     		strb	r2, [r3]
 699:./ucOSII/Core/os_mbox.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 1206              		.loc 1 699 42 discriminator 3
 1207 0060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1208 0062 0133     		adds	r3, r3, #1
 1209 0064 FB75     		strb	r3, [r7, #23]
 1210              	.L78:
 699:./ucOSII/Core/os_mbox.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 1211              		.loc 1 699 5 discriminator 1
 1212 0066 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1213 0068 072B     		cmp	r3, #7
 1214 006a F1D9     		bls	.L79
 701:./ucOSII/Core/os_mbox.c ****     }
 702:./ucOSII/Core/os_mbox.c ****     p_mbox_data->OSMsg = pevent->OSEventPtr;               /* Get message from mailbox             
 1215              		.loc 1 702 32
 1216 006c 7B68     		ldr	r3, [r7, #4]
 1217 006e 5A68     		ldr	r2, [r3, #4]
 1218              		.loc 1 702 24
 1219 0070 3B68     		ldr	r3, [r7]
 1220 0072 1A60     		str	r2, [r3]
 703:./ucOSII/Core/os_mbox.c ****     OS_EXIT_CRITICAL();
 1221              		.loc 1 703 5
 1222 0074 B868     		ldr	r0, [r7, #8]
 1223 0076 FFF7FEFF 		bl	OS_CPU_SR_Restore
 704:./ucOSII/Core/os_mbox.c ****     return (OS_ERR_NONE);
 1224              		.loc 1 704 12
 1225 007a 0023     		movs	r3, #0
 1226              	.L75:
 705:./ucOSII/Core/os_mbox.c **** }
 1227              		.loc 1 705 1
 1228 007c 1846     		mov	r0, r3
 1229 007e 1837     		adds	r7, r7, #24
 1230              	.LCFI38:
 1231              		.cfi_def_cfa_offset 8
 1232 0080 BD46     		mov	sp, r7
 1233              	.LCFI39:
 1234              		.cfi_def_cfa_register 13
 1235              		@ sp needed
 1236 0082 80BD     		pop	{r7, pc}
 1237              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 35


 1238              	.LFE10:
 1240              		.text
 1241              	.Letext0:
 1242              		.file 2 "./ucOSII/Port/os_cpu.h"
 1243              		.file 3 "./ucOSII/Core/ucos_ii.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 os_mbox.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:20     .text.OSMboxAccept:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:26     .text.OSMboxAccept:0000000000000000 OSMboxAccept
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:98     .rodata:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:102    .text.OSMboxCreate:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:108    .text.OSMboxCreate:0000000000000000 OSMboxCreate
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:204    .text.OSMboxCreate:000000000000006c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:211    .text.OSMboxDel:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:217    .text.OSMboxDel:0000000000000000 OSMboxDel
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:442    .text.OSMboxDel:0000000000000124 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:449    .text.OSMboxPend:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:455    .text.OSMboxPend:0000000000000000 OSMboxPend
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:697    .text.OSMboxPend:000000000000014c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:704    .text.OSMboxPendAbort:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:710    .text.OSMboxPendAbort:0000000000000000 OSMboxPendAbort
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:850    .text.OSMboxPost:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:856    .text.OSMboxPost:0000000000000000 OSMboxPost
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:966    .text.OSMboxPostOpt:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:972    .text.OSMboxPostOpt:0000000000000000 OSMboxPostOpt
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:1116   .text.OSMboxQuery:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccHl9QRT.s:1122   .text.OSMboxQuery:0000000000000000 OSMboxQuery

UNDEFINED SYMBOLS
OS_CPU_SR_Save
OS_CPU_SR_Restore
OS_EventWaitListInit
OSIntNesting
OSEventFreeList
OS_EventTaskRdy
OS_Sched
OS_EventTaskWait
OS_EventTaskRemove
OSLockNesting
OSTCBCur
