ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	CAN_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CAN_DeInit:
  27              	.LFB123:
  28              		.file 1 "./Library/stm32f4xx_can.c"
   1:./Library/stm32f4xx_can.c **** /**
   2:./Library/stm32f4xx_can.c ****   ******************************************************************************
   3:./Library/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:./Library/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_can.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_can.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:
   9:./Library/stm32f4xx_can.c ****   *           + Initialization and Configuration 
  10:./Library/stm32f4xx_can.c ****   *           + CAN Frames Transmission
  11:./Library/stm32f4xx_can.c ****   *           + CAN Frames Reception
  12:./Library/stm32f4xx_can.c ****   *           + Operation modes switch
  13:./Library/stm32f4xx_can.c ****   *           + Error management
  14:./Library/stm32f4xx_can.c ****   *           + Interrupts and flags
  15:./Library/stm32f4xx_can.c ****   *
  16:./Library/stm32f4xx_can.c **** @verbatim
  17:./Library/stm32f4xx_can.c ****  ===============================================================================
  18:./Library/stm32f4xx_can.c ****                         ##### How to use this driver #####
  19:./Library/stm32f4xx_can.c ****  ===============================================================================
  20:./Library/stm32f4xx_can.c ****     [..]
  21:./Library/stm32f4xx_can.c ****       (#) Enable the CAN controller interface clock using 
  22:./Library/stm32f4xx_can.c ****           RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  23:./Library/stm32f4xx_can.c ****           and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  24:./Library/stm32f4xx_can.c ****       -@- In case you are using CAN2 only, you have to enable the CAN1 clock.
  25:./Library/stm32f4xx_can.c ****        
  26:./Library/stm32f4xx_can.c ****       (#) CAN pins configuration
  27:./Library/stm32f4xx_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  28:./Library/stm32f4xx_can.c ****              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  29:./Library/stm32f4xx_can.c ****         (++) Connect the involved CAN pins to AF9 using the following function 
  30:./Library/stm32f4xx_can.c ****              GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 2


  31:./Library/stm32f4xx_can.c ****         (++) Configure these CAN pins in alternate function mode by calling
  32:./Library/stm32f4xx_can.c ****              the function  GPIO_Init();
  33:./Library/stm32f4xx_can.c ****       
  34:./Library/stm32f4xx_can.c ****       (#) Initialize and configure the CAN using CAN_Init() and 
  35:./Library/stm32f4xx_can.c ****           CAN_FilterInit() functions.   
  36:./Library/stm32f4xx_can.c ****                  
  37:./Library/stm32f4xx_can.c ****       (#) Transmit the desired CAN frame using CAN_Transmit() function.
  38:./Library/stm32f4xx_can.c ****            
  39:./Library/stm32f4xx_can.c ****       (#) Check the transmission of a CAN frame using CAN_TransmitStatus()
  40:./Library/stm32f4xx_can.c ****           function.
  41:./Library/stm32f4xx_can.c ****                  
  42:./Library/stm32f4xx_can.c ****       (#) Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  43:./Library/stm32f4xx_can.c ****           function.  
  44:./Library/stm32f4xx_can.c ****               
  45:./Library/stm32f4xx_can.c ****       (#) Receive a CAN frame using CAN_Receive() function.
  46:./Library/stm32f4xx_can.c ****            
  47:./Library/stm32f4xx_can.c ****       (#) Release the receive FIFOs using CAN_FIFORelease() function.
  48:./Library/stm32f4xx_can.c ****                  
  49:./Library/stm32f4xx_can.c ****       (#) Return the number of pending received frames using 
  50:./Library/stm32f4xx_can.c ****           CAN_MessagePending() function.            
  51:./Library/stm32f4xx_can.c ****                      
  52:./Library/stm32f4xx_can.c ****       (#) To control CAN events you can use one of the following two methods:
  53:./Library/stm32f4xx_can.c ****         (++) Check on CAN flags using the CAN_GetFlagStatus() function.  
  54:./Library/stm32f4xx_can.c ****         (++) Use CAN interrupts through the function CAN_ITConfig() at 
  55:./Library/stm32f4xx_can.c ****              initialization phase and CAN_GetITStatus() function into 
  56:./Library/stm32f4xx_can.c ****              interrupt routines to check if the event has occurred or not.
  57:./Library/stm32f4xx_can.c ****              After checking on a flag you should clear it using CAN_ClearFlag()
  58:./Library/stm32f4xx_can.c ****              function. And after checking on an interrupt event you should 
  59:./Library/stm32f4xx_can.c ****              clear it using CAN_ClearITPendingBit() function.            
  60:./Library/stm32f4xx_can.c **** 
  61:./Library/stm32f4xx_can.c **** @endverbatim
  62:./Library/stm32f4xx_can.c ****            
  63:./Library/stm32f4xx_can.c ****   ******************************************************************************
  64:./Library/stm32f4xx_can.c ****   * @attention
  65:./Library/stm32f4xx_can.c ****   *
  66:./Library/stm32f4xx_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  67:./Library/stm32f4xx_can.c ****   * All rights reserved.
  68:./Library/stm32f4xx_can.c ****   *
  69:./Library/stm32f4xx_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  70:./Library/stm32f4xx_can.c ****   * in the root directory of this software component.
  71:./Library/stm32f4xx_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  72:./Library/stm32f4xx_can.c ****   *
  73:./Library/stm32f4xx_can.c ****   ******************************************************************************
  74:./Library/stm32f4xx_can.c ****   */
  75:./Library/stm32f4xx_can.c **** 
  76:./Library/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  77:./Library/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  78:./Library/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  79:./Library/stm32f4xx_can.c **** 
  80:./Library/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  81:./Library/stm32f4xx_can.c ****   * @{
  82:./Library/stm32f4xx_can.c ****   */
  83:./Library/stm32f4xx_can.c **** 
  84:./Library/stm32f4xx_can.c **** /** @defgroup CAN 
  85:./Library/stm32f4xx_can.c ****   * @brief CAN driver modules
  86:./Library/stm32f4xx_can.c ****   * @{
  87:./Library/stm32f4xx_can.c ****   */ 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 3


  88:./Library/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  89:./Library/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  90:./Library/stm32f4xx_can.c **** 
  91:./Library/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  92:./Library/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  93:./Library/stm32f4xx_can.c **** 
  94:./Library/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  95:./Library/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  96:./Library/stm32f4xx_can.c **** 
  97:./Library/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
  98:./Library/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
  99:./Library/stm32f4xx_can.c **** 
 100:./Library/stm32f4xx_can.c **** /* Time out for INAK bit */
 101:./Library/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 102:./Library/stm32f4xx_can.c **** /* Time out for SLAK bit */
 103:./Library/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 104:./Library/stm32f4xx_can.c **** 
 105:./Library/stm32f4xx_can.c **** /* Flags in TSR register */
 106:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 107:./Library/stm32f4xx_can.c **** /* Flags in RF1R register */
 108:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 109:./Library/stm32f4xx_can.c **** /* Flags in RF0R register */
 110:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 111:./Library/stm32f4xx_can.c **** /* Flags in MSR register */
 112:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 113:./Library/stm32f4xx_can.c **** /* Flags in ESR register */
 114:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 115:./Library/stm32f4xx_can.c **** 
 116:./Library/stm32f4xx_can.c **** /* Mailboxes definition */
 117:./Library/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 118:./Library/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 119:./Library/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 120:./Library/stm32f4xx_can.c **** 
 121:./Library/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 122:./Library/stm32f4xx_can.c **** 
 123:./Library/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 124:./Library/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 125:./Library/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 126:./Library/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 127:./Library/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 128:./Library/stm32f4xx_can.c **** 
 129:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 130:./Library/stm32f4xx_can.c ****   * @{
 131:./Library/stm32f4xx_can.c ****   */
 132:./Library/stm32f4xx_can.c **** 
 133:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 134:./Library/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 135:./Library/stm32f4xx_can.c ****  *
 136:./Library/stm32f4xx_can.c **** @verbatim    
 137:./Library/stm32f4xx_can.c ****  ===============================================================================
 138:./Library/stm32f4xx_can.c ****               ##### Initialization and Configuration functions #####
 139:./Library/stm32f4xx_can.c ****  ===============================================================================  
 140:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 141:./Library/stm32f4xx_can.c ****       (+) Initialize the CAN peripherals : Prescaler, operating mode, the maximum 
 142:./Library/stm32f4xx_can.c ****           number of time quanta to perform resynchronization, the number of time 
 143:./Library/stm32f4xx_can.c ****           quanta in Bit Segment 1 and 2 and many other modes. 
 144:./Library/stm32f4xx_can.c ****           Refer to  @ref CAN_InitTypeDef  for more details.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 4


 145:./Library/stm32f4xx_can.c ****       (+) Configures the CAN reception filter.                                      
 146:./Library/stm32f4xx_can.c ****       (+) Select the start bank filter for slave CAN.
 147:./Library/stm32f4xx_can.c ****       (+) Enables or disables the Debug Freeze mode for CAN
 148:./Library/stm32f4xx_can.c ****       (+)Enables or disables the CAN Time Trigger Operation communication mode
 149:./Library/stm32f4xx_can.c ****    
 150:./Library/stm32f4xx_can.c **** @endverbatim
 151:./Library/stm32f4xx_can.c ****   * @{
 152:./Library/stm32f4xx_can.c ****   */
 153:./Library/stm32f4xx_can.c ****   
 154:./Library/stm32f4xx_can.c **** /**
 155:./Library/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 156:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 157:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 158:./Library/stm32f4xx_can.c ****   * @retval None.
 159:./Library/stm32f4xx_can.c ****   */
 160:./Library/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 161:./Library/stm32f4xx_can.c **** {
  29              		.loc 1 161 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 162:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 163:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 164:./Library/stm32f4xx_can.c ****  
 165:./Library/stm32f4xx_can.c ****   if (CANx == CAN1)
  45              		.loc 1 165 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 0E4A     		ldr	r2, .L5
  48 000c 9342     		cmp	r3, r2
  49 000e 0AD1     		bne	.L2
 166:./Library/stm32f4xx_can.c ****   {
 167:./Library/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 168:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  50              		.loc 1 168 5
  51 0010 0121     		movs	r1, #1
  52 0012 4FF00070 		mov	r0, #33554432
  53 0016 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 169:./Library/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 170:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  54              		.loc 1 170 5
  55 001a 0021     		movs	r1, #0
  56 001c 4FF00070 		mov	r0, #33554432
  57 0020 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:./Library/stm32f4xx_can.c ****   }
 172:./Library/stm32f4xx_can.c **** #if defined(STM32F413_423xx)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 5


 173:./Library/stm32f4xx_can.c ****   else if(CANx == CAN2)
 174:./Library/stm32f4xx_can.c ****   {  
 175:./Library/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 176:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 177:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 178:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 179:./Library/stm32f4xx_can.c ****   }
 180:./Library/stm32f4xx_can.c ****   
 181:./Library/stm32f4xx_can.c ****   else /* CAN3 available only for STM32F413_423xx */
 182:./Library/stm32f4xx_can.c ****   {
 183:./Library/stm32f4xx_can.c ****     /* Enable CAN3 reset state */
 184:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN3, ENABLE);
 185:./Library/stm32f4xx_can.c ****     /* Release CAN3 from reset state */
 186:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN3, DISABLE); 
 187:./Library/stm32f4xx_can.c ****   }
 188:./Library/stm32f4xx_can.c **** #else
 189:./Library/stm32f4xx_can.c ****   else
 190:./Library/stm32f4xx_can.c ****   {
 191:./Library/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 192:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 193:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 194:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 195:./Library/stm32f4xx_can.c ****   }
 196:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 197:./Library/stm32f4xx_can.c **** }
  58              		.loc 1 197 1
  59 0024 09E0     		b	.L4
  60              	.L2:
 192:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
  61              		.loc 1 192 5
  62 0026 0121     		movs	r1, #1
  63 0028 4FF08060 		mov	r0, #67108864
  64 002c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 194:./Library/stm32f4xx_can.c ****   }
  65              		.loc 1 194 5
  66 0030 0021     		movs	r1, #0
  67 0032 4FF08060 		mov	r0, #67108864
  68 0036 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  69              	.L4:
  70              		.loc 1 197 1
  71 003a 00BF     		nop
  72 003c 0837     		adds	r7, r7, #8
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 8
  75 003e BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0040 80BD     		pop	{r7, pc}
  80              	.L6:
  81 0042 00BF     		.align	2
  82              	.L5:
  83 0044 00640040 		.word	1073767424
  84              		.cfi_endproc
  85              	.LFE123:
  87              		.section	.text.CAN_Init,"ax",%progbits
  88              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 6


  89              		.global	CAN_Init
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	CAN_Init:
  95              	.LFB124:
 198:./Library/stm32f4xx_can.c **** 
 199:./Library/stm32f4xx_can.c **** /**
 200:./Library/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 201:./Library/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 202:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 203:./Library/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 204:./Library/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 205:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 206:./Library/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 207:./Library/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 208:./Library/stm32f4xx_can.c ****   */
 209:./Library/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 210:./Library/stm32f4xx_can.c **** {
  96              		.loc 1 210 1
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 16
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              	.LCFI5:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 85B0     		sub	sp, sp, #20
 106              	.LCFI6:
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI7:
 110              		.cfi_def_cfa_register 7
 111 0006 7860     		str	r0, [r7, #4]
 112 0008 3960     		str	r1, [r7]
 211:./Library/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 113              		.loc 1 211 11
 114 000a 0023     		movs	r3, #0
 115 000c FB73     		strb	r3, [r7, #15]
 212:./Library/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 116              		.loc 1 212 12
 117 000e 0023     		movs	r3, #0
 118 0010 BB60     		str	r3, [r7, #8]
 213:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 214:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 215:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 216:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 217:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 218:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 219:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 220:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 221:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 222:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 223:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 224:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 225:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 7


 226:./Library/stm32f4xx_can.c **** 
 227:./Library/stm32f4xx_can.c ****   /* Exit from sleep mode */
 228:./Library/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 119              		.loc 1 228 13
 120 0012 7B68     		ldr	r3, [r7, #4]
 121 0014 1B68     		ldr	r3, [r3]
 122 0016 23F00202 		bic	r2, r3, #2
 123 001a 7B68     		ldr	r3, [r7, #4]
 124 001c 1A60     		str	r2, [r3]
 229:./Library/stm32f4xx_can.c **** 
 230:./Library/stm32f4xx_can.c ****   /* Request initialisation */
 231:./Library/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 125              		.loc 1 231 13
 126 001e 7B68     		ldr	r3, [r7, #4]
 127 0020 1B68     		ldr	r3, [r3]
 128 0022 43F00102 		orr	r2, r3, #1
 129 0026 7B68     		ldr	r3, [r7, #4]
 130 0028 1A60     		str	r2, [r3]
 232:./Library/stm32f4xx_can.c **** 
 233:./Library/stm32f4xx_can.c ****   /* Wait the acknowledge */
 234:./Library/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 131              		.loc 1 234 9
 132 002a 02E0     		b	.L8
 133              	.L10:
 235:./Library/stm32f4xx_can.c ****   {
 236:./Library/stm32f4xx_can.c ****     wait_ack++;
 134              		.loc 1 236 13
 135 002c BB68     		ldr	r3, [r7, #8]
 136 002e 0133     		adds	r3, r3, #1
 137 0030 BB60     		str	r3, [r7, #8]
 138              	.L8:
 234:./Library/stm32f4xx_can.c ****   {
 139              		.loc 1 234 16
 140 0032 7B68     		ldr	r3, [r7, #4]
 141 0034 5B68     		ldr	r3, [r3, #4]
 234:./Library/stm32f4xx_can.c ****   {
 142              		.loc 1 234 22
 143 0036 03F00103 		and	r3, r3, #1
 234:./Library/stm32f4xx_can.c ****   {
 144              		.loc 1 234 9
 145 003a 012B     		cmp	r3, #1
 146 003c 04D0     		beq	.L9
 234:./Library/stm32f4xx_can.c ****   {
 147              		.loc 1 234 55 discriminator 1
 148 003e BB68     		ldr	r3, [r7, #8]
 149 0040 4FF6FF72 		movw	r2, #65535
 150 0044 9342     		cmp	r3, r2
 151 0046 F1D1     		bne	.L10
 152              	.L9:
 237:./Library/stm32f4xx_can.c ****   }
 238:./Library/stm32f4xx_can.c **** 
 239:./Library/stm32f4xx_can.c ****   /* Check acknowledge */
 240:./Library/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 153              		.loc 1 240 12
 154 0048 7B68     		ldr	r3, [r7, #4]
 155 004a 5B68     		ldr	r3, [r3, #4]
 156              		.loc 1 240 18
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 8


 157 004c 03F00103 		and	r3, r3, #1
 158              		.loc 1 240 6
 159 0050 012B     		cmp	r3, #1
 160 0052 02D0     		beq	.L11
 241:./Library/stm32f4xx_can.c ****   {
 242:./Library/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 161              		.loc 1 242 16
 162 0054 0023     		movs	r3, #0
 163 0056 FB73     		strb	r3, [r7, #15]
 164 0058 9CE0     		b	.L12
 165              	.L11:
 243:./Library/stm32f4xx_can.c ****   }
 244:./Library/stm32f4xx_can.c ****   else 
 245:./Library/stm32f4xx_can.c ****   {
 246:./Library/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 247:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 166              		.loc 1 247 23
 167 005a 3B68     		ldr	r3, [r7]
 168 005c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 169              		.loc 1 247 8
 170 005e 012B     		cmp	r3, #1
 171 0060 06D1     		bne	.L13
 248:./Library/stm32f4xx_can.c ****     {
 249:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 172              		.loc 1 249 17
 173 0062 7B68     		ldr	r3, [r7, #4]
 174 0064 1B68     		ldr	r3, [r3]
 175 0066 43F08002 		orr	r2, r3, #128
 176 006a 7B68     		ldr	r3, [r7, #4]
 177 006c 1A60     		str	r2, [r3]
 178 006e 05E0     		b	.L14
 179              	.L13:
 250:./Library/stm32f4xx_can.c ****     }
 251:./Library/stm32f4xx_can.c ****     else
 252:./Library/stm32f4xx_can.c ****     {
 253:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 180              		.loc 1 253 17
 181 0070 7B68     		ldr	r3, [r7, #4]
 182 0072 1B68     		ldr	r3, [r3]
 183 0074 23F08002 		bic	r2, r3, #128
 184 0078 7B68     		ldr	r3, [r7, #4]
 185 007a 1A60     		str	r2, [r3]
 186              	.L14:
 254:./Library/stm32f4xx_can.c ****     }
 255:./Library/stm32f4xx_can.c **** 
 256:./Library/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 257:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 187              		.loc 1 257 23
 188 007c 3B68     		ldr	r3, [r7]
 189 007e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 190              		.loc 1 257 8
 191 0080 012B     		cmp	r3, #1
 192 0082 06D1     		bne	.L15
 258:./Library/stm32f4xx_can.c ****     {
 259:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 193              		.loc 1 259 17
 194 0084 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 9


 195 0086 1B68     		ldr	r3, [r3]
 196 0088 43F04002 		orr	r2, r3, #64
 197 008c 7B68     		ldr	r3, [r7, #4]
 198 008e 1A60     		str	r2, [r3]
 199 0090 05E0     		b	.L16
 200              	.L15:
 260:./Library/stm32f4xx_can.c ****     }
 261:./Library/stm32f4xx_can.c ****     else
 262:./Library/stm32f4xx_can.c ****     {
 263:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 201              		.loc 1 263 17
 202 0092 7B68     		ldr	r3, [r7, #4]
 203 0094 1B68     		ldr	r3, [r3]
 204 0096 23F04002 		bic	r2, r3, #64
 205 009a 7B68     		ldr	r3, [r7, #4]
 206 009c 1A60     		str	r2, [r3]
 207              	.L16:
 264:./Library/stm32f4xx_can.c ****     }
 265:./Library/stm32f4xx_can.c **** 
 266:./Library/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 267:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 208              		.loc 1 267 23
 209 009e 3B68     		ldr	r3, [r7]
 210 00a0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 211              		.loc 1 267 8
 212 00a2 012B     		cmp	r3, #1
 213 00a4 06D1     		bne	.L17
 268:./Library/stm32f4xx_can.c ****     {
 269:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 214              		.loc 1 269 17
 215 00a6 7B68     		ldr	r3, [r7, #4]
 216 00a8 1B68     		ldr	r3, [r3]
 217 00aa 43F02002 		orr	r2, r3, #32
 218 00ae 7B68     		ldr	r3, [r7, #4]
 219 00b0 1A60     		str	r2, [r3]
 220 00b2 05E0     		b	.L18
 221              	.L17:
 270:./Library/stm32f4xx_can.c ****     }
 271:./Library/stm32f4xx_can.c ****     else
 272:./Library/stm32f4xx_can.c ****     {
 273:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 222              		.loc 1 273 17
 223 00b4 7B68     		ldr	r3, [r7, #4]
 224 00b6 1B68     		ldr	r3, [r3]
 225 00b8 23F02002 		bic	r2, r3, #32
 226 00bc 7B68     		ldr	r3, [r7, #4]
 227 00be 1A60     		str	r2, [r3]
 228              	.L18:
 274:./Library/stm32f4xx_can.c ****     }
 275:./Library/stm32f4xx_can.c **** 
 276:./Library/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 277:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 229              		.loc 1 277 23
 230 00c0 3B68     		ldr	r3, [r7]
 231 00c2 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 232              		.loc 1 277 8
 233 00c4 012B     		cmp	r3, #1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 10


 234 00c6 06D1     		bne	.L19
 278:./Library/stm32f4xx_can.c ****     {
 279:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 235              		.loc 1 279 17
 236 00c8 7B68     		ldr	r3, [r7, #4]
 237 00ca 1B68     		ldr	r3, [r3]
 238 00cc 43F01002 		orr	r2, r3, #16
 239 00d0 7B68     		ldr	r3, [r7, #4]
 240 00d2 1A60     		str	r2, [r3]
 241 00d4 05E0     		b	.L20
 242              	.L19:
 280:./Library/stm32f4xx_can.c ****     }
 281:./Library/stm32f4xx_can.c ****     else
 282:./Library/stm32f4xx_can.c ****     {
 283:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 243              		.loc 1 283 17
 244 00d6 7B68     		ldr	r3, [r7, #4]
 245 00d8 1B68     		ldr	r3, [r3]
 246 00da 23F01002 		bic	r2, r3, #16
 247 00de 7B68     		ldr	r3, [r7, #4]
 248 00e0 1A60     		str	r2, [r3]
 249              	.L20:
 284:./Library/stm32f4xx_can.c ****     }
 285:./Library/stm32f4xx_can.c **** 
 286:./Library/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 287:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 250              		.loc 1 287 23
 251 00e2 3B68     		ldr	r3, [r7]
 252 00e4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 253              		.loc 1 287 8
 254 00e6 012B     		cmp	r3, #1
 255 00e8 06D1     		bne	.L21
 288:./Library/stm32f4xx_can.c ****     {
 289:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 256              		.loc 1 289 17
 257 00ea 7B68     		ldr	r3, [r7, #4]
 258 00ec 1B68     		ldr	r3, [r3]
 259 00ee 43F00802 		orr	r2, r3, #8
 260 00f2 7B68     		ldr	r3, [r7, #4]
 261 00f4 1A60     		str	r2, [r3]
 262 00f6 05E0     		b	.L22
 263              	.L21:
 290:./Library/stm32f4xx_can.c ****     }
 291:./Library/stm32f4xx_can.c ****     else
 292:./Library/stm32f4xx_can.c ****     {
 293:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 264              		.loc 1 293 17
 265 00f8 7B68     		ldr	r3, [r7, #4]
 266 00fa 1B68     		ldr	r3, [r3]
 267 00fc 23F00802 		bic	r2, r3, #8
 268 0100 7B68     		ldr	r3, [r7, #4]
 269 0102 1A60     		str	r2, [r3]
 270              	.L22:
 294:./Library/stm32f4xx_can.c ****     }
 295:./Library/stm32f4xx_can.c **** 
 296:./Library/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 297:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 11


 271              		.loc 1 297 23
 272 0104 3B68     		ldr	r3, [r7]
 273 0106 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 274              		.loc 1 297 8
 275 0108 012B     		cmp	r3, #1
 276 010a 06D1     		bne	.L23
 298:./Library/stm32f4xx_can.c ****     {
 299:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 277              		.loc 1 299 17
 278 010c 7B68     		ldr	r3, [r7, #4]
 279 010e 1B68     		ldr	r3, [r3]
 280 0110 43F00402 		orr	r2, r3, #4
 281 0114 7B68     		ldr	r3, [r7, #4]
 282 0116 1A60     		str	r2, [r3]
 283 0118 05E0     		b	.L24
 284              	.L23:
 300:./Library/stm32f4xx_can.c ****     }
 301:./Library/stm32f4xx_can.c ****     else
 302:./Library/stm32f4xx_can.c ****     {
 303:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 285              		.loc 1 303 17
 286 011a 7B68     		ldr	r3, [r7, #4]
 287 011c 1B68     		ldr	r3, [r3]
 288 011e 23F00402 		bic	r2, r3, #4
 289 0122 7B68     		ldr	r3, [r7, #4]
 290 0124 1A60     		str	r2, [r3]
 291              	.L24:
 304:./Library/stm32f4xx_can.c ****     }
 305:./Library/stm32f4xx_can.c **** 
 306:./Library/stm32f4xx_can.c ****     /* Set the bit timing register */
 307:./Library/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 292              		.loc 1 307 52
 293 0126 3B68     		ldr	r3, [r7]
 294 0128 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 295              		.loc 1 307 17
 296 012a 9A07     		lsls	r2, r3, #30
 308:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 297              		.loc 1 308 42
 298 012c 3B68     		ldr	r3, [r7]
 299 012e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 300              		.loc 1 308 52
 301 0130 1B06     		lsls	r3, r3, #24
 307:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 302              		.loc 1 307 70
 303 0132 1A43     		orrs	r2, r2, r3
 309:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 304              		.loc 1 309 42
 305 0134 3B68     		ldr	r3, [r7]
 306 0136 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 307              		.loc 1 309 52
 308 0138 1B04     		lsls	r3, r3, #16
 308:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 309              		.loc 1 308 59
 310 013a 1A43     		orrs	r2, r2, r3
 310:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 311              		.loc 1 310 42
 312 013c 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 12


 313 013e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 314              		.loc 1 310 52
 315 0140 1B05     		lsls	r3, r3, #20
 309:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 316              		.loc 1 309 59
 317 0142 1A43     		orrs	r2, r2, r3
 311:./Library/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 318              		.loc 1 311 41
 319 0144 3B68     		ldr	r3, [r7]
 320 0146 1B88     		ldrh	r3, [r3]
 321              		.loc 1 311 57
 322 0148 013B     		subs	r3, r3, #1
 310:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 323              		.loc 1 310 59
 324 014a 1A43     		orrs	r2, r2, r3
 307:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 325              		.loc 1 307 15
 326 014c 7B68     		ldr	r3, [r7, #4]
 327 014e DA61     		str	r2, [r3, #28]
 312:./Library/stm32f4xx_can.c **** 
 313:./Library/stm32f4xx_can.c ****     /* Request leave initialisation */
 314:./Library/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 328              		.loc 1 314 15
 329 0150 7B68     		ldr	r3, [r7, #4]
 330 0152 1B68     		ldr	r3, [r3]
 331 0154 23F00102 		bic	r2, r3, #1
 332 0158 7B68     		ldr	r3, [r7, #4]
 333 015a 1A60     		str	r2, [r3]
 315:./Library/stm32f4xx_can.c **** 
 316:./Library/stm32f4xx_can.c ****    /* Wait the acknowledge */
 317:./Library/stm32f4xx_can.c ****    wait_ack = 0;
 334              		.loc 1 317 13
 335 015c 0023     		movs	r3, #0
 336 015e BB60     		str	r3, [r7, #8]
 318:./Library/stm32f4xx_can.c **** 
 319:./Library/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 337              		.loc 1 319 10
 338 0160 02E0     		b	.L25
 339              	.L27:
 320:./Library/stm32f4xx_can.c ****    {
 321:./Library/stm32f4xx_can.c ****      wait_ack++;
 340              		.loc 1 321 14
 341 0162 BB68     		ldr	r3, [r7, #8]
 342 0164 0133     		adds	r3, r3, #1
 343 0166 BB60     		str	r3, [r7, #8]
 344              	.L25:
 319:./Library/stm32f4xx_can.c ****    {
 345              		.loc 1 319 17
 346 0168 7B68     		ldr	r3, [r7, #4]
 347 016a 5B68     		ldr	r3, [r3, #4]
 319:./Library/stm32f4xx_can.c ****    {
 348              		.loc 1 319 23
 349 016c 03F00103 		and	r3, r3, #1
 319:./Library/stm32f4xx_can.c ****    {
 350              		.loc 1 319 10
 351 0170 012B     		cmp	r3, #1
 352 0172 04D1     		bne	.L26
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 13


 319:./Library/stm32f4xx_can.c ****    {
 353              		.loc 1 319 56 discriminator 1
 354 0174 BB68     		ldr	r3, [r7, #8]
 355 0176 4FF6FF72 		movw	r2, #65535
 356 017a 9342     		cmp	r3, r2
 357 017c F1D1     		bne	.L27
 358              	.L26:
 322:./Library/stm32f4xx_can.c ****    }
 323:./Library/stm32f4xx_can.c **** 
 324:./Library/stm32f4xx_can.c ****     /* ...and check acknowledged */
 325:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 359              		.loc 1 325 14
 360 017e 7B68     		ldr	r3, [r7, #4]
 361 0180 5B68     		ldr	r3, [r3, #4]
 362              		.loc 1 325 20
 363 0182 03F00103 		and	r3, r3, #1
 364              		.loc 1 325 8
 365 0186 012B     		cmp	r3, #1
 366 0188 02D1     		bne	.L28
 326:./Library/stm32f4xx_can.c ****     {
 327:./Library/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 367              		.loc 1 327 18
 368 018a 0023     		movs	r3, #0
 369 018c FB73     		strb	r3, [r7, #15]
 370 018e 01E0     		b	.L12
 371              	.L28:
 328:./Library/stm32f4xx_can.c ****     }
 329:./Library/stm32f4xx_can.c ****     else
 330:./Library/stm32f4xx_can.c ****     {
 331:./Library/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 372              		.loc 1 331 18
 373 0190 0123     		movs	r3, #1
 374 0192 FB73     		strb	r3, [r7, #15]
 375              	.L12:
 332:./Library/stm32f4xx_can.c ****     }
 333:./Library/stm32f4xx_can.c ****   }
 334:./Library/stm32f4xx_can.c **** 
 335:./Library/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 336:./Library/stm32f4xx_can.c ****   return InitStatus;
 376              		.loc 1 336 10
 377 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 337:./Library/stm32f4xx_can.c **** }
 378              		.loc 1 337 1
 379 0196 1846     		mov	r0, r3
 380 0198 1437     		adds	r7, r7, #20
 381              	.LCFI8:
 382              		.cfi_def_cfa_offset 4
 383 019a BD46     		mov	sp, r7
 384              	.LCFI9:
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 019c 5DF8047B 		ldr	r7, [sp], #4
 388              	.LCFI10:
 389              		.cfi_restore 7
 390              		.cfi_def_cfa_offset 0
 391 01a0 7047     		bx	lr
 392              		.cfi_endproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 14


 393              	.LFE124:
 395              		.section	.text.CAN_FilterInit,"ax",%progbits
 396              		.align	1
 397              		.global	CAN_FilterInit
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	CAN_FilterInit:
 403              	.LFB125:
 338:./Library/stm32f4xx_can.c **** 
 339:./Library/stm32f4xx_can.c **** #if defined(STM32F413_423xx)
 340:./Library/stm32f4xx_can.c **** /**
 341:./Library/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 342:./Library/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 343:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 3 to select the CAN peripheral.
 344:./Library/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 345:./Library/stm32f4xx_can.c ****   *         contains the configuration information.
 346:./Library/stm32f4xx_can.c ****   * @retval None
 347:./Library/stm32f4xx_can.c ****   */
 348:./Library/stm32f4xx_can.c **** void CAN_FilterInit(CAN_TypeDef* CANx, CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 349:./Library/stm32f4xx_can.c **** {
 350:./Library/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 351:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 352:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 353:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 354:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 355:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 356:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 357:./Library/stm32f4xx_can.c ****   
 358:./Library/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 359:./Library/stm32f4xx_can.c **** 
 360:./Library/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 361:./Library/stm32f4xx_can.c ****   CANx->FMR |= FMR_FINIT;
 362:./Library/stm32f4xx_can.c **** 
 363:./Library/stm32f4xx_can.c ****   /* Filter Deactivation */
 364:./Library/stm32f4xx_can.c ****   CANx->FA1R &= ~(uint32_t)filter_number_bit_pos;
 365:./Library/stm32f4xx_can.c **** 
 366:./Library/stm32f4xx_can.c ****   /* Filter Scale */
 367:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 368:./Library/stm32f4xx_can.c ****   {
 369:./Library/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 370:./Library/stm32f4xx_can.c ****     CANx->FS1R &= ~(uint32_t)filter_number_bit_pos;
 371:./Library/stm32f4xx_can.c **** 
 372:./Library/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 373:./Library/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 374:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 375:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 376:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 377:./Library/stm32f4xx_can.c **** 
 378:./Library/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 379:./Library/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 380:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 381:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 382:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 383:./Library/stm32f4xx_can.c ****   }
 384:./Library/stm32f4xx_can.c **** 
 385:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 15


 386:./Library/stm32f4xx_can.c ****   {
 387:./Library/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 388:./Library/stm32f4xx_can.c ****     CANx->FS1R |= filter_number_bit_pos;
 389:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 390:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 391:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 392:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 393:./Library/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 394:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 395:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 396:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 397:./Library/stm32f4xx_can.c ****   }
 398:./Library/stm32f4xx_can.c **** 
 399:./Library/stm32f4xx_can.c ****   /* Filter Mode */
 400:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 401:./Library/stm32f4xx_can.c ****   {
 402:./Library/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 403:./Library/stm32f4xx_can.c ****     CANx->FM1R &= ~(uint32_t)filter_number_bit_pos;
 404:./Library/stm32f4xx_can.c ****   }
 405:./Library/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 406:./Library/stm32f4xx_can.c ****   {
 407:./Library/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 408:./Library/stm32f4xx_can.c ****     CANx->FM1R |= (uint32_t)filter_number_bit_pos;
 409:./Library/stm32f4xx_can.c ****   }
 410:./Library/stm32f4xx_can.c **** 
 411:./Library/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 412:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 413:./Library/stm32f4xx_can.c ****   {
 414:./Library/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 415:./Library/stm32f4xx_can.c ****     CANx->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 416:./Library/stm32f4xx_can.c ****   }
 417:./Library/stm32f4xx_can.c **** 
 418:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 419:./Library/stm32f4xx_can.c ****   {
 420:./Library/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 421:./Library/stm32f4xx_can.c ****     CANx->FFA1R |= (uint32_t)filter_number_bit_pos;
 422:./Library/stm32f4xx_can.c ****   }
 423:./Library/stm32f4xx_can.c ****   
 424:./Library/stm32f4xx_can.c ****   /* Filter activation */
 425:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 426:./Library/stm32f4xx_can.c ****   {
 427:./Library/stm32f4xx_can.c ****     CANx->FA1R |= filter_number_bit_pos;
 428:./Library/stm32f4xx_can.c ****   }
 429:./Library/stm32f4xx_can.c **** 
 430:./Library/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 431:./Library/stm32f4xx_can.c ****   CANx->FMR &= ~FMR_FINIT;
 432:./Library/stm32f4xx_can.c **** }
 433:./Library/stm32f4xx_can.c **** #else
 434:./Library/stm32f4xx_can.c **** /**
 435:./Library/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 436:./Library/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 437:./Library/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 438:./Library/stm32f4xx_can.c ****   *         contains the configuration information.
 439:./Library/stm32f4xx_can.c ****   * @retval None
 440:./Library/stm32f4xx_can.c ****   */
 441:./Library/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 442:./Library/stm32f4xx_can.c **** {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 16


 404              		.loc 1 442 1
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 16
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 90B4     		push	{r4, r7}
 410              	.LCFI11:
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 4, -8
 413              		.cfi_offset 7, -4
 414 0002 84B0     		sub	sp, sp, #16
 415              	.LCFI12:
 416              		.cfi_def_cfa_offset 24
 417 0004 00AF     		add	r7, sp, #0
 418              	.LCFI13:
 419              		.cfi_def_cfa_register 7
 420 0006 7860     		str	r0, [r7, #4]
 443:./Library/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 421              		.loc 1 443 12
 422 0008 0023     		movs	r3, #0
 423 000a FB60     		str	r3, [r7, #12]
 444:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 445:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 446:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 447:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 448:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 449:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 450:./Library/stm32f4xx_can.c **** 
 451:./Library/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 424              		.loc 1 451 64
 425 000c 7B68     		ldr	r3, [r7, #4]
 426 000e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 427 0010 1A46     		mov	r2, r3
 428              		.loc 1 451 25
 429 0012 0123     		movs	r3, #1
 430 0014 9340     		lsls	r3, r3, r2
 431 0016 FB60     		str	r3, [r7, #12]
 452:./Library/stm32f4xx_can.c **** 
 453:./Library/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 454:./Library/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 432              		.loc 1 454 13
 433 0018 594B     		ldr	r3, .L38
 434 001a D3F80032 		ldr	r3, [r3, #512]
 435 001e 584A     		ldr	r2, .L38
 436 0020 43F00103 		orr	r3, r3, #1
 437 0024 C2F80032 		str	r3, [r2, #512]
 455:./Library/stm32f4xx_can.c **** 
 456:./Library/stm32f4xx_can.c ****   /* Filter Deactivation */
 457:./Library/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 438              		.loc 1 457 14
 439 0028 554B     		ldr	r3, .L38
 440 002a D3F81C22 		ldr	r2, [r3, #540]
 441              		.loc 1 457 17
 442 002e FB68     		ldr	r3, [r7, #12]
 443 0030 DB43     		mvns	r3, r3
 444              		.loc 1 457 14
 445 0032 5349     		ldr	r1, .L38
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 17


 446 0034 1340     		ands	r3, r3, r2
 447 0036 C1F81C32 		str	r3, [r1, #540]
 458:./Library/stm32f4xx_can.c **** 
 459:./Library/stm32f4xx_can.c ****   /* Filter Scale */
 460:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 448              		.loc 1 460 27
 449 003a 7B68     		ldr	r3, [r7, #4]
 450 003c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 451              		.loc 1 460 6
 452 003e 002B     		cmp	r3, #0
 453 0040 29D1     		bne	.L31
 461:./Library/stm32f4xx_can.c ****   {
 462:./Library/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 463:./Library/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 454              		.loc 1 463 16
 455 0042 4F4B     		ldr	r3, .L38
 456 0044 D3F80C22 		ldr	r2, [r3, #524]
 457              		.loc 1 463 19
 458 0048 FB68     		ldr	r3, [r7, #12]
 459 004a DB43     		mvns	r3, r3
 460              		.loc 1 463 16
 461 004c 4C49     		ldr	r1, .L38
 462 004e 1340     		ands	r3, r3, r2
 463 0050 C1F80C32 		str	r3, [r1, #524]
 464:./Library/stm32f4xx_can.c **** 
 465:./Library/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 466:./Library/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 467:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 468:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 464              		.loc 1 468 53
 465 0054 7B68     		ldr	r3, [r7, #4]
 466 0056 DB88     		ldrh	r3, [r3, #6]
 467              		.loc 1 468 76
 468 0058 1B04     		lsls	r3, r3, #16
 469:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 469              		.loc 1 469 53
 470 005a 7A68     		ldr	r2, [r7, #4]
 471 005c 5288     		ldrh	r2, [r2, #2]
 472              		.loc 1 469 21
 473 005e 1446     		mov	r4, r2
 467:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 474              		.loc 1 467 9
 475 0060 4749     		ldr	r1, .L38
 467:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 476              		.loc 1 467 47
 477 0062 7A68     		ldr	r2, [r7, #4]
 478 0064 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 479 0066 1046     		mov	r0, r2
 468:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 480              		.loc 1 468 83
 481 0068 43EA0402 		orr	r2, r3, r4
 467:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 482              		.loc 1 467 71
 483 006c 00F14803 		add	r3, r0, #72
 484 0070 41F83320 		str	r2, [r1, r3, lsl #3]
 470:./Library/stm32f4xx_can.c **** 
 471:./Library/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 18


 472:./Library/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 473:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 474:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 485              		.loc 1 474 53
 486 0074 7B68     		ldr	r3, [r7, #4]
 487 0076 9B88     		ldrh	r3, [r3, #4]
 488              		.loc 1 474 77
 489 0078 1B04     		lsls	r3, r3, #16
 475:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 490              		.loc 1 475 53
 491 007a 7A68     		ldr	r2, [r7, #4]
 492 007c 1288     		ldrh	r2, [r2]
 493              		.loc 1 475 21
 494 007e 1446     		mov	r4, r2
 473:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 495              		.loc 1 473 9
 496 0080 3F49     		ldr	r1, .L38
 473:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 497              		.loc 1 473 47
 498 0082 7A68     		ldr	r2, [r7, #4]
 499 0084 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 500 0086 1046     		mov	r0, r2
 474:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 501              		.loc 1 474 84
 502 0088 43EA0402 		orr	r2, r3, r4
 473:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 503              		.loc 1 473 71
 504 008c 00F14803 		add	r3, r0, #72
 505 0090 DB00     		lsls	r3, r3, #3
 506 0092 0B44     		add	r3, r3, r1
 507 0094 5A60     		str	r2, [r3, #4]
 508              	.L31:
 476:./Library/stm32f4xx_can.c ****   }
 477:./Library/stm32f4xx_can.c **** 
 478:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 509              		.loc 1 478 27
 510 0096 7B68     		ldr	r3, [r7, #4]
 511 0098 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 512              		.loc 1 478 6
 513 009a 012B     		cmp	r3, #1
 514 009c 28D1     		bne	.L32
 479:./Library/stm32f4xx_can.c ****   {
 480:./Library/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 481:./Library/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 515              		.loc 1 481 16
 516 009e 384B     		ldr	r3, .L38
 517 00a0 D3F80C22 		ldr	r2, [r3, #524]
 518 00a4 3649     		ldr	r1, .L38
 519 00a6 FB68     		ldr	r3, [r7, #12]
 520 00a8 1343     		orrs	r3, r3, r2
 521 00aa C1F80C32 		str	r3, [r1, #524]
 482:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 483:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 484:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 522              		.loc 1 484 53
 523 00ae 7B68     		ldr	r3, [r7, #4]
 524 00b0 1B88     		ldrh	r3, [r3]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 19


 525              		.loc 1 484 73
 526 00b2 1B04     		lsls	r3, r3, #16
 485:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 527              		.loc 1 485 53
 528 00b4 7A68     		ldr	r2, [r7, #4]
 529 00b6 5288     		ldrh	r2, [r2, #2]
 530              		.loc 1 485 21
 531 00b8 1446     		mov	r4, r2
 483:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 532              		.loc 1 483 9
 533 00ba 3149     		ldr	r1, .L38
 483:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 534              		.loc 1 483 47
 535 00bc 7A68     		ldr	r2, [r7, #4]
 536 00be 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 537 00c0 1046     		mov	r0, r2
 484:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 538              		.loc 1 484 80
 539 00c2 43EA0402 		orr	r2, r3, r4
 483:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 540              		.loc 1 483 71
 541 00c6 00F14803 		add	r3, r0, #72
 542 00ca 41F83320 		str	r2, [r1, r3, lsl #3]
 486:./Library/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 487:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 488:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 543              		.loc 1 488 53
 544 00ce 7B68     		ldr	r3, [r7, #4]
 545 00d0 9B88     		ldrh	r3, [r3, #4]
 546              		.loc 1 488 77
 547 00d2 1B04     		lsls	r3, r3, #16
 489:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 548              		.loc 1 489 53
 549 00d4 7A68     		ldr	r2, [r7, #4]
 550 00d6 D288     		ldrh	r2, [r2, #6]
 551              		.loc 1 489 21
 552 00d8 1446     		mov	r4, r2
 487:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 553              		.loc 1 487 9
 554 00da 2949     		ldr	r1, .L38
 487:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 555              		.loc 1 487 47
 556 00dc 7A68     		ldr	r2, [r7, #4]
 557 00de 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 558 00e0 1046     		mov	r0, r2
 488:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 559              		.loc 1 488 84
 560 00e2 43EA0402 		orr	r2, r3, r4
 487:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 561              		.loc 1 487 71
 562 00e6 00F14803 		add	r3, r0, #72
 563 00ea DB00     		lsls	r3, r3, #3
 564 00ec 0B44     		add	r3, r3, r1
 565 00ee 5A60     		str	r2, [r3, #4]
 566              	.L32:
 490:./Library/stm32f4xx_can.c ****   }
 491:./Library/stm32f4xx_can.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 20


 492:./Library/stm32f4xx_can.c ****   /* Filter Mode */
 493:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 567              		.loc 1 493 27
 568 00f0 7B68     		ldr	r3, [r7, #4]
 569 00f2 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 570              		.loc 1 493 6
 571 00f4 002B     		cmp	r3, #0
 572 00f6 09D1     		bne	.L33
 494:./Library/stm32f4xx_can.c ****   {
 495:./Library/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 496:./Library/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 573              		.loc 1 496 16
 574 00f8 214B     		ldr	r3, .L38
 575 00fa D3F80422 		ldr	r2, [r3, #516]
 576              		.loc 1 496 19
 577 00fe FB68     		ldr	r3, [r7, #12]
 578 0100 DB43     		mvns	r3, r3
 579              		.loc 1 496 16
 580 0102 1F49     		ldr	r1, .L38
 581 0104 1340     		ands	r3, r3, r2
 582 0106 C1F80432 		str	r3, [r1, #516]
 583 010a 07E0     		b	.L34
 584              	.L33:
 497:./Library/stm32f4xx_can.c ****   }
 498:./Library/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 499:./Library/stm32f4xx_can.c ****   {
 500:./Library/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 501:./Library/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 585              		.loc 1 501 16
 586 010c 1C4B     		ldr	r3, .L38
 587 010e D3F80422 		ldr	r2, [r3, #516]
 588 0112 1B49     		ldr	r1, .L38
 589 0114 FB68     		ldr	r3, [r7, #12]
 590 0116 1343     		orrs	r3, r3, r2
 591 0118 C1F80432 		str	r3, [r1, #516]
 592              	.L34:
 502:./Library/stm32f4xx_can.c ****   }
 503:./Library/stm32f4xx_can.c **** 
 504:./Library/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 505:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 593              		.loc 1 505 27
 594 011c 7B68     		ldr	r3, [r7, #4]
 595 011e 1B89     		ldrh	r3, [r3, #8]
 596              		.loc 1 505 6
 597 0120 002B     		cmp	r3, #0
 598 0122 08D1     		bne	.L35
 506:./Library/stm32f4xx_can.c ****   {
 507:./Library/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 508:./Library/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 599              		.loc 1 508 17
 600 0124 164B     		ldr	r3, .L38
 601 0126 D3F81422 		ldr	r2, [r3, #532]
 602              		.loc 1 508 20
 603 012a FB68     		ldr	r3, [r7, #12]
 604 012c DB43     		mvns	r3, r3
 605              		.loc 1 508 17
 606 012e 1449     		ldr	r1, .L38
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 21


 607 0130 1340     		ands	r3, r3, r2
 608 0132 C1F81432 		str	r3, [r1, #532]
 609              	.L35:
 509:./Library/stm32f4xx_can.c ****   }
 510:./Library/stm32f4xx_can.c **** 
 511:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 610              		.loc 1 511 27
 611 0136 7B68     		ldr	r3, [r7, #4]
 612 0138 1B89     		ldrh	r3, [r3, #8]
 613              		.loc 1 511 6
 614 013a 012B     		cmp	r3, #1
 615 013c 07D1     		bne	.L36
 512:./Library/stm32f4xx_can.c ****   {
 513:./Library/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 514:./Library/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 616              		.loc 1 514 17
 617 013e 104B     		ldr	r3, .L38
 618 0140 D3F81422 		ldr	r2, [r3, #532]
 619 0144 0E49     		ldr	r1, .L38
 620 0146 FB68     		ldr	r3, [r7, #12]
 621 0148 1343     		orrs	r3, r3, r2
 622 014a C1F81432 		str	r3, [r1, #532]
 623              	.L36:
 515:./Library/stm32f4xx_can.c ****   }
 516:./Library/stm32f4xx_can.c ****   
 517:./Library/stm32f4xx_can.c ****   /* Filter activation */
 518:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 624              		.loc 1 518 27
 625 014e 7B68     		ldr	r3, [r7, #4]
 626 0150 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 627              		.loc 1 518 6
 628 0152 012B     		cmp	r3, #1
 629 0154 07D1     		bne	.L37
 519:./Library/stm32f4xx_can.c ****   {
 520:./Library/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 630              		.loc 1 520 16
 631 0156 0A4B     		ldr	r3, .L38
 632 0158 D3F81C22 		ldr	r2, [r3, #540]
 633 015c 0849     		ldr	r1, .L38
 634 015e FB68     		ldr	r3, [r7, #12]
 635 0160 1343     		orrs	r3, r3, r2
 636 0162 C1F81C32 		str	r3, [r1, #540]
 637              	.L37:
 521:./Library/stm32f4xx_can.c ****   }
 522:./Library/stm32f4xx_can.c **** 
 523:./Library/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 524:./Library/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 638              		.loc 1 524 13
 639 0166 064B     		ldr	r3, .L38
 640 0168 D3F80032 		ldr	r3, [r3, #512]
 641 016c 044A     		ldr	r2, .L38
 642 016e 23F00103 		bic	r3, r3, #1
 643 0172 C2F80032 		str	r3, [r2, #512]
 525:./Library/stm32f4xx_can.c **** }
 644              		.loc 1 525 1
 645 0176 00BF     		nop
 646 0178 1037     		adds	r7, r7, #16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 22


 647              	.LCFI14:
 648              		.cfi_def_cfa_offset 8
 649 017a BD46     		mov	sp, r7
 650              	.LCFI15:
 651              		.cfi_def_cfa_register 13
 652              		@ sp needed
 653 017c 90BC     		pop	{r4, r7}
 654              	.LCFI16:
 655              		.cfi_restore 7
 656              		.cfi_restore 4
 657              		.cfi_def_cfa_offset 0
 658 017e 7047     		bx	lr
 659              	.L39:
 660              		.align	2
 661              	.L38:
 662 0180 00640040 		.word	1073767424
 663              		.cfi_endproc
 664              	.LFE125:
 666              		.section	.text.CAN_StructInit,"ax",%progbits
 667              		.align	1
 668              		.global	CAN_StructInit
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 673              	CAN_StructInit:
 674              	.LFB126:
 526:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 527:./Library/stm32f4xx_can.c **** 
 528:./Library/stm32f4xx_can.c **** /**
 529:./Library/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 530:./Library/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 531:./Library/stm32f4xx_can.c ****   * @retval None
 532:./Library/stm32f4xx_can.c ****   */
 533:./Library/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 534:./Library/stm32f4xx_can.c **** {
 675              		.loc 1 534 1
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 8
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680 0000 80B4     		push	{r7}
 681              	.LCFI17:
 682              		.cfi_def_cfa_offset 4
 683              		.cfi_offset 7, -4
 684 0002 83B0     		sub	sp, sp, #12
 685              	.LCFI18:
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              	.LCFI19:
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
 535:./Library/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 536:./Library/stm32f4xx_can.c ****   
 537:./Library/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 538:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 691              		.loc 1 538 28
 692 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 23


 693 000a 0022     		movs	r2, #0
 694 000c 9A71     		strb	r2, [r3, #6]
 539:./Library/stm32f4xx_can.c ****   
 540:./Library/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 541:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 695              		.loc 1 541 28
 696 000e 7B68     		ldr	r3, [r7, #4]
 697 0010 0022     		movs	r2, #0
 698 0012 DA71     		strb	r2, [r3, #7]
 542:./Library/stm32f4xx_can.c ****   
 543:./Library/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 544:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 699              		.loc 1 544 28
 700 0014 7B68     		ldr	r3, [r7, #4]
 701 0016 0022     		movs	r2, #0
 702 0018 1A72     		strb	r2, [r3, #8]
 545:./Library/stm32f4xx_can.c ****   
 546:./Library/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 547:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 703              		.loc 1 547 28
 704 001a 7B68     		ldr	r3, [r7, #4]
 705 001c 0022     		movs	r2, #0
 706 001e 5A72     		strb	r2, [r3, #9]
 548:./Library/stm32f4xx_can.c ****   
 549:./Library/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 550:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 707              		.loc 1 550 28
 708 0020 7B68     		ldr	r3, [r7, #4]
 709 0022 0022     		movs	r2, #0
 710 0024 9A72     		strb	r2, [r3, #10]
 551:./Library/stm32f4xx_can.c ****   
 552:./Library/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 553:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 711              		.loc 1 553 28
 712 0026 7B68     		ldr	r3, [r7, #4]
 713 0028 0022     		movs	r2, #0
 714 002a DA72     		strb	r2, [r3, #11]
 554:./Library/stm32f4xx_can.c ****   
 555:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 556:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 715              		.loc 1 556 28
 716 002c 7B68     		ldr	r3, [r7, #4]
 717 002e 0022     		movs	r2, #0
 718 0030 9A70     		strb	r2, [r3, #2]
 557:./Library/stm32f4xx_can.c ****   
 558:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 559:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 719              		.loc 1 559 27
 720 0032 7B68     		ldr	r3, [r7, #4]
 721 0034 0022     		movs	r2, #0
 722 0036 DA70     		strb	r2, [r3, #3]
 560:./Library/stm32f4xx_can.c ****   
 561:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 562:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 723              		.loc 1 562 27
 724 0038 7B68     		ldr	r3, [r7, #4]
 725 003a 0322     		movs	r2, #3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 24


 726 003c 1A71     		strb	r2, [r3, #4]
 563:./Library/stm32f4xx_can.c ****   
 564:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 565:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 727              		.loc 1 565 27
 728 003e 7B68     		ldr	r3, [r7, #4]
 729 0040 0222     		movs	r2, #2
 730 0042 5A71     		strb	r2, [r3, #5]
 566:./Library/stm32f4xx_can.c ****   
 567:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 568:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 731              		.loc 1 568 33
 732 0044 7B68     		ldr	r3, [r7, #4]
 733 0046 0122     		movs	r2, #1
 734 0048 1A80     		strh	r2, [r3]	@ movhi
 569:./Library/stm32f4xx_can.c **** }
 735              		.loc 1 569 1
 736 004a 00BF     		nop
 737 004c 0C37     		adds	r7, r7, #12
 738              	.LCFI20:
 739              		.cfi_def_cfa_offset 4
 740 004e BD46     		mov	sp, r7
 741              	.LCFI21:
 742              		.cfi_def_cfa_register 13
 743              		@ sp needed
 744 0050 5DF8047B 		ldr	r7, [sp], #4
 745              	.LCFI22:
 746              		.cfi_restore 7
 747              		.cfi_def_cfa_offset 0
 748 0054 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE126:
 752              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 753              		.align	1
 754              		.global	CAN_SlaveStartBank
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 759              	CAN_SlaveStartBank:
 760              	.LFB127:
 570:./Library/stm32f4xx_can.c **** 
 571:./Library/stm32f4xx_can.c **** #if defined(STM32F413_423xx)
 572:./Library/stm32f4xx_can.c **** /**
 573:./Library/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 574:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 3 to select the CAN peripheral.
 575:./Library/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 576:./Library/stm32f4xx_can.c ****   * @retval None
 577:./Library/stm32f4xx_can.c ****   */
 578:./Library/stm32f4xx_can.c **** void CAN_SlaveStartBank(CAN_TypeDef* CANx, uint8_t CAN_BankNumber) 
 579:./Library/stm32f4xx_can.c **** {
 580:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 581:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 582:./Library/stm32f4xx_can.c ****   
 583:./Library/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 584:./Library/stm32f4xx_can.c ****   CANx->FMR |= FMR_FINIT;
 585:./Library/stm32f4xx_can.c ****   
 586:./Library/stm32f4xx_can.c ****   /* Select the start slave bank */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 25


 587:./Library/stm32f4xx_can.c ****   CANx->FMR &= (uint32_t)0xFFFFC0F1 ;
 588:./Library/stm32f4xx_can.c ****   CANx->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 589:./Library/stm32f4xx_can.c ****   
 590:./Library/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 591:./Library/stm32f4xx_can.c ****   CANx->FMR &= ~FMR_FINIT;
 592:./Library/stm32f4xx_can.c **** }
 593:./Library/stm32f4xx_can.c **** #else
 594:./Library/stm32f4xx_can.c **** /**
 595:./Library/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 596:./Library/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 597:./Library/stm32f4xx_can.c ****   * @retval None
 598:./Library/stm32f4xx_can.c ****   */
 599:./Library/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 600:./Library/stm32f4xx_can.c **** {
 761              		.loc 1 600 1
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766 0000 80B4     		push	{r7}
 767              	.LCFI23:
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              	.LCFI24:
 772              		.cfi_def_cfa_offset 16
 773 0004 00AF     		add	r7, sp, #0
 774              	.LCFI25:
 775              		.cfi_def_cfa_register 7
 776 0006 0346     		mov	r3, r0
 777 0008 FB71     		strb	r3, [r7, #7]
 601:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 602:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 603:./Library/stm32f4xx_can.c ****   
 604:./Library/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 605:./Library/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 778              		.loc 1 605 13
 779 000a 144B     		ldr	r3, .L42
 780 000c D3F80032 		ldr	r3, [r3, #512]
 781 0010 124A     		ldr	r2, .L42
 782 0012 43F00103 		orr	r3, r3, #1
 783 0016 C2F80032 		str	r3, [r2, #512]
 606:./Library/stm32f4xx_can.c ****   
 607:./Library/stm32f4xx_can.c ****   /* Select the start slave bank */
 608:./Library/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 784              		.loc 1 608 13
 785 001a 104B     		ldr	r3, .L42
 786 001c D3F80032 		ldr	r3, [r3, #512]
 787 0020 0E4A     		ldr	r2, .L42
 788 0022 23F47C53 		bic	r3, r3, #16128
 789 0026 23F00E03 		bic	r3, r3, #14
 790 002a C2F80032 		str	r3, [r2, #512]
 609:./Library/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 791              		.loc 1 609 13
 792 002e 0B4B     		ldr	r3, .L42
 793 0030 D3F80022 		ldr	r2, [r3, #512]
 794              		.loc 1 609 16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 26


 795 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 796              		.loc 1 609 42
 797 0036 1B02     		lsls	r3, r3, #8
 798              		.loc 1 609 13
 799 0038 0849     		ldr	r1, .L42
 800 003a 1343     		orrs	r3, r3, r2
 801 003c C1F80032 		str	r3, [r1, #512]
 610:./Library/stm32f4xx_can.c ****   
 611:./Library/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 612:./Library/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 802              		.loc 1 612 13
 803 0040 064B     		ldr	r3, .L42
 804 0042 D3F80032 		ldr	r3, [r3, #512]
 805 0046 054A     		ldr	r2, .L42
 806 0048 23F00103 		bic	r3, r3, #1
 807 004c C2F80032 		str	r3, [r2, #512]
 613:./Library/stm32f4xx_can.c **** }
 808              		.loc 1 613 1
 809 0050 00BF     		nop
 810 0052 0C37     		adds	r7, r7, #12
 811              	.LCFI26:
 812              		.cfi_def_cfa_offset 4
 813 0054 BD46     		mov	sp, r7
 814              	.LCFI27:
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 0056 5DF8047B 		ldr	r7, [sp], #4
 818              	.LCFI28:
 819              		.cfi_restore 7
 820              		.cfi_def_cfa_offset 0
 821 005a 7047     		bx	lr
 822              	.L43:
 823              		.align	2
 824              	.L42:
 825 005c 00640040 		.word	1073767424
 826              		.cfi_endproc
 827              	.LFE127:
 829              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 830              		.align	1
 831              		.global	CAN_DBGFreeze
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 836              	CAN_DBGFreeze:
 837              	.LFB128:
 614:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 615:./Library/stm32f4xx_can.c **** /**
 616:./Library/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 617:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 618:./Library/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 619:./Library/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 620:./Library/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 621:./Library/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 622:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 623:./Library/stm32f4xx_can.c ****   * @retval None
 624:./Library/stm32f4xx_can.c ****   */
 625:./Library/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 27


 626:./Library/stm32f4xx_can.c **** {
 838              		.loc 1 626 1
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 843 0000 80B4     		push	{r7}
 844              	.LCFI29:
 845              		.cfi_def_cfa_offset 4
 846              		.cfi_offset 7, -4
 847 0002 83B0     		sub	sp, sp, #12
 848              	.LCFI30:
 849              		.cfi_def_cfa_offset 16
 850 0004 00AF     		add	r7, sp, #0
 851              	.LCFI31:
 852              		.cfi_def_cfa_register 7
 853 0006 7860     		str	r0, [r7, #4]
 854 0008 0B46     		mov	r3, r1
 855 000a FB70     		strb	r3, [r7, #3]
 627:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 628:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 629:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:./Library/stm32f4xx_can.c ****   
 631:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
 856              		.loc 1 631 6
 857 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 858 000e 002B     		cmp	r3, #0
 859 0010 06D0     		beq	.L45
 632:./Library/stm32f4xx_can.c ****   {
 633:./Library/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 634:./Library/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 860              		.loc 1 634 15
 861 0012 7B68     		ldr	r3, [r7, #4]
 862 0014 1B68     		ldr	r3, [r3]
 863 0016 43F48032 		orr	r2, r3, #65536
 864 001a 7B68     		ldr	r3, [r7, #4]
 865 001c 1A60     		str	r2, [r3]
 635:./Library/stm32f4xx_can.c ****   }
 636:./Library/stm32f4xx_can.c ****   else
 637:./Library/stm32f4xx_can.c ****   {
 638:./Library/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 639:./Library/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 640:./Library/stm32f4xx_can.c ****   }
 641:./Library/stm32f4xx_can.c **** }
 866              		.loc 1 641 1
 867 001e 05E0     		b	.L47
 868              	.L45:
 639:./Library/stm32f4xx_can.c ****   }
 869              		.loc 1 639 15
 870 0020 7B68     		ldr	r3, [r7, #4]
 871 0022 1B68     		ldr	r3, [r3]
 872 0024 23F48032 		bic	r2, r3, #65536
 873 0028 7B68     		ldr	r3, [r7, #4]
 874 002a 1A60     		str	r2, [r3]
 875              	.L47:
 876              		.loc 1 641 1
 877 002c 00BF     		nop
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 28


 878 002e 0C37     		adds	r7, r7, #12
 879              	.LCFI32:
 880              		.cfi_def_cfa_offset 4
 881 0030 BD46     		mov	sp, r7
 882              	.LCFI33:
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 0032 5DF8047B 		ldr	r7, [sp], #4
 886              	.LCFI34:
 887              		.cfi_restore 7
 888              		.cfi_def_cfa_offset 0
 889 0036 7047     		bx	lr
 890              		.cfi_endproc
 891              	.LFE128:
 893              		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 894              		.align	1
 895              		.global	CAN_TTComModeCmd
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 900              	CAN_TTComModeCmd:
 901              	.LFB129:
 642:./Library/stm32f4xx_can.c **** 
 643:./Library/stm32f4xx_can.c **** 
 644:./Library/stm32f4xx_can.c **** /**
 645:./Library/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 646:./Library/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 647:./Library/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 648:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 649:./Library/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 650:./Library/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 651:./Library/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 652:./Library/stm32f4xx_can.c ****   *         in data byte 7.
 653:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 654:./Library/stm32f4xx_can.c ****   * @retval None
 655:./Library/stm32f4xx_can.c ****   */
 656:./Library/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 657:./Library/stm32f4xx_can.c **** {
 902              		.loc 1 657 1
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 8
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907 0000 80B4     		push	{r7}
 908              	.LCFI35:
 909              		.cfi_def_cfa_offset 4
 910              		.cfi_offset 7, -4
 911 0002 83B0     		sub	sp, sp, #12
 912              	.LCFI36:
 913              		.cfi_def_cfa_offset 16
 914 0004 00AF     		add	r7, sp, #0
 915              	.LCFI37:
 916              		.cfi_def_cfa_register 7
 917 0006 7860     		str	r0, [r7, #4]
 918 0008 0B46     		mov	r3, r1
 919 000a FB70     		strb	r3, [r7, #3]
 658:./Library/stm32f4xx_can.c ****   /* Check the parameters */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 29


 659:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 660:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 661:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
 920              		.loc 1 661 6
 921 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 922 000e 002B     		cmp	r3, #0
 923 0010 1ED0     		beq	.L49
 662:./Library/stm32f4xx_can.c ****   {
 663:./Library/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 664:./Library/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 924              		.loc 1 664 15
 925 0012 7B68     		ldr	r3, [r7, #4]
 926 0014 1B68     		ldr	r3, [r3]
 927 0016 43F08002 		orr	r2, r3, #128
 928 001a 7B68     		ldr	r3, [r7, #4]
 929 001c 1A60     		str	r2, [r3]
 665:./Library/stm32f4xx_can.c **** 
 666:./Library/stm32f4xx_can.c ****     /* Set TGT bits */
 667:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 930              		.loc 1 667 30
 931 001e 7B68     		ldr	r3, [r7, #4]
 932 0020 D3F88431 		ldr	r3, [r3, #388]
 933 0024 43F48072 		orr	r2, r3, #256
 934 0028 7B68     		ldr	r3, [r7, #4]
 935 002a C3F88421 		str	r2, [r3, #388]
 668:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 936              		.loc 1 668 30
 937 002e 7B68     		ldr	r3, [r7, #4]
 938 0030 D3F89431 		ldr	r3, [r3, #404]
 939 0034 43F48072 		orr	r2, r3, #256
 940 0038 7B68     		ldr	r3, [r7, #4]
 941 003a C3F89421 		str	r2, [r3, #404]
 669:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 942              		.loc 1 669 30
 943 003e 7B68     		ldr	r3, [r7, #4]
 944 0040 D3F8A431 		ldr	r3, [r3, #420]
 945 0044 43F48072 		orr	r2, r3, #256
 946 0048 7B68     		ldr	r3, [r7, #4]
 947 004a C3F8A421 		str	r2, [r3, #420]
 670:./Library/stm32f4xx_can.c ****   }
 671:./Library/stm32f4xx_can.c ****   else
 672:./Library/stm32f4xx_can.c ****   {
 673:./Library/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 674:./Library/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 675:./Library/stm32f4xx_can.c **** 
 676:./Library/stm32f4xx_can.c ****     /* Reset TGT bits */
 677:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 678:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 679:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 680:./Library/stm32f4xx_can.c ****   }
 681:./Library/stm32f4xx_can.c **** }
 948              		.loc 1 681 1
 949 004e 1DE0     		b	.L51
 950              	.L49:
 674:./Library/stm32f4xx_can.c **** 
 951              		.loc 1 674 15
 952 0050 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 30


 953 0052 1B68     		ldr	r3, [r3]
 954 0054 23F08002 		bic	r2, r3, #128
 955 0058 7B68     		ldr	r3, [r7, #4]
 956 005a 1A60     		str	r2, [r3]
 677:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 957              		.loc 1 677 30
 958 005c 7B68     		ldr	r3, [r7, #4]
 959 005e D3F88431 		ldr	r3, [r3, #388]
 960 0062 23F48072 		bic	r2, r3, #256
 961 0066 7B68     		ldr	r3, [r7, #4]
 962 0068 C3F88421 		str	r2, [r3, #388]
 678:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 963              		.loc 1 678 30
 964 006c 7B68     		ldr	r3, [r7, #4]
 965 006e D3F89431 		ldr	r3, [r3, #404]
 966 0072 23F48072 		bic	r2, r3, #256
 967 0076 7B68     		ldr	r3, [r7, #4]
 968 0078 C3F89421 		str	r2, [r3, #404]
 679:./Library/stm32f4xx_can.c ****   }
 969              		.loc 1 679 30
 970 007c 7B68     		ldr	r3, [r7, #4]
 971 007e D3F8A431 		ldr	r3, [r3, #420]
 972 0082 23F48072 		bic	r2, r3, #256
 973 0086 7B68     		ldr	r3, [r7, #4]
 974 0088 C3F8A421 		str	r2, [r3, #420]
 975              	.L51:
 976              		.loc 1 681 1
 977 008c 00BF     		nop
 978 008e 0C37     		adds	r7, r7, #12
 979              	.LCFI38:
 980              		.cfi_def_cfa_offset 4
 981 0090 BD46     		mov	sp, r7
 982              	.LCFI39:
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 0092 5DF8047B 		ldr	r7, [sp], #4
 986              	.LCFI40:
 987              		.cfi_restore 7
 988              		.cfi_def_cfa_offset 0
 989 0096 7047     		bx	lr
 990              		.cfi_endproc
 991              	.LFE129:
 993              		.section	.text.CAN_Transmit,"ax",%progbits
 994              		.align	1
 995              		.global	CAN_Transmit
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 1000              	CAN_Transmit:
 1001              	.LFB130:
 682:./Library/stm32f4xx_can.c **** /**
 683:./Library/stm32f4xx_can.c ****   * @}
 684:./Library/stm32f4xx_can.c ****   */
 685:./Library/stm32f4xx_can.c **** 
 686:./Library/stm32f4xx_can.c **** 
 687:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 688:./Library/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 31


 689:./Library/stm32f4xx_can.c ****  *
 690:./Library/stm32f4xx_can.c **** @verbatim    
 691:./Library/stm32f4xx_can.c ****  ===============================================================================
 692:./Library/stm32f4xx_can.c ****                 ##### CAN Frames Transmission functions #####
 693:./Library/stm32f4xx_can.c ****  ===============================================================================  
 694:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 695:./Library/stm32f4xx_can.c ****       (+) Initiate and transmit a CAN frame message (if there is an empty mailbox).
 696:./Library/stm32f4xx_can.c ****       (+) Check the transmission status of a CAN Frame
 697:./Library/stm32f4xx_can.c ****       (+) Cancel a transmit request
 698:./Library/stm32f4xx_can.c ****    
 699:./Library/stm32f4xx_can.c **** @endverbatim
 700:./Library/stm32f4xx_can.c ****   * @{
 701:./Library/stm32f4xx_can.c ****   */
 702:./Library/stm32f4xx_can.c **** 
 703:./Library/stm32f4xx_can.c **** /**
 704:./Library/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 705:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 706:./Library/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 707:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 708:./Library/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 709:./Library/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 710:./Library/stm32f4xx_can.c ****   */
 711:./Library/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 712:./Library/stm32f4xx_can.c **** {
 1002              		.loc 1 712 1
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 16
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007 0000 80B4     		push	{r7}
 1008              	.LCFI41:
 1009              		.cfi_def_cfa_offset 4
 1010              		.cfi_offset 7, -4
 1011 0002 85B0     		sub	sp, sp, #20
 1012              	.LCFI42:
 1013              		.cfi_def_cfa_offset 24
 1014 0004 00AF     		add	r7, sp, #0
 1015              	.LCFI43:
 1016              		.cfi_def_cfa_register 7
 1017 0006 7860     		str	r0, [r7, #4]
 1018 0008 3960     		str	r1, [r7]
 713:./Library/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 1019              		.loc 1 713 11
 1020 000a 0023     		movs	r3, #0
 1021 000c FB73     		strb	r3, [r7, #15]
 714:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 715:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 716:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 717:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 718:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 719:./Library/stm32f4xx_can.c **** 
 720:./Library/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 721:./Library/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 1022              		.loc 1 721 12
 1023 000e 7B68     		ldr	r3, [r7, #4]
 1024 0010 9B68     		ldr	r3, [r3, #8]
 1025              		.loc 1 721 17
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 32


 1026 0012 03F08063 		and	r3, r3, #67108864
 1027              		.loc 1 721 6
 1028 0016 B3F1806F 		cmp	r3, #67108864
 1029 001a 02D1     		bne	.L53
 722:./Library/stm32f4xx_can.c ****   {
 723:./Library/stm32f4xx_can.c ****     transmit_mailbox = 0;
 1030              		.loc 1 723 22
 1031 001c 0023     		movs	r3, #0
 1032 001e FB73     		strb	r3, [r7, #15]
 1033 0020 15E0     		b	.L54
 1034              	.L53:
 724:./Library/stm32f4xx_can.c ****   }
 725:./Library/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 1035              		.loc 1 725 17
 1036 0022 7B68     		ldr	r3, [r7, #4]
 1037 0024 9B68     		ldr	r3, [r3, #8]
 1038              		.loc 1 725 22
 1039 0026 03F00063 		and	r3, r3, #134217728
 1040              		.loc 1 725 11
 1041 002a B3F1006F 		cmp	r3, #134217728
 1042 002e 02D1     		bne	.L55
 726:./Library/stm32f4xx_can.c ****   {
 727:./Library/stm32f4xx_can.c ****     transmit_mailbox = 1;
 1043              		.loc 1 727 22
 1044 0030 0123     		movs	r3, #1
 1045 0032 FB73     		strb	r3, [r7, #15]
 1046 0034 0BE0     		b	.L54
 1047              	.L55:
 728:./Library/stm32f4xx_can.c ****   }
 729:./Library/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 1048              		.loc 1 729 17
 1049 0036 7B68     		ldr	r3, [r7, #4]
 1050 0038 9B68     		ldr	r3, [r3, #8]
 1051              		.loc 1 729 22
 1052 003a 03F08053 		and	r3, r3, #268435456
 1053              		.loc 1 729 11
 1054 003e B3F1805F 		cmp	r3, #268435456
 1055 0042 02D1     		bne	.L56
 730:./Library/stm32f4xx_can.c ****   {
 731:./Library/stm32f4xx_can.c ****     transmit_mailbox = 2;
 1056              		.loc 1 731 22
 1057 0044 0223     		movs	r3, #2
 1058 0046 FB73     		strb	r3, [r7, #15]
 1059 0048 01E0     		b	.L54
 1060              	.L56:
 732:./Library/stm32f4xx_can.c ****   }
 733:./Library/stm32f4xx_can.c ****   else
 734:./Library/stm32f4xx_can.c ****   {
 735:./Library/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 1061              		.loc 1 735 22
 1062 004a 0423     		movs	r3, #4
 1063 004c FB73     		strb	r3, [r7, #15]
 1064              	.L54:
 736:./Library/stm32f4xx_can.c ****   }
 737:./Library/stm32f4xx_can.c **** 
 738:./Library/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 1065              		.loc 1 738 6
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 33


 1066 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1067 0050 042B     		cmp	r3, #4
 1068 0052 00F09F80 		beq	.L57
 739:./Library/stm32f4xx_can.c ****   {
 740:./Library/stm32f4xx_can.c ****     /* Set up the Id */
 741:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 1069              		.loc 1 741 44
 1070 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1071 0058 7A68     		ldr	r2, [r7, #4]
 1072 005a 1833     		adds	r3, r3, #24
 1073 005c 1B01     		lsls	r3, r3, #4
 1074 005e 1344     		add	r3, r3, r2
 1075 0060 1A68     		ldr	r2, [r3]
 1076 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1077 0064 02F00102 		and	r2, r2, #1
 1078 0068 7968     		ldr	r1, [r7, #4]
 1079 006a 1833     		adds	r3, r3, #24
 1080 006c 1B01     		lsls	r3, r3, #4
 1081 006e 0B44     		add	r3, r3, r1
 1082 0070 1A60     		str	r2, [r3]
 742:./Library/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 1083              		.loc 1 742 18
 1084 0072 3B68     		ldr	r3, [r7]
 1085 0074 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1086              		.loc 1 742 8
 1087 0076 002B     		cmp	r3, #0
 1088 0078 13D1     		bne	.L58
 743:./Library/stm32f4xx_can.c ****     {
 744:./Library/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 745:./Library/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 1089              		.loc 1 745 46
 1090 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1091 007c 7A68     		ldr	r2, [r7, #4]
 1092 007e 1833     		adds	r3, r3, #24
 1093 0080 1B01     		lsls	r3, r3, #4
 1094 0082 1344     		add	r3, r3, r2
 1095 0084 1968     		ldr	r1, [r3]
 1096              		.loc 1 745 60
 1097 0086 3B68     		ldr	r3, [r7]
 1098 0088 1B68     		ldr	r3, [r3]
 1099              		.loc 1 745 68
 1100 008a 5B05     		lsls	r3, r3, #21
 746:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1101              		.loc 1 746 60
 1102 008c 3A68     		ldr	r2, [r7]
 1103 008e 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 745:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1104              		.loc 1 745 75
 1105 0090 1A43     		orrs	r2, r2, r3
 745:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1106              		.loc 1 745 46
 1107 0092 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1108 0094 0A43     		orrs	r2, r2, r1
 1109 0096 7968     		ldr	r1, [r7, #4]
 1110 0098 1833     		adds	r3, r3, #24
 1111 009a 1B01     		lsls	r3, r3, #4
 1112 009c 0B44     		add	r3, r3, r1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 34


 1113 009e 1A60     		str	r2, [r3]
 1114 00a0 15E0     		b	.L59
 1115              	.L58:
 747:./Library/stm32f4xx_can.c ****     }
 748:./Library/stm32f4xx_can.c ****     else
 749:./Library/stm32f4xx_can.c ****     {
 750:./Library/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 751:./Library/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1116              		.loc 1 751 46
 1117 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1118 00a4 7A68     		ldr	r2, [r7, #4]
 1119 00a6 1833     		adds	r3, r3, #24
 1120 00a8 1B01     		lsls	r3, r3, #4
 1121 00aa 1344     		add	r3, r3, r2
 1122 00ac 1968     		ldr	r1, [r3]
 1123              		.loc 1 751 60
 1124 00ae 3B68     		ldr	r3, [r7]
 1125 00b0 5B68     		ldr	r3, [r3, #4]
 1126              		.loc 1 751 68
 1127 00b2 DB00     		lsls	r3, r3, #3
 752:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1128              		.loc 1 752 60
 1129 00b4 3A68     		ldr	r2, [r7]
 1130 00b6 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 751:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1131              		.loc 1 751 74
 1132 00b8 1343     		orrs	r3, r3, r2
 753:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1133              		.loc 1 753 60
 1134 00ba 3A68     		ldr	r2, [r7]
 1135 00bc 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 752:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1136              		.loc 1 752 66
 1137 00be 1A43     		orrs	r2, r2, r3
 751:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1138              		.loc 1 751 46
 1139 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1140 00c2 0A43     		orrs	r2, r2, r1
 1141 00c4 7968     		ldr	r1, [r7, #4]
 1142 00c6 1833     		adds	r3, r3, #24
 1143 00c8 1B01     		lsls	r3, r3, #4
 1144 00ca 0B44     		add	r3, r3, r1
 1145 00cc 1A60     		str	r2, [r3]
 1146              	.L59:
 754:./Library/stm32f4xx_can.c ****     }
 755:./Library/stm32f4xx_can.c ****     
 756:./Library/stm32f4xx_can.c ****     /* Set up the DLC */
 757:./Library/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1147              		.loc 1 757 20
 1148 00ce 3B68     		ldr	r3, [r7]
 1149 00d0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1150 00d2 03F00F03 		and	r3, r3, #15
 1151 00d6 DAB2     		uxtb	r2, r3
 1152 00d8 3B68     		ldr	r3, [r7]
 1153 00da 9A72     		strb	r2, [r3, #10]
 758:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1154              		.loc 1 758 45
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 35


 1155 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1156 00de 7A68     		ldr	r2, [r7, #4]
 1157 00e0 1833     		adds	r3, r3, #24
 1158 00e2 1B01     		lsls	r3, r3, #4
 1159 00e4 1344     		add	r3, r3, r2
 1160 00e6 0433     		adds	r3, r3, #4
 1161 00e8 1A68     		ldr	r2, [r3]
 1162 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1163 00ec 22F00F02 		bic	r2, r2, #15
 1164 00f0 7968     		ldr	r1, [r7, #4]
 1165 00f2 1833     		adds	r3, r3, #24
 1166 00f4 1B01     		lsls	r3, r3, #4
 1167 00f6 0B44     		add	r3, r3, r1
 1168 00f8 0433     		adds	r3, r3, #4
 1169 00fa 1A60     		str	r2, [r3]
 759:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1170              		.loc 1 759 45
 1171 00fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1172 00fe 7A68     		ldr	r2, [r7, #4]
 1173 0100 1833     		adds	r3, r3, #24
 1174 0102 1B01     		lsls	r3, r3, #4
 1175 0104 1344     		add	r3, r3, r2
 1176 0106 0433     		adds	r3, r3, #4
 1177 0108 1A68     		ldr	r2, [r3]
 1178              		.loc 1 759 57
 1179 010a 3B68     		ldr	r3, [r7]
 1180 010c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1181 010e 1946     		mov	r1, r3
 1182              		.loc 1 759 45
 1183 0110 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1184 0112 0A43     		orrs	r2, r2, r1
 1185 0114 7968     		ldr	r1, [r7, #4]
 1186 0116 1833     		adds	r3, r3, #24
 1187 0118 1B01     		lsls	r3, r3, #4
 1188 011a 0B44     		add	r3, r3, r1
 1189 011c 0433     		adds	r3, r3, #4
 1190 011e 1A60     		str	r2, [r3]
 760:./Library/stm32f4xx_can.c **** 
 761:./Library/stm32f4xx_can.c ****     /* Set up the data field */
 762:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1191              		.loc 1 762 74
 1192 0120 3B68     		ldr	r3, [r7]
 1193 0122 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1194              		.loc 1 762 78
 1195 0124 1A06     		lsls	r2, r3, #24
 763:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1196              		.loc 1 763 72
 1197 0126 3B68     		ldr	r3, [r7]
 1198 0128 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1199              		.loc 1 763 76
 1200 012a 1B04     		lsls	r3, r3, #16
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1201              		.loc 1 762 85
 1202 012c 1A43     		orrs	r2, r2, r3
 764:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1203              		.loc 1 764 72
 1204 012e 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 36


 1205 0130 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1206              		.loc 1 764 76
 1207 0132 1B02     		lsls	r3, r3, #8
 763:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1208              		.loc 1 763 83
 1209 0134 1A43     		orrs	r2, r2, r3
 765:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1210              		.loc 1 765 72
 1211 0136 3B68     		ldr	r3, [r7]
 1212 0138 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1213              		.loc 1 765 47
 1214 013a 1946     		mov	r1, r3
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1215              		.loc 1 762 39
 1216 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 764:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1217              		.loc 1 764 82
 1218 013e 0A43     		orrs	r2, r2, r1
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1219              		.loc 1 762 45
 1220 0140 7968     		ldr	r1, [r7, #4]
 1221 0142 1B01     		lsls	r3, r3, #4
 1222 0144 0B44     		add	r3, r3, r1
 1223 0146 03F5C473 		add	r3, r3, #392
 1224 014a 1A60     		str	r2, [r3]
 766:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1225              		.loc 1 766 74
 1226 014c 3B68     		ldr	r3, [r7]
 1227 014e 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1228              		.loc 1 766 78
 1229 0150 1A06     		lsls	r2, r3, #24
 767:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1230              		.loc 1 767 72
 1231 0152 3B68     		ldr	r3, [r7]
 1232 0154 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1233              		.loc 1 767 76
 1234 0156 1B04     		lsls	r3, r3, #16
 766:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1235              		.loc 1 766 85
 1236 0158 1A43     		orrs	r2, r2, r3
 768:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1237              		.loc 1 768 72
 1238 015a 3B68     		ldr	r3, [r7]
 1239 015c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1240              		.loc 1 768 76
 1241 015e 1B02     		lsls	r3, r3, #8
 767:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1242              		.loc 1 767 83
 1243 0160 1A43     		orrs	r2, r2, r3
 769:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1244              		.loc 1 769 72
 1245 0162 3B68     		ldr	r3, [r7]
 1246 0164 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1247              		.loc 1 769 47
 1248 0166 1946     		mov	r1, r3
 766:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1249              		.loc 1 766 39
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 37


 1250 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 768:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1251              		.loc 1 768 82
 1252 016a 0A43     		orrs	r2, r2, r1
 766:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1253              		.loc 1 766 45
 1254 016c 7968     		ldr	r1, [r7, #4]
 1255 016e 1B01     		lsls	r3, r3, #4
 1256 0170 0B44     		add	r3, r3, r1
 1257 0172 03F5C673 		add	r3, r3, #396
 1258 0176 1A60     		str	r2, [r3]
 770:./Library/stm32f4xx_can.c ****     /* Request transmission */
 771:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1259              		.loc 1 771 44
 1260 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1261 017a 7A68     		ldr	r2, [r7, #4]
 1262 017c 1833     		adds	r3, r3, #24
 1263 017e 1B01     		lsls	r3, r3, #4
 1264 0180 1344     		add	r3, r3, r2
 1265 0182 1A68     		ldr	r2, [r3]
 1266 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1267 0186 42F00102 		orr	r2, r2, #1
 1268 018a 7968     		ldr	r1, [r7, #4]
 1269 018c 1833     		adds	r3, r3, #24
 1270 018e 1B01     		lsls	r3, r3, #4
 1271 0190 0B44     		add	r3, r3, r1
 1272 0192 1A60     		str	r2, [r3]
 1273              	.L57:
 772:./Library/stm32f4xx_can.c ****   }
 773:./Library/stm32f4xx_can.c ****   return transmit_mailbox;
 1274              		.loc 1 773 10
 1275 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 774:./Library/stm32f4xx_can.c **** }
 1276              		.loc 1 774 1
 1277 0196 1846     		mov	r0, r3
 1278 0198 1437     		adds	r7, r7, #20
 1279              	.LCFI44:
 1280              		.cfi_def_cfa_offset 4
 1281 019a BD46     		mov	sp, r7
 1282              	.LCFI45:
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 019c 5DF8047B 		ldr	r7, [sp], #4
 1286              	.LCFI46:
 1287              		.cfi_restore 7
 1288              		.cfi_def_cfa_offset 0
 1289 01a0 7047     		bx	lr
 1290              		.cfi_endproc
 1291              	.LFE130:
 1293              		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1294              		.align	1
 1295              		.global	CAN_TransmitStatus
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	CAN_TransmitStatus:
 1301              	.LFB131:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 38


 775:./Library/stm32f4xx_can.c **** 
 776:./Library/stm32f4xx_can.c **** /**
 777:./Library/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 778:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 779:./Library/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 780:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 781:./Library/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 782:./Library/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 783:./Library/stm32f4xx_can.c ****   */
 784:./Library/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 785:./Library/stm32f4xx_can.c **** {
 1302              		.loc 1 785 1
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 16
 1305              		@ frame_needed = 1, uses_anonymous_args = 0
 1306              		@ link register save eliminated.
 1307 0000 80B4     		push	{r7}
 1308              	.LCFI47:
 1309              		.cfi_def_cfa_offset 4
 1310              		.cfi_offset 7, -4
 1311 0002 85B0     		sub	sp, sp, #20
 1312              	.LCFI48:
 1313              		.cfi_def_cfa_offset 24
 1314 0004 00AF     		add	r7, sp, #0
 1315              	.LCFI49:
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
 1318 0008 0B46     		mov	r3, r1
 1319 000a FB70     		strb	r3, [r7, #3]
 786:./Library/stm32f4xx_can.c ****   uint32_t state = 0;
 1320              		.loc 1 786 12
 1321 000c 0023     		movs	r3, #0
 1322 000e FB60     		str	r3, [r7, #12]
 787:./Library/stm32f4xx_can.c **** 
 788:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 789:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 790:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 791:./Library/stm32f4xx_can.c ****  
 792:./Library/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1323              		.loc 1 792 3
 1324 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1325 0012 022B     		cmp	r3, #2
 1326 0014 12D0     		beq	.L62
 1327 0016 022B     		cmp	r3, #2
 1328 0018 16DC     		bgt	.L63
 1329 001a 002B     		cmp	r3, #0
 1330 001c 02D0     		beq	.L64
 1331 001e 012B     		cmp	r3, #1
 1332 0020 06D0     		beq	.L65
 1333 0022 11E0     		b	.L63
 1334              	.L64:
 793:./Library/stm32f4xx_can.c ****   {
 794:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 795:./Library/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1335              		.loc 1 795 21
 1336 0024 7B68     		ldr	r3, [r7, #4]
 1337 0026 9A68     		ldr	r2, [r3, #8]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 39


 1338              		.loc 1 795 13
 1339 0028 314B     		ldr	r3, .L77
 1340 002a 1340     		ands	r3, r3, r2
 1341 002c FB60     		str	r3, [r7, #12]
 796:./Library/stm32f4xx_can.c ****       break;
 1342              		.loc 1 796 7
 1343 002e 0EE0     		b	.L66
 1344              	.L65:
 797:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 798:./Library/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1345              		.loc 1 798 21
 1346 0030 7B68     		ldr	r3, [r7, #4]
 1347 0032 9A68     		ldr	r2, [r3, #8]
 1348              		.loc 1 798 13
 1349 0034 2F4B     		ldr	r3, .L77+4
 1350 0036 1340     		ands	r3, r3, r2
 1351 0038 FB60     		str	r3, [r7, #12]
 799:./Library/stm32f4xx_can.c ****       break;
 1352              		.loc 1 799 7
 1353 003a 08E0     		b	.L66
 1354              	.L62:
 800:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 801:./Library/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1355              		.loc 1 801 21
 1356 003c 7B68     		ldr	r3, [r7, #4]
 1357 003e 9A68     		ldr	r2, [r3, #8]
 1358              		.loc 1 801 13
 1359 0040 2D4B     		ldr	r3, .L77+8
 1360 0042 1340     		ands	r3, r3, r2
 1361 0044 FB60     		str	r3, [r7, #12]
 802:./Library/stm32f4xx_can.c ****       break;
 1362              		.loc 1 802 7
 1363 0046 02E0     		b	.L66
 1364              	.L63:
 803:./Library/stm32f4xx_can.c ****     default:
 804:./Library/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1365              		.loc 1 804 13
 1366 0048 0023     		movs	r3, #0
 1367 004a FB60     		str	r3, [r7, #12]
 805:./Library/stm32f4xx_can.c ****       break;
 1368              		.loc 1 805 7
 1369 004c 00BF     		nop
 1370              	.L66:
 806:./Library/stm32f4xx_can.c ****   }
 807:./Library/stm32f4xx_can.c ****   switch (state)
 1371              		.loc 1 807 3
 1372 004e FB68     		ldr	r3, [r7, #12]
 1373 0050 294A     		ldr	r2, .L77+8
 1374 0052 9342     		cmp	r3, r2
 1375 0054 3DD0     		beq	.L67
 1376 0056 FB68     		ldr	r3, [r7, #12]
 1377 0058 274A     		ldr	r2, .L77+8
 1378 005a 9342     		cmp	r3, r2
 1379 005c 3CD8     		bhi	.L68
 1380 005e FB68     		ldr	r3, [r7, #12]
 1381 0060 264A     		ldr	r2, .L77+12
 1382 0062 9342     		cmp	r3, r2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 40


 1383 0064 2CD0     		beq	.L69
 1384 0066 FB68     		ldr	r3, [r7, #12]
 1385 0068 244A     		ldr	r2, .L77+12
 1386 006a 9342     		cmp	r3, r2
 1387 006c 34D8     		bhi	.L68
 1388 006e FB68     		ldr	r3, [r7, #12]
 1389 0070 204A     		ldr	r2, .L77+4
 1390 0072 9342     		cmp	r3, r2
 1391 0074 2AD0     		beq	.L70
 1392 0076 FB68     		ldr	r3, [r7, #12]
 1393 0078 1E4A     		ldr	r2, .L77+4
 1394 007a 9342     		cmp	r3, r2
 1395 007c 2CD8     		bhi	.L68
 1396 007e FB68     		ldr	r3, [r7, #12]
 1397 0080 1F4A     		ldr	r2, .L77+16
 1398 0082 9342     		cmp	r3, r2
 1399 0084 19D0     		beq	.L71
 1400 0086 FB68     		ldr	r3, [r7, #12]
 1401 0088 1D4A     		ldr	r2, .L77+16
 1402 008a 9342     		cmp	r3, r2
 1403 008c 24D8     		bhi	.L68
 1404 008e FB68     		ldr	r3, [r7, #12]
 1405 0090 174A     		ldr	r2, .L77
 1406 0092 9342     		cmp	r3, r2
 1407 0094 17D0     		beq	.L72
 1408 0096 FB68     		ldr	r3, [r7, #12]
 1409 0098 154A     		ldr	r2, .L77
 1410 009a 9342     		cmp	r3, r2
 1411 009c 1CD8     		bhi	.L68
 1412 009e FB68     		ldr	r3, [r7, #12]
 1413 00a0 002B     		cmp	r3, #0
 1414 00a2 04D0     		beq	.L73
 1415 00a4 FB68     		ldr	r3, [r7, #12]
 1416 00a6 174A     		ldr	r2, .L77+20
 1417 00a8 9342     		cmp	r3, r2
 1418 00aa 03D0     		beq	.L74
 1419 00ac 14E0     		b	.L68
 1420              	.L73:
 808:./Library/stm32f4xx_can.c ****   {
 809:./Library/stm32f4xx_can.c ****       /* transmit pending  */
 810:./Library/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1421              		.loc 1 810 23
 1422 00ae 0223     		movs	r3, #2
 1423 00b0 FB60     		str	r3, [r7, #12]
 811:./Library/stm32f4xx_can.c ****       break;
 1424              		.loc 1 811 7
 1425 00b2 14E0     		b	.L75
 1426              	.L74:
 812:./Library/stm32f4xx_can.c ****       /* transmit failed  */
 813:./Library/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1427              		.loc 1 813 49
 1428 00b4 0023     		movs	r3, #0
 1429 00b6 FB60     		str	r3, [r7, #12]
 814:./Library/stm32f4xx_can.c ****       break;
 1430              		.loc 1 814 7
 1431 00b8 11E0     		b	.L75
 1432              	.L71:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 41


 815:./Library/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1433              		.loc 1 815 49
 1434 00ba 0023     		movs	r3, #0
 1435 00bc FB60     		str	r3, [r7, #12]
 816:./Library/stm32f4xx_can.c ****       break;
 1436              		.loc 1 816 7
 1437 00be 0EE0     		b	.L75
 1438              	.L69:
 817:./Library/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1439              		.loc 1 817 49
 1440 00c0 0023     		movs	r3, #0
 1441 00c2 FB60     		str	r3, [r7, #12]
 818:./Library/stm32f4xx_can.c ****       break;
 1442              		.loc 1 818 7
 1443 00c4 0BE0     		b	.L75
 1444              	.L72:
 819:./Library/stm32f4xx_can.c ****       /* transmit succeeded  */
 820:./Library/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1445              		.loc 1 820 63
 1446 00c6 0123     		movs	r3, #1
 1447 00c8 FB60     		str	r3, [r7, #12]
 821:./Library/stm32f4xx_can.c ****       break;
 1448              		.loc 1 821 7
 1449 00ca 08E0     		b	.L75
 1450              	.L70:
 822:./Library/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1451              		.loc 1 822 63
 1452 00cc 0123     		movs	r3, #1
 1453 00ce FB60     		str	r3, [r7, #12]
 823:./Library/stm32f4xx_can.c ****       break;
 1454              		.loc 1 823 7
 1455 00d0 05E0     		b	.L75
 1456              	.L67:
 824:./Library/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1457              		.loc 1 824 63
 1458 00d2 0123     		movs	r3, #1
 1459 00d4 FB60     		str	r3, [r7, #12]
 825:./Library/stm32f4xx_can.c ****       break;
 1460              		.loc 1 825 7
 1461 00d6 02E0     		b	.L75
 1462              	.L68:
 826:./Library/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1463              		.loc 1 826 20
 1464 00d8 0023     		movs	r3, #0
 1465 00da FB60     		str	r3, [r7, #12]
 827:./Library/stm32f4xx_can.c ****       break;
 1466              		.loc 1 827 7
 1467 00dc 00BF     		nop
 1468              	.L75:
 828:./Library/stm32f4xx_can.c ****   }
 829:./Library/stm32f4xx_can.c ****   return (uint8_t) state;
 1469              		.loc 1 829 10
 1470 00de FB68     		ldr	r3, [r7, #12]
 1471 00e0 DBB2     		uxtb	r3, r3
 830:./Library/stm32f4xx_can.c **** }
 1472              		.loc 1 830 1
 1473 00e2 1846     		mov	r0, r3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 42


 1474 00e4 1437     		adds	r7, r7, #20
 1475              	.LCFI50:
 1476              		.cfi_def_cfa_offset 4
 1477 00e6 BD46     		mov	sp, r7
 1478              	.LCFI51:
 1479              		.cfi_def_cfa_register 13
 1480              		@ sp needed
 1481 00e8 5DF8047B 		ldr	r7, [sp], #4
 1482              	.LCFI52:
 1483              		.cfi_restore 7
 1484              		.cfi_def_cfa_offset 0
 1485 00ec 7047     		bx	lr
 1486              	.L78:
 1487 00ee 00BF     		.align	2
 1488              	.L77:
 1489 00f0 03000004 		.word	67108867
 1490 00f4 00030008 		.word	134218496
 1491 00f8 00000310 		.word	268632064
 1492 00fc 00000110 		.word	268500992
 1493 0100 00010008 		.word	134217984
 1494 0104 01000004 		.word	67108865
 1495              		.cfi_endproc
 1496              	.LFE131:
 1498              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1499              		.align	1
 1500              		.global	CAN_CancelTransmit
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1505              	CAN_CancelTransmit:
 1506              	.LFB132:
 831:./Library/stm32f4xx_can.c **** 
 832:./Library/stm32f4xx_can.c **** /**
 833:./Library/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 834:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 835:./Library/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 836:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 837:./Library/stm32f4xx_can.c ****   * @retval None
 838:./Library/stm32f4xx_can.c ****   */
 839:./Library/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 840:./Library/stm32f4xx_can.c **** {
 1507              		.loc 1 840 1
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 8
 1510              		@ frame_needed = 1, uses_anonymous_args = 0
 1511              		@ link register save eliminated.
 1512 0000 80B4     		push	{r7}
 1513              	.LCFI53:
 1514              		.cfi_def_cfa_offset 4
 1515              		.cfi_offset 7, -4
 1516 0002 83B0     		sub	sp, sp, #12
 1517              	.LCFI54:
 1518              		.cfi_def_cfa_offset 16
 1519 0004 00AF     		add	r7, sp, #0
 1520              	.LCFI55:
 1521              		.cfi_def_cfa_register 7
 1522 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 43


 1523 0008 0B46     		mov	r3, r1
 1524 000a FB70     		strb	r3, [r7, #3]
 841:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 842:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 843:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 844:./Library/stm32f4xx_can.c ****   /* abort transmission */
 845:./Library/stm32f4xx_can.c ****   switch (Mailbox)
 1525              		.loc 1 845 3
 1526 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1527 000e 022B     		cmp	r3, #2
 1528 0010 0FD0     		beq	.L80
 1529 0012 022B     		cmp	r3, #2
 1530 0014 12DC     		bgt	.L85
 1531 0016 002B     		cmp	r3, #0
 1532 0018 02D0     		beq	.L82
 1533 001a 012B     		cmp	r3, #1
 1534 001c 04D0     		beq	.L83
 846:./Library/stm32f4xx_can.c ****   {
 847:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR = CAN_TSR_ABRQ0;
 848:./Library/stm32f4xx_can.c ****       break;
 849:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR = CAN_TSR_ABRQ1;
 850:./Library/stm32f4xx_can.c ****       break;
 851:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR = CAN_TSR_ABRQ2;
 852:./Library/stm32f4xx_can.c ****       break;
 853:./Library/stm32f4xx_can.c ****     default:
 854:./Library/stm32f4xx_can.c ****       break;
 1535              		.loc 1 854 7
 1536 001e 0DE0     		b	.L85
 1537              	.L82:
 847:./Library/stm32f4xx_can.c ****       break;
 1538              		.loc 1 847 39
 1539 0020 7B68     		ldr	r3, [r7, #4]
 1540 0022 8022     		movs	r2, #128
 1541 0024 9A60     		str	r2, [r3, #8]
 848:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR = CAN_TSR_ABRQ1;
 1542              		.loc 1 848 7
 1543 0026 0AE0     		b	.L84
 1544              	.L83:
 849:./Library/stm32f4xx_can.c ****       break;
 1545              		.loc 1 849 39
 1546 0028 7B68     		ldr	r3, [r7, #4]
 1547 002a 4FF40042 		mov	r2, #32768
 1548 002e 9A60     		str	r2, [r3, #8]
 850:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR = CAN_TSR_ABRQ2;
 1549              		.loc 1 850 7
 1550 0030 05E0     		b	.L84
 1551              	.L80:
 851:./Library/stm32f4xx_can.c ****       break;
 1552              		.loc 1 851 39
 1553 0032 7B68     		ldr	r3, [r7, #4]
 1554 0034 4FF40002 		mov	r2, #8388608
 1555 0038 9A60     		str	r2, [r3, #8]
 852:./Library/stm32f4xx_can.c ****     default:
 1556              		.loc 1 852 7
 1557 003a 00E0     		b	.L84
 1558              	.L85:
 1559              		.loc 1 854 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 44


 1560 003c 00BF     		nop
 1561              	.L84:
 855:./Library/stm32f4xx_can.c ****   }
 856:./Library/stm32f4xx_can.c **** }
 1562              		.loc 1 856 1
 1563 003e 00BF     		nop
 1564 0040 0C37     		adds	r7, r7, #12
 1565              	.LCFI56:
 1566              		.cfi_def_cfa_offset 4
 1567 0042 BD46     		mov	sp, r7
 1568              	.LCFI57:
 1569              		.cfi_def_cfa_register 13
 1570              		@ sp needed
 1571 0044 5DF8047B 		ldr	r7, [sp], #4
 1572              	.LCFI58:
 1573              		.cfi_restore 7
 1574              		.cfi_def_cfa_offset 0
 1575 0048 7047     		bx	lr
 1576              		.cfi_endproc
 1577              	.LFE132:
 1579              		.section	.text.CAN_Receive,"ax",%progbits
 1580              		.align	1
 1581              		.global	CAN_Receive
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1586              	CAN_Receive:
 1587              	.LFB133:
 857:./Library/stm32f4xx_can.c **** /**
 858:./Library/stm32f4xx_can.c ****   * @}
 859:./Library/stm32f4xx_can.c ****   */
 860:./Library/stm32f4xx_can.c **** 
 861:./Library/stm32f4xx_can.c **** 
 862:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 863:./Library/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 864:./Library/stm32f4xx_can.c ****  *
 865:./Library/stm32f4xx_can.c **** @verbatim    
 866:./Library/stm32f4xx_can.c ****  ===============================================================================
 867:./Library/stm32f4xx_can.c ****                 ##### CAN Frames Reception functions #####
 868:./Library/stm32f4xx_can.c ****  ===============================================================================  
 869:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 870:./Library/stm32f4xx_can.c ****       (+) Receive a correct CAN frame
 871:./Library/stm32f4xx_can.c ****       (+) Release a specified receive FIFO (2 FIFOs are available)
 872:./Library/stm32f4xx_can.c ****       (+) Return the number of the pending received CAN frames
 873:./Library/stm32f4xx_can.c ****    
 874:./Library/stm32f4xx_can.c **** @endverbatim
 875:./Library/stm32f4xx_can.c ****   * @{
 876:./Library/stm32f4xx_can.c ****   */
 877:./Library/stm32f4xx_can.c **** 
 878:./Library/stm32f4xx_can.c **** /**
 879:./Library/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 880:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 881:./Library/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 882:./Library/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 883:./Library/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 884:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 885:./Library/stm32f4xx_can.c ****   * @retval None
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 45


 886:./Library/stm32f4xx_can.c ****   */
 887:./Library/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 888:./Library/stm32f4xx_can.c **** {
 1588              		.loc 1 888 1
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 16
 1591              		@ frame_needed = 1, uses_anonymous_args = 0
 1592              		@ link register save eliminated.
 1593 0000 80B4     		push	{r7}
 1594              	.LCFI59:
 1595              		.cfi_def_cfa_offset 4
 1596              		.cfi_offset 7, -4
 1597 0002 85B0     		sub	sp, sp, #20
 1598              	.LCFI60:
 1599              		.cfi_def_cfa_offset 24
 1600 0004 00AF     		add	r7, sp, #0
 1601              	.LCFI61:
 1602              		.cfi_def_cfa_register 7
 1603 0006 F860     		str	r0, [r7, #12]
 1604 0008 0B46     		mov	r3, r1
 1605 000a 7A60     		str	r2, [r7, #4]
 1606 000c FB72     		strb	r3, [r7, #11]
 889:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 890:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 891:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 892:./Library/stm32f4xx_can.c ****   /* Get the Id */
 893:./Library/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1607              		.loc 1 893 66
 1608 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1609 0010 FA68     		ldr	r2, [r7, #12]
 1610 0012 1B33     		adds	r3, r3, #27
 1611 0014 1B01     		lsls	r3, r3, #4
 1612 0016 1344     		add	r3, r3, r2
 1613 0018 1B68     		ldr	r3, [r3]
 1614              		.loc 1 893 34
 1615 001a DBB2     		uxtb	r3, r3
 1616 001c 03F00403 		and	r3, r3, #4
 1617 0020 DAB2     		uxtb	r2, r3
 1618              		.loc 1 893 18
 1619 0022 7B68     		ldr	r3, [r7, #4]
 1620 0024 1A72     		strb	r2, [r3, #8]
 894:./Library/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1621              		.loc 1 894 16
 1622 0026 7B68     		ldr	r3, [r7, #4]
 1623 0028 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1624              		.loc 1 894 6
 1625 002a 002B     		cmp	r3, #0
 1626 002c 0BD1     		bne	.L87
 895:./Library/stm32f4xx_can.c ****   {
 896:./Library/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1627              		.loc 1 896 78
 1628 002e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1629 0030 FA68     		ldr	r2, [r7, #12]
 1630 0032 1B33     		adds	r3, r3, #27
 1631 0034 1B01     		lsls	r3, r3, #4
 1632 0036 1344     		add	r3, r3, r2
 1633 0038 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 46


 1634              		.loc 1 896 83
 1635 003a 5B0D     		lsrs	r3, r3, #21
 1636              		.loc 1 896 45
 1637 003c C3F30A02 		ubfx	r2, r3, #0, #11
 1638              		.loc 1 896 22
 1639 0040 7B68     		ldr	r3, [r7, #4]
 1640 0042 1A60     		str	r2, [r3]
 1641 0044 0AE0     		b	.L88
 1642              	.L87:
 897:./Library/stm32f4xx_can.c ****   }
 898:./Library/stm32f4xx_can.c ****   else
 899:./Library/stm32f4xx_can.c ****   {
 900:./Library/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1643              		.loc 1 900 78
 1644 0046 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1645 0048 FA68     		ldr	r2, [r7, #12]
 1646 004a 1B33     		adds	r3, r3, #27
 1647 004c 1B01     		lsls	r3, r3, #4
 1648 004e 1344     		add	r3, r3, r2
 1649 0050 1B68     		ldr	r3, [r3]
 1650              		.loc 1 900 83
 1651 0052 DB08     		lsrs	r3, r3, #3
 1652              		.loc 1 900 45
 1653 0054 23F06042 		bic	r2, r3, #-536870912
 1654              		.loc 1 900 22
 1655 0058 7B68     		ldr	r3, [r7, #4]
 1656 005a 5A60     		str	r2, [r3, #4]
 1657              	.L88:
 901:./Library/stm32f4xx_can.c ****   }
 902:./Library/stm32f4xx_can.c ****   
 903:./Library/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1658              		.loc 1 903 66
 1659 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1660 005e FA68     		ldr	r2, [r7, #12]
 1661 0060 1B33     		adds	r3, r3, #27
 1662 0062 1B01     		lsls	r3, r3, #4
 1663 0064 1344     		add	r3, r3, r2
 1664 0066 1B68     		ldr	r3, [r3]
 1665              		.loc 1 903 34
 1666 0068 DBB2     		uxtb	r3, r3
 1667 006a 03F00203 		and	r3, r3, #2
 1668 006e DAB2     		uxtb	r2, r3
 1669              		.loc 1 903 18
 1670 0070 7B68     		ldr	r3, [r7, #4]
 1671 0072 5A72     		strb	r2, [r3, #9]
 904:./Library/stm32f4xx_can.c ****   /* Get the DLC */
 905:./Library/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1672              		.loc 1 905 66
 1673 0074 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1674 0076 FA68     		ldr	r2, [r7, #12]
 1675 0078 1B33     		adds	r3, r3, #27
 1676 007a 1B01     		lsls	r3, r3, #4
 1677 007c 1344     		add	r3, r3, r2
 1678 007e 0433     		adds	r3, r3, #4
 1679 0080 1B68     		ldr	r3, [r3]
 1680              		.loc 1 905 34
 1681 0082 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 47


 1682 0084 03F00F03 		and	r3, r3, #15
 1683 0088 DAB2     		uxtb	r2, r3
 1684              		.loc 1 905 18
 1685 008a 7B68     		ldr	r3, [r7, #4]
 1686 008c 9A72     		strb	r2, [r3, #10]
 906:./Library/stm32f4xx_can.c ****   /* Get the FMI */
 907:./Library/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1687              		.loc 1 907 67
 1688 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1689 0090 FA68     		ldr	r2, [r7, #12]
 1690 0092 1B33     		adds	r3, r3, #27
 1691 0094 1B01     		lsls	r3, r3, #4
 1692 0096 1344     		add	r3, r3, r2
 1693 0098 0433     		adds	r3, r3, #4
 1694 009a 1B68     		ldr	r3, [r3]
 1695              		.loc 1 907 73
 1696 009c 1B0A     		lsrs	r3, r3, #8
 1697              		.loc 1 907 18
 1698 009e DAB2     		uxtb	r2, r3
 1699 00a0 7B68     		ldr	r3, [r7, #4]
 1700 00a2 DA74     		strb	r2, [r3, #19]
 908:./Library/stm32f4xx_can.c ****   /* Get the data field */
 909:./Library/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1701              		.loc 1 909 70
 1702 00a4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1703 00a6 FA68     		ldr	r2, [r7, #12]
 1704 00a8 1B01     		lsls	r3, r3, #4
 1705 00aa 1344     		add	r3, r3, r2
 1706 00ac 03F5DC73 		add	r3, r3, #440
 1707 00b0 1B68     		ldr	r3, [r3]
 1708              		.loc 1 909 22
 1709 00b2 DAB2     		uxtb	r2, r3
 1710 00b4 7B68     		ldr	r3, [r7, #4]
 1711 00b6 DA72     		strb	r2, [r3, #11]
 910:./Library/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1712              		.loc 1 910 71
 1713 00b8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1714 00ba FA68     		ldr	r2, [r7, #12]
 1715 00bc 1B01     		lsls	r3, r3, #4
 1716 00be 1344     		add	r3, r3, r2
 1717 00c0 03F5DC73 		add	r3, r3, #440
 1718 00c4 1B68     		ldr	r3, [r3]
 1719              		.loc 1 910 77
 1720 00c6 1B0A     		lsrs	r3, r3, #8
 1721              		.loc 1 910 22
 1722 00c8 DAB2     		uxtb	r2, r3
 1723 00ca 7B68     		ldr	r3, [r7, #4]
 1724 00cc 1A73     		strb	r2, [r3, #12]
 911:./Library/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1725              		.loc 1 911 71
 1726 00ce FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1727 00d0 FA68     		ldr	r2, [r7, #12]
 1728 00d2 1B01     		lsls	r3, r3, #4
 1729 00d4 1344     		add	r3, r3, r2
 1730 00d6 03F5DC73 		add	r3, r3, #440
 1731 00da 1B68     		ldr	r3, [r3]
 1732              		.loc 1 911 77
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 48


 1733 00dc 1B0C     		lsrs	r3, r3, #16
 1734              		.loc 1 911 22
 1735 00de DAB2     		uxtb	r2, r3
 1736 00e0 7B68     		ldr	r3, [r7, #4]
 1737 00e2 5A73     		strb	r2, [r3, #13]
 912:./Library/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1738              		.loc 1 912 71
 1739 00e4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1740 00e6 FA68     		ldr	r2, [r7, #12]
 1741 00e8 1B01     		lsls	r3, r3, #4
 1742 00ea 1344     		add	r3, r3, r2
 1743 00ec 03F5DC73 		add	r3, r3, #440
 1744 00f0 1B68     		ldr	r3, [r3]
 1745              		.loc 1 912 77
 1746 00f2 1B0E     		lsrs	r3, r3, #24
 1747              		.loc 1 912 22
 1748 00f4 DAB2     		uxtb	r2, r3
 1749 00f6 7B68     		ldr	r3, [r7, #4]
 1750 00f8 9A73     		strb	r2, [r3, #14]
 913:./Library/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1751              		.loc 1 913 70
 1752 00fa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1753 00fc FA68     		ldr	r2, [r7, #12]
 1754 00fe 1B01     		lsls	r3, r3, #4
 1755 0100 1344     		add	r3, r3, r2
 1756 0102 03F5DE73 		add	r3, r3, #444
 1757 0106 1B68     		ldr	r3, [r3]
 1758              		.loc 1 913 22
 1759 0108 DAB2     		uxtb	r2, r3
 1760 010a 7B68     		ldr	r3, [r7, #4]
 1761 010c DA73     		strb	r2, [r3, #15]
 914:./Library/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1762              		.loc 1 914 71
 1763 010e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1764 0110 FA68     		ldr	r2, [r7, #12]
 1765 0112 1B01     		lsls	r3, r3, #4
 1766 0114 1344     		add	r3, r3, r2
 1767 0116 03F5DE73 		add	r3, r3, #444
 1768 011a 1B68     		ldr	r3, [r3]
 1769              		.loc 1 914 77
 1770 011c 1B0A     		lsrs	r3, r3, #8
 1771              		.loc 1 914 22
 1772 011e DAB2     		uxtb	r2, r3
 1773 0120 7B68     		ldr	r3, [r7, #4]
 1774 0122 1A74     		strb	r2, [r3, #16]
 915:./Library/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1775              		.loc 1 915 71
 1776 0124 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1777 0126 FA68     		ldr	r2, [r7, #12]
 1778 0128 1B01     		lsls	r3, r3, #4
 1779 012a 1344     		add	r3, r3, r2
 1780 012c 03F5DE73 		add	r3, r3, #444
 1781 0130 1B68     		ldr	r3, [r3]
 1782              		.loc 1 915 77
 1783 0132 1B0C     		lsrs	r3, r3, #16
 1784              		.loc 1 915 22
 1785 0134 DAB2     		uxtb	r2, r3
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 49


 1786 0136 7B68     		ldr	r3, [r7, #4]
 1787 0138 5A74     		strb	r2, [r3, #17]
 916:./Library/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1788              		.loc 1 916 71
 1789 013a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1790 013c FA68     		ldr	r2, [r7, #12]
 1791 013e 1B01     		lsls	r3, r3, #4
 1792 0140 1344     		add	r3, r3, r2
 1793 0142 03F5DE73 		add	r3, r3, #444
 1794 0146 1B68     		ldr	r3, [r3]
 1795              		.loc 1 916 77
 1796 0148 1B0E     		lsrs	r3, r3, #24
 1797              		.loc 1 916 22
 1798 014a DAB2     		uxtb	r2, r3
 1799 014c 7B68     		ldr	r3, [r7, #4]
 1800 014e 9A74     		strb	r2, [r3, #18]
 917:./Library/stm32f4xx_can.c ****   /* Release the FIFO */
 918:./Library/stm32f4xx_can.c ****   /* Release FIFO0 */
 919:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1801              		.loc 1 919 6
 1802 0150 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1803 0152 002B     		cmp	r3, #0
 1804 0154 03D1     		bne	.L89
 920:./Library/stm32f4xx_can.c ****   {
 921:./Library/stm32f4xx_can.c ****     CANx->RF0R = CAN_RF0R_RFOM0;
 1805              		.loc 1 921 16
 1806 0156 FB68     		ldr	r3, [r7, #12]
 1807 0158 2022     		movs	r2, #32
 1808 015a DA60     		str	r2, [r3, #12]
 922:./Library/stm32f4xx_can.c ****   }
 923:./Library/stm32f4xx_can.c ****   /* Release FIFO1 */
 924:./Library/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 925:./Library/stm32f4xx_can.c ****   {
 926:./Library/stm32f4xx_can.c ****     CANx->RF1R = CAN_RF1R_RFOM1;
 927:./Library/stm32f4xx_can.c ****   }
 928:./Library/stm32f4xx_can.c **** }
 1809              		.loc 1 928 1
 1810 015c 02E0     		b	.L91
 1811              	.L89:
 926:./Library/stm32f4xx_can.c ****   }
 1812              		.loc 1 926 16
 1813 015e FB68     		ldr	r3, [r7, #12]
 1814 0160 2022     		movs	r2, #32
 1815 0162 1A61     		str	r2, [r3, #16]
 1816              	.L91:
 1817              		.loc 1 928 1
 1818 0164 00BF     		nop
 1819 0166 1437     		adds	r7, r7, #20
 1820              	.LCFI62:
 1821              		.cfi_def_cfa_offset 4
 1822 0168 BD46     		mov	sp, r7
 1823              	.LCFI63:
 1824              		.cfi_def_cfa_register 13
 1825              		@ sp needed
 1826 016a 5DF8047B 		ldr	r7, [sp], #4
 1827              	.LCFI64:
 1828              		.cfi_restore 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 50


 1829              		.cfi_def_cfa_offset 0
 1830 016e 7047     		bx	lr
 1831              		.cfi_endproc
 1832              	.LFE133:
 1834              		.section	.text.CAN_FIFORelease,"ax",%progbits
 1835              		.align	1
 1836              		.global	CAN_FIFORelease
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1841              	CAN_FIFORelease:
 1842              	.LFB134:
 929:./Library/stm32f4xx_can.c **** 
 930:./Library/stm32f4xx_can.c **** /**
 931:./Library/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 932:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 933:./Library/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 934:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 935:./Library/stm32f4xx_can.c ****   * @retval None
 936:./Library/stm32f4xx_can.c ****   */
 937:./Library/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 938:./Library/stm32f4xx_can.c **** {
 1843              		.loc 1 938 1
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 8
 1846              		@ frame_needed = 1, uses_anonymous_args = 0
 1847              		@ link register save eliminated.
 1848 0000 80B4     		push	{r7}
 1849              	.LCFI65:
 1850              		.cfi_def_cfa_offset 4
 1851              		.cfi_offset 7, -4
 1852 0002 83B0     		sub	sp, sp, #12
 1853              	.LCFI66:
 1854              		.cfi_def_cfa_offset 16
 1855 0004 00AF     		add	r7, sp, #0
 1856              	.LCFI67:
 1857              		.cfi_def_cfa_register 7
 1858 0006 7860     		str	r0, [r7, #4]
 1859 0008 0B46     		mov	r3, r1
 1860 000a FB70     		strb	r3, [r7, #3]
 939:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 940:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 941:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 942:./Library/stm32f4xx_can.c ****   /* Release FIFO0 */
 943:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1861              		.loc 1 943 6
 1862 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1863 000e 002B     		cmp	r3, #0
 1864 0010 03D1     		bne	.L93
 944:./Library/stm32f4xx_can.c ****   {
 945:./Library/stm32f4xx_can.c ****     CANx->RF0R = CAN_RF0R_RFOM0;
 1865              		.loc 1 945 16
 1866 0012 7B68     		ldr	r3, [r7, #4]
 1867 0014 2022     		movs	r2, #32
 1868 0016 DA60     		str	r2, [r3, #12]
 946:./Library/stm32f4xx_can.c ****   }
 947:./Library/stm32f4xx_can.c ****   /* Release FIFO1 */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 51


 948:./Library/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 949:./Library/stm32f4xx_can.c ****   {
 950:./Library/stm32f4xx_can.c ****     CANx->RF1R = CAN_RF1R_RFOM1;
 951:./Library/stm32f4xx_can.c ****   }
 952:./Library/stm32f4xx_can.c **** }
 1869              		.loc 1 952 1
 1870 0018 02E0     		b	.L95
 1871              	.L93:
 950:./Library/stm32f4xx_can.c ****   }
 1872              		.loc 1 950 16
 1873 001a 7B68     		ldr	r3, [r7, #4]
 1874 001c 2022     		movs	r2, #32
 1875 001e 1A61     		str	r2, [r3, #16]
 1876              	.L95:
 1877              		.loc 1 952 1
 1878 0020 00BF     		nop
 1879 0022 0C37     		adds	r7, r7, #12
 1880              	.LCFI68:
 1881              		.cfi_def_cfa_offset 4
 1882 0024 BD46     		mov	sp, r7
 1883              	.LCFI69:
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 0026 5DF8047B 		ldr	r7, [sp], #4
 1887              	.LCFI70:
 1888              		.cfi_restore 7
 1889              		.cfi_def_cfa_offset 0
 1890 002a 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE134:
 1894              		.section	.text.CAN_MessagePending,"ax",%progbits
 1895              		.align	1
 1896              		.global	CAN_MessagePending
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1901              	CAN_MessagePending:
 1902              	.LFB135:
 953:./Library/stm32f4xx_can.c **** 
 954:./Library/stm32f4xx_can.c **** /**
 955:./Library/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 956:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 957:./Library/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 958:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 959:./Library/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 960:./Library/stm32f4xx_can.c ****   */
 961:./Library/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 962:./Library/stm32f4xx_can.c **** {
 1903              		.loc 1 962 1
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 16
 1906              		@ frame_needed = 1, uses_anonymous_args = 0
 1907              		@ link register save eliminated.
 1908 0000 80B4     		push	{r7}
 1909              	.LCFI71:
 1910              		.cfi_def_cfa_offset 4
 1911              		.cfi_offset 7, -4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 52


 1912 0002 85B0     		sub	sp, sp, #20
 1913              	.LCFI72:
 1914              		.cfi_def_cfa_offset 24
 1915 0004 00AF     		add	r7, sp, #0
 1916              	.LCFI73:
 1917              		.cfi_def_cfa_register 7
 1918 0006 7860     		str	r0, [r7, #4]
 1919 0008 0B46     		mov	r3, r1
 1920 000a FB70     		strb	r3, [r7, #3]
 963:./Library/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1921              		.loc 1 963 11
 1922 000c 0023     		movs	r3, #0
 1923 000e FB73     		strb	r3, [r7, #15]
 964:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 965:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 966:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 967:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1924              		.loc 1 967 6
 1925 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1926 0012 002B     		cmp	r3, #0
 1927 0014 06D1     		bne	.L97
 968:./Library/stm32f4xx_can.c ****   {
 969:./Library/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1928              		.loc 1 969 37
 1929 0016 7B68     		ldr	r3, [r7, #4]
 1930 0018 DB68     		ldr	r3, [r3, #12]
 1931              		.loc 1 969 23
 1932 001a DBB2     		uxtb	r3, r3
 1933              		.loc 1 969 21
 1934 001c 03F00303 		and	r3, r3, #3
 1935 0020 FB73     		strb	r3, [r7, #15]
 1936 0022 0BE0     		b	.L98
 1937              	.L97:
 970:./Library/stm32f4xx_can.c ****   }
 971:./Library/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1938              		.loc 1 971 11
 1939 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1940 0026 012B     		cmp	r3, #1
 1941 0028 06D1     		bne	.L99
 972:./Library/stm32f4xx_can.c ****   {
 973:./Library/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1942              		.loc 1 973 37
 1943 002a 7B68     		ldr	r3, [r7, #4]
 1944 002c 1B69     		ldr	r3, [r3, #16]
 1945              		.loc 1 973 23
 1946 002e DBB2     		uxtb	r3, r3
 1947              		.loc 1 973 21
 1948 0030 03F00303 		and	r3, r3, #3
 1949 0034 FB73     		strb	r3, [r7, #15]
 1950 0036 01E0     		b	.L98
 1951              	.L99:
 974:./Library/stm32f4xx_can.c ****   }
 975:./Library/stm32f4xx_can.c ****   else
 976:./Library/stm32f4xx_can.c ****   {
 977:./Library/stm32f4xx_can.c ****     message_pending = 0;
 1952              		.loc 1 977 21
 1953 0038 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 53


 1954 003a FB73     		strb	r3, [r7, #15]
 1955              	.L98:
 978:./Library/stm32f4xx_can.c ****   }
 979:./Library/stm32f4xx_can.c ****   return message_pending;
 1956              		.loc 1 979 10
 1957 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 980:./Library/stm32f4xx_can.c **** }
 1958              		.loc 1 980 1
 1959 003e 1846     		mov	r0, r3
 1960 0040 1437     		adds	r7, r7, #20
 1961              	.LCFI74:
 1962              		.cfi_def_cfa_offset 4
 1963 0042 BD46     		mov	sp, r7
 1964              	.LCFI75:
 1965              		.cfi_def_cfa_register 13
 1966              		@ sp needed
 1967 0044 5DF8047B 		ldr	r7, [sp], #4
 1968              	.LCFI76:
 1969              		.cfi_restore 7
 1970              		.cfi_def_cfa_offset 0
 1971 0048 7047     		bx	lr
 1972              		.cfi_endproc
 1973              	.LFE135:
 1975              		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1976              		.align	1
 1977              		.global	CAN_OperatingModeRequest
 1978              		.syntax unified
 1979              		.thumb
 1980              		.thumb_func
 1982              	CAN_OperatingModeRequest:
 1983              	.LFB136:
 981:./Library/stm32f4xx_can.c **** /**
 982:./Library/stm32f4xx_can.c ****   * @}
 983:./Library/stm32f4xx_can.c ****   */
 984:./Library/stm32f4xx_can.c **** 
 985:./Library/stm32f4xx_can.c **** 
 986:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 987:./Library/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 988:./Library/stm32f4xx_can.c ****  *
 989:./Library/stm32f4xx_can.c **** @verbatim    
 990:./Library/stm32f4xx_can.c ****  ===============================================================================
 991:./Library/stm32f4xx_can.c ****                     ##### CAN Operation modes functions #####
 992:./Library/stm32f4xx_can.c ****  ===============================================================================  
 993:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to select the CAN Operation modes
 994:./Library/stm32f4xx_can.c ****       (+) sleep mode
 995:./Library/stm32f4xx_can.c ****       (+) normal mode 
 996:./Library/stm32f4xx_can.c ****       (+) initialization mode
 997:./Library/stm32f4xx_can.c ****    
 998:./Library/stm32f4xx_can.c **** @endverbatim
 999:./Library/stm32f4xx_can.c ****   * @{
1000:./Library/stm32f4xx_can.c ****   */
1001:./Library/stm32f4xx_can.c ****   
1002:./Library/stm32f4xx_can.c ****   
1003:./Library/stm32f4xx_can.c **** /**
1004:./Library/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
1005:./Library/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
1006:./Library/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 54


1007:./Library/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
1008:./Library/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
1009:./Library/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
1010:./Library/stm32f4xx_can.c ****   */
1011:./Library/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
1012:./Library/stm32f4xx_can.c **** {
 1984              		.loc 1 1012 1
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 16
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988              		@ link register save eliminated.
 1989 0000 80B4     		push	{r7}
 1990              	.LCFI77:
 1991              		.cfi_def_cfa_offset 4
 1992              		.cfi_offset 7, -4
 1993 0002 85B0     		sub	sp, sp, #20
 1994              	.LCFI78:
 1995              		.cfi_def_cfa_offset 24
 1996 0004 00AF     		add	r7, sp, #0
 1997              	.LCFI79:
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
 2000 0008 0B46     		mov	r3, r1
 2001 000a FB70     		strb	r3, [r7, #3]
1013:./Library/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 2002              		.loc 1 1013 11
 2003 000c 0023     		movs	r3, #0
 2004 000e FB73     		strb	r3, [r7, #15]
1014:./Library/stm32f4xx_can.c ****   
1015:./Library/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
1016:./Library/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 2005              		.loc 1 1016 12
 2006 0010 4FF6FF73 		movw	r3, #65535
 2007 0014 BB60     		str	r3, [r7, #8]
1017:./Library/stm32f4xx_can.c **** 
1018:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1019:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1020:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
1021:./Library/stm32f4xx_can.c **** 
1022:./Library/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 2008              		.loc 1 1022 6
 2009 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2010 0018 002B     		cmp	r3, #0
 2011 001a 20D1     		bne	.L102
1023:./Library/stm32f4xx_can.c ****   {
1024:./Library/stm32f4xx_can.c ****     /* Request initialisation */
1025:./Library/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 2012              		.loc 1 1025 33
 2013 001c 7B68     		ldr	r3, [r7, #4]
 2014 001e 1B68     		ldr	r3, [r3]
 2015              		.loc 1 1025 17
 2016 0020 23F00303 		bic	r3, r3, #3
 2017 0024 43F00102 		orr	r2, r3, #1
 2018              		.loc 1 1025 15
 2019 0028 7B68     		ldr	r3, [r7, #4]
 2020 002a 1A60     		str	r2, [r3]
1026:./Library/stm32f4xx_can.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 55


1027:./Library/stm32f4xx_can.c ****     /* Wait the acknowledge */
1028:./Library/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 2021              		.loc 1 1028 11
 2022 002c 02E0     		b	.L103
 2023              	.L105:
1029:./Library/stm32f4xx_can.c ****     {
1030:./Library/stm32f4xx_can.c ****       timeout--;
 2024              		.loc 1 1030 14
 2025 002e BB68     		ldr	r3, [r7, #8]
 2026 0030 013B     		subs	r3, r3, #1
 2027 0032 BB60     		str	r3, [r7, #8]
 2028              	.L103:
1028:./Library/stm32f4xx_can.c ****     {
 2029              		.loc 1 1028 18
 2030 0034 7B68     		ldr	r3, [r7, #4]
 2031 0036 5B68     		ldr	r3, [r3, #4]
1028:./Library/stm32f4xx_can.c ****     {
 2032              		.loc 1 1028 24
 2033 0038 03F00303 		and	r3, r3, #3
1028:./Library/stm32f4xx_can.c ****     {
 2034              		.loc 1 1028 11
 2035 003c 012B     		cmp	r3, #1
 2036 003e 02D0     		beq	.L104
1028:./Library/stm32f4xx_can.c ****     {
 2037              		.loc 1 1028 58 discriminator 1
 2038 0040 BB68     		ldr	r3, [r7, #8]
 2039 0042 002B     		cmp	r3, #0
 2040 0044 F3D1     		bne	.L105
 2041              	.L104:
1031:./Library/stm32f4xx_can.c ****     }
1032:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 2042              		.loc 1 1032 14
 2043 0046 7B68     		ldr	r3, [r7, #4]
 2044 0048 5B68     		ldr	r3, [r3, #4]
 2045              		.loc 1 1032 20
 2046 004a 03F00303 		and	r3, r3, #3
 2047              		.loc 1 1032 8
 2048 004e 012B     		cmp	r3, #1
 2049 0050 02D0     		beq	.L106
1033:./Library/stm32f4xx_can.c ****     {
1034:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 2050              		.loc 1 1034 14
 2051 0052 0023     		movs	r3, #0
 2052 0054 FB73     		strb	r3, [r7, #15]
 2053 0056 4AE0     		b	.L107
 2054              	.L106:
1035:./Library/stm32f4xx_can.c ****     }
1036:./Library/stm32f4xx_can.c ****     else
1037:./Library/stm32f4xx_can.c ****     {
1038:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 2055              		.loc 1 1038 14
 2056 0058 0123     		movs	r3, #1
 2057 005a FB73     		strb	r3, [r7, #15]
 2058 005c 47E0     		b	.L107
 2059              	.L102:
1039:./Library/stm32f4xx_can.c ****     }
1040:./Library/stm32f4xx_can.c ****   }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 56


1041:./Library/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 2060              		.loc 1 1041 12
 2061 005e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2062 0060 012B     		cmp	r3, #1
 2063 0062 1ED1     		bne	.L108
1042:./Library/stm32f4xx_can.c ****   {
1043:./Library/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
1044:./Library/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 2064              		.loc 1 1044 15
 2065 0064 7B68     		ldr	r3, [r7, #4]
 2066 0066 1B68     		ldr	r3, [r3]
 2067 0068 23F00302 		bic	r2, r3, #3
 2068 006c 7B68     		ldr	r3, [r7, #4]
 2069 006e 1A60     		str	r2, [r3]
1045:./Library/stm32f4xx_can.c **** 
1046:./Library/stm32f4xx_can.c ****     /* Wait the acknowledge */
1047:./Library/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 2070              		.loc 1 1047 11
 2071 0070 02E0     		b	.L109
 2072              	.L111:
1048:./Library/stm32f4xx_can.c ****     {
1049:./Library/stm32f4xx_can.c ****       timeout--;
 2073              		.loc 1 1049 14
 2074 0072 BB68     		ldr	r3, [r7, #8]
 2075 0074 013B     		subs	r3, r3, #1
 2076 0076 BB60     		str	r3, [r7, #8]
 2077              	.L109:
1047:./Library/stm32f4xx_can.c ****     {
 2078              		.loc 1 1047 18
 2079 0078 7B68     		ldr	r3, [r7, #4]
 2080 007a 5B68     		ldr	r3, [r3, #4]
1047:./Library/stm32f4xx_can.c ****     {
 2081              		.loc 1 1047 24
 2082 007c 03F00303 		and	r3, r3, #3
1047:./Library/stm32f4xx_can.c ****     {
 2083              		.loc 1 1047 11
 2084 0080 002B     		cmp	r3, #0
 2085 0082 02D0     		beq	.L110
1047:./Library/stm32f4xx_can.c ****     {
 2086              		.loc 1 1047 47 discriminator 1
 2087 0084 BB68     		ldr	r3, [r7, #8]
 2088 0086 002B     		cmp	r3, #0
 2089 0088 F3D1     		bne	.L111
 2090              	.L110:
1050:./Library/stm32f4xx_can.c ****     }
1051:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 2091              		.loc 1 1051 14
 2092 008a 7B68     		ldr	r3, [r7, #4]
 2093 008c 5B68     		ldr	r3, [r3, #4]
 2094              		.loc 1 1051 20
 2095 008e 03F00303 		and	r3, r3, #3
 2096              		.loc 1 1051 8
 2097 0092 002B     		cmp	r3, #0
 2098 0094 02D0     		beq	.L112
1052:./Library/stm32f4xx_can.c ****     {
1053:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 2099              		.loc 1 1053 14
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 57


 2100 0096 0023     		movs	r3, #0
 2101 0098 FB73     		strb	r3, [r7, #15]
 2102 009a 28E0     		b	.L107
 2103              	.L112:
1054:./Library/stm32f4xx_can.c ****     }
1055:./Library/stm32f4xx_can.c ****     else
1056:./Library/stm32f4xx_can.c ****     {
1057:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 2104              		.loc 1 1057 14
 2105 009c 0123     		movs	r3, #1
 2106 009e FB73     		strb	r3, [r7, #15]
 2107 00a0 25E0     		b	.L107
 2108              	.L108:
1058:./Library/stm32f4xx_can.c ****     }
1059:./Library/stm32f4xx_can.c ****   }
1060:./Library/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 2109              		.loc 1 1060 12
 2110 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2111 00a4 022B     		cmp	r3, #2
 2112 00a6 20D1     		bne	.L113
1061:./Library/stm32f4xx_can.c ****   {
1062:./Library/stm32f4xx_can.c ****     /* Request Sleep mode */
1063:./Library/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 2113              		.loc 1 1063 33
 2114 00a8 7B68     		ldr	r3, [r7, #4]
 2115 00aa 1B68     		ldr	r3, [r3]
 2116              		.loc 1 1063 17
 2117 00ac 23F00303 		bic	r3, r3, #3
 2118 00b0 43F00202 		orr	r2, r3, #2
 2119              		.loc 1 1063 15
 2120 00b4 7B68     		ldr	r3, [r7, #4]
 2121 00b6 1A60     		str	r2, [r3]
1064:./Library/stm32f4xx_can.c **** 
1065:./Library/stm32f4xx_can.c ****     /* Wait the acknowledge */
1066:./Library/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 2122              		.loc 1 1066 11
 2123 00b8 02E0     		b	.L114
 2124              	.L116:
1067:./Library/stm32f4xx_can.c ****     {
1068:./Library/stm32f4xx_can.c ****       timeout--;
 2125              		.loc 1 1068 14
 2126 00ba BB68     		ldr	r3, [r7, #8]
 2127 00bc 013B     		subs	r3, r3, #1
 2128 00be BB60     		str	r3, [r7, #8]
 2129              	.L114:
1066:./Library/stm32f4xx_can.c ****     {
 2130              		.loc 1 1066 18
 2131 00c0 7B68     		ldr	r3, [r7, #4]
 2132 00c2 5B68     		ldr	r3, [r3, #4]
1066:./Library/stm32f4xx_can.c ****     {
 2133              		.loc 1 1066 24
 2134 00c4 03F00303 		and	r3, r3, #3
1066:./Library/stm32f4xx_can.c ****     {
 2135              		.loc 1 1066 11
 2136 00c8 022B     		cmp	r3, #2
 2137 00ca 02D0     		beq	.L115
1066:./Library/stm32f4xx_can.c ****     {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 58


 2138              		.loc 1 1066 58 discriminator 1
 2139 00cc BB68     		ldr	r3, [r7, #8]
 2140 00ce 002B     		cmp	r3, #0
 2141 00d0 F3D1     		bne	.L116
 2142              	.L115:
1069:./Library/stm32f4xx_can.c ****     }
1070:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 2143              		.loc 1 1070 14
 2144 00d2 7B68     		ldr	r3, [r7, #4]
 2145 00d4 5B68     		ldr	r3, [r3, #4]
 2146              		.loc 1 1070 20
 2147 00d6 03F00303 		and	r3, r3, #3
 2148              		.loc 1 1070 8
 2149 00da 022B     		cmp	r3, #2
 2150 00dc 02D0     		beq	.L117
1071:./Library/stm32f4xx_can.c ****     {
1072:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 2151              		.loc 1 1072 14
 2152 00de 0023     		movs	r3, #0
 2153 00e0 FB73     		strb	r3, [r7, #15]
 2154 00e2 04E0     		b	.L107
 2155              	.L117:
1073:./Library/stm32f4xx_can.c ****     }
1074:./Library/stm32f4xx_can.c ****     else
1075:./Library/stm32f4xx_can.c ****     {
1076:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 2156              		.loc 1 1076 14
 2157 00e4 0123     		movs	r3, #1
 2158 00e6 FB73     		strb	r3, [r7, #15]
 2159 00e8 01E0     		b	.L107
 2160              	.L113:
1077:./Library/stm32f4xx_can.c ****     }
1078:./Library/stm32f4xx_can.c ****   }
1079:./Library/stm32f4xx_can.c ****   else
1080:./Library/stm32f4xx_can.c ****   {
1081:./Library/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 2161              		.loc 1 1081 12
 2162 00ea 0023     		movs	r3, #0
 2163 00ec FB73     		strb	r3, [r7, #15]
 2164              	.L107:
1082:./Library/stm32f4xx_can.c ****   }
1083:./Library/stm32f4xx_can.c **** 
1084:./Library/stm32f4xx_can.c ****   return  (uint8_t) status;
 2165              		.loc 1 1084 11
 2166 00ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1085:./Library/stm32f4xx_can.c **** }
 2167              		.loc 1 1085 1
 2168 00f0 1846     		mov	r0, r3
 2169 00f2 1437     		adds	r7, r7, #20
 2170              	.LCFI80:
 2171              		.cfi_def_cfa_offset 4
 2172 00f4 BD46     		mov	sp, r7
 2173              	.LCFI81:
 2174              		.cfi_def_cfa_register 13
 2175              		@ sp needed
 2176 00f6 5DF8047B 		ldr	r7, [sp], #4
 2177              	.LCFI82:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 59


 2178              		.cfi_restore 7
 2179              		.cfi_def_cfa_offset 0
 2180 00fa 7047     		bx	lr
 2181              		.cfi_endproc
 2182              	.LFE136:
 2184              		.section	.text.CAN_Sleep,"ax",%progbits
 2185              		.align	1
 2186              		.global	CAN_Sleep
 2187              		.syntax unified
 2188              		.thumb
 2189              		.thumb_func
 2191              	CAN_Sleep:
 2192              	.LFB137:
1086:./Library/stm32f4xx_can.c **** 
1087:./Library/stm32f4xx_can.c **** /**
1088:./Library/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
1089:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1090:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1091:./Library/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
1092:./Library/stm32f4xx_can.c ****   */
1093:./Library/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
1094:./Library/stm32f4xx_can.c **** {
 2193              		.loc 1 1094 1
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 16
 2196              		@ frame_needed = 1, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
 2198 0000 80B4     		push	{r7}
 2199              	.LCFI83:
 2200              		.cfi_def_cfa_offset 4
 2201              		.cfi_offset 7, -4
 2202 0002 85B0     		sub	sp, sp, #20
 2203              	.LCFI84:
 2204              		.cfi_def_cfa_offset 24
 2205 0004 00AF     		add	r7, sp, #0
 2206              	.LCFI85:
 2207              		.cfi_def_cfa_register 7
 2208 0006 7860     		str	r0, [r7, #4]
1095:./Library/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 2209              		.loc 1 1095 11
 2210 0008 0023     		movs	r3, #0
 2211 000a FB73     		strb	r3, [r7, #15]
1096:./Library/stm32f4xx_can.c ****   
1097:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1098:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1099:./Library/stm32f4xx_can.c ****     
1100:./Library/stm32f4xx_can.c ****   /* Request Sleep mode */
1101:./Library/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 2212              		.loc 1 1101 23
 2213 000c 7B68     		ldr	r3, [r7, #4]
 2214 000e 1B68     		ldr	r3, [r3]
 2215              		.loc 1 1101 69
 2216 0010 23F00303 		bic	r3, r3, #3
 2217 0014 43F00202 		orr	r2, r3, #2
 2218              		.loc 1 1101 14
 2219 0018 7B68     		ldr	r3, [r7, #4]
 2220 001a 1A60     		str	r2, [r3]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 60


1102:./Library/stm32f4xx_can.c ****    
1103:./Library/stm32f4xx_can.c ****   /* Sleep mode status */
1104:./Library/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 2221              		.loc 1 1104 12
 2222 001c 7B68     		ldr	r3, [r7, #4]
 2223 001e 5B68     		ldr	r3, [r3, #4]
 2224              		.loc 1 1104 18
 2225 0020 03F00303 		and	r3, r3, #3
 2226              		.loc 1 1104 6
 2227 0024 022B     		cmp	r3, #2
 2228 0026 01D1     		bne	.L120
1105:./Library/stm32f4xx_can.c ****   {
1106:./Library/stm32f4xx_can.c ****     /* Sleep mode not entered */
1107:./Library/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 2229              		.loc 1 1107 17
 2230 0028 0123     		movs	r3, #1
 2231 002a FB73     		strb	r3, [r7, #15]
 2232              	.L120:
1108:./Library/stm32f4xx_can.c ****   }
1109:./Library/stm32f4xx_can.c ****   /* return sleep mode status */
1110:./Library/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 2233              		.loc 1 1110 11
 2234 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1111:./Library/stm32f4xx_can.c **** }
 2235              		.loc 1 1111 1
 2236 002e 1846     		mov	r0, r3
 2237 0030 1437     		adds	r7, r7, #20
 2238              	.LCFI86:
 2239              		.cfi_def_cfa_offset 4
 2240 0032 BD46     		mov	sp, r7
 2241              	.LCFI87:
 2242              		.cfi_def_cfa_register 13
 2243              		@ sp needed
 2244 0034 5DF8047B 		ldr	r7, [sp], #4
 2245              	.LCFI88:
 2246              		.cfi_restore 7
 2247              		.cfi_def_cfa_offset 0
 2248 0038 7047     		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE137:
 2252              		.section	.text.CAN_WakeUp,"ax",%progbits
 2253              		.align	1
 2254              		.global	CAN_WakeUp
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2259              	CAN_WakeUp:
 2260              	.LFB138:
1112:./Library/stm32f4xx_can.c **** 
1113:./Library/stm32f4xx_can.c **** /**
1114:./Library/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
1115:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1116:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1117:./Library/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
1118:./Library/stm32f4xx_can.c ****   */
1119:./Library/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
1120:./Library/stm32f4xx_can.c **** {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 61


 2261              		.loc 1 1120 1
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 16
 2264              		@ frame_needed = 1, uses_anonymous_args = 0
 2265              		@ link register save eliminated.
 2266 0000 80B4     		push	{r7}
 2267              	.LCFI89:
 2268              		.cfi_def_cfa_offset 4
 2269              		.cfi_offset 7, -4
 2270 0002 85B0     		sub	sp, sp, #20
 2271              	.LCFI90:
 2272              		.cfi_def_cfa_offset 24
 2273 0004 00AF     		add	r7, sp, #0
 2274              	.LCFI91:
 2275              		.cfi_def_cfa_register 7
 2276 0006 7860     		str	r0, [r7, #4]
1121:./Library/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 2277              		.loc 1 1121 12
 2278 0008 4FF6FF73 		movw	r3, #65535
 2279 000c FB60     		str	r3, [r7, #12]
1122:./Library/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 2280              		.loc 1 1122 11
 2281 000e 0023     		movs	r3, #0
 2282 0010 FB72     		strb	r3, [r7, #11]
1123:./Library/stm32f4xx_can.c ****   
1124:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1125:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1126:./Library/stm32f4xx_can.c ****     
1127:./Library/stm32f4xx_can.c ****   /* Wake up request */
1128:./Library/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 2283              		.loc 1 1128 13
 2284 0012 7B68     		ldr	r3, [r7, #4]
 2285 0014 1B68     		ldr	r3, [r3]
 2286 0016 23F00202 		bic	r2, r3, #2
 2287 001a 7B68     		ldr	r3, [r7, #4]
 2288 001c 1A60     		str	r2, [r3]
1129:./Library/stm32f4xx_can.c ****     
1130:./Library/stm32f4xx_can.c ****   /* Sleep mode status */
1131:./Library/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2289              		.loc 1 1131 8
 2290 001e 02E0     		b	.L123
 2291              	.L125:
1132:./Library/stm32f4xx_can.c ****   {
1133:./Library/stm32f4xx_can.c ****    wait_slak--;
 2292              		.loc 1 1133 13
 2293 0020 FB68     		ldr	r3, [r7, #12]
 2294 0022 013B     		subs	r3, r3, #1
 2295 0024 FB60     		str	r3, [r7, #12]
 2296              	.L123:
1131:./Library/stm32f4xx_can.c ****   {
 2297              		.loc 1 1131 15
 2298 0026 7B68     		ldr	r3, [r7, #4]
 2299 0028 5B68     		ldr	r3, [r3, #4]
1131:./Library/stm32f4xx_can.c ****   {
 2300              		.loc 1 1131 21
 2301 002a 03F00203 		and	r3, r3, #2
1131:./Library/stm32f4xx_can.c ****   {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 62


 2302              		.loc 1 1131 8
 2303 002e 022B     		cmp	r3, #2
 2304 0030 02D1     		bne	.L124
1131:./Library/stm32f4xx_can.c ****   {
 2305              		.loc 1 1131 53 discriminator 1
 2306 0032 FB68     		ldr	r3, [r7, #12]
 2307 0034 002B     		cmp	r3, #0
 2308 0036 F3D1     		bne	.L125
 2309              	.L124:
1134:./Library/stm32f4xx_can.c ****   }
1135:./Library/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2310              		.loc 1 1135 11
 2311 0038 7B68     		ldr	r3, [r7, #4]
 2312 003a 5B68     		ldr	r3, [r3, #4]
 2313              		.loc 1 1135 17
 2314 003c 03F00203 		and	r3, r3, #2
 2315              		.loc 1 1135 5
 2316 0040 022B     		cmp	r3, #2
 2317 0042 01D0     		beq	.L126
1136:./Library/stm32f4xx_can.c ****   {
1137:./Library/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
1138:./Library/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2318              		.loc 1 1138 18
 2319 0044 0123     		movs	r3, #1
 2320 0046 FB72     		strb	r3, [r7, #11]
 2321              	.L126:
1139:./Library/stm32f4xx_can.c ****   }
1140:./Library/stm32f4xx_can.c ****   /* return wakeup status */
1141:./Library/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2322              		.loc 1 1141 10
 2323 0048 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1142:./Library/stm32f4xx_can.c **** }
 2324              		.loc 1 1142 1
 2325 004a 1846     		mov	r0, r3
 2326 004c 1437     		adds	r7, r7, #20
 2327              	.LCFI92:
 2328              		.cfi_def_cfa_offset 4
 2329 004e BD46     		mov	sp, r7
 2330              	.LCFI93:
 2331              		.cfi_def_cfa_register 13
 2332              		@ sp needed
 2333 0050 5DF8047B 		ldr	r7, [sp], #4
 2334              	.LCFI94:
 2335              		.cfi_restore 7
 2336              		.cfi_def_cfa_offset 0
 2337 0054 7047     		bx	lr
 2338              		.cfi_endproc
 2339              	.LFE138:
 2341              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 2342              		.align	1
 2343              		.global	CAN_GetLastErrorCode
 2344              		.syntax unified
 2345              		.thumb
 2346              		.thumb_func
 2348              	CAN_GetLastErrorCode:
 2349              	.LFB139:
1143:./Library/stm32f4xx_can.c **** /**
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 63


1144:./Library/stm32f4xx_can.c ****   * @}
1145:./Library/stm32f4xx_can.c ****   */
1146:./Library/stm32f4xx_can.c **** 
1147:./Library/stm32f4xx_can.c **** 
1148:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1149:./Library/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1150:./Library/stm32f4xx_can.c ****  *
1151:./Library/stm32f4xx_can.c **** @verbatim    
1152:./Library/stm32f4xx_can.c ****  ===============================================================================
1153:./Library/stm32f4xx_can.c ****                 ##### CAN Bus Error management functions #####
1154:./Library/stm32f4xx_can.c ****  ===============================================================================  
1155:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
1156:./Library/stm32f4xx_can.c ****       (+) Return the CANx's last error code (LEC)
1157:./Library/stm32f4xx_can.c ****       (+) Return the CANx Receive Error Counter (REC)
1158:./Library/stm32f4xx_can.c ****       (+) Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1159:./Library/stm32f4xx_can.c ****    
1160:./Library/stm32f4xx_can.c ****       -@- If TEC is greater than 255, The CAN is in bus-off state.
1161:./Library/stm32f4xx_can.c ****       -@- if REC or TEC are greater than 96, an Error warning flag occurs.
1162:./Library/stm32f4xx_can.c ****       -@- if REC or TEC are greater than 127, an Error Passive Flag occurs.
1163:./Library/stm32f4xx_can.c ****                         
1164:./Library/stm32f4xx_can.c **** @endverbatim
1165:./Library/stm32f4xx_can.c ****   * @{
1166:./Library/stm32f4xx_can.c ****   */
1167:./Library/stm32f4xx_can.c ****   
1168:./Library/stm32f4xx_can.c **** /**
1169:./Library/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1170:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1171:./Library/stm32f4xx_can.c ****   * @retval Error code: 
1172:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1173:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1174:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1175:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1176:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1177:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1178:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1179:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1180:./Library/stm32f4xx_can.c ****   */
1181:./Library/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1182:./Library/stm32f4xx_can.c **** {
 2350              		.loc 1 1182 1
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 16
 2353              		@ frame_needed = 1, uses_anonymous_args = 0
 2354              		@ link register save eliminated.
 2355 0000 80B4     		push	{r7}
 2356              	.LCFI95:
 2357              		.cfi_def_cfa_offset 4
 2358              		.cfi_offset 7, -4
 2359 0002 85B0     		sub	sp, sp, #20
 2360              	.LCFI96:
 2361              		.cfi_def_cfa_offset 24
 2362 0004 00AF     		add	r7, sp, #0
 2363              	.LCFI97:
 2364              		.cfi_def_cfa_register 7
 2365 0006 7860     		str	r0, [r7, #4]
1183:./Library/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2366              		.loc 1 1183 11
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 64


 2367 0008 0023     		movs	r3, #0
 2368 000a FB73     		strb	r3, [r7, #15]
1184:./Library/stm32f4xx_can.c ****   
1185:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1186:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1187:./Library/stm32f4xx_can.c ****   
1188:./Library/stm32f4xx_can.c ****   /* Get the error code*/
1189:./Library/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2369              		.loc 1 1189 30
 2370 000c 7B68     		ldr	r3, [r7, #4]
 2371 000e 9B69     		ldr	r3, [r3, #24]
 2372              		.loc 1 1189 37
 2373 0010 DBB2     		uxtb	r3, r3
 2374              		.loc 1 1189 13
 2375 0012 03F07003 		and	r3, r3, #112
 2376 0016 FB73     		strb	r3, [r7, #15]
1190:./Library/stm32f4xx_can.c ****   
1191:./Library/stm32f4xx_can.c ****   /* Return the error code*/
1192:./Library/stm32f4xx_can.c ****   return errorcode;
 2377              		.loc 1 1192 10
 2378 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1193:./Library/stm32f4xx_can.c **** }
 2379              		.loc 1 1193 1
 2380 001a 1846     		mov	r0, r3
 2381 001c 1437     		adds	r7, r7, #20
 2382              	.LCFI98:
 2383              		.cfi_def_cfa_offset 4
 2384 001e BD46     		mov	sp, r7
 2385              	.LCFI99:
 2386              		.cfi_def_cfa_register 13
 2387              		@ sp needed
 2388 0020 5DF8047B 		ldr	r7, [sp], #4
 2389              	.LCFI100:
 2390              		.cfi_restore 7
 2391              		.cfi_def_cfa_offset 0
 2392 0024 7047     		bx	lr
 2393              		.cfi_endproc
 2394              	.LFE139:
 2396              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 2397              		.align	1
 2398              		.global	CAN_GetReceiveErrorCounter
 2399              		.syntax unified
 2400              		.thumb
 2401              		.thumb_func
 2403              	CAN_GetReceiveErrorCounter:
 2404              	.LFB140:
1194:./Library/stm32f4xx_can.c **** 
1195:./Library/stm32f4xx_can.c **** /**
1196:./Library/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1197:./Library/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1198:./Library/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1199:./Library/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1200:./Library/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1201:./Library/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1202:./Library/stm32f4xx_can.c ****   *         error passive state.  
1203:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1204:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 65


1205:./Library/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1206:./Library/stm32f4xx_can.c ****   */
1207:./Library/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1208:./Library/stm32f4xx_can.c **** {
 2405              		.loc 1 1208 1
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 16
 2408              		@ frame_needed = 1, uses_anonymous_args = 0
 2409              		@ link register save eliminated.
 2410 0000 80B4     		push	{r7}
 2411              	.LCFI101:
 2412              		.cfi_def_cfa_offset 4
 2413              		.cfi_offset 7, -4
 2414 0002 85B0     		sub	sp, sp, #20
 2415              	.LCFI102:
 2416              		.cfi_def_cfa_offset 24
 2417 0004 00AF     		add	r7, sp, #0
 2418              	.LCFI103:
 2419              		.cfi_def_cfa_register 7
 2420 0006 7860     		str	r0, [r7, #4]
1209:./Library/stm32f4xx_can.c ****   uint8_t counter=0;
 2421              		.loc 1 1209 11
 2422 0008 0023     		movs	r3, #0
 2423 000a FB73     		strb	r3, [r7, #15]
1210:./Library/stm32f4xx_can.c ****   
1211:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1212:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1213:./Library/stm32f4xx_can.c ****   
1214:./Library/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1215:./Library/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2424              		.loc 1 1215 28
 2425 000c 7B68     		ldr	r3, [r7, #4]
 2426 000e 9B69     		ldr	r3, [r3, #24]
 2427              		.loc 1 1215 48
 2428 0010 1B0E     		lsrs	r3, r3, #24
 2429              		.loc 1 1215 11
 2430 0012 FB73     		strb	r3, [r7, #15]
1216:./Library/stm32f4xx_can.c ****   
1217:./Library/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1218:./Library/stm32f4xx_can.c ****   return counter;
 2431              		.loc 1 1218 10
 2432 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1219:./Library/stm32f4xx_can.c **** }
 2433              		.loc 1 1219 1
 2434 0016 1846     		mov	r0, r3
 2435 0018 1437     		adds	r7, r7, #20
 2436              	.LCFI104:
 2437              		.cfi_def_cfa_offset 4
 2438 001a BD46     		mov	sp, r7
 2439              	.LCFI105:
 2440              		.cfi_def_cfa_register 13
 2441              		@ sp needed
 2442 001c 5DF8047B 		ldr	r7, [sp], #4
 2443              	.LCFI106:
 2444              		.cfi_restore 7
 2445              		.cfi_def_cfa_offset 0
 2446 0020 7047     		bx	lr
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 66


 2447              		.cfi_endproc
 2448              	.LFE140:
 2450              		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 2451              		.align	1
 2452              		.global	CAN_GetLSBTransmitErrorCounter
 2453              		.syntax unified
 2454              		.thumb
 2455              		.thumb_func
 2457              	CAN_GetLSBTransmitErrorCounter:
 2458              	.LFB141:
1220:./Library/stm32f4xx_can.c **** 
1221:./Library/stm32f4xx_can.c **** 
1222:./Library/stm32f4xx_can.c **** /**
1223:./Library/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1224:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1225:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1226:./Library/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1227:./Library/stm32f4xx_can.c ****   */
1228:./Library/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1229:./Library/stm32f4xx_can.c **** {
 2459              		.loc 1 1229 1
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 16
 2462              		@ frame_needed = 1, uses_anonymous_args = 0
 2463              		@ link register save eliminated.
 2464 0000 80B4     		push	{r7}
 2465              	.LCFI107:
 2466              		.cfi_def_cfa_offset 4
 2467              		.cfi_offset 7, -4
 2468 0002 85B0     		sub	sp, sp, #20
 2469              	.LCFI108:
 2470              		.cfi_def_cfa_offset 24
 2471 0004 00AF     		add	r7, sp, #0
 2472              	.LCFI109:
 2473              		.cfi_def_cfa_register 7
 2474 0006 7860     		str	r0, [r7, #4]
1230:./Library/stm32f4xx_can.c ****   uint8_t counter=0;
 2475              		.loc 1 1230 11
 2476 0008 0023     		movs	r3, #0
 2477 000a FB73     		strb	r3, [r7, #15]
1231:./Library/stm32f4xx_can.c ****   
1232:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1233:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1234:./Library/stm32f4xx_can.c ****   
1235:./Library/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1236:./Library/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2478              		.loc 1 1236 28
 2479 000c 7B68     		ldr	r3, [r7, #4]
 2480 000e 9B69     		ldr	r3, [r3, #24]
 2481              		.loc 1 1236 48
 2482 0010 1B0C     		lsrs	r3, r3, #16
 2483              		.loc 1 1236 11
 2484 0012 FB73     		strb	r3, [r7, #15]
1237:./Library/stm32f4xx_can.c ****   
1238:./Library/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1239:./Library/stm32f4xx_can.c ****   return counter;
 2485              		.loc 1 1239 10
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 67


 2486 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1240:./Library/stm32f4xx_can.c **** }
 2487              		.loc 1 1240 1
 2488 0016 1846     		mov	r0, r3
 2489 0018 1437     		adds	r7, r7, #20
 2490              	.LCFI110:
 2491              		.cfi_def_cfa_offset 4
 2492 001a BD46     		mov	sp, r7
 2493              	.LCFI111:
 2494              		.cfi_def_cfa_register 13
 2495              		@ sp needed
 2496 001c 5DF8047B 		ldr	r7, [sp], #4
 2497              	.LCFI112:
 2498              		.cfi_restore 7
 2499              		.cfi_def_cfa_offset 0
 2500 0020 7047     		bx	lr
 2501              		.cfi_endproc
 2502              	.LFE141:
 2504              		.section	.text.CAN_ITConfig,"ax",%progbits
 2505              		.align	1
 2506              		.global	CAN_ITConfig
 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2511              	CAN_ITConfig:
 2512              	.LFB142:
1241:./Library/stm32f4xx_can.c **** /**
1242:./Library/stm32f4xx_can.c ****   * @}
1243:./Library/stm32f4xx_can.c ****   */
1244:./Library/stm32f4xx_can.c **** 
1245:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1246:./Library/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1247:./Library/stm32f4xx_can.c ****  *
1248:./Library/stm32f4xx_can.c **** @verbatim   
1249:./Library/stm32f4xx_can.c ****  ===============================================================================
1250:./Library/stm32f4xx_can.c ****               ##### Interrupts and flags management functions #####
1251:./Library/stm32f4xx_can.c ****  ===============================================================================  
1252:./Library/stm32f4xx_can.c **** 
1253:./Library/stm32f4xx_can.c ****      [..] This section provides functions allowing to configure the CAN Interrupts 
1254:./Library/stm32f4xx_can.c ****           and to get the status and clear flags and Interrupts pending bits.
1255:./Library/stm32f4xx_can.c ****   
1256:./Library/stm32f4xx_can.c ****           The CAN provides 14 Interrupts sources and 15 Flags:
1257:./Library/stm32f4xx_can.c **** 
1258:./Library/stm32f4xx_can.c ****    
1259:./Library/stm32f4xx_can.c ****   *** Flags ***
1260:./Library/stm32f4xx_can.c ****   =============
1261:./Library/stm32f4xx_can.c ****     [..] The 15 flags can be divided on 4 groups: 
1262:./Library/stm32f4xx_can.c **** 
1263:./Library/stm32f4xx_can.c ****       (+) Transmit Flags
1264:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP0, 
1265:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP1, 
1266:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1267:./Library/stm32f4xx_can.c ****                                Set when the last request (transmit or abort)
1268:./Library/stm32f4xx_can.c ****                                has been performed. 
1269:./Library/stm32f4xx_can.c **** 
1270:./Library/stm32f4xx_can.c ****       (+) Receive Flags
1271:./Library/stm32f4xx_can.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 68


1272:./Library/stm32f4xx_can.c **** 
1273:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FMP0,
1274:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1275:./Library/stm32f4xx_can.c ****                                set to signal that messages are pending in the receive 
1276:./Library/stm32f4xx_can.c ****                                FIFO.
1277:./Library/stm32f4xx_can.c ****                                These Flags are cleared only by hardware. 
1278:./Library/stm32f4xx_can.c **** 
1279:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FF0,
1280:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1281:./Library/stm32f4xx_can.c ****                                set when three messages are stored in the selected 
1282:./Library/stm32f4xx_can.c ****                                FIFO.                        
1283:./Library/stm32f4xx_can.c **** 
1284:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FOV0              
1285:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1286:./Library/stm32f4xx_can.c ****                                set when a new message has been received and passed 
1287:./Library/stm32f4xx_can.c ****                                the filter while the FIFO was full.         
1288:./Library/stm32f4xx_can.c **** 
1289:./Library/stm32f4xx_can.c ****       (+) Operating Mode Flags
1290:./Library/stm32f4xx_can.c **** 
1291:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_WKU    : Wake up Flag
1292:./Library/stm32f4xx_can.c ****                                set to signal that a SOF bit has been detected while 
1293:./Library/stm32f4xx_can.c ****                                the CAN hardware was in Sleep mode. 
1294:./Library/stm32f4xx_can.c ****         
1295:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_SLAK   : Sleep acknowledge Flag
1296:./Library/stm32f4xx_can.c ****                                Set to signal that the CAN has entered Sleep Mode. 
1297:./Library/stm32f4xx_can.c ****     
1298:./Library/stm32f4xx_can.c ****       (+) Error Flags
1299:./Library/stm32f4xx_can.c **** 
1300:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_EWG    : Error Warning Flag
1301:./Library/stm32f4xx_can.c ****                                Set when the warning limit has been reached (Receive 
1302:./Library/stm32f4xx_can.c ****                                Error Counter or Transmit Error Counter greater than 96). 
1303:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1304:./Library/stm32f4xx_can.c ****                             
1305:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_EPV    : Error Passive Flag
1306:./Library/stm32f4xx_can.c ****                                Set when the Error Passive limit has been reached 
1307:./Library/stm32f4xx_can.c ****                                (Receive Error Counter or Transmit Error Counter 
1308:./Library/stm32f4xx_can.c ****                                greater than 127).
1309:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1310:./Library/stm32f4xx_can.c ****                              
1311:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_BOF    : Bus-Off Flag
1312:./Library/stm32f4xx_can.c ****                                set when CAN enters the bus-off state. The bus-off 
1313:./Library/stm32f4xx_can.c ****                                state is entered on TEC overflow, greater than 255.
1314:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1315:./Library/stm32f4xx_can.c ****                                    
1316:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_LEC    : Last error code Flag
1317:./Library/stm32f4xx_can.c ****                                set If a message has been transferred (reception or
1318:./Library/stm32f4xx_can.c ****                                transmission) with error, and the error code is hold.              
1319:./Library/stm32f4xx_can.c ****                            
1320:./Library/stm32f4xx_can.c ****   *** Interrupts ***
1321:./Library/stm32f4xx_can.c ****   ==================
1322:./Library/stm32f4xx_can.c ****     [..] The 14 interrupts can be divided on 4 groups: 
1323:./Library/stm32f4xx_can.c ****   
1324:./Library/stm32f4xx_can.c ****       (+) Transmit interrupt
1325:./Library/stm32f4xx_can.c ****   
1326:./Library/stm32f4xx_can.c ****         (++) CAN_IT_TME   :  Transmit mailbox empty Interrupt
1327:./Library/stm32f4xx_can.c ****                              if enabled, this interrupt source is pending when 
1328:./Library/stm32f4xx_can.c ****                              no transmit request are pending for Tx mailboxes.      
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 69


1329:./Library/stm32f4xx_can.c **** 
1330:./Library/stm32f4xx_can.c ****       (+) Receive Interrupts
1331:./Library/stm32f4xx_can.c ****          
1332:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FMP0,
1333:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1334:./Library/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1335:./Library/stm32f4xx_can.c ****                                when messages are pending in the receive FIFO.
1336:./Library/stm32f4xx_can.c ****                                The corresponding interrupt pending bits are cleared 
1337:./Library/stm32f4xx_can.c ****                                only by hardware.
1338:./Library/stm32f4xx_can.c ****                 
1339:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FF0,              
1340:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1341:./Library/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1342:./Library/stm32f4xx_can.c ****                                when three messages are stored in the selected FIFO.
1343:./Library/stm32f4xx_can.c ****         
1344:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FOV0,        
1345:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1346:./Library/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1347:./Library/stm32f4xx_can.c ****                                when a new message has been received and passed 
1348:./Library/stm32f4xx_can.c ****                                the filter while the FIFO was full.
1349:./Library/stm32f4xx_can.c **** 
1350:./Library/stm32f4xx_can.c ****       (+) Operating Mode Interrupts
1351:./Library/stm32f4xx_can.c ****          
1352:./Library/stm32f4xx_can.c ****         (++) CAN_IT_WKU     :  Wake-up Interrupt
1353:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1354:./Library/stm32f4xx_can.c ****                                a SOF bit has been detected while the CAN hardware 
1355:./Library/stm32f4xx_can.c ****                                was in Sleep mode.
1356:./Library/stm32f4xx_can.c ****                                   
1357:./Library/stm32f4xx_can.c ****         (++) CAN_IT_SLK     :  Sleep acknowledge Interrupt
1358:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1359:./Library/stm32f4xx_can.c ****                                the CAN has entered Sleep Mode.       
1360:./Library/stm32f4xx_can.c **** 
1361:./Library/stm32f4xx_can.c ****       (+) Error Interrupts 
1362:./Library/stm32f4xx_can.c ****         
1363:./Library/stm32f4xx_can.c ****         (++) CAN_IT_EWG     :  Error warning Interrupt 
1364:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1365:./Library/stm32f4xx_can.c ****                                the warning limit has been reached (Receive Error 
1366:./Library/stm32f4xx_can.c ****                                Counter or Transmit Error Counter=96). 
1367:./Library/stm32f4xx_can.c ****                                
1368:./Library/stm32f4xx_can.c ****         (++) CAN_IT_EPV     :  Error passive Interrupt        
1369:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1370:./Library/stm32f4xx_can.c ****                                the Error Passive limit has been reached (Receive 
1371:./Library/stm32f4xx_can.c ****                                Error Counter or Transmit Error Counter>127).
1372:./Library/stm32f4xx_can.c ****                           
1373:./Library/stm32f4xx_can.c ****         (++) CAN_IT_BOF     :  Bus-off Interrupt
1374:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1375:./Library/stm32f4xx_can.c ****                                CAN enters the bus-off state. The bus-off state is 
1376:./Library/stm32f4xx_can.c ****                                entered on TEC overflow, greater than 255.
1377:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1378:./Library/stm32f4xx_can.c ****                                   
1379:./Library/stm32f4xx_can.c ****         (++) CAN_IT_LEC     :  Last error code Interrupt        
1380:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending  when
1381:./Library/stm32f4xx_can.c ****                                a message has been transferred (reception or
1382:./Library/stm32f4xx_can.c ****                                transmission) with error, and the error code is hold.
1383:./Library/stm32f4xx_can.c ****                           
1384:./Library/stm32f4xx_can.c ****         (++) CAN_IT_ERR     :  Error Interrupt
1385:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 70


1386:./Library/stm32f4xx_can.c ****                                an error condition is pending.      
1387:./Library/stm32f4xx_can.c ****                       
1388:./Library/stm32f4xx_can.c ****     [..] Managing the CAN controller events :
1389:./Library/stm32f4xx_can.c ****  
1390:./Library/stm32f4xx_can.c ****          The user should identify which mode will be used in his application to 
1391:./Library/stm32f4xx_can.c ****          manage the CAN controller events: Polling mode or Interrupt mode.
1392:./Library/stm32f4xx_can.c ****   
1393:./Library/stm32f4xx_can.c ****       (#) In the Polling Mode it is advised to use the following functions:
1394:./Library/stm32f4xx_can.c ****         (++) CAN_GetFlagStatus() : to check if flags events occur. 
1395:./Library/stm32f4xx_can.c ****         (++) CAN_ClearFlag()     : to clear the flags events.
1396:./Library/stm32f4xx_can.c ****   
1397:./Library/stm32f4xx_can.c **** 
1398:./Library/stm32f4xx_can.c ****   
1399:./Library/stm32f4xx_can.c ****       (#) In the Interrupt Mode it is advised to use the following functions:
1400:./Library/stm32f4xx_can.c ****         (++) CAN_ITConfig()       : to enable or disable the interrupt source.
1401:./Library/stm32f4xx_can.c ****         (++) CAN_GetITStatus()    : to check if Interrupt occurs.
1402:./Library/stm32f4xx_can.c ****         (++) CAN_ClearITPendingBit() : to clear the Interrupt pending Bit 
1403:./Library/stm32f4xx_can.c ****             (corresponding Flag).
1404:./Library/stm32f4xx_can.c ****         -@@-  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1405:./Library/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1406:./Library/stm32f4xx_can.c ****   
1407:./Library/stm32f4xx_can.c **** @endverbatim
1408:./Library/stm32f4xx_can.c ****   * @{
1409:./Library/stm32f4xx_can.c ****   */ 
1410:./Library/stm32f4xx_can.c **** /**
1411:./Library/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1412:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1413:./Library/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1414:./Library/stm32f4xx_can.c ****   *          This parameter can be: 
1415:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1416:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1417:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1418:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1419:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1420:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1421:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1422:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1423:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1424:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1425:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1426:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1427:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1428:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1429:./Library/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1430:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1431:./Library/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1432:./Library/stm32f4xx_can.c ****   * @retval None
1433:./Library/stm32f4xx_can.c ****   */
1434:./Library/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1435:./Library/stm32f4xx_can.c **** {
 2513              		.loc 1 1435 1
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 16
 2516              		@ frame_needed = 1, uses_anonymous_args = 0
 2517              		@ link register save eliminated.
 2518 0000 80B4     		push	{r7}
 2519              	.LCFI113:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 71


 2520              		.cfi_def_cfa_offset 4
 2521              		.cfi_offset 7, -4
 2522 0002 85B0     		sub	sp, sp, #20
 2523              	.LCFI114:
 2524              		.cfi_def_cfa_offset 24
 2525 0004 00AF     		add	r7, sp, #0
 2526              	.LCFI115:
 2527              		.cfi_def_cfa_register 7
 2528 0006 F860     		str	r0, [r7, #12]
 2529 0008 B960     		str	r1, [r7, #8]
 2530 000a 1346     		mov	r3, r2
 2531 000c FB71     		strb	r3, [r7, #7]
1436:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1437:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1438:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1439:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1440:./Library/stm32f4xx_can.c **** 
1441:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2532              		.loc 1 1441 6
 2533 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2534 0010 002B     		cmp	r3, #0
 2535 0012 06D0     		beq	.L135
1442:./Library/stm32f4xx_can.c ****   {
1443:./Library/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1444:./Library/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2536              		.loc 1 1444 15
 2537 0014 FB68     		ldr	r3, [r7, #12]
 2538 0016 5A69     		ldr	r2, [r3, #20]
 2539 0018 BB68     		ldr	r3, [r7, #8]
 2540 001a 1A43     		orrs	r2, r2, r3
 2541 001c FB68     		ldr	r3, [r7, #12]
 2542 001e 5A61     		str	r2, [r3, #20]
1445:./Library/stm32f4xx_can.c ****   }
1446:./Library/stm32f4xx_can.c ****   else
1447:./Library/stm32f4xx_can.c ****   {
1448:./Library/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1449:./Library/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
1450:./Library/stm32f4xx_can.c ****   }
1451:./Library/stm32f4xx_can.c **** }
 2543              		.loc 1 1451 1
 2544 0020 06E0     		b	.L137
 2545              	.L135:
1449:./Library/stm32f4xx_can.c ****   }
 2546              		.loc 1 1449 15
 2547 0022 FB68     		ldr	r3, [r7, #12]
 2548 0024 5A69     		ldr	r2, [r3, #20]
1449:./Library/stm32f4xx_can.c ****   }
 2549              		.loc 1 1449 18
 2550 0026 BB68     		ldr	r3, [r7, #8]
 2551 0028 DB43     		mvns	r3, r3
1449:./Library/stm32f4xx_can.c ****   }
 2552              		.loc 1 1449 15
 2553 002a 1A40     		ands	r2, r2, r3
 2554 002c FB68     		ldr	r3, [r7, #12]
 2555 002e 5A61     		str	r2, [r3, #20]
 2556              	.L137:
 2557              		.loc 1 1451 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 72


 2558 0030 00BF     		nop
 2559 0032 1437     		adds	r7, r7, #20
 2560              	.LCFI116:
 2561              		.cfi_def_cfa_offset 4
 2562 0034 BD46     		mov	sp, r7
 2563              	.LCFI117:
 2564              		.cfi_def_cfa_register 13
 2565              		@ sp needed
 2566 0036 5DF8047B 		ldr	r7, [sp], #4
 2567              	.LCFI118:
 2568              		.cfi_restore 7
 2569              		.cfi_def_cfa_offset 0
 2570 003a 7047     		bx	lr
 2571              		.cfi_endproc
 2572              	.LFE142:
 2574              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 2575              		.align	1
 2576              		.global	CAN_GetFlagStatus
 2577              		.syntax unified
 2578              		.thumb
 2579              		.thumb_func
 2581              	CAN_GetFlagStatus:
 2582              	.LFB143:
1452:./Library/stm32f4xx_can.c **** /**
1453:./Library/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1454:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1455:./Library/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1456:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1457:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1458:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1459:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1460:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1461:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1462:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1463:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1464:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1465:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1466:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1467:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1468:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1469:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1470:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1471:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag
1472:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1473:./Library/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1474:./Library/stm32f4xx_can.c ****   */
1475:./Library/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1476:./Library/stm32f4xx_can.c **** {
 2583              		.loc 1 1476 1
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 16
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587              		@ link register save eliminated.
 2588 0000 80B4     		push	{r7}
 2589              	.LCFI119:
 2590              		.cfi_def_cfa_offset 4
 2591              		.cfi_offset 7, -4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 73


 2592 0002 85B0     		sub	sp, sp, #20
 2593              	.LCFI120:
 2594              		.cfi_def_cfa_offset 24
 2595 0004 00AF     		add	r7, sp, #0
 2596              	.LCFI121:
 2597              		.cfi_def_cfa_register 7
 2598 0006 7860     		str	r0, [r7, #4]
 2599 0008 3960     		str	r1, [r7]
1477:./Library/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2600              		.loc 1 1477 14
 2601 000a 0023     		movs	r3, #0
 2602 000c FB73     		strb	r3, [r7, #15]
1478:./Library/stm32f4xx_can.c ****   
1479:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1480:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1481:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1482:./Library/stm32f4xx_can.c ****   
1483:./Library/stm32f4xx_can.c **** 
1484:./Library/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2603              		.loc 1 1484 16
 2604 000e 3B68     		ldr	r3, [r7]
 2605 0010 03F47003 		and	r3, r3, #15728640
 2606              		.loc 1 1484 5
 2607 0014 002B     		cmp	r3, #0
 2608 0016 0DD0     		beq	.L139
1485:./Library/stm32f4xx_can.c ****   { 
1486:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1487:./Library/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2609              		.loc 1 1487 14
 2610 0018 7B68     		ldr	r3, [r7, #4]
 2611 001a 9A69     		ldr	r2, [r3, #24]
 2612              		.loc 1 1487 20
 2613 001c 3B68     		ldr	r3, [r7]
 2614 001e 1340     		ands	r3, r3, r2
 2615 0020 C3F31303 		ubfx	r3, r3, #0, #20
 2616              		.loc 1 1487 8
 2617 0024 002B     		cmp	r3, #0
 2618 0026 02D0     		beq	.L140
1488:./Library/stm32f4xx_can.c ****     { 
1489:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1490:./Library/stm32f4xx_can.c ****       bitstatus = SET;
 2619              		.loc 1 1490 17
 2620 0028 0123     		movs	r3, #1
 2621 002a FB73     		strb	r3, [r7, #15]
 2622 002c 48E0     		b	.L141
 2623              	.L140:
1491:./Library/stm32f4xx_can.c ****     }
1492:./Library/stm32f4xx_can.c ****     else
1493:./Library/stm32f4xx_can.c ****     { 
1494:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1495:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
 2624              		.loc 1 1495 17
 2625 002e 0023     		movs	r3, #0
 2626 0030 FB73     		strb	r3, [r7, #15]
 2627 0032 45E0     		b	.L141
 2628              	.L139:
1496:./Library/stm32f4xx_can.c ****     }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 74


1497:./Library/stm32f4xx_can.c ****   }
1498:./Library/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2629              		.loc 1 1498 21
 2630 0034 3B68     		ldr	r3, [r7]
 2631 0036 03F08073 		and	r3, r3, #16777216
 2632              		.loc 1 1498 10
 2633 003a 002B     		cmp	r3, #0
 2634 003c 0DD0     		beq	.L142
1499:./Library/stm32f4xx_can.c ****   { 
1500:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1501:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2635              		.loc 1 1501 14
 2636 003e 7B68     		ldr	r3, [r7, #4]
 2637 0040 5A68     		ldr	r2, [r3, #4]
 2638              		.loc 1 1501 20
 2639 0042 3B68     		ldr	r3, [r7]
 2640 0044 1340     		ands	r3, r3, r2
 2641 0046 C3F31303 		ubfx	r3, r3, #0, #20
 2642              		.loc 1 1501 8
 2643 004a 002B     		cmp	r3, #0
 2644 004c 02D0     		beq	.L143
1502:./Library/stm32f4xx_can.c ****     { 
1503:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1504:./Library/stm32f4xx_can.c ****       bitstatus = SET;
 2645              		.loc 1 1504 17
 2646 004e 0123     		movs	r3, #1
 2647 0050 FB73     		strb	r3, [r7, #15]
 2648 0052 35E0     		b	.L141
 2649              	.L143:
1505:./Library/stm32f4xx_can.c ****     }
1506:./Library/stm32f4xx_can.c ****     else
1507:./Library/stm32f4xx_can.c ****     { 
1508:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1509:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
 2650              		.loc 1 1509 17
 2651 0054 0023     		movs	r3, #0
 2652 0056 FB73     		strb	r3, [r7, #15]
 2653 0058 32E0     		b	.L141
 2654              	.L142:
1510:./Library/stm32f4xx_can.c ****     }
1511:./Library/stm32f4xx_can.c ****   }
1512:./Library/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2655              		.loc 1 1512 21
 2656 005a 3B68     		ldr	r3, [r7]
 2657 005c 03F00063 		and	r3, r3, #134217728
 2658              		.loc 1 1512 10
 2659 0060 002B     		cmp	r3, #0
 2660 0062 0DD0     		beq	.L144
1513:./Library/stm32f4xx_can.c ****   { 
1514:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1515:./Library/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2661              		.loc 1 1515 14
 2662 0064 7B68     		ldr	r3, [r7, #4]
 2663 0066 9A68     		ldr	r2, [r3, #8]
 2664              		.loc 1 1515 20
 2665 0068 3B68     		ldr	r3, [r7]
 2666 006a 1340     		ands	r3, r3, r2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 75


 2667 006c C3F31303 		ubfx	r3, r3, #0, #20
 2668              		.loc 1 1515 8
 2669 0070 002B     		cmp	r3, #0
 2670 0072 02D0     		beq	.L145
1516:./Library/stm32f4xx_can.c ****     { 
1517:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1518:./Library/stm32f4xx_can.c ****       bitstatus = SET;
 2671              		.loc 1 1518 17
 2672 0074 0123     		movs	r3, #1
 2673 0076 FB73     		strb	r3, [r7, #15]
 2674 0078 22E0     		b	.L141
 2675              	.L145:
1519:./Library/stm32f4xx_can.c ****     }
1520:./Library/stm32f4xx_can.c ****     else
1521:./Library/stm32f4xx_can.c ****     { 
1522:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1523:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
 2676              		.loc 1 1523 17
 2677 007a 0023     		movs	r3, #0
 2678 007c FB73     		strb	r3, [r7, #15]
 2679 007e 1FE0     		b	.L141
 2680              	.L144:
1524:./Library/stm32f4xx_can.c ****     }
1525:./Library/stm32f4xx_can.c ****   }
1526:./Library/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2681              		.loc 1 1526 21
 2682 0080 3B68     		ldr	r3, [r7]
 2683 0082 03F00073 		and	r3, r3, #33554432
 2684              		.loc 1 1526 10
 2685 0086 002B     		cmp	r3, #0
 2686 0088 0DD0     		beq	.L146
1527:./Library/stm32f4xx_can.c ****   { 
1528:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1529:./Library/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2687              		.loc 1 1529 14
 2688 008a 7B68     		ldr	r3, [r7, #4]
 2689 008c DA68     		ldr	r2, [r3, #12]
 2690              		.loc 1 1529 21
 2691 008e 3B68     		ldr	r3, [r7]
 2692 0090 1340     		ands	r3, r3, r2
 2693 0092 C3F31303 		ubfx	r3, r3, #0, #20
 2694              		.loc 1 1529 8
 2695 0096 002B     		cmp	r3, #0
 2696 0098 02D0     		beq	.L147
1530:./Library/stm32f4xx_can.c ****     { 
1531:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1532:./Library/stm32f4xx_can.c ****       bitstatus = SET;
 2697              		.loc 1 1532 17
 2698 009a 0123     		movs	r3, #1
 2699 009c FB73     		strb	r3, [r7, #15]
 2700 009e 0FE0     		b	.L141
 2701              	.L147:
1533:./Library/stm32f4xx_can.c ****     }
1534:./Library/stm32f4xx_can.c ****     else
1535:./Library/stm32f4xx_can.c ****     { 
1536:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1537:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 76


 2702              		.loc 1 1537 17
 2703 00a0 0023     		movs	r3, #0
 2704 00a2 FB73     		strb	r3, [r7, #15]
 2705 00a4 0CE0     		b	.L141
 2706              	.L146:
1538:./Library/stm32f4xx_can.c ****     }
1539:./Library/stm32f4xx_can.c ****   }
1540:./Library/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1541:./Library/stm32f4xx_can.c ****   { 
1542:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1543:./Library/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2707              		.loc 1 1543 24
 2708 00a6 7B68     		ldr	r3, [r7, #4]
 2709 00a8 1A69     		ldr	r2, [r3, #16]
 2710              		.loc 1 1543 9
 2711 00aa 3B68     		ldr	r3, [r7]
 2712 00ac 1340     		ands	r3, r3, r2
 2713 00ae C3F31303 		ubfx	r3, r3, #0, #20
 2714              		.loc 1 1543 8
 2715 00b2 002B     		cmp	r3, #0
 2716 00b4 02D0     		beq	.L148
1544:./Library/stm32f4xx_can.c ****     { 
1545:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1546:./Library/stm32f4xx_can.c ****       bitstatus = SET;
 2717              		.loc 1 1546 17
 2718 00b6 0123     		movs	r3, #1
 2719 00b8 FB73     		strb	r3, [r7, #15]
 2720 00ba 01E0     		b	.L141
 2721              	.L148:
1547:./Library/stm32f4xx_can.c ****     }
1548:./Library/stm32f4xx_can.c ****     else
1549:./Library/stm32f4xx_can.c ****     { 
1550:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1551:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
 2722              		.loc 1 1551 17
 2723 00bc 0023     		movs	r3, #0
 2724 00be FB73     		strb	r3, [r7, #15]
 2725              	.L141:
1552:./Library/stm32f4xx_can.c ****     }
1553:./Library/stm32f4xx_can.c ****   }
1554:./Library/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1555:./Library/stm32f4xx_can.c ****   return  bitstatus;
 2726              		.loc 1 1555 11
 2727 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1556:./Library/stm32f4xx_can.c **** }
 2728              		.loc 1 1556 1
 2729 00c2 1846     		mov	r0, r3
 2730 00c4 1437     		adds	r7, r7, #20
 2731              	.LCFI122:
 2732              		.cfi_def_cfa_offset 4
 2733 00c6 BD46     		mov	sp, r7
 2734              	.LCFI123:
 2735              		.cfi_def_cfa_register 13
 2736              		@ sp needed
 2737 00c8 5DF8047B 		ldr	r7, [sp], #4
 2738              	.LCFI124:
 2739              		.cfi_restore 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 77


 2740              		.cfi_def_cfa_offset 0
 2741 00cc 7047     		bx	lr
 2742              		.cfi_endproc
 2743              	.LFE143:
 2745              		.section	.text.CAN_ClearFlag,"ax",%progbits
 2746              		.align	1
 2747              		.global	CAN_ClearFlag
 2748              		.syntax unified
 2749              		.thumb
 2750              		.thumb_func
 2752              	CAN_ClearFlag:
 2753              	.LFB144:
1557:./Library/stm32f4xx_can.c **** 
1558:./Library/stm32f4xx_can.c **** /**
1559:./Library/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1560:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1561:./Library/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1562:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1563:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1564:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1565:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1566:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1567:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1568:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1569:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1570:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1571:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1572:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag
1573:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1574:./Library/stm32f4xx_can.c ****   * @retval None
1575:./Library/stm32f4xx_can.c ****   */
1576:./Library/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1577:./Library/stm32f4xx_can.c **** {
 2754              		.loc 1 1577 1
 2755              		.cfi_startproc
 2756              		@ args = 0, pretend = 0, frame = 16
 2757              		@ frame_needed = 1, uses_anonymous_args = 0
 2758              		@ link register save eliminated.
 2759 0000 80B4     		push	{r7}
 2760              	.LCFI125:
 2761              		.cfi_def_cfa_offset 4
 2762              		.cfi_offset 7, -4
 2763 0002 85B0     		sub	sp, sp, #20
 2764              	.LCFI126:
 2765              		.cfi_def_cfa_offset 24
 2766 0004 00AF     		add	r7, sp, #0
 2767              	.LCFI127:
 2768              		.cfi_def_cfa_register 7
 2769 0006 7860     		str	r0, [r7, #4]
 2770 0008 3960     		str	r1, [r7]
1578:./Library/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2771              		.loc 1 1578 12
 2772 000a 0023     		movs	r3, #0
 2773 000c FB60     		str	r3, [r7, #12]
1579:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1580:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1581:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 78


1582:./Library/stm32f4xx_can.c ****   
1583:./Library/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2774              		.loc 1 1583 6
 2775 000e 3B68     		ldr	r3, [r7]
 2776 0010 174A     		ldr	r2, .L157
 2777 0012 9342     		cmp	r3, r2
 2778 0014 03D1     		bne	.L151
1584:./Library/stm32f4xx_can.c ****   {
1585:./Library/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1586:./Library/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2779              		.loc 1 1586 15
 2780 0016 7B68     		ldr	r3, [r7, #4]
 2781 0018 0022     		movs	r2, #0
 2782 001a 9A61     		str	r2, [r3, #24]
1587:./Library/stm32f4xx_can.c ****   }
1588:./Library/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1589:./Library/stm32f4xx_can.c ****   {
1590:./Library/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
1591:./Library/stm32f4xx_can.c **** 
1592:./Library/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
1593:./Library/stm32f4xx_can.c ****     {
1594:./Library/stm32f4xx_can.c ****       /* Receive Flags */
1595:./Library/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
1596:./Library/stm32f4xx_can.c ****     }
1597:./Library/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
1598:./Library/stm32f4xx_can.c ****     {
1599:./Library/stm32f4xx_can.c ****       /* Receive Flags */
1600:./Library/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
1601:./Library/stm32f4xx_can.c ****     }
1602:./Library/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
1603:./Library/stm32f4xx_can.c ****     {
1604:./Library/stm32f4xx_can.c ****       /* Transmit Flags */
1605:./Library/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
1606:./Library/stm32f4xx_can.c ****     }
1607:./Library/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1608:./Library/stm32f4xx_can.c ****     {
1609:./Library/stm32f4xx_can.c ****       /* Operating mode Flags */
1610:./Library/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
1611:./Library/stm32f4xx_can.c ****     }
1612:./Library/stm32f4xx_can.c ****   }
1613:./Library/stm32f4xx_can.c **** }
 2783              		.loc 1 1613 1
 2784 001c 21E0     		b	.L156
 2785              	.L151:
1590:./Library/stm32f4xx_can.c **** 
 2786              		.loc 1 1590 13
 2787 001e 3B68     		ldr	r3, [r7]
 2788 0020 C3F31303 		ubfx	r3, r3, #0, #20
 2789 0024 FB60     		str	r3, [r7, #12]
1592:./Library/stm32f4xx_can.c ****     {
 2790              		.loc 1 1592 19
 2791 0026 3B68     		ldr	r3, [r7]
 2792 0028 03F00073 		and	r3, r3, #33554432
1592:./Library/stm32f4xx_can.c ****     {
 2793              		.loc 1 1592 8
 2794 002c 002B     		cmp	r3, #0
 2795 002e 03D0     		beq	.L153
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 79


1595:./Library/stm32f4xx_can.c ****     }
 2796              		.loc 1 1595 18
 2797 0030 7B68     		ldr	r3, [r7, #4]
 2798 0032 FA68     		ldr	r2, [r7, #12]
 2799 0034 DA60     		str	r2, [r3, #12]
 2800              		.loc 1 1613 1
 2801 0036 14E0     		b	.L156
 2802              	.L153:
1597:./Library/stm32f4xx_can.c ****     {
 2803              		.loc 1 1597 24
 2804 0038 3B68     		ldr	r3, [r7]
 2805 003a 03F08063 		and	r3, r3, #67108864
1597:./Library/stm32f4xx_can.c ****     {
 2806              		.loc 1 1597 13
 2807 003e 002B     		cmp	r3, #0
 2808 0040 03D0     		beq	.L154
1600:./Library/stm32f4xx_can.c ****     }
 2809              		.loc 1 1600 18
 2810 0042 7B68     		ldr	r3, [r7, #4]
 2811 0044 FA68     		ldr	r2, [r7, #12]
 2812 0046 1A61     		str	r2, [r3, #16]
 2813              		.loc 1 1613 1
 2814 0048 0BE0     		b	.L156
 2815              	.L154:
1602:./Library/stm32f4xx_can.c ****     {
 2816              		.loc 1 1602 24
 2817 004a 3B68     		ldr	r3, [r7]
 2818 004c 03F00063 		and	r3, r3, #134217728
1602:./Library/stm32f4xx_can.c ****     {
 2819              		.loc 1 1602 13
 2820 0050 002B     		cmp	r3, #0
 2821 0052 03D0     		beq	.L155
1605:./Library/stm32f4xx_can.c ****     }
 2822              		.loc 1 1605 17
 2823 0054 7B68     		ldr	r3, [r7, #4]
 2824 0056 FA68     		ldr	r2, [r7, #12]
 2825 0058 9A60     		str	r2, [r3, #8]
 2826              		.loc 1 1613 1
 2827 005a 02E0     		b	.L156
 2828              	.L155:
1610:./Library/stm32f4xx_can.c ****     }
 2829              		.loc 1 1610 17
 2830 005c 7B68     		ldr	r3, [r7, #4]
 2831 005e FA68     		ldr	r2, [r7, #12]
 2832 0060 5A60     		str	r2, [r3, #4]
 2833              	.L156:
 2834              		.loc 1 1613 1
 2835 0062 00BF     		nop
 2836 0064 1437     		adds	r7, r7, #20
 2837              	.LCFI128:
 2838              		.cfi_def_cfa_offset 4
 2839 0066 BD46     		mov	sp, r7
 2840              	.LCFI129:
 2841              		.cfi_def_cfa_register 13
 2842              		@ sp needed
 2843 0068 5DF8047B 		ldr	r7, [sp], #4
 2844              	.LCFI130:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 80


 2845              		.cfi_restore 7
 2846              		.cfi_def_cfa_offset 0
 2847 006c 7047     		bx	lr
 2848              	.L158:
 2849 006e 00BF     		.align	2
 2850              	.L157:
 2851 0070 7000F030 		.word	821035120
 2852              		.cfi_endproc
 2853              	.LFE144:
 2855              		.section	.text.CAN_GetITStatus,"ax",%progbits
 2856              		.align	1
 2857              		.global	CAN_GetITStatus
 2858              		.syntax unified
 2859              		.thumb
 2860              		.thumb_func
 2862              	CAN_GetITStatus:
 2863              	.LFB145:
1614:./Library/stm32f4xx_can.c **** 
1615:./Library/stm32f4xx_can.c **** /**
1616:./Library/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1617:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1618:./Library/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1619:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1620:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1621:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1622:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1623:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1624:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1625:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1626:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1627:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1628:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1629:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1630:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1631:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1632:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1633:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1634:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1635:./Library/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1636:./Library/stm32f4xx_can.c ****   */
1637:./Library/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1638:./Library/stm32f4xx_can.c **** {
 2864              		.loc 1 1638 1
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 16
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868 0000 80B5     		push	{r7, lr}
 2869              	.LCFI131:
 2870              		.cfi_def_cfa_offset 8
 2871              		.cfi_offset 7, -8
 2872              		.cfi_offset 14, -4
 2873 0002 84B0     		sub	sp, sp, #16
 2874              	.LCFI132:
 2875              		.cfi_def_cfa_offset 24
 2876 0004 00AF     		add	r7, sp, #0
 2877              	.LCFI133:
 2878              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 81


 2879 0006 7860     		str	r0, [r7, #4]
 2880 0008 3960     		str	r1, [r7]
1639:./Library/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2881              		.loc 1 1639 12
 2882 000a 0023     		movs	r3, #0
 2883 000c FB73     		strb	r3, [r7, #15]
1640:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1641:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1642:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1643:./Library/stm32f4xx_can.c ****   
1644:./Library/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1645:./Library/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2884              		.loc 1 1645 10
 2885 000e 7B68     		ldr	r3, [r7, #4]
 2886 0010 5A69     		ldr	r2, [r3, #20]
 2887              		.loc 1 1645 16
 2888 0012 3B68     		ldr	r3, [r7]
 2889 0014 1340     		ands	r3, r3, r2
 2890              		.loc 1 1645 4
 2891 0016 002B     		cmp	r3, #0
 2892 0018 00F01B81 		beq	.L160
1646:./Library/stm32f4xx_can.c ****  {
1647:./Library/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1648:./Library/stm32f4xx_can.c ****     switch (CAN_IT)
 2893              		.loc 1 1648 5
 2894 001c 3B68     		ldr	r3, [r7]
 2895 001e B3F5003F 		cmp	r3, #131072
 2896 0022 00F0DD80 		beq	.L161
 2897 0026 3B68     		ldr	r3, [r7]
 2898 0028 B3F5003F 		cmp	r3, #131072
 2899 002c 00F20E81 		bhi	.L162
 2900 0030 3B68     		ldr	r3, [r7]
 2901 0032 B3F5803F 		cmp	r3, #65536
 2902 0036 00F0CA80 		beq	.L163
 2903 003a 3B68     		ldr	r3, [r7]
 2904 003c B3F5803F 		cmp	r3, #65536
 2905 0040 00F20481 		bhi	.L162
 2906 0044 3B68     		ldr	r3, [r7]
 2907 0046 B3F5004F 		cmp	r3, #32768
 2908 004a 00F0F680 		beq	.L164
 2909 004e 3B68     		ldr	r3, [r7]
 2910 0050 B3F5004F 		cmp	r3, #32768
 2911 0054 00F2FA80 		bhi	.L162
 2912 0058 3B68     		ldr	r3, [r7]
 2913 005a B3F5006F 		cmp	r3, #2048
 2914 005e 00F0E380 		beq	.L165
 2915 0062 3B68     		ldr	r3, [r7]
 2916 0064 B3F5006F 		cmp	r3, #2048
 2917 0068 00F2F080 		bhi	.L162
 2918 006c 3B68     		ldr	r3, [r7]
 2919 006e B3F5806F 		cmp	r3, #1024
 2920 0072 00F0D080 		beq	.L166
 2921 0076 3B68     		ldr	r3, [r7]
 2922 0078 B3F5806F 		cmp	r3, #1024
 2923 007c 00F2E680 		bhi	.L162
 2924 0080 3B68     		ldr	r3, [r7]
 2925 0082 B3F5007F 		cmp	r3, #512
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 82


 2926 0086 00F0BD80 		beq	.L167
 2927 008a 3B68     		ldr	r3, [r7]
 2928 008c B3F5007F 		cmp	r3, #512
 2929 0090 00F2DC80 		bhi	.L162
 2930 0094 3B68     		ldr	r3, [r7]
 2931 0096 B3F5807F 		cmp	r3, #256
 2932 009a 00F0AA80 		beq	.L168
 2933 009e 3B68     		ldr	r3, [r7]
 2934 00a0 B3F5807F 		cmp	r3, #256
 2935 00a4 00F2D280 		bhi	.L162
 2936 00a8 3B68     		ldr	r3, [r7]
 2937 00aa 202B     		cmp	r3, #32
 2938 00ac 4CD8     		bhi	.L169
 2939 00ae 3B68     		ldr	r3, [r7]
 2940 00b0 002B     		cmp	r3, #0
 2941 00b2 00F0CB80 		beq	.L162
 2942 00b6 3B68     		ldr	r3, [r7]
 2943 00b8 013B     		subs	r3, r3, #1
 2944 00ba 1F2B     		cmp	r3, #31
 2945 00bc 00F2C680 		bhi	.L162
 2946 00c0 01A2     		adr	r2, .L171
 2947 00c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2948 00c6 00BF     		.p2align 2
 2949              	.L171:
 2950 00c8 51010000 		.word	.L176+1
 2951 00cc 63010000 		.word	.L175+1
 2952 00d0 4D020000 		.word	.L162+1
 2953 00d4 75010000 		.word	.L174+1
 2954 00d8 4D020000 		.word	.L162+1
 2955 00dc 4D020000 		.word	.L162+1
 2956 00e0 4D020000 		.word	.L162+1
 2957 00e4 87010000 		.word	.L173+1
 2958 00e8 4D020000 		.word	.L162+1
 2959 00ec 4D020000 		.word	.L162+1
 2960 00f0 4D020000 		.word	.L162+1
 2961 00f4 4D020000 		.word	.L162+1
 2962 00f8 4D020000 		.word	.L162+1
 2963 00fc 4D020000 		.word	.L162+1
 2964 0100 4D020000 		.word	.L162+1
 2965 0104 99010000 		.word	.L172+1
 2966 0108 4D020000 		.word	.L162+1
 2967 010c 4D020000 		.word	.L162+1
 2968 0110 4D020000 		.word	.L162+1
 2969 0114 4D020000 		.word	.L162+1
 2970 0118 4D020000 		.word	.L162+1
 2971 011c 4D020000 		.word	.L162+1
 2972 0120 4D020000 		.word	.L162+1
 2973 0124 4D020000 		.word	.L162+1
 2974 0128 4D020000 		.word	.L162+1
 2975 012c 4D020000 		.word	.L162+1
 2976 0130 4D020000 		.word	.L162+1
 2977 0134 4D020000 		.word	.L162+1
 2978 0138 4D020000 		.word	.L162+1
 2979 013c 4D020000 		.word	.L162+1
 2980 0140 4D020000 		.word	.L162+1
 2981 0144 AB010000 		.word	.L170+1
 2982              		.p2align 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 83


 2983              	.L169:
 2984 0148 3B68     		ldr	r3, [r7]
 2985 014a 402B     		cmp	r3, #64
 2986 014c 36D0     		beq	.L177
 2987 014e 7DE0     		b	.L162
 2988              	.L176:
1649:./Library/stm32f4xx_can.c ****     {
1650:./Library/stm32f4xx_can.c ****       case CAN_IT_TME:
1651:./Library/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1652:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2989              		.loc 1 1652 20
 2990 0150 7B68     		ldr	r3, [r7, #4]
 2991 0152 9B68     		ldr	r3, [r3, #8]
 2992 0154 4249     		ldr	r1, .L181
 2993 0156 1846     		mov	r0, r3
 2994 0158 FFF7FEFF 		bl	CheckITStatus
 2995 015c 0346     		mov	r3, r0
 2996 015e FB73     		strb	r3, [r7, #15]
1653:./Library/stm32f4xx_can.c ****         break;
 2997              		.loc 1 1653 9
 2998 0160 79E0     		b	.L179
 2999              	.L175:
1654:./Library/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1655:./Library/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1656:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 3000              		.loc 1 1656 20
 3001 0162 7B68     		ldr	r3, [r7, #4]
 3002 0164 DB68     		ldr	r3, [r3, #12]
 3003 0166 0321     		movs	r1, #3
 3004 0168 1846     		mov	r0, r3
 3005 016a FFF7FEFF 		bl	CheckITStatus
 3006 016e 0346     		mov	r3, r0
 3007 0170 FB73     		strb	r3, [r7, #15]
1657:./Library/stm32f4xx_can.c ****         break;
 3008              		.loc 1 1657 9
 3009 0172 70E0     		b	.L179
 3010              	.L174:
1658:./Library/stm32f4xx_can.c ****       case CAN_IT_FF0:
1659:./Library/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1660:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 3011              		.loc 1 1660 20
 3012 0174 7B68     		ldr	r3, [r7, #4]
 3013 0176 DB68     		ldr	r3, [r3, #12]
 3014 0178 0821     		movs	r1, #8
 3015 017a 1846     		mov	r0, r3
 3016 017c FFF7FEFF 		bl	CheckITStatus
 3017 0180 0346     		mov	r3, r0
 3018 0182 FB73     		strb	r3, [r7, #15]
1661:./Library/stm32f4xx_can.c ****         break;
 3019              		.loc 1 1661 9
 3020 0184 67E0     		b	.L179
 3021              	.L173:
1662:./Library/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1663:./Library/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1664:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 3022              		.loc 1 1664 20
 3023 0186 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 84


 3024 0188 DB68     		ldr	r3, [r3, #12]
 3025 018a 1021     		movs	r1, #16
 3026 018c 1846     		mov	r0, r3
 3027 018e FFF7FEFF 		bl	CheckITStatus
 3028 0192 0346     		mov	r3, r0
 3029 0194 FB73     		strb	r3, [r7, #15]
1665:./Library/stm32f4xx_can.c ****         break;
 3030              		.loc 1 1665 9
 3031 0196 5EE0     		b	.L179
 3032              	.L172:
1666:./Library/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1667:./Library/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1668:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 3033              		.loc 1 1668 20
 3034 0198 7B68     		ldr	r3, [r7, #4]
 3035 019a 1B69     		ldr	r3, [r3, #16]
 3036 019c 0321     		movs	r1, #3
 3037 019e 1846     		mov	r0, r3
 3038 01a0 FFF7FEFF 		bl	CheckITStatus
 3039 01a4 0346     		mov	r3, r0
 3040 01a6 FB73     		strb	r3, [r7, #15]
1669:./Library/stm32f4xx_can.c ****         break;
 3041              		.loc 1 1669 9
 3042 01a8 55E0     		b	.L179
 3043              	.L170:
1670:./Library/stm32f4xx_can.c ****       case CAN_IT_FF1:
1671:./Library/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1672:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 3044              		.loc 1 1672 20
 3045 01aa 7B68     		ldr	r3, [r7, #4]
 3046 01ac 1B69     		ldr	r3, [r3, #16]
 3047 01ae 0821     		movs	r1, #8
 3048 01b0 1846     		mov	r0, r3
 3049 01b2 FFF7FEFF 		bl	CheckITStatus
 3050 01b6 0346     		mov	r3, r0
 3051 01b8 FB73     		strb	r3, [r7, #15]
1673:./Library/stm32f4xx_can.c ****         break;
 3052              		.loc 1 1673 9
 3053 01ba 4CE0     		b	.L179
 3054              	.L177:
1674:./Library/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1675:./Library/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1676:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 3055              		.loc 1 1676 20
 3056 01bc 7B68     		ldr	r3, [r7, #4]
 3057 01be 1B69     		ldr	r3, [r3, #16]
 3058 01c0 1021     		movs	r1, #16
 3059 01c2 1846     		mov	r0, r3
 3060 01c4 FFF7FEFF 		bl	CheckITStatus
 3061 01c8 0346     		mov	r3, r0
 3062 01ca FB73     		strb	r3, [r7, #15]
1677:./Library/stm32f4xx_can.c ****         break;
 3063              		.loc 1 1677 9
 3064 01cc 43E0     		b	.L179
 3065              	.L163:
1678:./Library/stm32f4xx_can.c ****       case CAN_IT_WKU:
1679:./Library/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 85


1680:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 3066              		.loc 1 1680 20
 3067 01ce 7B68     		ldr	r3, [r7, #4]
 3068 01d0 5B68     		ldr	r3, [r3, #4]
 3069 01d2 0821     		movs	r1, #8
 3070 01d4 1846     		mov	r0, r3
 3071 01d6 FFF7FEFF 		bl	CheckITStatus
 3072 01da 0346     		mov	r3, r0
 3073 01dc FB73     		strb	r3, [r7, #15]
1681:./Library/stm32f4xx_can.c ****         break;
 3074              		.loc 1 1681 9
 3075 01de 3AE0     		b	.L179
 3076              	.L161:
1682:./Library/stm32f4xx_can.c ****       case CAN_IT_SLK:
1683:./Library/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1684:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 3077              		.loc 1 1684 20
 3078 01e0 7B68     		ldr	r3, [r7, #4]
 3079 01e2 5B68     		ldr	r3, [r3, #4]
 3080 01e4 1021     		movs	r1, #16
 3081 01e6 1846     		mov	r0, r3
 3082 01e8 FFF7FEFF 		bl	CheckITStatus
 3083 01ec 0346     		mov	r3, r0
 3084 01ee FB73     		strb	r3, [r7, #15]
1685:./Library/stm32f4xx_can.c ****         break;
 3085              		.loc 1 1685 9
 3086 01f0 31E0     		b	.L179
 3087              	.L168:
1686:./Library/stm32f4xx_can.c ****       case CAN_IT_EWG:
1687:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1688:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 3088              		.loc 1 1688 20
 3089 01f2 7B68     		ldr	r3, [r7, #4]
 3090 01f4 9B69     		ldr	r3, [r3, #24]
 3091 01f6 0121     		movs	r1, #1
 3092 01f8 1846     		mov	r0, r3
 3093 01fa FFF7FEFF 		bl	CheckITStatus
 3094 01fe 0346     		mov	r3, r0
 3095 0200 FB73     		strb	r3, [r7, #15]
1689:./Library/stm32f4xx_can.c ****         break;
 3096              		.loc 1 1689 9
 3097 0202 28E0     		b	.L179
 3098              	.L167:
1690:./Library/stm32f4xx_can.c ****       case CAN_IT_EPV:
1691:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1692:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 3099              		.loc 1 1692 20
 3100 0204 7B68     		ldr	r3, [r7, #4]
 3101 0206 9B69     		ldr	r3, [r3, #24]
 3102 0208 0221     		movs	r1, #2
 3103 020a 1846     		mov	r0, r3
 3104 020c FFF7FEFF 		bl	CheckITStatus
 3105 0210 0346     		mov	r3, r0
 3106 0212 FB73     		strb	r3, [r7, #15]
1693:./Library/stm32f4xx_can.c ****         break;
 3107              		.loc 1 1693 9
 3108 0214 1FE0     		b	.L179
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 86


 3109              	.L166:
1694:./Library/stm32f4xx_can.c ****       case CAN_IT_BOF:
1695:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1696:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 3110              		.loc 1 1696 20
 3111 0216 7B68     		ldr	r3, [r7, #4]
 3112 0218 9B69     		ldr	r3, [r3, #24]
 3113 021a 0421     		movs	r1, #4
 3114 021c 1846     		mov	r0, r3
 3115 021e FFF7FEFF 		bl	CheckITStatus
 3116 0222 0346     		mov	r3, r0
 3117 0224 FB73     		strb	r3, [r7, #15]
1697:./Library/stm32f4xx_can.c ****         break;
 3118              		.loc 1 1697 9
 3119 0226 16E0     		b	.L179
 3120              	.L165:
1698:./Library/stm32f4xx_can.c ****       case CAN_IT_LEC:
1699:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1700:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 3121              		.loc 1 1700 20
 3122 0228 7B68     		ldr	r3, [r7, #4]
 3123 022a 9B69     		ldr	r3, [r3, #24]
 3124 022c 7021     		movs	r1, #112
 3125 022e 1846     		mov	r0, r3
 3126 0230 FFF7FEFF 		bl	CheckITStatus
 3127 0234 0346     		mov	r3, r0
 3128 0236 FB73     		strb	r3, [r7, #15]
1701:./Library/stm32f4xx_can.c ****         break;
 3129              		.loc 1 1701 9
 3130 0238 0DE0     		b	.L179
 3131              	.L164:
1702:./Library/stm32f4xx_can.c ****       case CAN_IT_ERR:
1703:./Library/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1704:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 3132              		.loc 1 1704 20
 3133 023a 7B68     		ldr	r3, [r7, #4]
 3134 023c 5B68     		ldr	r3, [r3, #4]
 3135 023e 0421     		movs	r1, #4
 3136 0240 1846     		mov	r0, r3
 3137 0242 FFF7FEFF 		bl	CheckITStatus
 3138 0246 0346     		mov	r3, r0
 3139 0248 FB73     		strb	r3, [r7, #15]
1705:./Library/stm32f4xx_can.c ****         break;
 3140              		.loc 1 1705 9
 3141 024a 04E0     		b	.L179
 3142              	.L162:
1706:./Library/stm32f4xx_can.c ****       default:
1707:./Library/stm32f4xx_can.c ****         /* in case of error, return RESET */
1708:./Library/stm32f4xx_can.c ****         itstatus = RESET;
 3143              		.loc 1 1708 18
 3144 024c 0023     		movs	r3, #0
 3145 024e FB73     		strb	r3, [r7, #15]
1709:./Library/stm32f4xx_can.c ****         break;
 3146              		.loc 1 1709 9
 3147 0250 01E0     		b	.L179
 3148              	.L160:
1710:./Library/stm32f4xx_can.c ****     }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 87


1711:./Library/stm32f4xx_can.c ****   }
1712:./Library/stm32f4xx_can.c ****   else
1713:./Library/stm32f4xx_can.c ****   {
1714:./Library/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1715:./Library/stm32f4xx_can.c ****     itstatus  = RESET;
 3149              		.loc 1 1715 15
 3150 0252 0023     		movs	r3, #0
 3151 0254 FB73     		strb	r3, [r7, #15]
 3152              	.L179:
1716:./Library/stm32f4xx_can.c ****   }
1717:./Library/stm32f4xx_can.c ****   
1718:./Library/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1719:./Library/stm32f4xx_can.c ****   return  itstatus;
 3153              		.loc 1 1719 11
 3154 0256 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1720:./Library/stm32f4xx_can.c **** }
 3155              		.loc 1 1720 1
 3156 0258 1846     		mov	r0, r3
 3157 025a 1037     		adds	r7, r7, #16
 3158              	.LCFI134:
 3159              		.cfi_def_cfa_offset 8
 3160 025c BD46     		mov	sp, r7
 3161              	.LCFI135:
 3162              		.cfi_def_cfa_register 13
 3163              		@ sp needed
 3164 025e 80BD     		pop	{r7, pc}
 3165              	.L182:
 3166              		.align	2
 3167              	.L181:
 3168 0260 01010100 		.word	65793
 3169              		.cfi_endproc
 3170              	.LFE145:
 3172              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 3173              		.align	1
 3174              		.global	CAN_ClearITPendingBit
 3175              		.syntax unified
 3176              		.thumb
 3177              		.thumb_func
 3179              	CAN_ClearITPendingBit:
 3180              	.LFB146:
1721:./Library/stm32f4xx_can.c **** 
1722:./Library/stm32f4xx_can.c **** /**
1723:./Library/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1724:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1725:./Library/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1726:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1727:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1728:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1729:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1730:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1731:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1732:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1733:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1734:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1735:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1736:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1737:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 88


1738:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1739:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1740:./Library/stm32f4xx_can.c ****   * @retval None
1741:./Library/stm32f4xx_can.c ****   */
1742:./Library/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1743:./Library/stm32f4xx_can.c **** {
 3181              		.loc 1 1743 1
 3182              		.cfi_startproc
 3183              		@ args = 0, pretend = 0, frame = 8
 3184              		@ frame_needed = 1, uses_anonymous_args = 0
 3185              		@ link register save eliminated.
 3186 0000 80B4     		push	{r7}
 3187              	.LCFI136:
 3188              		.cfi_def_cfa_offset 4
 3189              		.cfi_offset 7, -4
 3190 0002 83B0     		sub	sp, sp, #12
 3191              	.LCFI137:
 3192              		.cfi_def_cfa_offset 16
 3193 0004 00AF     		add	r7, sp, #0
 3194              	.LCFI138:
 3195              		.cfi_def_cfa_register 7
 3196 0006 7860     		str	r0, [r7, #4]
 3197 0008 3960     		str	r1, [r7]
1744:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1745:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1746:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1747:./Library/stm32f4xx_can.c **** 
1748:./Library/stm32f4xx_can.c ****   switch (CAN_IT)
 3198              		.loc 1 1748 3
 3199 000a 3B68     		ldr	r3, [r7]
 3200 000c B3F5003F 		cmp	r3, #131072
 3201 0010 00F0AA80 		beq	.L184
 3202 0014 3B68     		ldr	r3, [r7]
 3203 0016 B3F5003F 		cmp	r3, #131072
 3204 001a 00F2C380 		bhi	.L200
 3205 001e 3B68     		ldr	r3, [r7]
 3206 0020 B3F5803F 		cmp	r3, #65536
 3207 0024 00F09C80 		beq	.L186
 3208 0028 3B68     		ldr	r3, [r7]
 3209 002a B3F5803F 		cmp	r3, #65536
 3210 002e 00F2B980 		bhi	.L200
 3211 0032 3B68     		ldr	r3, [r7]
 3212 0034 B3F5004F 		cmp	r3, #32768
 3213 0038 00F0AD80 		beq	.L187
 3214 003c 3B68     		ldr	r3, [r7]
 3215 003e B3F5004F 		cmp	r3, #32768
 3216 0042 00F2AF80 		bhi	.L200
 3217 0046 3B68     		ldr	r3, [r7]
 3218 0048 B3F5006F 		cmp	r3, #2048
 3219 004c 00F09C80 		beq	.L188
 3220 0050 3B68     		ldr	r3, [r7]
 3221 0052 B3F5006F 		cmp	r3, #2048
 3222 0056 00F2A580 		bhi	.L200
 3223 005a 3B68     		ldr	r3, [r7]
 3224 005c B3F5806F 		cmp	r3, #1024
 3225 0060 00F08E80 		beq	.L189
 3226 0064 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 89


 3227 0066 B3F5806F 		cmp	r3, #1024
 3228 006a 00F29B80 		bhi	.L200
 3229 006e 3B68     		ldr	r3, [r7]
 3230 0070 B3F5007F 		cmp	r3, #512
 3231 0074 00F08080 		beq	.L190
 3232 0078 3B68     		ldr	r3, [r7]
 3233 007a B3F5007F 		cmp	r3, #512
 3234 007e 00F29180 		bhi	.L200
 3235 0082 3B68     		ldr	r3, [r7]
 3236 0084 B3F5807F 		cmp	r3, #256
 3237 0088 72D0     		beq	.L191
 3238 008a 3B68     		ldr	r3, [r7]
 3239 008c B3F5807F 		cmp	r3, #256
 3240 0090 00F28880 		bhi	.L200
 3241 0094 3B68     		ldr	r3, [r7]
 3242 0096 202B     		cmp	r3, #32
 3243 0098 4AD8     		bhi	.L192
 3244 009a 3B68     		ldr	r3, [r7]
 3245 009c 002B     		cmp	r3, #0
 3246 009e 00F08180 		beq	.L200
 3247 00a2 3B68     		ldr	r3, [r7]
 3248 00a4 013B     		subs	r3, r3, #1
 3249 00a6 1F2B     		cmp	r3, #31
 3250 00a8 7CD8     		bhi	.L200
 3251 00aa 01A2     		adr	r2, .L194
 3252 00ac 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3253              		.p2align 2
 3254              	.L194:
 3255 00b0 39010000 		.word	.L197+1
 3256 00b4 A5010000 		.word	.L200+1
 3257 00b8 A5010000 		.word	.L200+1
 3258 00bc 41010000 		.word	.L196+1
 3259 00c0 A5010000 		.word	.L200+1
 3260 00c4 A5010000 		.word	.L200+1
 3261 00c8 A5010000 		.word	.L200+1
 3262 00cc 49010000 		.word	.L195+1
 3263 00d0 A5010000 		.word	.L200+1
 3264 00d4 A5010000 		.word	.L200+1
 3265 00d8 A5010000 		.word	.L200+1
 3266 00dc A5010000 		.word	.L200+1
 3267 00e0 A5010000 		.word	.L200+1
 3268 00e4 A5010000 		.word	.L200+1
 3269 00e8 A5010000 		.word	.L200+1
 3270 00ec A5010000 		.word	.L200+1
 3271 00f0 A5010000 		.word	.L200+1
 3272 00f4 A5010000 		.word	.L200+1
 3273 00f8 A5010000 		.word	.L200+1
 3274 00fc A5010000 		.word	.L200+1
 3275 0100 A5010000 		.word	.L200+1
 3276 0104 A5010000 		.word	.L200+1
 3277 0108 A5010000 		.word	.L200+1
 3278 010c A5010000 		.word	.L200+1
 3279 0110 A5010000 		.word	.L200+1
 3280 0114 A5010000 		.word	.L200+1
 3281 0118 A5010000 		.word	.L200+1
 3282 011c A5010000 		.word	.L200+1
 3283 0120 A5010000 		.word	.L200+1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 90


 3284 0124 A5010000 		.word	.L200+1
 3285 0128 A5010000 		.word	.L200+1
 3286 012c 51010000 		.word	.L193+1
 3287              		.p2align 1
 3288              	.L192:
 3289 0130 3B68     		ldr	r3, [r7]
 3290 0132 402B     		cmp	r3, #64
 3291 0134 10D0     		beq	.L198
1749:./Library/stm32f4xx_can.c ****   {
1750:./Library/stm32f4xx_can.c ****     case CAN_IT_TME:
1751:./Library/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1752:./Library/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1753:./Library/stm32f4xx_can.c ****       break;
1754:./Library/stm32f4xx_can.c ****     case CAN_IT_FF0:
1755:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1756:./Library/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1757:./Library/stm32f4xx_can.c ****       break;
1758:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1759:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1760:./Library/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1761:./Library/stm32f4xx_can.c ****       break;
1762:./Library/stm32f4xx_can.c ****     case CAN_IT_FF1:
1763:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1764:./Library/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1765:./Library/stm32f4xx_can.c ****       break;
1766:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1767:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1768:./Library/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1769:./Library/stm32f4xx_can.c ****       break;
1770:./Library/stm32f4xx_can.c ****     case CAN_IT_WKU:
1771:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1772:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1773:./Library/stm32f4xx_can.c ****       break;
1774:./Library/stm32f4xx_can.c ****     case CAN_IT_SLK:
1775:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1776:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1777:./Library/stm32f4xx_can.c ****       break;
1778:./Library/stm32f4xx_can.c ****     case CAN_IT_EWG:
1779:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1780:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1781:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1782:./Library/stm32f4xx_can.c ****       break;
1783:./Library/stm32f4xx_can.c ****     case CAN_IT_EPV:
1784:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1785:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1786:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1787:./Library/stm32f4xx_can.c ****       break;
1788:./Library/stm32f4xx_can.c ****     case CAN_IT_BOF:
1789:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1790:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1791:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1792:./Library/stm32f4xx_can.c ****        break;
1793:./Library/stm32f4xx_can.c ****     case CAN_IT_LEC:
1794:./Library/stm32f4xx_can.c ****       /*  Clear LEC bits */
1795:./Library/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1796:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1797:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 91


1798:./Library/stm32f4xx_can.c ****       break;
1799:./Library/stm32f4xx_can.c ****     case CAN_IT_ERR:
1800:./Library/stm32f4xx_can.c ****       /*Clear LEC bits */
1801:./Library/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1802:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1803:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1804:./Library/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1805:./Library/stm32f4xx_can.c ****        break;
1806:./Library/stm32f4xx_can.c ****     default:
1807:./Library/stm32f4xx_can.c ****        break;
 3292              		.loc 1 1807 8
 3293 0136 35E0     		b	.L200
 3294              	.L197:
1752:./Library/stm32f4xx_can.c ****       break;
 3295              		.loc 1 1752 17
 3296 0138 7B68     		ldr	r3, [r7, #4]
 3297 013a 1E4A     		ldr	r2, .L201
 3298 013c 9A60     		str	r2, [r3, #8]
1753:./Library/stm32f4xx_can.c ****     case CAN_IT_FF0:
 3299              		.loc 1 1753 7
 3300 013e 32E0     		b	.L199
 3301              	.L196:
1756:./Library/stm32f4xx_can.c ****       break;
 3302              		.loc 1 1756 18
 3303 0140 7B68     		ldr	r3, [r7, #4]
 3304 0142 0822     		movs	r2, #8
 3305 0144 DA60     		str	r2, [r3, #12]
1757:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV0:
 3306              		.loc 1 1757 7
 3307 0146 2EE0     		b	.L199
 3308              	.L195:
1760:./Library/stm32f4xx_can.c ****       break;
 3309              		.loc 1 1760 18
 3310 0148 7B68     		ldr	r3, [r7, #4]
 3311 014a 1022     		movs	r2, #16
 3312 014c DA60     		str	r2, [r3, #12]
1761:./Library/stm32f4xx_can.c ****     case CAN_IT_FF1:
 3313              		.loc 1 1761 7
 3314 014e 2AE0     		b	.L199
 3315              	.L193:
1764:./Library/stm32f4xx_can.c ****       break;
 3316              		.loc 1 1764 18
 3317 0150 7B68     		ldr	r3, [r7, #4]
 3318 0152 0822     		movs	r2, #8
 3319 0154 1A61     		str	r2, [r3, #16]
1765:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV1:
 3320              		.loc 1 1765 7
 3321 0156 26E0     		b	.L199
 3322              	.L198:
1768:./Library/stm32f4xx_can.c ****       break;
 3323              		.loc 1 1768 18
 3324 0158 7B68     		ldr	r3, [r7, #4]
 3325 015a 1022     		movs	r2, #16
 3326 015c 1A61     		str	r2, [r3, #16]
1769:./Library/stm32f4xx_can.c ****     case CAN_IT_WKU:
 3327              		.loc 1 1769 7
 3328 015e 22E0     		b	.L199
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 92


 3329              	.L186:
1772:./Library/stm32f4xx_can.c ****       break;
 3330              		.loc 1 1772 17
 3331 0160 7B68     		ldr	r3, [r7, #4]
 3332 0162 0822     		movs	r2, #8
 3333 0164 5A60     		str	r2, [r3, #4]
1773:./Library/stm32f4xx_can.c ****     case CAN_IT_SLK:
 3334              		.loc 1 1773 7
 3335 0166 1EE0     		b	.L199
 3336              	.L184:
1776:./Library/stm32f4xx_can.c ****       break;
 3337              		.loc 1 1776 17
 3338 0168 7B68     		ldr	r3, [r7, #4]
 3339 016a 1022     		movs	r2, #16
 3340 016c 5A60     		str	r2, [r3, #4]
1777:./Library/stm32f4xx_can.c ****     case CAN_IT_EWG:
 3341              		.loc 1 1777 7
 3342 016e 1AE0     		b	.L199
 3343              	.L191:
1780:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
 3344              		.loc 1 1780 17
 3345 0170 7B68     		ldr	r3, [r7, #4]
 3346 0172 0422     		movs	r2, #4
 3347 0174 5A60     		str	r2, [r3, #4]
1782:./Library/stm32f4xx_can.c ****     case CAN_IT_EPV:
 3348              		.loc 1 1782 7
 3349 0176 16E0     		b	.L199
 3350              	.L190:
1785:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 3351              		.loc 1 1785 17
 3352 0178 7B68     		ldr	r3, [r7, #4]
 3353 017a 0422     		movs	r2, #4
 3354 017c 5A60     		str	r2, [r3, #4]
1787:./Library/stm32f4xx_can.c ****     case CAN_IT_BOF:
 3355              		.loc 1 1787 7
 3356 017e 12E0     		b	.L199
 3357              	.L189:
1790:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 3358              		.loc 1 1790 17
 3359 0180 7B68     		ldr	r3, [r7, #4]
 3360 0182 0422     		movs	r2, #4
 3361 0184 5A60     		str	r2, [r3, #4]
1792:./Library/stm32f4xx_can.c ****     case CAN_IT_LEC:
 3362              		.loc 1 1792 8
 3363 0186 0EE0     		b	.L199
 3364              	.L188:
1795:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 3365              		.loc 1 1795 17
 3366 0188 7B68     		ldr	r3, [r7, #4]
 3367 018a 0022     		movs	r2, #0
 3368 018c 9A61     		str	r2, [r3, #24]
1797:./Library/stm32f4xx_can.c ****       break;
 3369              		.loc 1 1797 17
 3370 018e 7B68     		ldr	r3, [r7, #4]
 3371 0190 0422     		movs	r2, #4
 3372 0192 5A60     		str	r2, [r3, #4]
1798:./Library/stm32f4xx_can.c ****     case CAN_IT_ERR:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 93


 3373              		.loc 1 1798 7
 3374 0194 07E0     		b	.L199
 3375              	.L187:
1801:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 3376              		.loc 1 1801 17
 3377 0196 7B68     		ldr	r3, [r7, #4]
 3378 0198 0022     		movs	r2, #0
 3379 019a 9A61     		str	r2, [r3, #24]
1803:./Library/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 3380              		.loc 1 1803 17
 3381 019c 7B68     		ldr	r3, [r7, #4]
 3382 019e 0422     		movs	r2, #4
 3383 01a0 5A60     		str	r2, [r3, #4]
1805:./Library/stm32f4xx_can.c ****     default:
 3384              		.loc 1 1805 8
 3385 01a2 00E0     		b	.L199
 3386              	.L200:
 3387              		.loc 1 1807 8
 3388 01a4 00BF     		nop
 3389              	.L199:
1808:./Library/stm32f4xx_can.c ****    }
1809:./Library/stm32f4xx_can.c **** }
 3390              		.loc 1 1809 1
 3391 01a6 00BF     		nop
 3392 01a8 0C37     		adds	r7, r7, #12
 3393              	.LCFI139:
 3394              		.cfi_def_cfa_offset 4
 3395 01aa BD46     		mov	sp, r7
 3396              	.LCFI140:
 3397              		.cfi_def_cfa_register 13
 3398              		@ sp needed
 3399 01ac 5DF8047B 		ldr	r7, [sp], #4
 3400              	.LCFI141:
 3401              		.cfi_restore 7
 3402              		.cfi_def_cfa_offset 0
 3403 01b0 7047     		bx	lr
 3404              	.L202:
 3405 01b2 00BF     		.align	2
 3406              	.L201:
 3407 01b4 01010100 		.word	65793
 3408              		.cfi_endproc
 3409              	.LFE146:
 3411              		.section	.text.CheckITStatus,"ax",%progbits
 3412              		.align	1
 3413              		.syntax unified
 3414              		.thumb
 3415              		.thumb_func
 3417              	CheckITStatus:
 3418              	.LFB147:
1810:./Library/stm32f4xx_can.c ****  /**
1811:./Library/stm32f4xx_can.c ****   * @}
1812:./Library/stm32f4xx_can.c ****   */
1813:./Library/stm32f4xx_can.c **** 
1814:./Library/stm32f4xx_can.c **** /**
1815:./Library/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1816:./Library/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1817:./Library/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 94


1818:./Library/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1819:./Library/stm32f4xx_can.c ****   */
1820:./Library/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1821:./Library/stm32f4xx_can.c **** {
 3419              		.loc 1 1821 1
 3420              		.cfi_startproc
 3421              		@ args = 0, pretend = 0, frame = 16
 3422              		@ frame_needed = 1, uses_anonymous_args = 0
 3423              		@ link register save eliminated.
 3424 0000 80B4     		push	{r7}
 3425              	.LCFI142:
 3426              		.cfi_def_cfa_offset 4
 3427              		.cfi_offset 7, -4
 3428 0002 85B0     		sub	sp, sp, #20
 3429              	.LCFI143:
 3430              		.cfi_def_cfa_offset 24
 3431 0004 00AF     		add	r7, sp, #0
 3432              	.LCFI144:
 3433              		.cfi_def_cfa_register 7
 3434 0006 7860     		str	r0, [r7, #4]
 3435 0008 3960     		str	r1, [r7]
1822:./Library/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 3436              		.loc 1 1822 12
 3437 000a 0023     		movs	r3, #0
 3438 000c FB73     		strb	r3, [r7, #15]
1823:./Library/stm32f4xx_can.c ****   
1824:./Library/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 3439              		.loc 1 1824 16
 3440 000e 7A68     		ldr	r2, [r7, #4]
 3441 0010 3B68     		ldr	r3, [r7]
 3442 0012 1340     		ands	r3, r3, r2
 3443              		.loc 1 1824 6
 3444 0014 002B     		cmp	r3, #0
 3445 0016 02D0     		beq	.L204
1825:./Library/stm32f4xx_can.c ****   {
1826:./Library/stm32f4xx_can.c ****     /* CAN_IT is set */
1827:./Library/stm32f4xx_can.c ****     pendingbitstatus = SET;
 3446              		.loc 1 1827 22
 3447 0018 0123     		movs	r3, #1
 3448 001a FB73     		strb	r3, [r7, #15]
 3449 001c 01E0     		b	.L205
 3450              	.L204:
1828:./Library/stm32f4xx_can.c ****   }
1829:./Library/stm32f4xx_can.c ****   else
1830:./Library/stm32f4xx_can.c ****   {
1831:./Library/stm32f4xx_can.c ****     /* CAN_IT is reset */
1832:./Library/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 3451              		.loc 1 1832 22
 3452 001e 0023     		movs	r3, #0
 3453 0020 FB73     		strb	r3, [r7, #15]
 3454              	.L205:
1833:./Library/stm32f4xx_can.c ****   }
1834:./Library/stm32f4xx_can.c ****   return pendingbitstatus;
 3455              		.loc 1 1834 10
 3456 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1835:./Library/stm32f4xx_can.c **** }
 3457              		.loc 1 1835 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 95


 3458 0024 1846     		mov	r0, r3
 3459 0026 1437     		adds	r7, r7, #20
 3460              	.LCFI145:
 3461              		.cfi_def_cfa_offset 4
 3462 0028 BD46     		mov	sp, r7
 3463              	.LCFI146:
 3464              		.cfi_def_cfa_register 13
 3465              		@ sp needed
 3466 002a 5DF8047B 		ldr	r7, [sp], #4
 3467              	.LCFI147:
 3468              		.cfi_restore 7
 3469              		.cfi_def_cfa_offset 0
 3470 002e 7047     		bx	lr
 3471              		.cfi_endproc
 3472              	.LFE147:
 3474              		.text
 3475              	.Letext0:
 3476              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 3477              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 3478              		.file 4 "./CORE/stm32f4xx.h"
 3479              		.file 5 "./Library/stm32f4xx_can.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 96


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_can.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:20     .text.CAN_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:26     .text.CAN_DeInit:0000000000000000 CAN_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:83     .text.CAN_DeInit:0000000000000044 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:88     .text.CAN_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:94     .text.CAN_Init:0000000000000000 CAN_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:396    .text.CAN_FilterInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:402    .text.CAN_FilterInit:0000000000000000 CAN_FilterInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:662    .text.CAN_FilterInit:0000000000000180 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:667    .text.CAN_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:673    .text.CAN_StructInit:0000000000000000 CAN_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:753    .text.CAN_SlaveStartBank:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:759    .text.CAN_SlaveStartBank:0000000000000000 CAN_SlaveStartBank
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:825    .text.CAN_SlaveStartBank:000000000000005c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:830    .text.CAN_DBGFreeze:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:836    .text.CAN_DBGFreeze:0000000000000000 CAN_DBGFreeze
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:894    .text.CAN_TTComModeCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:900    .text.CAN_TTComModeCmd:0000000000000000 CAN_TTComModeCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:994    .text.CAN_Transmit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1000   .text.CAN_Transmit:0000000000000000 CAN_Transmit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1294   .text.CAN_TransmitStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1300   .text.CAN_TransmitStatus:0000000000000000 CAN_TransmitStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1489   .text.CAN_TransmitStatus:00000000000000f0 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1499   .text.CAN_CancelTransmit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1505   .text.CAN_CancelTransmit:0000000000000000 CAN_CancelTransmit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1580   .text.CAN_Receive:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1586   .text.CAN_Receive:0000000000000000 CAN_Receive
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1835   .text.CAN_FIFORelease:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1841   .text.CAN_FIFORelease:0000000000000000 CAN_FIFORelease
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1895   .text.CAN_MessagePending:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1901   .text.CAN_MessagePending:0000000000000000 CAN_MessagePending
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1976   .text.CAN_OperatingModeRequest:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:1982   .text.CAN_OperatingModeRequest:0000000000000000 CAN_OperatingModeRequest
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2185   .text.CAN_Sleep:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2191   .text.CAN_Sleep:0000000000000000 CAN_Sleep
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2253   .text.CAN_WakeUp:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2259   .text.CAN_WakeUp:0000000000000000 CAN_WakeUp
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2342   .text.CAN_GetLastErrorCode:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2348   .text.CAN_GetLastErrorCode:0000000000000000 CAN_GetLastErrorCode
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2397   .text.CAN_GetReceiveErrorCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2403   .text.CAN_GetReceiveErrorCounter:0000000000000000 CAN_GetReceiveErrorCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2451   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2457   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 CAN_GetLSBTransmitErrorCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2505   .text.CAN_ITConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2511   .text.CAN_ITConfig:0000000000000000 CAN_ITConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2575   .text.CAN_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2581   .text.CAN_GetFlagStatus:0000000000000000 CAN_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2746   .text.CAN_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2752   .text.CAN_ClearFlag:0000000000000000 CAN_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2851   .text.CAN_ClearFlag:0000000000000070 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2856   .text.CAN_GetITStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2862   .text.CAN_GetITStatus:0000000000000000 CAN_GetITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2950   .text.CAN_GetITStatus:00000000000000c8 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:2982   .text.CAN_GetITStatus:0000000000000148 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3417   .text.CheckITStatus:0000000000000000 CheckITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3168   .text.CAN_GetITStatus:0000000000000260 $d
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s 			page 97


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3173   .text.CAN_ClearITPendingBit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3179   .text.CAN_ClearITPendingBit:0000000000000000 CAN_ClearITPendingBit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3255   .text.CAN_ClearITPendingBit:00000000000000b0 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3287   .text.CAN_ClearITPendingBit:0000000000000130 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3407   .text.CAN_ClearITPendingBit:00000000000001b4 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccyf8Rgt.s:3412   .text.CheckITStatus:0000000000000000 $t

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
