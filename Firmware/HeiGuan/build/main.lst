ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NVIC_SetPriority,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NVIC_SetPriority:
  26              	.LFB114:
  27              		.file 1 "./CORE/core_cm4.h"
   1:./CORE/core_cm4.h **** /**************************************************************************//**
   2:./CORE/core_cm4.h ****  * @file     core_cm4.h
   3:./CORE/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:./CORE/core_cm4.h ****  * @version  V4.10
   5:./CORE/core_cm4.h ****  * @date     18. March 2015
   6:./CORE/core_cm4.h ****  *
   7:./CORE/core_cm4.h ****  * @note
   8:./CORE/core_cm4.h ****  *
   9:./CORE/core_cm4.h ****  ******************************************************************************/
  10:./CORE/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:./CORE/core_cm4.h **** 
  12:./CORE/core_cm4.h ****    All rights reserved.
  13:./CORE/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:./CORE/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:./CORE/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:./CORE/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:./CORE/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:./CORE/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:./CORE/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:./CORE/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:./CORE/core_cm4.h ****      to endorse or promote products derived from this software without
  22:./CORE/core_cm4.h ****      specific prior written permission.
  23:./CORE/core_cm4.h ****    *
  24:./CORE/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:./CORE/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:./CORE/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:./CORE/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:./CORE/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:./CORE/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:./CORE/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:./CORE/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 2


  32:./CORE/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:./CORE/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:./CORE/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:./CORE/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:./CORE/core_cm4.h **** 
  37:./CORE/core_cm4.h **** 
  38:./CORE/core_cm4.h **** #if defined ( __ICCARM__ )
  39:./CORE/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:./CORE/core_cm4.h **** #endif
  41:./CORE/core_cm4.h **** 
  42:./CORE/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:./CORE/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:./CORE/core_cm4.h **** 
  45:./CORE/core_cm4.h **** #ifdef __cplusplus
  46:./CORE/core_cm4.h ****  extern "C" {
  47:./CORE/core_cm4.h **** #endif
  48:./CORE/core_cm4.h **** 
  49:./CORE/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:./CORE/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:./CORE/core_cm4.h **** 
  52:./CORE/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:./CORE/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:./CORE/core_cm4.h **** 
  55:./CORE/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:./CORE/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:./CORE/core_cm4.h **** 
  58:./CORE/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:./CORE/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:./CORE/core_cm4.h ****  */
  61:./CORE/core_cm4.h **** 
  62:./CORE/core_cm4.h **** 
  63:./CORE/core_cm4.h **** /*******************************************************************************
  64:./CORE/core_cm4.h ****  *                 CMSIS definitions
  65:./CORE/core_cm4.h ****  ******************************************************************************/
  66:./CORE/core_cm4.h **** /** \ingroup Cortex_M4
  67:./CORE/core_cm4.h ****   @{
  68:./CORE/core_cm4.h ****  */
  69:./CORE/core_cm4.h **** 
  70:./CORE/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:./CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:./CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:./CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:./CORE/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:./CORE/core_cm4.h **** 
  76:./CORE/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:./CORE/core_cm4.h **** 
  78:./CORE/core_cm4.h **** 
  79:./CORE/core_cm4.h **** #if   defined ( __CC_ARM )
  80:./CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:./CORE/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:./CORE/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:./CORE/core_cm4.h **** 
  84:./CORE/core_cm4.h **** #elif defined ( __GNUC__ )
  85:./CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:./CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:./CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 3


  89:./CORE/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:./CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:./CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:./CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:./CORE/core_cm4.h **** 
  94:./CORE/core_cm4.h **** #elif defined ( __TMS470__ )
  95:./CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:./CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:./CORE/core_cm4.h **** 
  98:./CORE/core_cm4.h **** #elif defined ( __TASKING__ )
  99:./CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:./CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:./CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:./CORE/core_cm4.h **** 
 103:./CORE/core_cm4.h **** #elif defined ( __CSMC__ )
 104:./CORE/core_cm4.h ****   #define __packed
 105:./CORE/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:./CORE/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:./CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:./CORE/core_cm4.h **** 
 109:./CORE/core_cm4.h **** #endif
 110:./CORE/core_cm4.h **** 
 111:./CORE/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:./CORE/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:./CORE/core_cm4.h **** */
 114:./CORE/core_cm4.h **** #if defined ( __CC_ARM )
 115:./CORE/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:./CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:./CORE/core_cm4.h ****       #define __FPU_USED       1
 118:./CORE/core_cm4.h ****     #else
 119:./CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:./CORE/core_cm4.h ****       #define __FPU_USED       0
 121:./CORE/core_cm4.h ****     #endif
 122:./CORE/core_cm4.h ****   #else
 123:./CORE/core_cm4.h ****     #define __FPU_USED         0
 124:./CORE/core_cm4.h ****   #endif
 125:./CORE/core_cm4.h **** 
 126:./CORE/core_cm4.h **** #elif defined ( __GNUC__ )
 127:./CORE/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:./CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:./CORE/core_cm4.h ****       #define __FPU_USED       1
 130:./CORE/core_cm4.h ****     #else
 131:./CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:./CORE/core_cm4.h ****       #define __FPU_USED       0
 133:./CORE/core_cm4.h ****     #endif
 134:./CORE/core_cm4.h ****   #else
 135:./CORE/core_cm4.h ****     #define __FPU_USED         0
 136:./CORE/core_cm4.h ****   #endif
 137:./CORE/core_cm4.h **** 
 138:./CORE/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:./CORE/core_cm4.h ****   #if defined __ARMVFP__
 140:./CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:./CORE/core_cm4.h ****       #define __FPU_USED       1
 142:./CORE/core_cm4.h ****     #else
 143:./CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:./CORE/core_cm4.h ****       #define __FPU_USED       0
 145:./CORE/core_cm4.h ****     #endif
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 4


 146:./CORE/core_cm4.h ****   #else
 147:./CORE/core_cm4.h ****     #define __FPU_USED         0
 148:./CORE/core_cm4.h ****   #endif
 149:./CORE/core_cm4.h **** 
 150:./CORE/core_cm4.h **** #elif defined ( __TMS470__ )
 151:./CORE/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:./CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:./CORE/core_cm4.h ****       #define __FPU_USED       1
 154:./CORE/core_cm4.h ****     #else
 155:./CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:./CORE/core_cm4.h ****       #define __FPU_USED       0
 157:./CORE/core_cm4.h ****     #endif
 158:./CORE/core_cm4.h ****   #else
 159:./CORE/core_cm4.h ****     #define __FPU_USED         0
 160:./CORE/core_cm4.h ****   #endif
 161:./CORE/core_cm4.h **** 
 162:./CORE/core_cm4.h **** #elif defined ( __TASKING__ )
 163:./CORE/core_cm4.h ****   #if defined __FPU_VFP__
 164:./CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:./CORE/core_cm4.h ****       #define __FPU_USED       1
 166:./CORE/core_cm4.h ****     #else
 167:./CORE/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:./CORE/core_cm4.h ****       #define __FPU_USED       0
 169:./CORE/core_cm4.h ****     #endif
 170:./CORE/core_cm4.h ****   #else
 171:./CORE/core_cm4.h ****     #define __FPU_USED         0
 172:./CORE/core_cm4.h ****   #endif
 173:./CORE/core_cm4.h **** 
 174:./CORE/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:./CORE/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:./CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:./CORE/core_cm4.h ****       #define __FPU_USED       1
 178:./CORE/core_cm4.h ****     #else
 179:./CORE/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:./CORE/core_cm4.h ****       #define __FPU_USED       0
 181:./CORE/core_cm4.h ****     #endif
 182:./CORE/core_cm4.h ****   #else
 183:./CORE/core_cm4.h ****     #define __FPU_USED         0
 184:./CORE/core_cm4.h ****   #endif
 185:./CORE/core_cm4.h **** #endif
 186:./CORE/core_cm4.h **** 
 187:./CORE/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:./CORE/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:./CORE/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:./CORE/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:./CORE/core_cm4.h **** 
 192:./CORE/core_cm4.h **** #ifdef __cplusplus
 193:./CORE/core_cm4.h **** }
 194:./CORE/core_cm4.h **** #endif
 195:./CORE/core_cm4.h **** 
 196:./CORE/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:./CORE/core_cm4.h **** 
 198:./CORE/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:./CORE/core_cm4.h **** 
 200:./CORE/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:./CORE/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 5


 203:./CORE/core_cm4.h **** #ifdef __cplusplus
 204:./CORE/core_cm4.h ****  extern "C" {
 205:./CORE/core_cm4.h **** #endif
 206:./CORE/core_cm4.h **** 
 207:./CORE/core_cm4.h **** /* check device defines and use defaults */
 208:./CORE/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:./CORE/core_cm4.h ****   #ifndef __CM4_REV
 210:./CORE/core_cm4.h ****     #define __CM4_REV               0x0000
 211:./CORE/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:./CORE/core_cm4.h ****   #endif
 213:./CORE/core_cm4.h **** 
 214:./CORE/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:./CORE/core_cm4.h ****     #define __FPU_PRESENT             0
 216:./CORE/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:./CORE/core_cm4.h ****   #endif
 218:./CORE/core_cm4.h **** 
 219:./CORE/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:./CORE/core_cm4.h ****     #define __MPU_PRESENT             0
 221:./CORE/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:./CORE/core_cm4.h ****   #endif
 223:./CORE/core_cm4.h **** 
 224:./CORE/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:./CORE/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:./CORE/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:./CORE/core_cm4.h ****   #endif
 228:./CORE/core_cm4.h **** 
 229:./CORE/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:./CORE/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:./CORE/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:./CORE/core_cm4.h ****   #endif
 233:./CORE/core_cm4.h **** #endif
 234:./CORE/core_cm4.h **** 
 235:./CORE/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:./CORE/core_cm4.h **** /**
 237:./CORE/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:./CORE/core_cm4.h **** 
 239:./CORE/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:./CORE/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:./CORE/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:./CORE/core_cm4.h **** */
 243:./CORE/core_cm4.h **** #ifdef __cplusplus
 244:./CORE/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:./CORE/core_cm4.h **** #else
 246:./CORE/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:./CORE/core_cm4.h **** #endif
 248:./CORE/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:./CORE/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:./CORE/core_cm4.h **** 
 251:./CORE/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:./CORE/core_cm4.h **** 
 253:./CORE/core_cm4.h **** 
 254:./CORE/core_cm4.h **** 
 255:./CORE/core_cm4.h **** /*******************************************************************************
 256:./CORE/core_cm4.h ****  *                 Register Abstraction
 257:./CORE/core_cm4.h ****   Core Register contain:
 258:./CORE/core_cm4.h ****   - Core Register
 259:./CORE/core_cm4.h ****   - Core NVIC Register
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 6


 260:./CORE/core_cm4.h ****   - Core SCB Register
 261:./CORE/core_cm4.h ****   - Core SysTick Register
 262:./CORE/core_cm4.h ****   - Core Debug Register
 263:./CORE/core_cm4.h ****   - Core MPU Register
 264:./CORE/core_cm4.h ****   - Core FPU Register
 265:./CORE/core_cm4.h ****  ******************************************************************************/
 266:./CORE/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:./CORE/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:./CORE/core_cm4.h **** */
 269:./CORE/core_cm4.h **** 
 270:./CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:./CORE/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:./CORE/core_cm4.h ****     \brief  Core Register type definitions.
 273:./CORE/core_cm4.h ****   @{
 274:./CORE/core_cm4.h ****  */
 275:./CORE/core_cm4.h **** 
 276:./CORE/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:./CORE/core_cm4.h ****  */
 278:./CORE/core_cm4.h **** typedef union
 279:./CORE/core_cm4.h **** {
 280:./CORE/core_cm4.h ****   struct
 281:./CORE/core_cm4.h ****   {
 282:./CORE/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:./CORE/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:./CORE/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:./CORE/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:./CORE/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:./CORE/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:./CORE/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:./CORE/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:./CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:./CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:./CORE/core_cm4.h **** } APSR_Type;
 293:./CORE/core_cm4.h **** 
 294:./CORE/core_cm4.h **** /* APSR Register Definitions */
 295:./CORE/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:./CORE/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:./CORE/core_cm4.h **** 
 298:./CORE/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:./CORE/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:./CORE/core_cm4.h **** 
 301:./CORE/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:./CORE/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:./CORE/core_cm4.h **** 
 304:./CORE/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:./CORE/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:./CORE/core_cm4.h **** 
 307:./CORE/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:./CORE/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:./CORE/core_cm4.h **** 
 310:./CORE/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:./CORE/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:./CORE/core_cm4.h **** 
 313:./CORE/core_cm4.h **** 
 314:./CORE/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:./CORE/core_cm4.h ****  */
 316:./CORE/core_cm4.h **** typedef union
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 7


 317:./CORE/core_cm4.h **** {
 318:./CORE/core_cm4.h ****   struct
 319:./CORE/core_cm4.h ****   {
 320:./CORE/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:./CORE/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:./CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:./CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:./CORE/core_cm4.h **** } IPSR_Type;
 325:./CORE/core_cm4.h **** 
 326:./CORE/core_cm4.h **** /* IPSR Register Definitions */
 327:./CORE/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:./CORE/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:./CORE/core_cm4.h **** 
 330:./CORE/core_cm4.h **** 
 331:./CORE/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:./CORE/core_cm4.h ****  */
 333:./CORE/core_cm4.h **** typedef union
 334:./CORE/core_cm4.h **** {
 335:./CORE/core_cm4.h ****   struct
 336:./CORE/core_cm4.h ****   {
 337:./CORE/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:./CORE/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:./CORE/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:./CORE/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:./CORE/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:./CORE/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:./CORE/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:./CORE/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:./CORE/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:./CORE/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:./CORE/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:./CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:./CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:./CORE/core_cm4.h **** } xPSR_Type;
 351:./CORE/core_cm4.h **** 
 352:./CORE/core_cm4.h **** /* xPSR Register Definitions */
 353:./CORE/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:./CORE/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:./CORE/core_cm4.h **** 
 356:./CORE/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:./CORE/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:./CORE/core_cm4.h **** 
 359:./CORE/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:./CORE/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:./CORE/core_cm4.h **** 
 362:./CORE/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:./CORE/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:./CORE/core_cm4.h **** 
 365:./CORE/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:./CORE/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:./CORE/core_cm4.h **** 
 368:./CORE/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:./CORE/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:./CORE/core_cm4.h **** 
 371:./CORE/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:./CORE/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 8


 374:./CORE/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:./CORE/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:./CORE/core_cm4.h **** 
 377:./CORE/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:./CORE/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:./CORE/core_cm4.h **** 
 380:./CORE/core_cm4.h **** 
 381:./CORE/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:./CORE/core_cm4.h ****  */
 383:./CORE/core_cm4.h **** typedef union
 384:./CORE/core_cm4.h **** {
 385:./CORE/core_cm4.h ****   struct
 386:./CORE/core_cm4.h ****   {
 387:./CORE/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:./CORE/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:./CORE/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:./CORE/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:./CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:./CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:./CORE/core_cm4.h **** } CONTROL_Type;
 394:./CORE/core_cm4.h **** 
 395:./CORE/core_cm4.h **** /* CONTROL Register Definitions */
 396:./CORE/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:./CORE/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:./CORE/core_cm4.h **** 
 399:./CORE/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:./CORE/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:./CORE/core_cm4.h **** 
 402:./CORE/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:./CORE/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:./CORE/core_cm4.h **** 
 405:./CORE/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:./CORE/core_cm4.h **** 
 407:./CORE/core_cm4.h **** 
 408:./CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:./CORE/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:./CORE/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:./CORE/core_cm4.h ****   @{
 412:./CORE/core_cm4.h ****  */
 413:./CORE/core_cm4.h **** 
 414:./CORE/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:./CORE/core_cm4.h ****  */
 416:./CORE/core_cm4.h **** typedef struct
 417:./CORE/core_cm4.h **** {
 418:./CORE/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:./CORE/core_cm4.h ****        uint32_t RESERVED0[24];
 420:./CORE/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:./CORE/core_cm4.h ****        uint32_t RSERVED1[24];
 422:./CORE/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:./CORE/core_cm4.h ****        uint32_t RESERVED2[24];
 424:./CORE/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:./CORE/core_cm4.h ****        uint32_t RESERVED3[24];
 426:./CORE/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:./CORE/core_cm4.h ****        uint32_t RESERVED4[56];
 428:./CORE/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:./CORE/core_cm4.h ****        uint32_t RESERVED5[644];
 430:./CORE/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 9


 431:./CORE/core_cm4.h **** }  NVIC_Type;
 432:./CORE/core_cm4.h **** 
 433:./CORE/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:./CORE/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:./CORE/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:./CORE/core_cm4.h **** 
 437:./CORE/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:./CORE/core_cm4.h **** 
 439:./CORE/core_cm4.h **** 
 440:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:./CORE/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:./CORE/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:./CORE/core_cm4.h ****   @{
 444:./CORE/core_cm4.h ****  */
 445:./CORE/core_cm4.h **** 
 446:./CORE/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:./CORE/core_cm4.h ****  */
 448:./CORE/core_cm4.h **** typedef struct
 449:./CORE/core_cm4.h **** {
 450:./CORE/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:./CORE/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:./CORE/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:./CORE/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:./CORE/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:./CORE/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:./CORE/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:./CORE/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:./CORE/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:./CORE/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:./CORE/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:./CORE/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:./CORE/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:./CORE/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:./CORE/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:./CORE/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:./CORE/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:./CORE/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:./CORE/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:./CORE/core_cm4.h ****        uint32_t RESERVED0[5];
 470:./CORE/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:./CORE/core_cm4.h **** } SCB_Type;
 472:./CORE/core_cm4.h **** 
 473:./CORE/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:./CORE/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:./CORE/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:./CORE/core_cm4.h **** 
 477:./CORE/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:./CORE/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:./CORE/core_cm4.h **** 
 480:./CORE/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:./CORE/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:./CORE/core_cm4.h **** 
 483:./CORE/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:./CORE/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:./CORE/core_cm4.h **** 
 486:./CORE/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:./CORE/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 10


 488:./CORE/core_cm4.h **** 
 489:./CORE/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:./CORE/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:./CORE/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:./CORE/core_cm4.h **** 
 493:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:./CORE/core_cm4.h **** 
 496:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:./CORE/core_cm4.h **** 
 499:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:./CORE/core_cm4.h **** 
 502:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:./CORE/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:./CORE/core_cm4.h **** 
 505:./CORE/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:./CORE/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:./CORE/core_cm4.h **** 
 508:./CORE/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:./CORE/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:./CORE/core_cm4.h **** 
 511:./CORE/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:./CORE/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:./CORE/core_cm4.h **** 
 514:./CORE/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:./CORE/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:./CORE/core_cm4.h **** 
 517:./CORE/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:./CORE/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:./CORE/core_cm4.h **** 
 520:./CORE/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:./CORE/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:./CORE/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:./CORE/core_cm4.h **** 
 524:./CORE/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:./CORE/core_cm4.h **** 
 528:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:./CORE/core_cm4.h **** 
 531:./CORE/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:./CORE/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:./CORE/core_cm4.h **** 
 534:./CORE/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:./CORE/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:./CORE/core_cm4.h **** 
 537:./CORE/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:./CORE/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:./CORE/core_cm4.h **** 
 540:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:./CORE/core_cm4.h **** 
 543:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:./CORE/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 11


 545:./CORE/core_cm4.h **** 
 546:./CORE/core_cm4.h **** /* SCB System Control Register Definitions */
 547:./CORE/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:./CORE/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:./CORE/core_cm4.h **** 
 550:./CORE/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:./CORE/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:./CORE/core_cm4.h **** 
 553:./CORE/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:./CORE/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:./CORE/core_cm4.h **** 
 556:./CORE/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:./CORE/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:./CORE/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:./CORE/core_cm4.h **** 
 560:./CORE/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:./CORE/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:./CORE/core_cm4.h **** 
 563:./CORE/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:./CORE/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:./CORE/core_cm4.h **** 
 566:./CORE/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:./CORE/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:./CORE/core_cm4.h **** 
 569:./CORE/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:./CORE/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:./CORE/core_cm4.h **** 
 572:./CORE/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:./CORE/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:./CORE/core_cm4.h **** 
 575:./CORE/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:./CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:./CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:./CORE/core_cm4.h **** 
 579:./CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:./CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:./CORE/core_cm4.h **** 
 582:./CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:./CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:./CORE/core_cm4.h **** 
 585:./CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:./CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:./CORE/core_cm4.h **** 
 588:./CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:./CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:./CORE/core_cm4.h **** 
 591:./CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:./CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:./CORE/core_cm4.h **** 
 594:./CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:./CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:./CORE/core_cm4.h **** 
 597:./CORE/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:./CORE/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:./CORE/core_cm4.h **** 
 600:./CORE/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:./CORE/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 12


 602:./CORE/core_cm4.h **** 
 603:./CORE/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:./CORE/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:./CORE/core_cm4.h **** 
 606:./CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:./CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:./CORE/core_cm4.h **** 
 609:./CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:./CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:./CORE/core_cm4.h **** 
 612:./CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:./CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:./CORE/core_cm4.h **** 
 615:./CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:./CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:./CORE/core_cm4.h **** 
 618:./CORE/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:./CORE/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:./CORE/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:./CORE/core_cm4.h **** 
 622:./CORE/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:./CORE/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:./CORE/core_cm4.h **** 
 625:./CORE/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:./CORE/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:./CORE/core_cm4.h **** 
 628:./CORE/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:./CORE/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:./CORE/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:./CORE/core_cm4.h **** 
 632:./CORE/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:./CORE/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:./CORE/core_cm4.h **** 
 635:./CORE/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:./CORE/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:./CORE/core_cm4.h **** 
 638:./CORE/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:./CORE/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:./CORE/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:./CORE/core_cm4.h **** 
 642:./CORE/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:./CORE/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:./CORE/core_cm4.h **** 
 645:./CORE/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:./CORE/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:./CORE/core_cm4.h **** 
 648:./CORE/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:./CORE/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:./CORE/core_cm4.h **** 
 651:./CORE/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:./CORE/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:./CORE/core_cm4.h **** 
 654:./CORE/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:./CORE/core_cm4.h **** 
 656:./CORE/core_cm4.h **** 
 657:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:./CORE/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 13


 659:./CORE/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:./CORE/core_cm4.h ****   @{
 661:./CORE/core_cm4.h ****  */
 662:./CORE/core_cm4.h **** 
 663:./CORE/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:./CORE/core_cm4.h ****  */
 665:./CORE/core_cm4.h **** typedef struct
 666:./CORE/core_cm4.h **** {
 667:./CORE/core_cm4.h ****        uint32_t RESERVED0[1];
 668:./CORE/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:./CORE/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:./CORE/core_cm4.h **** } SCnSCB_Type;
 671:./CORE/core_cm4.h **** 
 672:./CORE/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:./CORE/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:./CORE/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:./CORE/core_cm4.h **** 
 676:./CORE/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:./CORE/core_cm4.h **** 
 680:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:./CORE/core_cm4.h **** 
 683:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:./CORE/core_cm4.h **** 
 686:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:./CORE/core_cm4.h **** 
 689:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:./CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:./CORE/core_cm4.h **** 
 692:./CORE/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:./CORE/core_cm4.h **** 
 694:./CORE/core_cm4.h **** 
 695:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:./CORE/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:./CORE/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:./CORE/core_cm4.h ****   @{
 699:./CORE/core_cm4.h ****  */
 700:./CORE/core_cm4.h **** 
 701:./CORE/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:./CORE/core_cm4.h ****  */
 703:./CORE/core_cm4.h **** typedef struct
 704:./CORE/core_cm4.h **** {
 705:./CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:./CORE/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:./CORE/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:./CORE/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:./CORE/core_cm4.h **** } SysTick_Type;
 710:./CORE/core_cm4.h **** 
 711:./CORE/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:./CORE/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:./CORE/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:./CORE/core_cm4.h **** 
 715:./CORE/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 14


 716:./CORE/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:./CORE/core_cm4.h **** 
 718:./CORE/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:./CORE/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:./CORE/core_cm4.h **** 
 721:./CORE/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:./CORE/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:./CORE/core_cm4.h **** 
 724:./CORE/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:./CORE/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:./CORE/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:./CORE/core_cm4.h **** 
 728:./CORE/core_cm4.h **** /* SysTick Current Register Definitions */
 729:./CORE/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:./CORE/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:./CORE/core_cm4.h **** 
 732:./CORE/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:./CORE/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:./CORE/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:./CORE/core_cm4.h **** 
 736:./CORE/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:./CORE/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:./CORE/core_cm4.h **** 
 739:./CORE/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:./CORE/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:./CORE/core_cm4.h **** 
 742:./CORE/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:./CORE/core_cm4.h **** 
 744:./CORE/core_cm4.h **** 
 745:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:./CORE/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:./CORE/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:./CORE/core_cm4.h ****   @{
 749:./CORE/core_cm4.h ****  */
 750:./CORE/core_cm4.h **** 
 751:./CORE/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:./CORE/core_cm4.h ****  */
 753:./CORE/core_cm4.h **** typedef struct
 754:./CORE/core_cm4.h **** {
 755:./CORE/core_cm4.h ****   __O  union
 756:./CORE/core_cm4.h ****   {
 757:./CORE/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:./CORE/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:./CORE/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:./CORE/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:./CORE/core_cm4.h ****        uint32_t RESERVED0[864];
 762:./CORE/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:./CORE/core_cm4.h ****        uint32_t RESERVED1[15];
 764:./CORE/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:./CORE/core_cm4.h ****        uint32_t RESERVED2[15];
 766:./CORE/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:./CORE/core_cm4.h ****        uint32_t RESERVED3[29];
 768:./CORE/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:./CORE/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:./CORE/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:./CORE/core_cm4.h ****        uint32_t RESERVED4[43];
 772:./CORE/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 15


 773:./CORE/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:./CORE/core_cm4.h ****        uint32_t RESERVED5[6];
 775:./CORE/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:./CORE/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:./CORE/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:./CORE/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:./CORE/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:./CORE/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:./CORE/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:./CORE/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:./CORE/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:./CORE/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:./CORE/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:./CORE/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:./CORE/core_cm4.h **** } ITM_Type;
 788:./CORE/core_cm4.h **** 
 789:./CORE/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:./CORE/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:./CORE/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:./CORE/core_cm4.h **** 
 793:./CORE/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:./CORE/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:./CORE/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:./CORE/core_cm4.h **** 
 797:./CORE/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:./CORE/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:./CORE/core_cm4.h **** 
 800:./CORE/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:./CORE/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:./CORE/core_cm4.h **** 
 803:./CORE/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:./CORE/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:./CORE/core_cm4.h **** 
 806:./CORE/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:./CORE/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:./CORE/core_cm4.h **** 
 809:./CORE/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:./CORE/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:./CORE/core_cm4.h **** 
 812:./CORE/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:./CORE/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:./CORE/core_cm4.h **** 
 815:./CORE/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:./CORE/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:./CORE/core_cm4.h **** 
 818:./CORE/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:./CORE/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:./CORE/core_cm4.h **** 
 821:./CORE/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:./CORE/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:./CORE/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:./CORE/core_cm4.h **** 
 825:./CORE/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:./CORE/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:./CORE/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:./CORE/core_cm4.h **** 
 829:./CORE/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 16


 830:./CORE/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:./CORE/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:./CORE/core_cm4.h **** 
 833:./CORE/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:./CORE/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:./CORE/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:./CORE/core_cm4.h **** 
 837:./CORE/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:./CORE/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:./CORE/core_cm4.h **** 
 840:./CORE/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:./CORE/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:./CORE/core_cm4.h **** 
 843:./CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:./CORE/core_cm4.h **** 
 845:./CORE/core_cm4.h **** 
 846:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:./CORE/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:./CORE/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:./CORE/core_cm4.h ****   @{
 850:./CORE/core_cm4.h ****  */
 851:./CORE/core_cm4.h **** 
 852:./CORE/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:./CORE/core_cm4.h ****  */
 854:./CORE/core_cm4.h **** typedef struct
 855:./CORE/core_cm4.h **** {
 856:./CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:./CORE/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:./CORE/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:./CORE/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:./CORE/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:./CORE/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:./CORE/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:./CORE/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:./CORE/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:./CORE/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:./CORE/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:./CORE/core_cm4.h ****        uint32_t RESERVED0[1];
 868:./CORE/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:./CORE/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:./CORE/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:./CORE/core_cm4.h ****        uint32_t RESERVED1[1];
 872:./CORE/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:./CORE/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:./CORE/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:./CORE/core_cm4.h ****        uint32_t RESERVED2[1];
 876:./CORE/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:./CORE/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:./CORE/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:./CORE/core_cm4.h **** } DWT_Type;
 880:./CORE/core_cm4.h **** 
 881:./CORE/core_cm4.h **** /* DWT Control Register Definitions */
 882:./CORE/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:./CORE/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:./CORE/core_cm4.h **** 
 885:./CORE/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:./CORE/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 17


 887:./CORE/core_cm4.h **** 
 888:./CORE/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:./CORE/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:./CORE/core_cm4.h **** 
 891:./CORE/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:./CORE/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:./CORE/core_cm4.h **** 
 894:./CORE/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:./CORE/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:./CORE/core_cm4.h **** 
 897:./CORE/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:./CORE/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:./CORE/core_cm4.h **** 
 900:./CORE/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:./CORE/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:./CORE/core_cm4.h **** 
 903:./CORE/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:./CORE/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:./CORE/core_cm4.h **** 
 906:./CORE/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:./CORE/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:./CORE/core_cm4.h **** 
 909:./CORE/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:./CORE/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:./CORE/core_cm4.h **** 
 912:./CORE/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:./CORE/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:./CORE/core_cm4.h **** 
 915:./CORE/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:./CORE/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:./CORE/core_cm4.h **** 
 918:./CORE/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:./CORE/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:./CORE/core_cm4.h **** 
 921:./CORE/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:./CORE/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:./CORE/core_cm4.h **** 
 924:./CORE/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:./CORE/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:./CORE/core_cm4.h **** 
 927:./CORE/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:./CORE/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:./CORE/core_cm4.h **** 
 930:./CORE/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:./CORE/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:./CORE/core_cm4.h **** 
 933:./CORE/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:./CORE/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:./CORE/core_cm4.h **** 
 936:./CORE/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:./CORE/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:./CORE/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:./CORE/core_cm4.h **** 
 940:./CORE/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:./CORE/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:./CORE/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 18


 944:./CORE/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:./CORE/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:./CORE/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:./CORE/core_cm4.h **** 
 948:./CORE/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:./CORE/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:./CORE/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:./CORE/core_cm4.h **** 
 952:./CORE/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:./CORE/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:./CORE/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:./CORE/core_cm4.h **** 
 956:./CORE/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:./CORE/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:./CORE/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:./CORE/core_cm4.h **** 
 960:./CORE/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:./CORE/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:./CORE/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:./CORE/core_cm4.h **** 
 964:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:./CORE/core_cm4.h **** 
 967:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:./CORE/core_cm4.h **** 
 970:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:./CORE/core_cm4.h **** 
 973:./CORE/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:./CORE/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:./CORE/core_cm4.h **** 
 976:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:./CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:./CORE/core_cm4.h **** 
 979:./CORE/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:./CORE/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:./CORE/core_cm4.h **** 
 982:./CORE/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:./CORE/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:./CORE/core_cm4.h **** 
 985:./CORE/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:./CORE/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:./CORE/core_cm4.h **** 
 988:./CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:./CORE/core_cm4.h **** 
 990:./CORE/core_cm4.h **** 
 991:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:./CORE/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:./CORE/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:./CORE/core_cm4.h ****   @{
 995:./CORE/core_cm4.h ****  */
 996:./CORE/core_cm4.h **** 
 997:./CORE/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:./CORE/core_cm4.h ****  */
 999:./CORE/core_cm4.h **** typedef struct
1000:./CORE/core_cm4.h **** {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 19


1001:./CORE/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:./CORE/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:./CORE/core_cm4.h ****        uint32_t RESERVED0[2];
1004:./CORE/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:./CORE/core_cm4.h ****        uint32_t RESERVED1[55];
1006:./CORE/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:./CORE/core_cm4.h ****        uint32_t RESERVED2[131];
1008:./CORE/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:./CORE/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:./CORE/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:./CORE/core_cm4.h ****        uint32_t RESERVED3[759];
1012:./CORE/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:./CORE/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:./CORE/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:./CORE/core_cm4.h ****        uint32_t RESERVED4[1];
1016:./CORE/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:./CORE/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:./CORE/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:./CORE/core_cm4.h ****        uint32_t RESERVED5[39];
1020:./CORE/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:./CORE/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:./CORE/core_cm4.h ****        uint32_t RESERVED7[8];
1023:./CORE/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:./CORE/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:./CORE/core_cm4.h **** } TPI_Type;
1026:./CORE/core_cm4.h **** 
1027:./CORE/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:./CORE/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:./CORE/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:./CORE/core_cm4.h **** 
1031:./CORE/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:./CORE/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:./CORE/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:./CORE/core_cm4.h **** 
1035:./CORE/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:./CORE/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:./CORE/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:./CORE/core_cm4.h **** 
1039:./CORE/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:./CORE/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:./CORE/core_cm4.h **** 
1042:./CORE/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:./CORE/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:./CORE/core_cm4.h **** 
1045:./CORE/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:./CORE/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:./CORE/core_cm4.h **** 
1048:./CORE/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:./CORE/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:./CORE/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:./CORE/core_cm4.h **** 
1052:./CORE/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:./CORE/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:./CORE/core_cm4.h **** 
1055:./CORE/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:./CORE/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:./CORE/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 20


1058:./CORE/core_cm4.h **** 
1059:./CORE/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:./CORE/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:./CORE/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:./CORE/core_cm4.h **** 
1063:./CORE/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:./CORE/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:./CORE/core_cm4.h **** 
1066:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:./CORE/core_cm4.h **** 
1069:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:./CORE/core_cm4.h **** 
1072:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:./CORE/core_cm4.h **** 
1075:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:./CORE/core_cm4.h **** 
1078:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:./CORE/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:./CORE/core_cm4.h **** 
1081:./CORE/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:./CORE/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:./CORE/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:./CORE/core_cm4.h **** 
1085:./CORE/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:./CORE/core_cm4.h **** 
1089:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:./CORE/core_cm4.h **** 
1092:./CORE/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:./CORE/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:./CORE/core_cm4.h **** 
1095:./CORE/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:./CORE/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:./CORE/core_cm4.h **** 
1098:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:./CORE/core_cm4.h **** 
1101:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:./CORE/core_cm4.h **** 
1104:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:./CORE/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:./CORE/core_cm4.h **** 
1107:./CORE/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:./CORE/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:./CORE/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:./CORE/core_cm4.h **** 
1111:./CORE/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:./CORE/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:./CORE/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 21


1115:./CORE/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:./CORE/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:./CORE/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:./CORE/core_cm4.h **** 
1119:./CORE/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:./CORE/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:./CORE/core_cm4.h **** 
1122:./CORE/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:./CORE/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:./CORE/core_cm4.h **** 
1125:./CORE/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:./CORE/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:./CORE/core_cm4.h **** 
1128:./CORE/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:./CORE/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:./CORE/core_cm4.h **** 
1131:./CORE/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:./CORE/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:./CORE/core_cm4.h **** 
1134:./CORE/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:./CORE/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:./CORE/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:./CORE/core_cm4.h **** 
1138:./CORE/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:./CORE/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:./CORE/core_cm4.h **** 
1141:./CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:./CORE/core_cm4.h **** 
1143:./CORE/core_cm4.h **** 
1144:./CORE/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:./CORE/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:./CORE/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:./CORE/core_cm4.h ****   @{
1149:./CORE/core_cm4.h ****  */
1150:./CORE/core_cm4.h **** 
1151:./CORE/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:./CORE/core_cm4.h ****  */
1153:./CORE/core_cm4.h **** typedef struct
1154:./CORE/core_cm4.h **** {
1155:./CORE/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:./CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:./CORE/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:./CORE/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:./CORE/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:./CORE/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:./CORE/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:./CORE/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:./CORE/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:./CORE/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:./CORE/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:./CORE/core_cm4.h **** } MPU_Type;
1167:./CORE/core_cm4.h **** 
1168:./CORE/core_cm4.h **** /* MPU Type Register */
1169:./CORE/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:./CORE/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 22


1172:./CORE/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:./CORE/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:./CORE/core_cm4.h **** 
1175:./CORE/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:./CORE/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:./CORE/core_cm4.h **** 
1178:./CORE/core_cm4.h **** /* MPU Control Register */
1179:./CORE/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:./CORE/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:./CORE/core_cm4.h **** 
1182:./CORE/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:./CORE/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:./CORE/core_cm4.h **** 
1185:./CORE/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:./CORE/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:./CORE/core_cm4.h **** 
1188:./CORE/core_cm4.h **** /* MPU Region Number Register */
1189:./CORE/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:./CORE/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:./CORE/core_cm4.h **** 
1192:./CORE/core_cm4.h **** /* MPU Region Base Address Register */
1193:./CORE/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:./CORE/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:./CORE/core_cm4.h **** 
1196:./CORE/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:./CORE/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:./CORE/core_cm4.h **** 
1199:./CORE/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:./CORE/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:./CORE/core_cm4.h **** 
1202:./CORE/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:./CORE/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:./CORE/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:./CORE/core_cm4.h **** 
1206:./CORE/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:./CORE/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:./CORE/core_cm4.h **** 
1209:./CORE/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:./CORE/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:./CORE/core_cm4.h **** 
1212:./CORE/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:./CORE/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:./CORE/core_cm4.h **** 
1215:./CORE/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:./CORE/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:./CORE/core_cm4.h **** 
1218:./CORE/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:./CORE/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:./CORE/core_cm4.h **** 
1221:./CORE/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:./CORE/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:./CORE/core_cm4.h **** 
1224:./CORE/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:./CORE/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:./CORE/core_cm4.h **** 
1227:./CORE/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:./CORE/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 23


1229:./CORE/core_cm4.h **** 
1230:./CORE/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:./CORE/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:./CORE/core_cm4.h **** 
1233:./CORE/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:./CORE/core_cm4.h **** #endif
1235:./CORE/core_cm4.h **** 
1236:./CORE/core_cm4.h **** 
1237:./CORE/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:./CORE/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:./CORE/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:./CORE/core_cm4.h ****   @{
1242:./CORE/core_cm4.h ****  */
1243:./CORE/core_cm4.h **** 
1244:./CORE/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:./CORE/core_cm4.h ****  */
1246:./CORE/core_cm4.h **** typedef struct
1247:./CORE/core_cm4.h **** {
1248:./CORE/core_cm4.h ****        uint32_t RESERVED0[1];
1249:./CORE/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:./CORE/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:./CORE/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:./CORE/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:./CORE/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:./CORE/core_cm4.h **** } FPU_Type;
1255:./CORE/core_cm4.h **** 
1256:./CORE/core_cm4.h **** /* Floating-Point Context Control Register */
1257:./CORE/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:./CORE/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:./CORE/core_cm4.h **** 
1260:./CORE/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:./CORE/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:./CORE/core_cm4.h **** 
1263:./CORE/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:./CORE/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:./CORE/core_cm4.h **** 
1266:./CORE/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:./CORE/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:./CORE/core_cm4.h **** 
1269:./CORE/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:./CORE/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:./CORE/core_cm4.h **** 
1272:./CORE/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:./CORE/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:./CORE/core_cm4.h **** 
1275:./CORE/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:./CORE/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:./CORE/core_cm4.h **** 
1278:./CORE/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:./CORE/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:./CORE/core_cm4.h **** 
1281:./CORE/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:./CORE/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:./CORE/core_cm4.h **** 
1284:./CORE/core_cm4.h **** /* Floating-Point Context Address Register */
1285:./CORE/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 24


1286:./CORE/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:./CORE/core_cm4.h **** 
1288:./CORE/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:./CORE/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:./CORE/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:./CORE/core_cm4.h **** 
1292:./CORE/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:./CORE/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:./CORE/core_cm4.h **** 
1295:./CORE/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:./CORE/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:./CORE/core_cm4.h **** 
1298:./CORE/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:./CORE/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:./CORE/core_cm4.h **** 
1301:./CORE/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:./CORE/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:./CORE/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:./CORE/core_cm4.h **** 
1305:./CORE/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:./CORE/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:./CORE/core_cm4.h **** 
1308:./CORE/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:./CORE/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:./CORE/core_cm4.h **** 
1311:./CORE/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:./CORE/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:./CORE/core_cm4.h **** 
1314:./CORE/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:./CORE/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:./CORE/core_cm4.h **** 
1317:./CORE/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:./CORE/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:./CORE/core_cm4.h **** 
1320:./CORE/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:./CORE/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:./CORE/core_cm4.h **** 
1323:./CORE/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:./CORE/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:./CORE/core_cm4.h **** 
1326:./CORE/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:./CORE/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:./CORE/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:./CORE/core_cm4.h **** 
1330:./CORE/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:./CORE/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:./CORE/core_cm4.h **** 
1333:./CORE/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:./CORE/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:./CORE/core_cm4.h **** 
1336:./CORE/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:./CORE/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:./CORE/core_cm4.h **** 
1339:./CORE/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:./CORE/core_cm4.h **** #endif
1341:./CORE/core_cm4.h **** 
1342:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 25


1343:./CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:./CORE/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:./CORE/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:./CORE/core_cm4.h ****   @{
1347:./CORE/core_cm4.h ****  */
1348:./CORE/core_cm4.h **** 
1349:./CORE/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:./CORE/core_cm4.h ****  */
1351:./CORE/core_cm4.h **** typedef struct
1352:./CORE/core_cm4.h **** {
1353:./CORE/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:./CORE/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:./CORE/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:./CORE/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:./CORE/core_cm4.h **** } CoreDebug_Type;
1358:./CORE/core_cm4.h **** 
1359:./CORE/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:./CORE/core_cm4.h **** 
1363:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:./CORE/core_cm4.h **** 
1366:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:./CORE/core_cm4.h **** 
1369:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:./CORE/core_cm4.h **** 
1372:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:./CORE/core_cm4.h **** 
1375:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:./CORE/core_cm4.h **** 
1378:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:./CORE/core_cm4.h **** 
1381:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:./CORE/core_cm4.h **** 
1384:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:./CORE/core_cm4.h **** 
1387:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:./CORE/core_cm4.h **** 
1390:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:./CORE/core_cm4.h **** 
1393:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:./CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:./CORE/core_cm4.h **** 
1396:./CORE/core_cm4.h **** /* Debug Core Register Selector Register */
1397:./CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:./CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 26


1400:./CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:./CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:./CORE/core_cm4.h **** 
1403:./CORE/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:./CORE/core_cm4.h **** 
1407:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:./CORE/core_cm4.h **** 
1410:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:./CORE/core_cm4.h **** 
1413:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:./CORE/core_cm4.h **** 
1416:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:./CORE/core_cm4.h **** 
1419:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:./CORE/core_cm4.h **** 
1422:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:./CORE/core_cm4.h **** 
1425:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:./CORE/core_cm4.h **** 
1428:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:./CORE/core_cm4.h **** 
1431:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:./CORE/core_cm4.h **** 
1434:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:./CORE/core_cm4.h **** 
1437:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:./CORE/core_cm4.h **** 
1440:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:./CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:./CORE/core_cm4.h **** 
1443:./CORE/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:./CORE/core_cm4.h **** 
1445:./CORE/core_cm4.h **** 
1446:./CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:./CORE/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:./CORE/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:./CORE/core_cm4.h ****   @{
1450:./CORE/core_cm4.h ****  */
1451:./CORE/core_cm4.h **** 
1452:./CORE/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:./CORE/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:./CORE/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:./CORE/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:./CORE/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 27


1457:./CORE/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:./CORE/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:./CORE/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:./CORE/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:./CORE/core_cm4.h **** 
1462:./CORE/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:./CORE/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:./CORE/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:./CORE/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:./CORE/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:./CORE/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:./CORE/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:./CORE/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:./CORE/core_cm4.h **** 
1471:./CORE/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:./CORE/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:./CORE/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:./CORE/core_cm4.h **** #endif
1475:./CORE/core_cm4.h **** 
1476:./CORE/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:./CORE/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:./CORE/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:./CORE/core_cm4.h **** #endif
1480:./CORE/core_cm4.h **** 
1481:./CORE/core_cm4.h **** /*@} */
1482:./CORE/core_cm4.h **** 
1483:./CORE/core_cm4.h **** 
1484:./CORE/core_cm4.h **** 
1485:./CORE/core_cm4.h **** /*******************************************************************************
1486:./CORE/core_cm4.h ****  *                Hardware Abstraction Layer
1487:./CORE/core_cm4.h ****   Core Function Interface contains:
1488:./CORE/core_cm4.h ****   - Core NVIC Functions
1489:./CORE/core_cm4.h ****   - Core SysTick Functions
1490:./CORE/core_cm4.h ****   - Core Debug Functions
1491:./CORE/core_cm4.h ****   - Core Register Access Functions
1492:./CORE/core_cm4.h ****  ******************************************************************************/
1493:./CORE/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:./CORE/core_cm4.h **** */
1495:./CORE/core_cm4.h **** 
1496:./CORE/core_cm4.h **** 
1497:./CORE/core_cm4.h **** 
1498:./CORE/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:./CORE/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:./CORE/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:./CORE/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:./CORE/core_cm4.h ****     @{
1503:./CORE/core_cm4.h ****  */
1504:./CORE/core_cm4.h **** 
1505:./CORE/core_cm4.h **** /** \brief  Set Priority Grouping
1506:./CORE/core_cm4.h **** 
1507:./CORE/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:./CORE/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:./CORE/core_cm4.h ****   Only values from 0..7 are used.
1510:./CORE/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:./CORE/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:./CORE/core_cm4.h **** 
1513:./CORE/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 28


1514:./CORE/core_cm4.h ****  */
1515:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:./CORE/core_cm4.h **** {
1517:./CORE/core_cm4.h ****   uint32_t reg_value;
1518:./CORE/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:./CORE/core_cm4.h **** 
1520:./CORE/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:./CORE/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:./CORE/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:./CORE/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:./CORE/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:./CORE/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:./CORE/core_cm4.h **** }
1527:./CORE/core_cm4.h **** 
1528:./CORE/core_cm4.h **** 
1529:./CORE/core_cm4.h **** /** \brief  Get Priority Grouping
1530:./CORE/core_cm4.h **** 
1531:./CORE/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:./CORE/core_cm4.h **** 
1533:./CORE/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:./CORE/core_cm4.h ****  */
1535:./CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:./CORE/core_cm4.h **** {
1537:./CORE/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:./CORE/core_cm4.h **** }
1539:./CORE/core_cm4.h **** 
1540:./CORE/core_cm4.h **** 
1541:./CORE/core_cm4.h **** /** \brief  Enable External Interrupt
1542:./CORE/core_cm4.h **** 
1543:./CORE/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:./CORE/core_cm4.h **** 
1545:./CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:./CORE/core_cm4.h ****  */
1547:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:./CORE/core_cm4.h **** {
1549:./CORE/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1550:./CORE/core_cm4.h **** }
1551:./CORE/core_cm4.h **** 
1552:./CORE/core_cm4.h **** 
1553:./CORE/core_cm4.h **** /** \brief  Disable External Interrupt
1554:./CORE/core_cm4.h **** 
1555:./CORE/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:./CORE/core_cm4.h **** 
1557:./CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:./CORE/core_cm4.h ****  */
1559:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:./CORE/core_cm4.h **** {
1561:./CORE/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1562:./CORE/core_cm4.h **** }
1563:./CORE/core_cm4.h **** 
1564:./CORE/core_cm4.h **** 
1565:./CORE/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:./CORE/core_cm4.h **** 
1567:./CORE/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:./CORE/core_cm4.h ****     for the specified interrupt.
1569:./CORE/core_cm4.h **** 
1570:./CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 29


1571:./CORE/core_cm4.h **** 
1572:./CORE/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:./CORE/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:./CORE/core_cm4.h ****  */
1575:./CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:./CORE/core_cm4.h **** {
1577:./CORE/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1578:./CORE/core_cm4.h **** }
1579:./CORE/core_cm4.h **** 
1580:./CORE/core_cm4.h **** 
1581:./CORE/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:./CORE/core_cm4.h **** 
1583:./CORE/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:./CORE/core_cm4.h **** 
1585:./CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:./CORE/core_cm4.h ****  */
1587:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:./CORE/core_cm4.h **** {
1589:./CORE/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1590:./CORE/core_cm4.h **** }
1591:./CORE/core_cm4.h **** 
1592:./CORE/core_cm4.h **** 
1593:./CORE/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:./CORE/core_cm4.h **** 
1595:./CORE/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1596:./CORE/core_cm4.h **** 
1597:./CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:./CORE/core_cm4.h ****  */
1599:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:./CORE/core_cm4.h **** {
1601:./CORE/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1602:./CORE/core_cm4.h **** }
1603:./CORE/core_cm4.h **** 
1604:./CORE/core_cm4.h **** 
1605:./CORE/core_cm4.h **** /** \brief  Get Active Interrupt
1606:./CORE/core_cm4.h **** 
1607:./CORE/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:./CORE/core_cm4.h **** 
1609:./CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:./CORE/core_cm4.h **** 
1611:./CORE/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:./CORE/core_cm4.h ****     \return             1  Interrupt status is active.
1613:./CORE/core_cm4.h ****  */
1614:./CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:./CORE/core_cm4.h **** {
1616:./CORE/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1617:./CORE/core_cm4.h **** }
1618:./CORE/core_cm4.h **** 
1619:./CORE/core_cm4.h **** 
1620:./CORE/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:./CORE/core_cm4.h **** 
1622:./CORE/core_cm4.h ****     The function sets the priority of an interrupt.
1623:./CORE/core_cm4.h **** 
1624:./CORE/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:./CORE/core_cm4.h **** 
1626:./CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1627:./CORE/core_cm4.h ****     \param [in]  priority  Priority to set.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 30


1628:./CORE/core_cm4.h ****  */
1629:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1630:./CORE/core_cm4.h **** {
  28              		.loc 1 1630 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 0346     		mov	r3, r0
  44 0008 3960     		str	r1, [r7]
  45 000a FB71     		strb	r3, [r7, #7]
1631:./CORE/core_cm4.h ****   if((int32_t)IRQn < 0) {
  46              		.loc 1 1631 5
  47 000c 97F90730 		ldrsb	r3, [r7, #7]
  48 0010 002B     		cmp	r3, #0
  49 0012 0BDA     		bge	.L2
1632:./CORE/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
  50              		.loc 1 1632 57
  51 0014 3B68     		ldr	r3, [r7]
  52 0016 DAB2     		uxtb	r2, r3
  53              		.loc 1 1632 8
  54 0018 0C49     		ldr	r1, .L5
  55              		.loc 1 1632 41
  56 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  57 001c 03F00F03 		and	r3, r3, #15
  58              		.loc 1 1632 49
  59 0020 043B     		subs	r3, r3, #4
  60              		.loc 1 1632 57
  61 0022 1201     		lsls	r2, r2, #4
  62 0024 D2B2     		uxtb	r2, r2
  63              		.loc 1 1632 55
  64 0026 0B44     		add	r3, r3, r1
  65 0028 1A76     		strb	r2, [r3, #24]
1633:./CORE/core_cm4.h ****   }
1634:./CORE/core_cm4.h ****   else {
1635:./CORE/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
1636:./CORE/core_cm4.h ****   }
1637:./CORE/core_cm4.h **** }
  66              		.loc 1 1637 1
  67 002a 09E0     		b	.L4
  68              	.L2:
1635:./CORE/core_cm4.h ****   }
  69              		.loc 1 1635 57
  70 002c 3B68     		ldr	r3, [r7]
  71 002e DAB2     		uxtb	r2, r3
1635:./CORE/core_cm4.h ****   }
  72              		.loc 1 1635 9
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 31


  73 0030 0749     		ldr	r1, .L5+4
1635:./CORE/core_cm4.h ****   }
  74              		.loc 1 1635 15
  75 0032 97F90730 		ldrsb	r3, [r7, #7]
1635:./CORE/core_cm4.h ****   }
  76              		.loc 1 1635 57
  77 0036 1201     		lsls	r2, r2, #4
  78 0038 D2B2     		uxtb	r2, r2
1635:./CORE/core_cm4.h ****   }
  79              		.loc 1 1635 55
  80 003a 0B44     		add	r3, r3, r1
  81 003c 83F80023 		strb	r2, [r3, #768]
  82              	.L4:
  83              		.loc 1 1637 1
  84 0040 00BF     		nop
  85 0042 0C37     		adds	r7, r7, #12
  86              	.LCFI3:
  87              		.cfi_def_cfa_offset 4
  88 0044 BD46     		mov	sp, r7
  89              	.LCFI4:
  90              		.cfi_def_cfa_register 13
  91              		@ sp needed
  92 0046 5DF8047B 		ldr	r7, [sp], #4
  93              	.LCFI5:
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 004a 7047     		bx	lr
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 004c 00ED00E0 		.word	-536810240
 101 0050 00E100E0 		.word	-536813312
 102              		.cfi_endproc
 103              	.LFE114:
 105              		.section	.text.SysTick_Config,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	SysTick_Config:
 112              	.LFB119:
1638:./CORE/core_cm4.h **** 
1639:./CORE/core_cm4.h **** 
1640:./CORE/core_cm4.h **** /** \brief  Get Interrupt Priority
1641:./CORE/core_cm4.h **** 
1642:./CORE/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1643:./CORE/core_cm4.h ****     number can be positive to specify an external (device specific)
1644:./CORE/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1645:./CORE/core_cm4.h **** 
1646:./CORE/core_cm4.h **** 
1647:./CORE/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1648:./CORE/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1649:./CORE/core_cm4.h ****                         priority bits of the microcontroller.
1650:./CORE/core_cm4.h ****  */
1651:./CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1652:./CORE/core_cm4.h **** {
1653:./CORE/core_cm4.h **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 32


1654:./CORE/core_cm4.h ****   if((int32_t)IRQn < 0) {
1655:./CORE/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8 - __NVIC_PRIO_BITS)))
1656:./CORE/core_cm4.h ****   }
1657:./CORE/core_cm4.h ****   else {
1658:./CORE/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8 - __NVIC_PRIO_BITS)))
1659:./CORE/core_cm4.h ****   }
1660:./CORE/core_cm4.h **** }
1661:./CORE/core_cm4.h **** 
1662:./CORE/core_cm4.h **** 
1663:./CORE/core_cm4.h **** /** \brief  Encode Priority
1664:./CORE/core_cm4.h **** 
1665:./CORE/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1666:./CORE/core_cm4.h ****     preemptive priority value, and subpriority value.
1667:./CORE/core_cm4.h ****     In case of a conflict between priority grouping and available
1668:./CORE/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1669:./CORE/core_cm4.h **** 
1670:./CORE/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1671:./CORE/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1672:./CORE/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1673:./CORE/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1674:./CORE/core_cm4.h ****  */
1675:./CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1676:./CORE/core_cm4.h **** {
1677:./CORE/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1678:./CORE/core_cm4.h ****   uint32_t PreemptPriorityBits;
1679:./CORE/core_cm4.h ****   uint32_t SubPriorityBits;
1680:./CORE/core_cm4.h **** 
1681:./CORE/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1682:./CORE/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1683:./CORE/core_cm4.h **** 
1684:./CORE/core_cm4.h ****   return (
1685:./CORE/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1686:./CORE/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1687:./CORE/core_cm4.h ****          );
1688:./CORE/core_cm4.h **** }
1689:./CORE/core_cm4.h **** 
1690:./CORE/core_cm4.h **** 
1691:./CORE/core_cm4.h **** /** \brief  Decode Priority
1692:./CORE/core_cm4.h **** 
1693:./CORE/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1694:./CORE/core_cm4.h ****     preemptive priority value and subpriority value.
1695:./CORE/core_cm4.h ****     In case of a conflict between priority grouping and available
1696:./CORE/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1697:./CORE/core_cm4.h **** 
1698:./CORE/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1699:./CORE/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1700:./CORE/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1701:./CORE/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1702:./CORE/core_cm4.h ****  */
1703:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1704:./CORE/core_cm4.h **** {
1705:./CORE/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1706:./CORE/core_cm4.h ****   uint32_t PreemptPriorityBits;
1707:./CORE/core_cm4.h ****   uint32_t SubPriorityBits;
1708:./CORE/core_cm4.h **** 
1709:./CORE/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1710:./CORE/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 33


1711:./CORE/core_cm4.h **** 
1712:./CORE/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1713:./CORE/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1714:./CORE/core_cm4.h **** }
1715:./CORE/core_cm4.h **** 
1716:./CORE/core_cm4.h **** 
1717:./CORE/core_cm4.h **** /** \brief  System Reset
1718:./CORE/core_cm4.h **** 
1719:./CORE/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1720:./CORE/core_cm4.h ****  */
1721:./CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1722:./CORE/core_cm4.h **** {
1723:./CORE/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1724:./CORE/core_cm4.h ****                                                                        buffered write are completed
1725:./CORE/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1726:./CORE/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1727:./CORE/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1728:./CORE/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1729:./CORE/core_cm4.h ****   while(1) { __NOP(); }                                             /* wait until reset */
1730:./CORE/core_cm4.h **** }
1731:./CORE/core_cm4.h **** 
1732:./CORE/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1733:./CORE/core_cm4.h **** 
1734:./CORE/core_cm4.h **** 
1735:./CORE/core_cm4.h **** 
1736:./CORE/core_cm4.h **** /* ##################################    SysTick function  ########################################
1737:./CORE/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1738:./CORE/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1739:./CORE/core_cm4.h ****     \brief      Functions that configure the System.
1740:./CORE/core_cm4.h ****   @{
1741:./CORE/core_cm4.h ****  */
1742:./CORE/core_cm4.h **** 
1743:./CORE/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1744:./CORE/core_cm4.h **** 
1745:./CORE/core_cm4.h **** /** \brief  System Tick Configuration
1746:./CORE/core_cm4.h **** 
1747:./CORE/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1748:./CORE/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1749:./CORE/core_cm4.h **** 
1750:./CORE/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1751:./CORE/core_cm4.h **** 
1752:./CORE/core_cm4.h ****     \return          0  Function succeeded.
1753:./CORE/core_cm4.h ****     \return          1  Function failed.
1754:./CORE/core_cm4.h **** 
1755:./CORE/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1756:./CORE/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1757:./CORE/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1758:./CORE/core_cm4.h **** 
1759:./CORE/core_cm4.h ****  */
1760:./CORE/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1761:./CORE/core_cm4.h **** {
 113              		.loc 1 1761 1
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              	.LCFI6:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 34


 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 82B0     		sub	sp, sp, #8
 123              	.LCFI7:
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              	.LCFI8:
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
1762:./CORE/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 129              		.loc 1 1762 14
 130 0008 7B68     		ldr	r3, [r7, #4]
 131 000a 013B     		subs	r3, r3, #1
 132              		.loc 1 1762 6
 133 000c B3F1807F 		cmp	r3, #16777216
 134 0010 01D3     		bcc	.L8
 135              		.loc 1 1762 57 discriminator 1
 136 0012 0123     		movs	r3, #1
 137 0014 0FE0     		b	.L9
 138              	.L8:
1763:./CORE/core_cm4.h **** 
1764:./CORE/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 139              		.loc 1 1764 10
 140 0016 0A4A     		ldr	r2, .L10
 141              		.loc 1 1764 20
 142 0018 7B68     		ldr	r3, [r7, #4]
 143 001a 013B     		subs	r3, r3, #1
 144              		.loc 1 1764 18
 145 001c 5360     		str	r3, [r2, #4]
1765:./CORE/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 146              		.loc 1 1765 3
 147 001e 0F21     		movs	r1, #15
 148 0020 4FF0FF30 		mov	r0, #-1
 149 0024 FFF7FEFF 		bl	NVIC_SetPriority
1766:./CORE/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 150              		.loc 1 1766 10
 151 0028 054B     		ldr	r3, .L10
 152              		.loc 1 1766 18
 153 002a 0022     		movs	r2, #0
 154 002c 9A60     		str	r2, [r3, #8]
1767:./CORE/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 155              		.loc 1 1767 10
 156 002e 044B     		ldr	r3, .L10
 157              		.loc 1 1767 18
 158 0030 0722     		movs	r2, #7
 159 0032 1A60     		str	r2, [r3]
1768:./CORE/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1769:./CORE/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1770:./CORE/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 160              		.loc 1 1770 10
 161 0034 0023     		movs	r3, #0
 162              	.L9:
1771:./CORE/core_cm4.h **** }
 163              		.loc 1 1771 1
 164 0036 1846     		mov	r0, r3
 165 0038 0837     		adds	r7, r7, #8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 35


 166              	.LCFI9:
 167              		.cfi_def_cfa_offset 8
 168 003a BD46     		mov	sp, r7
 169              	.LCFI10:
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 003c 80BD     		pop	{r7, pc}
 173              	.L11:
 174 003e 00BF     		.align	2
 175              	.L10:
 176 0040 10E000E0 		.word	-536813552
 177              		.cfi_endproc
 178              	.LFE119:
 180              		.section	.bss.uwTimingDelay,"aw",%nobits
 181              		.align	2
 184              	uwTimingDelay:
 185 0000 00000000 		.space	4
 186              		.global	RCC_Clocks
 187              		.section	.bss.RCC_Clocks,"aw",%nobits
 188              		.align	2
 191              	RCC_Clocks:
 192 0000 00000000 		.space	16
 192      00000000 
 192      00000000 
 192      00000000 
 193              		.section	.text.main,"ax",%progbits
 194              		.align	1
 195              		.global	main
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	main:
 201              	.LFB126:
 202              		.file 2 "./User/main.c"
   1:./User/main.c **** /**
   2:./User/main.c ****   ******************************************************************************
   3:./User/main.c ****   * @file    Project/STM32F4xx_StdPeriph_Templates/main.c 
   4:./User/main.c ****   * @author  MCD Application Team
   5:./User/main.c ****   * @version V1.8.1
   6:./User/main.c ****   * @date    27-January-2022
   7:./User/main.c ****   * @brief   Main program body
   8:./User/main.c ****   ******************************************************************************
   9:./User/main.c ****   * @attention
  10:./User/main.c ****   *
  11:./User/main.c ****   * Copyright (c) 2016 STMicroelectronics.
  12:./User/main.c ****   * All rights reserved.
  13:./User/main.c ****   *
  14:./User/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:./User/main.c ****   * in the root directory of this software component.
  16:./User/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:./User/main.c ****   *
  18:./User/main.c ****   ******************************************************************************
  19:./User/main.c ****   */
  20:./User/main.c **** 
  21:./User/main.c **** /* Includes ------------------------------------------------------------------*/
  22:./User/main.c **** #include "main.h"
  23:./User/main.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 36


  24:./User/main.c **** /** @addtogroup Template_Project
  25:./User/main.c ****   * @{
  26:./User/main.c ****   */ 
  27:./User/main.c **** 
  28:./User/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:./User/main.c **** 
  30:./User/main.c **** /* Private define ------------------------------------------------------------*/
  31:./User/main.c **** 
  32:./User/main.c **** /* Private macro -------------------------------------------------------------*/
  33:./User/main.c **** 
  34:./User/main.c **** /* Private variables ---------------------------------------------------------*/
  35:./User/main.c **** static __IO uint32_t uwTimingDelay;
  36:./User/main.c **** RCC_ClocksTypeDef RCC_Clocks;
  37:./User/main.c **** 
  38:./User/main.c **** /* Private function prototypes -----------------------------------------------*/
  39:./User/main.c **** 
  40:./User/main.c **** 
  41:./User/main.c **** /* Private functions ---------------------------------------------------------*/
  42:./User/main.c **** 
  43:./User/main.c **** /**
  44:./User/main.c ****   * @brief  Main program
  45:./User/main.c ****   * @param  None
  46:./User/main.c ****   * @retval None
  47:./User/main.c ****   */
  48:./User/main.c **** int main(void)
  49:./User/main.c **** {
 203              		.loc 2 49 1
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 16
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              	.LCFI11:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 84B0     		sub	sp, sp, #16
 213              	.LCFI12:
 214              		.cfi_def_cfa_offset 24
 215 0004 00AF     		add	r7, sp, #0
 216              	.LCFI13:
 217              		.cfi_def_cfa_register 7
  50:./User/main.c **** 	
  51:./User/main.c **** 	
  52:./User/main.c **** 	
  53:./User/main.c **** /* System -------------------------------------------------------------------*/ 
  54:./User/main.c ****  
  55:./User/main.c ****   /*!< At this stage the microcontroller clock setting is already configured, 
  56:./User/main.c ****        this is done through SystemInit() function which is called from startup
  57:./User/main.c ****        files before to branch to application main.
  58:./User/main.c ****        To reconfigure the default setting of SystemInit() function, 
  59:./User/main.c ****        refer to system_stm32f4xx.c file */
  60:./User/main.c **** 
  61:./User/main.c ****   /* SysTick end of count event each 10ms */
  62:./User/main.c ****   RCC_GetClocksFreq(&RCC_Clocks);
 218              		.loc 2 62 3
 219 0006 2D48     		ldr	r0, .L17
 220 0008 FFF7FEFF 		bl	RCC_GetClocksFreq
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 37


  63:./User/main.c ****   SysTick_Config(RCC_Clocks.HCLK_Frequency / 100);
 221              		.loc 2 63 28
 222 000c 2B4B     		ldr	r3, .L17
 223 000e 5B68     		ldr	r3, [r3, #4]
 224              		.loc 2 63 3
 225 0010 2B4A     		ldr	r2, .L17+4
 226 0012 A2FB0323 		umull	r2, r3, r2, r3
 227 0016 5B09     		lsrs	r3, r3, #5
 228 0018 1846     		mov	r0, r3
 229 001a FFF7FEFF 		bl	SysTick_Config
  64:./User/main.c ****   
  65:./User/main.c ****   /* Add your application code here */
  66:./User/main.c ****   /* Insert 50 ms delay */
  67:./User/main.c ****   Delay(5);
 230              		.loc 2 67 3
 231 001e 0520     		movs	r0, #5
 232 0020 FFF7FEFF 		bl	Delay
  68:./User/main.c ****   
  69:./User/main.c **** 	
  70:./User/main.c **** 	
  71:./User/main.c **** 	
  72:./User/main.c **** 	
  73:./User/main.c **** 	
  74:./User/main.c **** /* Initials -------------------------------------------------------------------*/ 
  75:./User/main.c ****   LD2_init();
 233              		.loc 2 75 3
 234 0024 FFF7FEFF 		bl	LD2_init
  76:./User/main.c ****   LD2_ON();
 235              		.loc 2 76 3
 236 0028 FFF7FEFF 		bl	LD2_ON
  77:./User/main.c ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 237              		.loc 2 77 3
 238 002c 0121     		movs	r1, #1
 239 002e 0120     		movs	r0, #1
 240 0030 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  78:./User/main.c ****   GPIO_InitTypeDef GPIO_InitStructure;
  79:./User/main.c **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;
 241              		.loc 2 79 30
 242 0034 0623     		movs	r3, #6
 243 0036 7B60     		str	r3, [r7, #4]
  80:./User/main.c **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 244              		.loc 2 80 32
 245 0038 0323     		movs	r3, #3
 246 003a 7B72     		strb	r3, [r7, #9]
  81:./User/main.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 247              		.loc 2 81 31
 248 003c 0123     		movs	r3, #1
 249 003e 3B72     		strb	r3, [r7, #8]
  82:./User/main.c **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 250              		.loc 2 82 32
 251 0040 0023     		movs	r3, #0
 252 0042 BB72     		strb	r3, [r7, #10]
  83:./User/main.c **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 253              		.loc 2 83 2
 254 0044 3B1D     		adds	r3, r7, #4
 255 0046 1946     		mov	r1, r3
 256 0048 1E48     		ldr	r0, .L17+8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 38


 257 004a FFF7FEFF 		bl	GPIO_Init
  84:./User/main.c ****   int counter = 0;
 258              		.loc 2 84 7
 259 004e 0023     		movs	r3, #0
 260 0050 FB60     		str	r3, [r7, #12]
 261              	.L16:
  85:./User/main.c **** 	while(1)
  86:./User/main.c **** 	{
  87:./User/main.c ****     counter ++;
 262              		.loc 2 87 13
 263 0052 FB68     		ldr	r3, [r7, #12]
 264 0054 0133     		adds	r3, r3, #1
 265 0056 FB60     		str	r3, [r7, #12]
  88:./User/main.c ****     GPIO_SetBits(GPIOA,GPIO_Pin_1);
 266              		.loc 2 88 5
 267 0058 0221     		movs	r1, #2
 268 005a 1A48     		ldr	r0, .L17+8
 269 005c FFF7FEFF 		bl	GPIO_SetBits
  89:./User/main.c **** 
  90:./User/main.c ****     if (counter == 71 || counter ==76|| counter ==77|| counter ==82|| counter ==83)
 270              		.loc 2 90 8
 271 0060 FB68     		ldr	r3, [r7, #12]
 272 0062 472B     		cmp	r3, #71
 273 0064 0BD0     		beq	.L13
 274              		.loc 2 90 23 discriminator 1
 275 0066 FB68     		ldr	r3, [r7, #12]
 276 0068 4C2B     		cmp	r3, #76
 277 006a 08D0     		beq	.L13
 278              		.loc 2 90 38 discriminator 2
 279 006c FB68     		ldr	r3, [r7, #12]
 280 006e 4D2B     		cmp	r3, #77
 281 0070 05D0     		beq	.L13
 282              		.loc 2 90 53 discriminator 3
 283 0072 FB68     		ldr	r3, [r7, #12]
 284 0074 522B     		cmp	r3, #82
 285 0076 02D0     		beq	.L13
 286              		.loc 2 90 68 discriminator 4
 287 0078 FB68     		ldr	r3, [r7, #12]
 288 007a 532B     		cmp	r3, #83
 289 007c 06D1     		bne	.L14
 290              	.L13:
  91:./User/main.c ****     { 
  92:./User/main.c ****       GPIO_ResetBits(GPIOA,GPIO_Pin_2);
 291              		.loc 2 92 7
 292 007e 0421     		movs	r1, #4
 293 0080 1048     		ldr	r0, .L17+8
 294 0082 FFF7FEFF 		bl	GPIO_ResetBits
  93:./User/main.c ****       LD2_OFF();
 295              		.loc 2 93 7
 296 0086 FFF7FEFF 		bl	LD2_OFF
 297 008a 05E0     		b	.L15
 298              	.L14:
  94:./User/main.c ****     }
  95:./User/main.c ****     else 
  96:./User/main.c ****     {
  97:./User/main.c ****       GPIO_SetBits(GPIOA,GPIO_Pin_2);
 299              		.loc 2 97 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 39


 300 008c 0421     		movs	r1, #4
 301 008e 0D48     		ldr	r0, .L17+8
 302 0090 FFF7FEFF 		bl	GPIO_SetBits
  98:./User/main.c ****       LD2_ON();
 303              		.loc 2 98 7
 304 0094 FFF7FEFF 		bl	LD2_ON
 305              	.L15:
  99:./User/main.c ****     }
 100:./User/main.c **** 
 101:./User/main.c ****     Delay_ms(10);
 306              		.loc 2 101 5
 307 0098 4FF00A00 		mov	r0, #10
 308 009c 4FF00001 		mov	r1, #0
 309 00a0 FFF7FEFF 		bl	Delay_ms
 102:./User/main.c **** 
 103:./User/main.c **** 
 104:./User/main.c **** 
 105:./User/main.c ****     GPIO_ResetBits(GPIOA,GPIO_Pin_1);
 310              		.loc 2 105 5
 311 00a4 0221     		movs	r1, #2
 312 00a6 0748     		ldr	r0, .L17+8
 313 00a8 FFF7FEFF 		bl	GPIO_ResetBits
 106:./User/main.c ****     Delay_ms(10);
 314              		.loc 2 106 5
 315 00ac 4FF00A00 		mov	r0, #10
 316 00b0 4FF00001 		mov	r1, #0
 317 00b4 FFF7FEFF 		bl	Delay_ms
  87:./User/main.c ****     GPIO_SetBits(GPIOA,GPIO_Pin_1);
 318              		.loc 2 87 13
 319 00b8 CBE7     		b	.L16
 320              	.L18:
 321 00ba 00BF     		.align	2
 322              	.L17:
 323 00bc 00000000 		.word	RCC_Clocks
 324 00c0 1F85EB51 		.word	1374389535
 325 00c4 00000240 		.word	1073872896
 326              		.cfi_endproc
 327              	.LFE126:
 329              		.section	.text.Delay,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	Delay:
 336              	.LFB127:
 107:./User/main.c **** 
 108:./User/main.c **** 	}
 109:./User/main.c **** 
 110:./User/main.c **** 
 111:./User/main.c **** //	LD2_OFF();
 112:./User/main.c **** //	PWM_SetCompare1(140-1);
 113:./User/main.c **** 
 114:./User/main.c **** }
 115:./User/main.c **** 
 116:./User/main.c **** 
 117:./User/main.c **** 
 118:./User/main.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 40


 119:./User/main.c **** 
 120:./User/main.c **** 
 121:./User/main.c **** 
 122:./User/main.c **** 
 123:./User/main.c **** 
 124:./User/main.c **** 
 125:./User/main.c **** 
 126:./User/main.c **** 
 127:./User/main.c **** 
 128:./User/main.c **** 
 129:./User/main.c **** 
 130:./User/main.c **** 
 131:./User/main.c **** 
 132:./User/main.c **** 
 133:./User/main.c **** 
 134:./User/main.c **** 
 135:./User/main.c **** 
 136:./User/main.c **** 
 137:./User/main.c **** 
 138:./User/main.c **** 
 139:./User/main.c **** 
 140:./User/main.c **** 
 141:./User/main.c **** 
 142:./User/main.c **** 
 143:./User/main.c **** 
 144:./User/main.c **** 
 145:./User/main.c **** /**
 146:./User/main.c ****   * @brief  Inserts a delay time.
 147:./User/main.c ****   * @param  nTime: specifies the delay time length, in milliseconds.
 148:./User/main.c ****   * @retval None
 149:./User/main.c ****   */
 150:./User/main.c **** void Delay(__IO uint32_t nTime)
 151:./User/main.c **** { 
 337              		.loc 2 151 1
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 8
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              	.LCFI14:
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 83B0     		sub	sp, sp, #12
 347              	.LCFI15:
 348              		.cfi_def_cfa_offset 16
 349 0004 00AF     		add	r7, sp, #0
 350              	.LCFI16:
 351              		.cfi_def_cfa_register 7
 352 0006 7860     		str	r0, [r7, #4]
 152:./User/main.c ****   uwTimingDelay = nTime;
 353              		.loc 2 152 17
 354 0008 7B68     		ldr	r3, [r7, #4]
 355 000a 074A     		ldr	r2, .L21
 356 000c 1360     		str	r3, [r2]
 153:./User/main.c **** 
 154:./User/main.c ****   while(uwTimingDelay != 0);
 357              		.loc 2 154 8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 41


 358 000e 00BF     		nop
 359              	.L20:
 360              		.loc 2 154 23 discriminator 1
 361 0010 054B     		ldr	r3, .L21
 362 0012 1B68     		ldr	r3, [r3]
 363              		.loc 2 154 8 discriminator 1
 364 0014 002B     		cmp	r3, #0
 365 0016 FBD1     		bne	.L20
 155:./User/main.c **** }
 366              		.loc 2 155 1
 367 0018 00BF     		nop
 368 001a 00BF     		nop
 369 001c 0C37     		adds	r7, r7, #12
 370              	.LCFI17:
 371              		.cfi_def_cfa_offset 4
 372 001e BD46     		mov	sp, r7
 373              	.LCFI18:
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 0020 5DF8047B 		ldr	r7, [sp], #4
 377              	.LCFI19:
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 0024 7047     		bx	lr
 381              	.L22:
 382 0026 00BF     		.align	2
 383              	.L21:
 384 0028 00000000 		.word	uwTimingDelay
 385              		.cfi_endproc
 386              	.LFE127:
 388              		.section	.text.TimingDelay_Decrement,"ax",%progbits
 389              		.align	1
 390              		.global	TimingDelay_Decrement
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	TimingDelay_Decrement:
 396              	.LFB128:
 156:./User/main.c **** 
 157:./User/main.c **** /**
 158:./User/main.c ****   * @brief  Decrements the TimingDelay variable.
 159:./User/main.c ****   * @param  None
 160:./User/main.c ****   * @retval None
 161:./User/main.c ****   */
 162:./User/main.c **** void TimingDelay_Decrement(void)
 163:./User/main.c **** {
 397              		.loc 2 163 1
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402 0000 80B4     		push	{r7}
 403              	.LCFI20:
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 00AF     		add	r7, sp, #0
 407              	.LCFI21:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 42


 408              		.cfi_def_cfa_register 7
 164:./User/main.c ****   if (uwTimingDelay != 0x00)
 409              		.loc 2 164 21
 410 0004 064B     		ldr	r3, .L26
 411 0006 1B68     		ldr	r3, [r3]
 412              		.loc 2 164 6
 413 0008 002B     		cmp	r3, #0
 414 000a 04D0     		beq	.L25
 165:./User/main.c ****   { 
 166:./User/main.c ****     uwTimingDelay--;
 415              		.loc 2 166 18
 416 000c 044B     		ldr	r3, .L26
 417 000e 1B68     		ldr	r3, [r3]
 418 0010 013B     		subs	r3, r3, #1
 419 0012 034A     		ldr	r2, .L26
 420 0014 1360     		str	r3, [r2]
 421              	.L25:
 167:./User/main.c ****   }
 168:./User/main.c **** }
 422              		.loc 2 168 1
 423 0016 00BF     		nop
 424 0018 BD46     		mov	sp, r7
 425              	.LCFI22:
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 001a 5DF8047B 		ldr	r7, [sp], #4
 429              	.LCFI23:
 430              		.cfi_restore 7
 431              		.cfi_def_cfa_offset 0
 432 001e 7047     		bx	lr
 433              	.L27:
 434              		.align	2
 435              	.L26:
 436 0020 00000000 		.word	uwTimingDelay
 437              		.cfi_endproc
 438              	.LFE128:
 440              		.text
 441              	.Letext0:
 442              		.file 3 "./CORE/stm32f4xx.h"
 443              		.file 4 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 444              		.file 5 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 445              		.file 6 "./Library/stm32f4xx_gpio.h"
 446              		.file 7 "./Library/stm32f4xx_rcc.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:20     .text.NVIC_SetPriority:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:25     .text.NVIC_SetPriority:0000000000000000 NVIC_SetPriority
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:100    .text.NVIC_SetPriority:000000000000004c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:106    .text.SysTick_Config:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:111    .text.SysTick_Config:0000000000000000 SysTick_Config
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:176    .text.SysTick_Config:0000000000000040 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:181    .bss.uwTimingDelay:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:184    .bss.uwTimingDelay:0000000000000000 uwTimingDelay
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:191    .bss.RCC_Clocks:0000000000000000 RCC_Clocks
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:188    .bss.RCC_Clocks:0000000000000000 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:194    .text.main:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:200    .text.main:0000000000000000 main
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:335    .text.Delay:0000000000000000 Delay
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:323    .text.main:00000000000000bc $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:330    .text.Delay:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:384    .text.Delay:0000000000000028 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:389    .text.TimingDelay_Decrement:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:395    .text.TimingDelay_Decrement:0000000000000000 TimingDelay_Decrement
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccs7D8sK.s:436    .text.TimingDelay_Decrement:0000000000000020 $d

UNDEFINED SYMBOLS
RCC_GetClocksFreq
LD2_init
LD2_ON
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_SetBits
GPIO_ResetBits
LD2_OFF
Delay_ms
