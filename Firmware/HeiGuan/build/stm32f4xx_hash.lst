ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HASH_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HASH_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HASH_DeInit:
  27              	.LFB123:
  28              		.file 1 "./Library/stm32f4xx_hash.c"
   1:./Library/stm32f4xx_hash.c **** /**
   2:./Library/stm32f4xx_hash.c ****   ******************************************************************************
   3:./Library/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:./Library/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_hash.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_hash.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:./Library/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:./Library/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:./Library/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:./Library/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:./Library/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:./Library/stm32f4xx_hash.c ****   *         
  15:./Library/stm32f4xx_hash.c **** @verbatim
  16:./Library/stm32f4xx_hash.c ****  ===================================================================      
  17:./Library/stm32f4xx_hash.c ****                  ##### How to use this driver #####
  18:./Library/stm32f4xx_hash.c ****  ===================================================================
  19:./Library/stm32f4xx_hash.c ****             
  20:./Library/stm32f4xx_hash.c ****  *** HASH operation : *** 
  21:./Library/stm32f4xx_hash.c ****  ========================                 
  22:./Library/stm32f4xx_hash.c ****  [..]
  23:./Library/stm32f4xx_hash.c ****    (#) Enable the HASH controller clock using 
  24:./Library/stm32f4xx_hash.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  25:./Library/stm32f4xx_hash.c ****              
  26:./Library/stm32f4xx_hash.c ****    (#) Initialize the HASH using HASH_Init() function. 
  27:./Library/stm32f4xx_hash.c ****                  
  28:./Library/stm32f4xx_hash.c ****    (#) Reset the HASH processor core, so that the HASH will be ready 
  29:./Library/stm32f4xx_hash.c ****        to compute he message digest of a new message by using HASH_Reset() function.
  30:./Library/stm32f4xx_hash.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 2


  31:./Library/stm32f4xx_hash.c ****    (#) Enable the HASH controller using the HASH_Cmd() function. 
  32:./Library/stm32f4xx_hash.c ****                   
  33:./Library/stm32f4xx_hash.c ****    (#) if using DMA for Data input transfer, Activate the DMA Request 
  34:./Library/stm32f4xx_hash.c ****        using HASH_DMACmd() function 
  35:./Library/stm32f4xx_hash.c ****                       
  36:./Library/stm32f4xx_hash.c ****    (#) if DMA is not used for data transfer, use HASH_DataIn() function 
  37:./Library/stm32f4xx_hash.c ****        to enter data to IN FIFO.
  38:./Library/stm32f4xx_hash.c ****                
  39:./Library/stm32f4xx_hash.c ****             
  40:./Library/stm32f4xx_hash.c ****    (#) Configure the Number of valid bits in last word of the message 
  41:./Library/stm32f4xx_hash.c ****        using HASH_SetLastWordValidBitsNbr() function.
  42:./Library/stm32f4xx_hash.c ****                
  43:./Library/stm32f4xx_hash.c ****    (#) if the message length is not an exact multiple of 512 bits, 
  44:./Library/stm32f4xx_hash.c ****        then the function HASH_StartDigest() must be called to launch the computation
  45:./Library/stm32f4xx_hash.c ****        of the final digest.     
  46:./Library/stm32f4xx_hash.c ****                
  47:./Library/stm32f4xx_hash.c ****    (#) Once computed, the digest can be read using HASH_GetDigest() function.         
  48:./Library/stm32f4xx_hash.c ****                      
  49:./Library/stm32f4xx_hash.c ****    (#) To control HASH events you can use one of the following wo methods:
  50:./Library/stm32f4xx_hash.c ****        (++) Check on HASH flags using the HASH_GetFlagStatus() function.  
  51:./Library/stm32f4xx_hash.c ****        (++) Use HASH interrupts through the function HASH_ITConfig() at 
  52:./Library/stm32f4xx_hash.c ****             initialization phase and HASH_GetITStatus() function into 
  53:./Library/stm32f4xx_hash.c ****             interrupt routines in hashing phase.
  54:./Library/stm32f4xx_hash.c ****             After checking on a flag you should clear it using HASH_ClearFlag()
  55:./Library/stm32f4xx_hash.c ****             function. And after checking on an interrupt event you should 
  56:./Library/stm32f4xx_hash.c ****             clear it using HASH_ClearITPendingBit() function.     
  57:./Library/stm32f4xx_hash.c ****                        
  58:./Library/stm32f4xx_hash.c ****    (#) Save and restore hash processor context using 
  59:./Library/stm32f4xx_hash.c ****        HASH_SaveContext() and HASH_RestoreContext() functions.     
  60:./Library/stm32f4xx_hash.c ****                 
  61:./Library/stm32f4xx_hash.c ****   
  62:./Library/stm32f4xx_hash.c ****               
  63:./Library/stm32f4xx_hash.c ****  *** HMAC operation : *** 
  64:./Library/stm32f4xx_hash.c ****  ========================
  65:./Library/stm32f4xx_hash.c ****  [..] The HMAC algorithm is used for message authentication, by 
  66:./Library/stm32f4xx_hash.c ****       irreversibly binding the message being processed to a key chosen 
  67:./Library/stm32f4xx_hash.c ****       by the user. 
  68:./Library/stm32f4xx_hash.c ****       For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  69:./Library/stm32f4xx_hash.c ****       authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  70:./Library/stm32f4xx_hash.c ****             
  71:./Library/stm32f4xx_hash.c ****  [..] Basically, the HMAC algorithm consists of two nested hash operations:
  72:./Library/stm32f4xx_hash.c ****       HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  73:./Library/stm32f4xx_hash.c ****       where:
  74:./Library/stm32f4xx_hash.c ****       (+) "pad" is a sequence of zeroes needed to extend the key to the 
  75:./Library/stm32f4xx_hash.c ****           length of the underlying hash function data block (that is 
  76:./Library/stm32f4xx_hash.c ****           512 bits for both the SHA-1 and MD5 hash algorithms)
  77:./Library/stm32f4xx_hash.c ****       (+) "|"   represents the concatenation operator 
  78:./Library/stm32f4xx_hash.c ****             
  79:./Library/stm32f4xx_hash.c ****            
  80:./Library/stm32f4xx_hash.c ****  [..]To compute the HMAC, four different phases are required:                  
  81:./Library/stm32f4xx_hash.c ****    (#) Initialize the HASH using HASH_Init() function to do HMAC 
  82:./Library/stm32f4xx_hash.c ****        operation. 
  83:./Library/stm32f4xx_hash.c ****                   
  84:./Library/stm32f4xx_hash.c ****    (#) The key (to be used for the inner hash function) is then given to the core. 
  85:./Library/stm32f4xx_hash.c ****        This operation follows the same mechanism as the one used to send the 
  86:./Library/stm32f4xx_hash.c ****        message in the hash operation (that is, by HASH_DataIn() function and, 
  87:./Library/stm32f4xx_hash.c ****        finally, HASH_StartDigest() function.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 3


  88:./Library/stm32f4xx_hash.c ****             
  89:./Library/stm32f4xx_hash.c ****    (#) Once the last word has been entered and computation has started, 
  90:./Library/stm32f4xx_hash.c ****        the hash processor elaborates the key. It is then ready to accept the message
  91:./Library/stm32f4xx_hash.c ****        text using the same mechanism as the one used to send the message in the
  92:./Library/stm32f4xx_hash.c ****        hash operation.
  93:./Library/stm32f4xx_hash.c ****          
  94:./Library/stm32f4xx_hash.c ****    (#) After the first hash round, the hash processor returns "ready" to indicate 
  95:./Library/stm32f4xx_hash.c ****        that it is ready to receive the key to be used for the outer hash function 
  96:./Library/stm32f4xx_hash.c ****        (normally, this key is the same as the one used for the inner hash function). 
  97:./Library/stm32f4xx_hash.c ****        When the last word of the key is entered and computation starts, the HMAC 
  98:./Library/stm32f4xx_hash.c ****        result is made available using HASH_GetDigest() function.
  99:./Library/stm32f4xx_hash.c **** 
 100:./Library/stm32f4xx_hash.c **** @endverbatim
 101:./Library/stm32f4xx_hash.c ****   *         
 102:./Library/stm32f4xx_hash.c ****   ******************************************************************************
 103:./Library/stm32f4xx_hash.c ****   * @attention
 104:./Library/stm32f4xx_hash.c ****   *
 105:./Library/stm32f4xx_hash.c ****   * Copyright (c) 2016 STMicroelectronics.
 106:./Library/stm32f4xx_hash.c ****   * All rights reserved.
 107:./Library/stm32f4xx_hash.c ****   *
 108:./Library/stm32f4xx_hash.c ****   * This software is licensed under terms that can be found in the LICENSE file
 109:./Library/stm32f4xx_hash.c ****   * in the root directory of this software component.
 110:./Library/stm32f4xx_hash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 111:./Library/stm32f4xx_hash.c ****   *
 112:./Library/stm32f4xx_hash.c ****   ******************************************************************************
 113:./Library/stm32f4xx_hash.c ****   */
 114:./Library/stm32f4xx_hash.c **** 
 115:./Library/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 116:./Library/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 117:./Library/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 118:./Library/stm32f4xx_hash.c **** 
 119:./Library/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 120:./Library/stm32f4xx_hash.c ****   * @{
 121:./Library/stm32f4xx_hash.c ****   */
 122:./Library/stm32f4xx_hash.c **** 
 123:./Library/stm32f4xx_hash.c **** /** @defgroup HASH 
 124:./Library/stm32f4xx_hash.c ****   * @brief HASH driver modules
 125:./Library/stm32f4xx_hash.c ****   * @{
 126:./Library/stm32f4xx_hash.c ****   */ 
 127:./Library/stm32f4xx_hash.c **** 
 128:./Library/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 129:./Library/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 130:./Library/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 131:./Library/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 132:./Library/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 133:./Library/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 134:./Library/stm32f4xx_hash.c **** 
 135:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 136:./Library/stm32f4xx_hash.c ****   * @{
 137:./Library/stm32f4xx_hash.c ****   */ 
 138:./Library/stm32f4xx_hash.c **** 
 139:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 140:./Library/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 141:./Library/stm32f4xx_hash.c ****  *
 142:./Library/stm32f4xx_hash.c **** @verbatim    
 143:./Library/stm32f4xx_hash.c ****  ===============================================================================
 144:./Library/stm32f4xx_hash.c ****               ##### Initialization and Configuration functions #####
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 4


 145:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 146:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to 
 147:./Library/stm32f4xx_hash.c ****    (+) Initialize the HASH peripheral
 148:./Library/stm32f4xx_hash.c ****    (+) Configure the HASH Processor 
 149:./Library/stm32f4xx_hash.c ****    (+) MD5/SHA1, 
 150:./Library/stm32f4xx_hash.c ****    (+) HASH/HMAC, 
 151:./Library/stm32f4xx_hash.c ****    (+) datatype 
 152:./Library/stm32f4xx_hash.c ****    (+) HMAC Key (if mode = HMAC)
 153:./Library/stm32f4xx_hash.c ****    (+) Reset the HASH Processor 
 154:./Library/stm32f4xx_hash.c ****    
 155:./Library/stm32f4xx_hash.c **** @endverbatim
 156:./Library/stm32f4xx_hash.c ****   * @{
 157:./Library/stm32f4xx_hash.c ****   */
 158:./Library/stm32f4xx_hash.c ****   
 159:./Library/stm32f4xx_hash.c **** /**
 160:./Library/stm32f4xx_hash.c ****   * @brief  De-initializes the HASH peripheral registers to their default reset values
 161:./Library/stm32f4xx_hash.c ****   * @param  None
 162:./Library/stm32f4xx_hash.c ****   * @retval None
 163:./Library/stm32f4xx_hash.c ****   */
 164:./Library/stm32f4xx_hash.c **** void HASH_DeInit(void)
 165:./Library/stm32f4xx_hash.c **** {
  29              		.loc 1 165 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 166:./Library/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 167:./Library/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
  41              		.loc 1 167 3
  42 0004 0121     		movs	r1, #1
  43 0006 2020     		movs	r0, #32
  44 0008 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 168:./Library/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 169:./Library/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
  45              		.loc 1 169 3
  46 000c 0021     		movs	r1, #0
  47 000e 2020     		movs	r0, #32
  48 0010 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 170:./Library/stm32f4xx_hash.c **** }
  49              		.loc 1 170 1
  50 0014 00BF     		nop
  51 0016 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE123:
  55              		.section	.text.HASH_Init,"ax",%progbits
  56              		.align	1
  57              		.global	HASH_Init
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 5


  62              	HASH_Init:
  63              	.LFB124:
 171:./Library/stm32f4xx_hash.c **** 
 172:./Library/stm32f4xx_hash.c **** /**
 173:./Library/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 174:./Library/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 175:./Library/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 176:./Library/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 177:./Library/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 178:./Library/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 179:./Library/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 180:./Library/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 181:./Library/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 182:./Library/stm32f4xx_hash.c ****   * @retval None
 183:./Library/stm32f4xx_hash.c ****   */
 184:./Library/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 185:./Library/stm32f4xx_hash.c **** {
  64              		.loc 1 185 1
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 8
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 83B0     		sub	sp, sp, #12
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]
 186:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 187:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
 188:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
 189:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
 190:./Library/stm32f4xx_hash.c ****   
 191:./Library/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 192:./Library/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
  80              		.loc 1 192 12
  81 0008 184B     		ldr	r3, .L4
  82 000a 1B68     		ldr	r3, [r3]
  83 000c 174A     		ldr	r2, .L4
  84 000e 23F48023 		bic	r3, r3, #262144
  85 0012 23F0F003 		bic	r3, r3, #240
  86 0016 1360     		str	r3, [r2]
 193:./Library/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  87              		.loc 1 193 12
  88 0018 144B     		ldr	r3, .L4
  89 001a 1A68     		ldr	r2, [r3]
  90              		.loc 1 193 31
  91 001c 7B68     		ldr	r3, [r7, #4]
  92 001e 1968     		ldr	r1, [r3]
 194:./Library/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  93              		.loc 1 194 31
  94 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 6


  95 0022 9B68     		ldr	r3, [r3, #8]
 193:./Library/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  96              		.loc 1 193 52
  97 0024 1943     		orrs	r1, r1, r3
 195:./Library/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
  98              		.loc 1 195 31
  99 0026 7B68     		ldr	r3, [r7, #4]
 100 0028 5B68     		ldr	r3, [r3, #4]
 194:./Library/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
 101              		.loc 1 194 47
 102 002a 0B43     		orrs	r3, r3, r1
 193:./Library/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
 103              		.loc 1 193 12
 104 002c 0F49     		ldr	r1, .L4
 105 002e 1343     		orrs	r3, r3, r2
 106 0030 0B60     		str	r3, [r1]
 196:./Library/stm32f4xx_hash.c ****   
 197:./Library/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 198:./Library/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
 107              		.loc 1 198 21
 108 0032 7B68     		ldr	r3, [r7, #4]
 109 0034 5B68     		ldr	r3, [r3, #4]
 110              		.loc 1 198 5
 111 0036 402B     		cmp	r3, #64
 112 0038 0CD1     		bne	.L3
 199:./Library/stm32f4xx_hash.c ****   {
 200:./Library/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 201:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 113              		.loc 1 201 14
 114 003a 0C4B     		ldr	r3, .L4
 115 003c 1B68     		ldr	r3, [r3]
 116 003e 0B4A     		ldr	r2, .L4
 117 0040 23F48033 		bic	r3, r3, #65536
 118 0044 1360     		str	r3, [r2]
 202:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 119              		.loc 1 202 14
 120 0046 094B     		ldr	r3, .L4
 121 0048 1A68     		ldr	r2, [r3]
 122              		.loc 1 202 32
 123 004a 7B68     		ldr	r3, [r7, #4]
 124 004c DB68     		ldr	r3, [r3, #12]
 125              		.loc 1 202 14
 126 004e 0749     		ldr	r1, .L4
 127 0050 1343     		orrs	r3, r3, r2
 128 0052 0B60     		str	r3, [r1]
 129              	.L3:
 203:./Library/stm32f4xx_hash.c ****   }
 204:./Library/stm32f4xx_hash.c **** 
 205:./Library/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 206:./Library/stm32f4xx_hash.c ****      the message digest of a new message */
 207:./Library/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 130              		.loc 1 207 12
 131 0054 054B     		ldr	r3, .L4
 132 0056 1B68     		ldr	r3, [r3]
 133 0058 044A     		ldr	r2, .L4
 134 005a 43F00403 		orr	r3, r3, #4
 135 005e 1360     		str	r3, [r2]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 7


 208:./Library/stm32f4xx_hash.c **** }
 136              		.loc 1 208 1
 137 0060 00BF     		nop
 138 0062 0C37     		adds	r7, r7, #12
 139              	.LCFI5:
 140              		.cfi_def_cfa_offset 4
 141 0064 BD46     		mov	sp, r7
 142              	.LCFI6:
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0066 5DF8047B 		ldr	r7, [sp], #4
 146              	.LCFI7:
 147              		.cfi_restore 7
 148              		.cfi_def_cfa_offset 0
 149 006a 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 006c 00040650 		.word	1342571520
 154              		.cfi_endproc
 155              	.LFE124:
 157              		.section	.text.HASH_StructInit,"ax",%progbits
 158              		.align	1
 159              		.global	HASH_StructInit
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 164              	HASH_StructInit:
 165              	.LFB125:
 209:./Library/stm32f4xx_hash.c **** 
 210:./Library/stm32f4xx_hash.c **** /**
 211:./Library/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 212:./Library/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 213:./Library/stm32f4xx_hash.c ****   *          be initialized.  
 214:./Library/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 215:./Library/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 216:./Library/stm32f4xx_hash.c ****   * @retval None
 217:./Library/stm32f4xx_hash.c ****   */
 218:./Library/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 219:./Library/stm32f4xx_hash.c **** {
 166              		.loc 1 219 1
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 8
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 80B4     		push	{r7}
 172              	.LCFI8:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 83B0     		sub	sp, sp, #12
 176              	.LCFI9:
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI10:
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 220:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 8


 221:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 182              		.loc 1 221 39
 183 0008 7B68     		ldr	r3, [r7, #4]
 184 000a 0022     		movs	r2, #0
 185 000c 1A60     		str	r2, [r3]
 222:./Library/stm32f4xx_hash.c **** 
 223:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 224:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 186              		.loc 1 224 34
 187 000e 7B68     		ldr	r3, [r7, #4]
 188 0010 0022     		movs	r2, #0
 189 0012 5A60     		str	r2, [r3, #4]
 225:./Library/stm32f4xx_hash.c **** 
 226:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
 227:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 190              		.loc 1 227 34
 191 0014 7B68     		ldr	r3, [r7, #4]
 192 0016 0022     		movs	r2, #0
 193 0018 9A60     		str	r2, [r3, #8]
 228:./Library/stm32f4xx_hash.c **** 
 229:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 230:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 194              		.loc 1 230 37
 195 001a 7B68     		ldr	r3, [r7, #4]
 196 001c 0022     		movs	r2, #0
 197 001e DA60     		str	r2, [r3, #12]
 231:./Library/stm32f4xx_hash.c **** }
 198              		.loc 1 231 1
 199 0020 00BF     		nop
 200 0022 0C37     		adds	r7, r7, #12
 201              	.LCFI11:
 202              		.cfi_def_cfa_offset 4
 203 0024 BD46     		mov	sp, r7
 204              	.LCFI12:
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0026 5DF8047B 		ldr	r7, [sp], #4
 208              	.LCFI13:
 209              		.cfi_restore 7
 210              		.cfi_def_cfa_offset 0
 211 002a 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE125:
 215              		.section	.text.HASH_Reset,"ax",%progbits
 216              		.align	1
 217              		.global	HASH_Reset
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 222              	HASH_Reset:
 223              	.LFB126:
 232:./Library/stm32f4xx_hash.c **** 
 233:./Library/stm32f4xx_hash.c **** /**
 234:./Library/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 235:./Library/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 236:./Library/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 237:./Library/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 9


 238:./Library/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 239:./Library/stm32f4xx_hash.c ****   * @param  None
 240:./Library/stm32f4xx_hash.c ****   * @retval None
 241:./Library/stm32f4xx_hash.c ****   */
 242:./Library/stm32f4xx_hash.c **** void HASH_Reset(void)
 243:./Library/stm32f4xx_hash.c **** {
 224              		.loc 1 243 1
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              	.LCFI14:
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 7, -4
 233 0002 00AF     		add	r7, sp, #0
 234              	.LCFI15:
 235              		.cfi_def_cfa_register 7
 244:./Library/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 245:./Library/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 236              		.loc 1 245 12
 237 0004 054B     		ldr	r3, .L8
 238 0006 1B68     		ldr	r3, [r3]
 239 0008 044A     		ldr	r2, .L8
 240 000a 43F00403 		orr	r3, r3, #4
 241 000e 1360     		str	r3, [r2]
 246:./Library/stm32f4xx_hash.c **** }
 242              		.loc 1 246 1
 243 0010 00BF     		nop
 244 0012 BD46     		mov	sp, r7
 245              	.LCFI16:
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0014 5DF8047B 		ldr	r7, [sp], #4
 249              	.LCFI17:
 250              		.cfi_restore 7
 251              		.cfi_def_cfa_offset 0
 252 0018 7047     		bx	lr
 253              	.L9:
 254 001a 00BF     		.align	2
 255              	.L8:
 256 001c 00040650 		.word	1342571520
 257              		.cfi_endproc
 258              	.LFE126:
 260              		.section	.text.HASH_SetLastWordValidBitsNbr,"ax",%progbits
 261              		.align	1
 262              		.global	HASH_SetLastWordValidBitsNbr
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	HASH_SetLastWordValidBitsNbr:
 268              	.LFB127:
 247:./Library/stm32f4xx_hash.c **** /**
 248:./Library/stm32f4xx_hash.c ****   * @}
 249:./Library/stm32f4xx_hash.c ****   */
 250:./Library/stm32f4xx_hash.c ****  
 251:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 10


 252:./Library/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 253:./Library/stm32f4xx_hash.c ****  *
 254:./Library/stm32f4xx_hash.c **** @verbatim    
 255:./Library/stm32f4xx_hash.c ****  ===============================================================================
 256:./Library/stm32f4xx_hash.c ****                   ##### Message Digest generation functions #####
 257:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 258:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing the generation of message digest: 
 259:./Library/stm32f4xx_hash.c ****    (+) Push data in the IN FIFO : using HASH_DataIn()
 260:./Library/stm32f4xx_hash.c ****    (+) Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 261:./Library/stm32f4xx_hash.c ****    (+) set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 262:./Library/stm32f4xx_hash.c ****    (+) start digest calculation : using HASH_StartDigest()
 263:./Library/stm32f4xx_hash.c ****    (+) Get the Digest message : using HASH_GetDigest()
 264:./Library/stm32f4xx_hash.c ****  
 265:./Library/stm32f4xx_hash.c **** @endverbatim
 266:./Library/stm32f4xx_hash.c ****   * @{
 267:./Library/stm32f4xx_hash.c ****   */
 268:./Library/stm32f4xx_hash.c **** 
 269:./Library/stm32f4xx_hash.c **** 
 270:./Library/stm32f4xx_hash.c **** /**
 271:./Library/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 272:./Library/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 273:./Library/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 274:./Library/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 275:./Library/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 276:./Library/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 277:./Library/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 278:./Library/stm32f4xx_hash.c ****   *             - ...
 279:./Library/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 280:./Library/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 281:./Library/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 282:./Library/stm32f4xx_hash.c ****   * @retval None
 283:./Library/stm32f4xx_hash.c ****   */
 284:./Library/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 285:./Library/stm32f4xx_hash.c **** {
 269              		.loc 1 285 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274 0000 80B4     		push	{r7}
 275              	.LCFI18:
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 7, -4
 278 0002 83B0     		sub	sp, sp, #12
 279              	.LCFI19:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI20:
 283              		.cfi_def_cfa_register 7
 284 0006 0346     		mov	r3, r0
 285 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 286:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 287:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
 288:./Library/stm32f4xx_hash.c ****   
 289:./Library/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
 290:./Library/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 286              		.loc 1 290 13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 11


 287 000a 094B     		ldr	r3, .L11
 288 000c 9B68     		ldr	r3, [r3, #8]
 289 000e 084A     		ldr	r2, .L11
 290 0010 23F01F03 		bic	r3, r3, #31
 291 0014 9360     		str	r3, [r2, #8]
 291:./Library/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 292              		.loc 1 291 13
 293 0016 064B     		ldr	r3, .L11
 294 0018 9A68     		ldr	r2, [r3, #8]
 295 001a FB88     		ldrh	r3, [r7, #6]
 296 001c 0449     		ldr	r1, .L11
 297 001e 1343     		orrs	r3, r3, r2
 298 0020 8B60     		str	r3, [r1, #8]
 292:./Library/stm32f4xx_hash.c **** }
 299              		.loc 1 292 1
 300 0022 00BF     		nop
 301 0024 0C37     		adds	r7, r7, #12
 302              	.LCFI21:
 303              		.cfi_def_cfa_offset 4
 304 0026 BD46     		mov	sp, r7
 305              	.LCFI22:
 306              		.cfi_def_cfa_register 13
 307              		@ sp needed
 308 0028 5DF8047B 		ldr	r7, [sp], #4
 309              	.LCFI23:
 310              		.cfi_restore 7
 311              		.cfi_def_cfa_offset 0
 312 002c 7047     		bx	lr
 313              	.L12:
 314 002e 00BF     		.align	2
 315              	.L11:
 316 0030 00040650 		.word	1342571520
 317              		.cfi_endproc
 318              	.LFE127:
 320              		.section	.text.HASH_DataIn,"ax",%progbits
 321              		.align	1
 322              		.global	HASH_DataIn
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	HASH_DataIn:
 328              	.LFB128:
 293:./Library/stm32f4xx_hash.c **** 
 294:./Library/stm32f4xx_hash.c **** /**
 295:./Library/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 296:./Library/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 297:./Library/stm32f4xx_hash.c ****   * @retval None
 298:./Library/stm32f4xx_hash.c ****   */
 299:./Library/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 300:./Library/stm32f4xx_hash.c **** {
 329              		.loc 1 300 1
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0000 80B4     		push	{r7}
 335              	.LCFI24:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 12


 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 7, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              	.LCFI25:
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI26:
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 301:./Library/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 302:./Library/stm32f4xx_hash.c ****   HASH->DIN = Data;
 345              		.loc 1 302 7
 346 0008 044A     		ldr	r2, .L14
 347              		.loc 1 302 13
 348 000a 7B68     		ldr	r3, [r7, #4]
 349 000c 5360     		str	r3, [r2, #4]
 303:./Library/stm32f4xx_hash.c **** }
 350              		.loc 1 303 1
 351 000e 00BF     		nop
 352 0010 0C37     		adds	r7, r7, #12
 353              	.LCFI27:
 354              		.cfi_def_cfa_offset 4
 355 0012 BD46     		mov	sp, r7
 356              	.LCFI28:
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 0014 5DF8047B 		ldr	r7, [sp], #4
 360              	.LCFI29:
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0018 7047     		bx	lr
 364              	.L15:
 365 001a 00BF     		.align	2
 366              	.L14:
 367 001c 00040650 		.word	1342571520
 368              		.cfi_endproc
 369              	.LFE128:
 371              		.section	.text.HASH_GetInFIFOWordsNbr,"ax",%progbits
 372              		.align	1
 373              		.global	HASH_GetInFIFOWordsNbr
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	HASH_GetInFIFOWordsNbr:
 379              	.LFB129:
 304:./Library/stm32f4xx_hash.c **** 
 305:./Library/stm32f4xx_hash.c **** /**
 306:./Library/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 307:./Library/stm32f4xx_hash.c ****   * @param  None
 308:./Library/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 309:./Library/stm32f4xx_hash.c ****   */
 310:./Library/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 311:./Library/stm32f4xx_hash.c **** {
 380              		.loc 1 311 1
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 13


 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              	.LCFI30:
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 00AF     		add	r7, sp, #0
 390              	.LCFI31:
 391              		.cfi_def_cfa_register 7
 312:./Library/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 313:./Library/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 392              		.loc 1 313 16
 393 0004 054B     		ldr	r3, .L18
 394 0006 1B68     		ldr	r3, [r3]
 395              		.loc 1 313 36
 396 0008 1B0A     		lsrs	r3, r3, #8
 397 000a DBB2     		uxtb	r3, r3
 398 000c 03F00F03 		and	r3, r3, #15
 399 0010 DBB2     		uxtb	r3, r3
 314:./Library/stm32f4xx_hash.c **** }
 400              		.loc 1 314 1
 401 0012 1846     		mov	r0, r3
 402 0014 BD46     		mov	sp, r7
 403              	.LCFI32:
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 0016 5DF8047B 		ldr	r7, [sp], #4
 407              	.LCFI33:
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 001a 7047     		bx	lr
 411              	.L19:
 412              		.align	2
 413              	.L18:
 414 001c 00040650 		.word	1342571520
 415              		.cfi_endproc
 416              	.LFE129:
 418              		.section	.text.HASH_GetDigest,"ax",%progbits
 419              		.align	1
 420              		.global	HASH_GetDigest
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	HASH_GetDigest:
 426              	.LFB130:
 315:./Library/stm32f4xx_hash.c **** 
 316:./Library/stm32f4xx_hash.c **** /**
 317:./Library/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 318:./Library/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[7] to Data[4] filed of HASH_MsgDigest structure is not used
 319:./Library/stm32f4xx_hash.c ****   *         and is read as zero.
 320:./Library/stm32f4xx_hash.c ****   *         In SHA-1 mode, Data[7] to Data[5] filed of HASH_MsgDigest structure is not used
 321:./Library/stm32f4xx_hash.c ****   *         and is read as zero.    
 322:./Library/stm32f4xx_hash.c ****   *         In SHA-224 mode, Data[7] filed of HASH_MsgDigest structure is not used
 323:./Library/stm32f4xx_hash.c ****   *         and is read as zero.  
 324:./Library/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 325:./Library/stm32f4xx_hash.c ****   *         hold the message digest result 
 326:./Library/stm32f4xx_hash.c ****   * @retval None
 327:./Library/stm32f4xx_hash.c ****   */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 14


 328:./Library/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 329:./Library/stm32f4xx_hash.c **** {
 427              		.loc 1 329 1
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432 0000 80B4     		push	{r7}
 433              	.LCFI34:
 434              		.cfi_def_cfa_offset 4
 435              		.cfi_offset 7, -4
 436 0002 83B0     		sub	sp, sp, #12
 437              	.LCFI35:
 438              		.cfi_def_cfa_offset 16
 439 0004 00AF     		add	r7, sp, #0
 440              	.LCFI36:
 441              		.cfi_def_cfa_register 7
 442 0006 7860     		str	r0, [r7, #4]
 330:./Library/stm32f4xx_hash.c ****   /* Get the data field */
 331:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 443              		.loc 1 331 37
 444 0008 124B     		ldr	r3, .L21
 445              		.loc 1 331 41
 446 000a DA68     		ldr	r2, [r3, #12]
 447              		.loc 1 331 31
 448 000c 7B68     		ldr	r3, [r7, #4]
 449 000e 1A60     		str	r2, [r3]
 332:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 450              		.loc 1 332 37
 451 0010 104B     		ldr	r3, .L21
 452              		.loc 1 332 41
 453 0012 1A69     		ldr	r2, [r3, #16]
 454              		.loc 1 332 31
 455 0014 7B68     		ldr	r3, [r7, #4]
 456 0016 5A60     		str	r2, [r3, #4]
 333:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 457              		.loc 1 333 37
 458 0018 0E4B     		ldr	r3, .L21
 459              		.loc 1 333 41
 460 001a 5A69     		ldr	r2, [r3, #20]
 461              		.loc 1 333 31
 462 001c 7B68     		ldr	r3, [r7, #4]
 463 001e 9A60     		str	r2, [r3, #8]
 334:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 464              		.loc 1 334 37
 465 0020 0C4B     		ldr	r3, .L21
 466              		.loc 1 334 41
 467 0022 9A69     		ldr	r2, [r3, #24]
 468              		.loc 1 334 31
 469 0024 7B68     		ldr	r3, [r7, #4]
 470 0026 DA60     		str	r2, [r3, #12]
 335:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 471              		.loc 1 335 37
 472 0028 0A4B     		ldr	r3, .L21
 473              		.loc 1 335 41
 474 002a DA69     		ldr	r2, [r3, #28]
 475              		.loc 1 335 31
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 15


 476 002c 7B68     		ldr	r3, [r7, #4]
 477 002e 1A61     		str	r2, [r3, #16]
 336:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[5] = HASH_DIGEST->HR[5];
 478              		.loc 1 336 44
 479 0030 094B     		ldr	r3, .L21+4
 480              		.loc 1 336 48
 481 0032 5A69     		ldr	r2, [r3, #20]
 482              		.loc 1 336 31
 483 0034 7B68     		ldr	r3, [r7, #4]
 484 0036 5A61     		str	r2, [r3, #20]
 337:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[6] = HASH_DIGEST->HR[6];
 485              		.loc 1 337 44
 486 0038 074B     		ldr	r3, .L21+4
 487              		.loc 1 337 48
 488 003a 9A69     		ldr	r2, [r3, #24]
 489              		.loc 1 337 31
 490 003c 7B68     		ldr	r3, [r7, #4]
 491 003e 9A61     		str	r2, [r3, #24]
 338:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[7] = HASH_DIGEST->HR[7];
 492              		.loc 1 338 44
 493 0040 054B     		ldr	r3, .L21+4
 494              		.loc 1 338 48
 495 0042 DA69     		ldr	r2, [r3, #28]
 496              		.loc 1 338 31
 497 0044 7B68     		ldr	r3, [r7, #4]
 498 0046 DA61     		str	r2, [r3, #28]
 339:./Library/stm32f4xx_hash.c **** }
 499              		.loc 1 339 1
 500 0048 00BF     		nop
 501 004a 0C37     		adds	r7, r7, #12
 502              	.LCFI37:
 503              		.cfi_def_cfa_offset 4
 504 004c BD46     		mov	sp, r7
 505              	.LCFI38:
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 004e 5DF8047B 		ldr	r7, [sp], #4
 509              	.LCFI39:
 510              		.cfi_restore 7
 511              		.cfi_def_cfa_offset 0
 512 0052 7047     		bx	lr
 513              	.L22:
 514              		.align	2
 515              	.L21:
 516 0054 00040650 		.word	1342571520
 517 0058 10070650 		.word	1342572304
 518              		.cfi_endproc
 519              	.LFE130:
 521              		.section	.text.HASH_StartDigest,"ax",%progbits
 522              		.align	1
 523              		.global	HASH_StartDigest
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	HASH_StartDigest:
 529              	.LFB131:
 340:./Library/stm32f4xx_hash.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 16


 341:./Library/stm32f4xx_hash.c **** /**
 342:./Library/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:./Library/stm32f4xx_hash.c ****   * @param  None
 344:./Library/stm32f4xx_hash.c ****   * @retval None
 345:./Library/stm32f4xx_hash.c ****   */
 346:./Library/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:./Library/stm32f4xx_hash.c **** {
 530              		.loc 1 347 1
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              	.LCFI40:
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 00AF     		add	r7, sp, #0
 540              	.LCFI41:
 541              		.cfi_def_cfa_register 7
 348:./Library/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:./Library/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 542              		.loc 1 349 13
 543 0004 054B     		ldr	r3, .L24
 544 0006 9B68     		ldr	r3, [r3, #8]
 545 0008 044A     		ldr	r2, .L24
 546 000a 43F48073 		orr	r3, r3, #256
 547 000e 9360     		str	r3, [r2, #8]
 350:./Library/stm32f4xx_hash.c **** }
 548              		.loc 1 350 1
 549 0010 00BF     		nop
 550 0012 BD46     		mov	sp, r7
 551              	.LCFI42:
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0014 5DF8047B 		ldr	r7, [sp], #4
 555              	.LCFI43:
 556              		.cfi_restore 7
 557              		.cfi_def_cfa_offset 0
 558 0018 7047     		bx	lr
 559              	.L25:
 560 001a 00BF     		.align	2
 561              	.L24:
 562 001c 00040650 		.word	1342571520
 563              		.cfi_endproc
 564              	.LFE131:
 566              		.section	.text.HASH_SaveContext,"ax",%progbits
 567              		.align	1
 568              		.global	HASH_SaveContext
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	HASH_SaveContext:
 574              	.LFB132:
 351:./Library/stm32f4xx_hash.c **** /**
 352:./Library/stm32f4xx_hash.c ****   * @}
 353:./Library/stm32f4xx_hash.c ****   */
 354:./Library/stm32f4xx_hash.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 17


 355:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:./Library/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:./Library/stm32f4xx_hash.c ****  *
 358:./Library/stm32f4xx_hash.c **** @verbatim   
 359:./Library/stm32f4xx_hash.c ****  ===============================================================================
 360:./Library/stm32f4xx_hash.c ****                       ##### Context swapping functions #####
 361:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 362:./Library/stm32f4xx_hash.c ****  
 363:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to save and store HASH Context
 364:./Library/stm32f4xx_hash.c ****   
 365:./Library/stm32f4xx_hash.c ****  [..] It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:./Library/stm32f4xx_hash.c ****       with a higher priority, and to complete the interrupted process later on, when 
 367:./Library/stm32f4xx_hash.c ****       the higher priority task is complete. To do so, the context of the interrupted 
 368:./Library/stm32f4xx_hash.c ****       task must be saved from the HASH registers to memory, and then be restored 
 369:./Library/stm32f4xx_hash.c ****       from memory to the HASH registers.
 370:./Library/stm32f4xx_hash.c ****   
 371:./Library/stm32f4xx_hash.c ****    (#) To save the current context, use HASH_SaveContext() function
 372:./Library/stm32f4xx_hash.c ****    (#) To restore the saved context, use HASH_RestoreContext() function 
 373:./Library/stm32f4xx_hash.c ****   
 374:./Library/stm32f4xx_hash.c **** 
 375:./Library/stm32f4xx_hash.c **** @endverbatim
 376:./Library/stm32f4xx_hash.c ****   * @{
 377:./Library/stm32f4xx_hash.c ****   */
 378:./Library/stm32f4xx_hash.c ****   
 379:./Library/stm32f4xx_hash.c **** /**
 380:./Library/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:./Library/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:./Library/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:./Library/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:./Library/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:./Library/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:./Library/stm32f4xx_hash.c ****   *         the repository for current context.
 387:./Library/stm32f4xx_hash.c ****   * @retval None
 388:./Library/stm32f4xx_hash.c ****   */
 389:./Library/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:./Library/stm32f4xx_hash.c **** {
 575              		.loc 1 390 1
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              	.LCFI44:
 582              		.cfi_def_cfa_offset 4
 583              		.cfi_offset 7, -4
 584 0002 85B0     		sub	sp, sp, #20
 585              	.LCFI45:
 586              		.cfi_def_cfa_offset 24
 587 0004 00AF     		add	r7, sp, #0
 588              	.LCFI46:
 589              		.cfi_def_cfa_register 7
 590 0006 7860     		str	r0, [r7, #4]
 391:./Library/stm32f4xx_hash.c ****   uint8_t i = 0;
 591              		.loc 1 391 11
 592 0008 0023     		movs	r3, #0
 593 000a FB73     		strb	r3, [r7, #15]
 392:./Library/stm32f4xx_hash.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 18


 393:./Library/stm32f4xx_hash.c ****   /* save context registers */
 394:./Library/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 594              		.loc 1 394 36
 595 000c 134B     		ldr	r3, .L29
 596 000e 1A6A     		ldr	r2, [r3, #32]
 597              		.loc 1 394 30
 598 0010 7B68     		ldr	r3, [r7, #4]
 599 0012 1A60     		str	r2, [r3]
 395:./Library/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 600              		.loc 1 395 36
 601 0014 114B     		ldr	r3, .L29
 602 0016 9A68     		ldr	r2, [r3, #8]
 603              		.loc 1 395 30
 604 0018 7B68     		ldr	r3, [r7, #4]
 605 001a 5A60     		str	r2, [r3, #4]
 396:./Library/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 606              		.loc 1 396 36
 607 001c 0F4B     		ldr	r3, .L29
 608 001e 1A68     		ldr	r2, [r3]
 609              		.loc 1 396 30
 610 0020 7B68     		ldr	r3, [r7, #4]
 611 0022 9A60     		str	r2, [r3, #8]
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 612              		.loc 1 397 8
 613 0024 0023     		movs	r3, #0
 614 0026 FB73     		strb	r3, [r7, #15]
 615              		.loc 1 397 3
 616 0028 0DE0     		b	.L27
 617              	.L28:
 398:./Library/stm32f4xx_hash.c ****   {
 399:./Library/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 618              		.loc 1 399 42 discriminator 3
 619 002a 0C49     		ldr	r1, .L29
 620              		.loc 1 399 47 discriminator 3
 621 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 622              		.loc 1 399 32 discriminator 3
 623 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 624              		.loc 1 399 47 discriminator 3
 625 0030 3E32     		adds	r2, r2, #62
 626 0032 51F82220 		ldr	r2, [r1, r2, lsl #2]
 627              		.loc 1 399 36 discriminator 3
 628 0036 7968     		ldr	r1, [r7, #4]
 629 0038 0233     		adds	r3, r3, #2
 630 003a 9B00     		lsls	r3, r3, #2
 631 003c 0B44     		add	r3, r3, r1
 632 003e 5A60     		str	r2, [r3, #4]
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 633              		.loc 1 397 19 discriminator 3
 634 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635 0042 0133     		adds	r3, r3, #1
 636 0044 FB73     		strb	r3, [r7, #15]
 637              	.L27:
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 638              		.loc 1 397 3 discriminator 1
 639 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 640 0048 352B     		cmp	r3, #53
 641 004a EED9     		bls	.L28
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 19


 400:./Library/stm32f4xx_hash.c ****   }   
 401:./Library/stm32f4xx_hash.c **** }
 642              		.loc 1 401 1
 643 004c 00BF     		nop
 644 004e 00BF     		nop
 645 0050 1437     		adds	r7, r7, #20
 646              	.LCFI47:
 647              		.cfi_def_cfa_offset 4
 648 0052 BD46     		mov	sp, r7
 649              	.LCFI48:
 650              		.cfi_def_cfa_register 13
 651              		@ sp needed
 652 0054 5DF8047B 		ldr	r7, [sp], #4
 653              	.LCFI49:
 654              		.cfi_restore 7
 655              		.cfi_def_cfa_offset 0
 656 0058 7047     		bx	lr
 657              	.L30:
 658 005a 00BF     		.align	2
 659              	.L29:
 660 005c 00040650 		.word	1342571520
 661              		.cfi_endproc
 662              	.LFE132:
 664              		.section	.text.HASH_RestoreContext,"ax",%progbits
 665              		.align	1
 666              		.global	HASH_RestoreContext
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 671              	HASH_RestoreContext:
 672              	.LFB133:
 402:./Library/stm32f4xx_hash.c **** 
 403:./Library/stm32f4xx_hash.c **** /**
 404:./Library/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:./Library/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:./Library/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:./Library/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:./Library/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:./Library/stm32f4xx_hash.c ****   * @retval None
 410:./Library/stm32f4xx_hash.c ****   */
 411:./Library/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:./Library/stm32f4xx_hash.c **** {
 673              		.loc 1 412 1
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 16
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              	.LCFI50:
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 85B0     		sub	sp, sp, #20
 683              	.LCFI51:
 684              		.cfi_def_cfa_offset 24
 685 0004 00AF     		add	r7, sp, #0
 686              	.LCFI52:
 687              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 20


 688 0006 7860     		str	r0, [r7, #4]
 413:./Library/stm32f4xx_hash.c ****   uint8_t i = 0;
 689              		.loc 1 413 11
 690 0008 0023     		movs	r3, #0
 691 000a FB73     		strb	r3, [r7, #15]
 414:./Library/stm32f4xx_hash.c ****   
 415:./Library/stm32f4xx_hash.c ****   /* restore context registers */
 416:./Library/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 692              		.loc 1 416 7
 693 000c 164A     		ldr	r2, .L34
 694              		.loc 1 416 34
 695 000e 7B68     		ldr	r3, [r7, #4]
 696 0010 1B68     		ldr	r3, [r3]
 697              		.loc 1 416 13
 698 0012 1362     		str	r3, [r2, #32]
 417:./Library/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 699              		.loc 1 417 7
 700 0014 144A     		ldr	r2, .L34
 701              		.loc 1 417 34
 702 0016 7B68     		ldr	r3, [r7, #4]
 703 0018 5B68     		ldr	r3, [r3, #4]
 704              		.loc 1 417 13
 705 001a 9360     		str	r3, [r2, #8]
 418:./Library/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 706              		.loc 1 418 7
 707 001c 124A     		ldr	r2, .L34
 708              		.loc 1 418 33
 709 001e 7B68     		ldr	r3, [r7, #4]
 710 0020 9B68     		ldr	r3, [r3, #8]
 711              		.loc 1 418 12
 712 0022 1360     		str	r3, [r2]
 419:./Library/stm32f4xx_hash.c ****   
 420:./Library/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:./Library/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 713              		.loc 1 421 12
 714 0024 104B     		ldr	r3, .L34
 715 0026 1B68     		ldr	r3, [r3]
 716 0028 0F4A     		ldr	r2, .L34
 717 002a 43F00403 		orr	r3, r3, #4
 718 002e 1360     		str	r3, [r2]
 422:./Library/stm32f4xx_hash.c ****   
 423:./Library/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 719              		.loc 1 424 8
 720 0030 0023     		movs	r3, #0
 721 0032 FB73     		strb	r3, [r7, #15]
 722              		.loc 1 424 3
 723 0034 0EE0     		b	.L32
 724              	.L33:
 425:./Library/stm32f4xx_hash.c ****   {
 426:./Library/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 725              		.loc 1 426 50 discriminator 3
 726 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 727              		.loc 1 426 10 discriminator 3
 728 0038 0B48     		ldr	r0, .L34
 729              		.loc 1 426 15 discriminator 3
 730 003a F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 21


 731              		.loc 1 426 50 discriminator 3
 732 003c 7A68     		ldr	r2, [r7, #4]
 733 003e 0233     		adds	r3, r3, #2
 734 0040 9B00     		lsls	r3, r3, #2
 735 0042 1344     		add	r3, r3, r2
 736 0044 5A68     		ldr	r2, [r3, #4]
 737              		.loc 1 426 19 discriminator 3
 738 0046 01F13E03 		add	r3, r1, #62
 739 004a 40F82320 		str	r2, [r0, r3, lsl #2]
 424:./Library/stm32f4xx_hash.c ****   {
 740              		.loc 1 424 19 discriminator 3
 741 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 742 0050 0133     		adds	r3, r3, #1
 743 0052 FB73     		strb	r3, [r7, #15]
 744              	.L32:
 424:./Library/stm32f4xx_hash.c ****   {
 745              		.loc 1 424 3 discriminator 1
 746 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 747 0056 352B     		cmp	r3, #53
 748 0058 EDD9     		bls	.L33
 427:./Library/stm32f4xx_hash.c ****   }   
 428:./Library/stm32f4xx_hash.c **** }
 749              		.loc 1 428 1
 750 005a 00BF     		nop
 751 005c 00BF     		nop
 752 005e 1437     		adds	r7, r7, #20
 753              	.LCFI53:
 754              		.cfi_def_cfa_offset 4
 755 0060 BD46     		mov	sp, r7
 756              	.LCFI54:
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0062 5DF8047B 		ldr	r7, [sp], #4
 760              	.LCFI55:
 761              		.cfi_restore 7
 762              		.cfi_def_cfa_offset 0
 763 0066 7047     		bx	lr
 764              	.L35:
 765              		.align	2
 766              	.L34:
 767 0068 00040650 		.word	1342571520
 768              		.cfi_endproc
 769              	.LFE133:
 771              		.section	.text.HASH_AutoStartDigest,"ax",%progbits
 772              		.align	1
 773              		.global	HASH_AutoStartDigest
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 778              	HASH_AutoStartDigest:
 779              	.LFB134:
 429:./Library/stm32f4xx_hash.c **** /**
 430:./Library/stm32f4xx_hash.c ****   * @}
 431:./Library/stm32f4xx_hash.c ****   */
 432:./Library/stm32f4xx_hash.c **** 
 433:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:./Library/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 22


 435:./Library/stm32f4xx_hash.c ****  *
 436:./Library/stm32f4xx_hash.c **** @verbatim   
 437:./Library/stm32f4xx_hash.c ****  ===============================================================================
 438:./Library/stm32f4xx_hash.c ****                ##### HASH's DMA interface Configuration function #####
 439:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 440:./Library/stm32f4xx_hash.c **** 
 441:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to configure the DMA interface for 
 442:./Library/stm32f4xx_hash.c ****       HASH/ HMAC data input transfer.
 443:./Library/stm32f4xx_hash.c ****    
 444:./Library/stm32f4xx_hash.c ****  [..] When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:./Library/stm32f4xx_hash.c ****       sent to the IN FIFO using the DMA peripheral.
 446:./Library/stm32f4xx_hash.c **** 
 447:./Library/stm32f4xx_hash.c **** @endverbatim
 448:./Library/stm32f4xx_hash.c ****   * @{
 449:./Library/stm32f4xx_hash.c ****   */
 450:./Library/stm32f4xx_hash.c **** 
 451:./Library/stm32f4xx_hash.c **** /**
 452:./Library/stm32f4xx_hash.c ****   * @brief  Enables or disables auto-start message padding and
 453:./Library/stm32f4xx_hash.c ****   *         calculation of the final message digest at the end of DMA transfer.
 454:./Library/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 455:./Library/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 456:./Library/stm32f4xx_hash.c ****   * @retval None
 457:./Library/stm32f4xx_hash.c ****   */
 458:./Library/stm32f4xx_hash.c **** void HASH_AutoStartDigest(FunctionalState NewState)
 459:./Library/stm32f4xx_hash.c **** {
 780              		.loc 1 459 1
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785 0000 80B4     		push	{r7}
 786              	.LCFI56:
 787              		.cfi_def_cfa_offset 4
 788              		.cfi_offset 7, -4
 789 0002 83B0     		sub	sp, sp, #12
 790              	.LCFI57:
 791              		.cfi_def_cfa_offset 16
 792 0004 00AF     		add	r7, sp, #0
 793              	.LCFI58:
 794              		.cfi_def_cfa_register 7
 795 0006 0346     		mov	r3, r0
 796 0008 FB71     		strb	r3, [r7, #7]
 460:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 461:./Library/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:./Library/stm32f4xx_hash.c **** 
 463:./Library/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 797              		.loc 1 463 6
 798 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 799 000c 002B     		cmp	r3, #0
 800 000e 06D0     		beq	.L37
 464:./Library/stm32f4xx_hash.c ****   {
 465:./Library/stm32f4xx_hash.c ****     /* Enable the auto start of the final message digest at the end of DMA transfer */
 466:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_MDMAT;
 801              		.loc 1 466 14
 802 0010 094B     		ldr	r3, .L40
 803 0012 1B68     		ldr	r3, [r3]
 804 0014 084A     		ldr	r2, .L40
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 23


 805 0016 23F40053 		bic	r3, r3, #8192
 806 001a 1360     		str	r3, [r2]
 467:./Library/stm32f4xx_hash.c ****   }
 468:./Library/stm32f4xx_hash.c ****   else
 469:./Library/stm32f4xx_hash.c ****   {
 470:./Library/stm32f4xx_hash.c ****     /* Disable the auto start of the final message digest at the end of DMA transfer */
 471:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_MDMAT;
 472:./Library/stm32f4xx_hash.c ****   }
 473:./Library/stm32f4xx_hash.c **** }
 807              		.loc 1 473 1
 808 001c 05E0     		b	.L39
 809              	.L37:
 471:./Library/stm32f4xx_hash.c ****   }
 810              		.loc 1 471 14
 811 001e 064B     		ldr	r3, .L40
 812 0020 1B68     		ldr	r3, [r3]
 813 0022 054A     		ldr	r2, .L40
 814 0024 43F40053 		orr	r3, r3, #8192
 815 0028 1360     		str	r3, [r2]
 816              	.L39:
 817              		.loc 1 473 1
 818 002a 00BF     		nop
 819 002c 0C37     		adds	r7, r7, #12
 820              	.LCFI59:
 821              		.cfi_def_cfa_offset 4
 822 002e BD46     		mov	sp, r7
 823              	.LCFI60:
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0030 5DF8047B 		ldr	r7, [sp], #4
 827              	.LCFI61:
 828              		.cfi_restore 7
 829              		.cfi_def_cfa_offset 0
 830 0034 7047     		bx	lr
 831              	.L41:
 832 0036 00BF     		.align	2
 833              	.L40:
 834 0038 00040650 		.word	1342571520
 835              		.cfi_endproc
 836              	.LFE134:
 838              		.section	.text.HASH_DMACmd,"ax",%progbits
 839              		.align	1
 840              		.global	HASH_DMACmd
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 845              	HASH_DMACmd:
 846              	.LFB135:
 474:./Library/stm32f4xx_hash.c ****   
 475:./Library/stm32f4xx_hash.c **** /**
 476:./Library/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 477:./Library/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 478:./Library/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 479:./Library/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 480:./Library/stm32f4xx_hash.c ****   * @retval None
 481:./Library/stm32f4xx_hash.c ****   */
 482:./Library/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 24


 483:./Library/stm32f4xx_hash.c **** {
 847              		.loc 1 483 1
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 8
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852 0000 80B4     		push	{r7}
 853              	.LCFI62:
 854              		.cfi_def_cfa_offset 4
 855              		.cfi_offset 7, -4
 856 0002 83B0     		sub	sp, sp, #12
 857              	.LCFI63:
 858              		.cfi_def_cfa_offset 16
 859 0004 00AF     		add	r7, sp, #0
 860              	.LCFI64:
 861              		.cfi_def_cfa_register 7
 862 0006 0346     		mov	r3, r0
 863 0008 FB71     		strb	r3, [r7, #7]
 484:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 485:./Library/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 486:./Library/stm32f4xx_hash.c **** 
 487:./Library/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 864              		.loc 1 487 6
 865 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 866 000c 002B     		cmp	r3, #0
 867 000e 06D0     		beq	.L43
 488:./Library/stm32f4xx_hash.c ****   {
 489:./Library/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 490:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 868              		.loc 1 490 14
 869 0010 094B     		ldr	r3, .L46
 870 0012 1B68     		ldr	r3, [r3]
 871 0014 084A     		ldr	r2, .L46
 872 0016 43F00803 		orr	r3, r3, #8
 873 001a 1360     		str	r3, [r2]
 491:./Library/stm32f4xx_hash.c ****   }
 492:./Library/stm32f4xx_hash.c ****   else
 493:./Library/stm32f4xx_hash.c ****   {
 494:./Library/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 495:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 496:./Library/stm32f4xx_hash.c ****   }
 497:./Library/stm32f4xx_hash.c **** }
 874              		.loc 1 497 1
 875 001c 05E0     		b	.L45
 876              	.L43:
 495:./Library/stm32f4xx_hash.c ****   }
 877              		.loc 1 495 14
 878 001e 064B     		ldr	r3, .L46
 879 0020 1B68     		ldr	r3, [r3]
 880 0022 054A     		ldr	r2, .L46
 881 0024 23F00803 		bic	r3, r3, #8
 882 0028 1360     		str	r3, [r2]
 883              	.L45:
 884              		.loc 1 497 1
 885 002a 00BF     		nop
 886 002c 0C37     		adds	r7, r7, #12
 887              	.LCFI65:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 25


 888              		.cfi_def_cfa_offset 4
 889 002e BD46     		mov	sp, r7
 890              	.LCFI66:
 891              		.cfi_def_cfa_register 13
 892              		@ sp needed
 893 0030 5DF8047B 		ldr	r7, [sp], #4
 894              	.LCFI67:
 895              		.cfi_restore 7
 896              		.cfi_def_cfa_offset 0
 897 0034 7047     		bx	lr
 898              	.L47:
 899 0036 00BF     		.align	2
 900              	.L46:
 901 0038 00040650 		.word	1342571520
 902              		.cfi_endproc
 903              	.LFE135:
 905              		.section	.text.HASH_ITConfig,"ax",%progbits
 906              		.align	1
 907              		.global	HASH_ITConfig
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 912              	HASH_ITConfig:
 913              	.LFB136:
 498:./Library/stm32f4xx_hash.c **** /**
 499:./Library/stm32f4xx_hash.c ****   * @}
 500:./Library/stm32f4xx_hash.c ****   */
 501:./Library/stm32f4xx_hash.c **** 
 502:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 503:./Library/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 504:./Library/stm32f4xx_hash.c ****  *
 505:./Library/stm32f4xx_hash.c **** @verbatim   
 506:./Library/stm32f4xx_hash.c ****  ===============================================================================
 507:./Library/stm32f4xx_hash.c ****                ##### Interrupts and flags management functions #####
 508:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 509:./Library/stm32f4xx_hash.c **** 
 510:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to configure the HASH Interrupts and 
 511:./Library/stm32f4xx_hash.c ****       to get the status and clear flags and Interrupts pending bits.
 512:./Library/stm32f4xx_hash.c ****   
 513:./Library/stm32f4xx_hash.c ****  [..] The HASH provides 2 Interrupts sources and 5 Flags:
 514:./Library/stm32f4xx_hash.c ****   
 515:./Library/stm32f4xx_hash.c ****  *** Flags : ***
 516:./Library/stm32f4xx_hash.c ****  =============== 
 517:./Library/stm32f4xx_hash.c ****  [..]
 518:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 519:./Library/stm32f4xx_hash.c ****       which means that a  new block (512 bit) can be entered into the input buffer.
 520:./Library/stm32f4xx_hash.c ****                           
 521:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DCIS :  set when Digest calculation is complete
 522:./Library/stm32f4xx_hash.c ****       
 523:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 524:./Library/stm32f4xx_hash.c ****        a transfer is ongoing. This Flag is cleared only by hardware.
 525:./Library/stm32f4xx_hash.c ****                            
 526:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 527:./Library/stm32f4xx_hash.c ****        This Flag is cleared only by hardware. 
 528:./Library/stm32f4xx_hash.c ****                            
 529:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 530:./Library/stm32f4xx_hash.c ****        the Data IN FIFO contains at least one word of data. This Flag is cleared 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 26


 531:./Library/stm32f4xx_hash.c ****        only by hardware.
 532:./Library/stm32f4xx_hash.c ****      
 533:./Library/stm32f4xx_hash.c ****  *** Interrupts : ***
 534:./Library/stm32f4xx_hash.c ****  ====================
 535:./Library/stm32f4xx_hash.c ****  [..]   
 536:./Library/stm32f4xx_hash.c ****    (#) HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 537:./Library/stm32f4xx_hash.c ****        locations are free in the Data IN FIFO  which means that a new block (512 bit)
 538:./Library/stm32f4xx_hash.c ****        can be entered into the input buffer. This interrupt source is cleared using 
 539:./Library/stm32f4xx_hash.c ****        HASH_ClearITPendingBit(HASH_IT_DINI) function.
 540:./Library/stm32f4xx_hash.c ****    
 541:./Library/stm32f4xx_hash.c ****    (#) HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 542:./Library/stm32f4xx_hash.c ****        calculation is complete. This interrupt source is cleared using 
 543:./Library/stm32f4xx_hash.c ****        HASH_ClearITPendingBit(HASH_IT_DCI) function.
 544:./Library/stm32f4xx_hash.c **** 
 545:./Library/stm32f4xx_hash.c ****  *** Managing the HASH controller events : ***
 546:./Library/stm32f4xx_hash.c ****  =============================================
 547:./Library/stm32f4xx_hash.c ****  [..] The user should identify which mode will be used in his application to manage 
 548:./Library/stm32f4xx_hash.c ****       the HASH controller events: Polling mode or Interrupt mode.
 549:./Library/stm32f4xx_hash.c ****   
 550:./Library/stm32f4xx_hash.c ****    (#) In the Polling Mode it is advised to use the following functions:
 551:./Library/stm32f4xx_hash.c ****        (++) HASH_GetFlagStatus() : to check if flags events occur. 
 552:./Library/stm32f4xx_hash.c ****        (++) HASH_ClearFlag()     : to clear the flags events.
 553:./Library/stm32f4xx_hash.c ****     
 554:./Library/stm32f4xx_hash.c ****    (#)  In the Interrupt Mode it is advised to use the following functions:
 555:./Library/stm32f4xx_hash.c ****        (++) HASH_ITConfig()       : to enable or disable the interrupt source.
 556:./Library/stm32f4xx_hash.c ****        (++) HASH_GetITStatus()    : to check if Interrupt occurs.
 557:./Library/stm32f4xx_hash.c ****        (++) HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 558:./Library/stm32f4xx_hash.c ****             (corresponding Flag). 
 559:./Library/stm32f4xx_hash.c **** 
 560:./Library/stm32f4xx_hash.c **** @endverbatim
 561:./Library/stm32f4xx_hash.c ****   * @{
 562:./Library/stm32f4xx_hash.c ****   */ 
 563:./Library/stm32f4xx_hash.c ****   
 564:./Library/stm32f4xx_hash.c **** /**
 565:./Library/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 566:./Library/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 567:./Library/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 568:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 569:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 570:./Library/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 571:./Library/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 572:./Library/stm32f4xx_hash.c ****   * @retval None
 573:./Library/stm32f4xx_hash.c ****   */
 574:./Library/stm32f4xx_hash.c **** void HASH_ITConfig(uint32_t HASH_IT, FunctionalState NewState)
 575:./Library/stm32f4xx_hash.c **** {
 914              		.loc 1 575 1
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 8
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919 0000 80B4     		push	{r7}
 920              	.LCFI68:
 921              		.cfi_def_cfa_offset 4
 922              		.cfi_offset 7, -4
 923 0002 83B0     		sub	sp, sp, #12
 924              	.LCFI69:
 925              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 27


 926 0004 00AF     		add	r7, sp, #0
 927              	.LCFI70:
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
 930 0008 0B46     		mov	r3, r1
 931 000a FB70     		strb	r3, [r7, #3]
 576:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 577:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 578:./Library/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 579:./Library/stm32f4xx_hash.c **** 
 580:./Library/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 932              		.loc 1 580 6
 933 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 934 000e 002B     		cmp	r3, #0
 935 0010 06D0     		beq	.L49
 581:./Library/stm32f4xx_hash.c ****   {
 582:./Library/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 583:./Library/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 936              		.loc 1 583 15
 937 0012 0A4B     		ldr	r3, .L52
 938 0014 1A6A     		ldr	r2, [r3, #32]
 939 0016 0949     		ldr	r1, .L52
 940 0018 7B68     		ldr	r3, [r7, #4]
 941 001a 1343     		orrs	r3, r3, r2
 942 001c 0B62     		str	r3, [r1, #32]
 584:./Library/stm32f4xx_hash.c ****   }
 585:./Library/stm32f4xx_hash.c ****   else
 586:./Library/stm32f4xx_hash.c ****   {
 587:./Library/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 588:./Library/stm32f4xx_hash.c ****     HASH->IMR &= (uint32_t)(~HASH_IT);
 589:./Library/stm32f4xx_hash.c ****   }
 590:./Library/stm32f4xx_hash.c **** }
 943              		.loc 1 590 1
 944 001e 06E0     		b	.L51
 945              	.L49:
 588:./Library/stm32f4xx_hash.c ****   }
 946              		.loc 1 588 15
 947 0020 064B     		ldr	r3, .L52
 948 0022 1A6A     		ldr	r2, [r3, #32]
 588:./Library/stm32f4xx_hash.c ****   }
 949              		.loc 1 588 29
 950 0024 7B68     		ldr	r3, [r7, #4]
 951 0026 DB43     		mvns	r3, r3
 588:./Library/stm32f4xx_hash.c ****   }
 952              		.loc 1 588 15
 953 0028 0449     		ldr	r1, .L52
 954 002a 1340     		ands	r3, r3, r2
 955 002c 0B62     		str	r3, [r1, #32]
 956              	.L51:
 957              		.loc 1 590 1
 958 002e 00BF     		nop
 959 0030 0C37     		adds	r7, r7, #12
 960              	.LCFI71:
 961              		.cfi_def_cfa_offset 4
 962 0032 BD46     		mov	sp, r7
 963              	.LCFI72:
 964              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 28


 965              		@ sp needed
 966 0034 5DF8047B 		ldr	r7, [sp], #4
 967              	.LCFI73:
 968              		.cfi_restore 7
 969              		.cfi_def_cfa_offset 0
 970 0038 7047     		bx	lr
 971              	.L53:
 972 003a 00BF     		.align	2
 973              	.L52:
 974 003c 00040650 		.word	1342571520
 975              		.cfi_endproc
 976              	.LFE136:
 978              		.section	.text.HASH_GetFlagStatus,"ax",%progbits
 979              		.align	1
 980              		.global	HASH_GetFlagStatus
 981              		.syntax unified
 982              		.thumb
 983              		.thumb_func
 985              	HASH_GetFlagStatus:
 986              	.LFB137:
 591:./Library/stm32f4xx_hash.c **** 
 592:./Library/stm32f4xx_hash.c **** /**
 593:./Library/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 594:./Library/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 595:./Library/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 596:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 597:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 598:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 599:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 600:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 601:./Library/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 602:./Library/stm32f4xx_hash.c ****   */
 603:./Library/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint32_t HASH_FLAG)
 604:./Library/stm32f4xx_hash.c **** {
 987              		.loc 1 604 1
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 16
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 80B4     		push	{r7}
 993              	.LCFI74:
 994              		.cfi_def_cfa_offset 4
 995              		.cfi_offset 7, -4
 996 0002 85B0     		sub	sp, sp, #20
 997              	.LCFI75:
 998              		.cfi_def_cfa_offset 24
 999 0004 00AF     		add	r7, sp, #0
 1000              	.LCFI76:
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 605:./Library/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 1003              		.loc 1 605 14
 1004 0008 0023     		movs	r3, #0
 1005 000a FB73     		strb	r3, [r7, #15]
 606:./Library/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 1006              		.loc 1 606 12
 1007 000c 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 29


 1008 000e BB60     		str	r3, [r7, #8]
 607:./Library/stm32f4xx_hash.c **** 
 608:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 609:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 610:./Library/stm32f4xx_hash.c **** 
 611:./Library/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 612:./Library/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint32_t)RESET ) 
 1009              		.loc 1 612 18
 1010 0010 7B68     		ldr	r3, [r7, #4]
 1011 0012 03F48053 		and	r3, r3, #4096
 1012              		.loc 1 612 6
 1013 0016 002B     		cmp	r3, #0
 1014 0018 03D0     		beq	.L55
 613:./Library/stm32f4xx_hash.c ****   {
 614:./Library/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 1015              		.loc 1 614 19
 1016 001a 0C4B     		ldr	r3, .L60
 1017              		.loc 1 614 13
 1018 001c 1B68     		ldr	r3, [r3]
 1019 001e BB60     		str	r3, [r7, #8]
 1020 0020 02E0     		b	.L56
 1021              	.L55:
 615:./Library/stm32f4xx_hash.c ****   }
 616:./Library/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 617:./Library/stm32f4xx_hash.c ****   {
 618:./Library/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 1022              		.loc 1 618 19
 1023 0022 0A4B     		ldr	r3, .L60
 1024              		.loc 1 618 13
 1025 0024 5B6A     		ldr	r3, [r3, #36]
 1026 0026 BB60     		str	r3, [r7, #8]
 1027              	.L56:
 619:./Library/stm32f4xx_hash.c ****   }
 620:./Library/stm32f4xx_hash.c **** 
 621:./Library/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 622:./Library/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint32_t)RESET)
 1028              		.loc 1 622 16
 1029 0028 BA68     		ldr	r2, [r7, #8]
 1030 002a 7B68     		ldr	r3, [r7, #4]
 1031 002c 1340     		ands	r3, r3, r2
 1032              		.loc 1 622 6
 1033 002e 002B     		cmp	r3, #0
 1034 0030 02D0     		beq	.L57
 623:./Library/stm32f4xx_hash.c ****   {
 624:./Library/stm32f4xx_hash.c ****     /* HASH is set */
 625:./Library/stm32f4xx_hash.c ****     bitstatus = SET;
 1035              		.loc 1 625 15
 1036 0032 0123     		movs	r3, #1
 1037 0034 FB73     		strb	r3, [r7, #15]
 1038 0036 01E0     		b	.L58
 1039              	.L57:
 626:./Library/stm32f4xx_hash.c ****   }
 627:./Library/stm32f4xx_hash.c ****   else
 628:./Library/stm32f4xx_hash.c ****   {
 629:./Library/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 630:./Library/stm32f4xx_hash.c ****     bitstatus = RESET;
 1040              		.loc 1 630 15
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 30


 1041 0038 0023     		movs	r3, #0
 1042 003a FB73     		strb	r3, [r7, #15]
 1043              	.L58:
 631:./Library/stm32f4xx_hash.c ****   }
 632:./Library/stm32f4xx_hash.c **** 
 633:./Library/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 634:./Library/stm32f4xx_hash.c ****   return  bitstatus;
 1044              		.loc 1 634 11
 1045 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:./Library/stm32f4xx_hash.c **** }
 1046              		.loc 1 635 1
 1047 003e 1846     		mov	r0, r3
 1048 0040 1437     		adds	r7, r7, #20
 1049              	.LCFI77:
 1050              		.cfi_def_cfa_offset 4
 1051 0042 BD46     		mov	sp, r7
 1052              	.LCFI78:
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 0044 5DF8047B 		ldr	r7, [sp], #4
 1056              	.LCFI79:
 1057              		.cfi_restore 7
 1058              		.cfi_def_cfa_offset 0
 1059 0048 7047     		bx	lr
 1060              	.L61:
 1061 004a 00BF     		.align	2
 1062              	.L60:
 1063 004c 00040650 		.word	1342571520
 1064              		.cfi_endproc
 1065              	.LFE137:
 1067              		.section	.text.HASH_ClearFlag,"ax",%progbits
 1068              		.align	1
 1069              		.global	HASH_ClearFlag
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1074              	HASH_ClearFlag:
 1075              	.LFB138:
 636:./Library/stm32f4xx_hash.c **** /**
 637:./Library/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 638:./Library/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 639:./Library/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 640:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 641:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 642:./Library/stm32f4xx_hash.c ****   * @retval None
 643:./Library/stm32f4xx_hash.c ****   */
 644:./Library/stm32f4xx_hash.c **** void HASH_ClearFlag(uint32_t HASH_FLAG)
 645:./Library/stm32f4xx_hash.c **** {
 1076              		.loc 1 645 1
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 0000 80B4     		push	{r7}
 1082              	.LCFI80:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 31


 1085 0002 83B0     		sub	sp, sp, #12
 1086              	.LCFI81:
 1087              		.cfi_def_cfa_offset 16
 1088 0004 00AF     		add	r7, sp, #0
 1089              	.LCFI82:
 1090              		.cfi_def_cfa_register 7
 1091 0006 7860     		str	r0, [r7, #4]
 646:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 647:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 648:./Library/stm32f4xx_hash.c ****   
 649:./Library/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 650:./Library/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 1092              		.loc 1 650 7
 1093 0008 044A     		ldr	r2, .L63
 1094              		.loc 1 650 14
 1095 000a 7B68     		ldr	r3, [r7, #4]
 1096 000c DB43     		mvns	r3, r3
 1097              		.loc 1 650 12
 1098 000e 5362     		str	r3, [r2, #36]
 651:./Library/stm32f4xx_hash.c **** }
 1099              		.loc 1 651 1
 1100 0010 00BF     		nop
 1101 0012 0C37     		adds	r7, r7, #12
 1102              	.LCFI83:
 1103              		.cfi_def_cfa_offset 4
 1104 0014 BD46     		mov	sp, r7
 1105              	.LCFI84:
 1106              		.cfi_def_cfa_register 13
 1107              		@ sp needed
 1108 0016 5DF8047B 		ldr	r7, [sp], #4
 1109              	.LCFI85:
 1110              		.cfi_restore 7
 1111              		.cfi_def_cfa_offset 0
 1112 001a 7047     		bx	lr
 1113              	.L64:
 1114              		.align	2
 1115              	.L63:
 1116 001c 00040650 		.word	1342571520
 1117              		.cfi_endproc
 1118              	.LFE138:
 1120              		.section	.text.HASH_GetITStatus,"ax",%progbits
 1121              		.align	1
 1122              		.global	HASH_GetITStatus
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1127              	HASH_GetITStatus:
 1128              	.LFB139:
 652:./Library/stm32f4xx_hash.c **** /**
 653:./Library/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 654:./Library/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 655:./Library/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 656:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 657:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 658:./Library/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 659:./Library/stm32f4xx_hash.c ****   */
 660:./Library/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint32_t HASH_IT)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 32


 661:./Library/stm32f4xx_hash.c **** {
 1129              		.loc 1 661 1
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 16
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 1134 0000 80B4     		push	{r7}
 1135              	.LCFI86:
 1136              		.cfi_def_cfa_offset 4
 1137              		.cfi_offset 7, -4
 1138 0002 85B0     		sub	sp, sp, #20
 1139              	.LCFI87:
 1140              		.cfi_def_cfa_offset 24
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI88:
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 662:./Library/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 1145              		.loc 1 662 12
 1146 0008 0023     		movs	r3, #0
 1147 000a FB73     		strb	r3, [r7, #15]
 663:./Library/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 1148              		.loc 1 663 12
 1149 000c 0023     		movs	r3, #0
 1150 000e BB60     		str	r3, [r7, #8]
 664:./Library/stm32f4xx_hash.c **** 
 665:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 666:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 667:./Library/stm32f4xx_hash.c **** 
 668:./Library/stm32f4xx_hash.c **** 
 669:./Library/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 670:./Library/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 1151              		.loc 1 670 17
 1152 0010 0B4B     		ldr	r3, .L69
 1153              		.loc 1 670 10
 1154 0012 5B6A     		ldr	r3, [r3, #36]
 1155 0014 BB60     		str	r3, [r7, #8]
 671:./Library/stm32f4xx_hash.c **** 
 672:./Library/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 1156              		.loc 1 672 13
 1157 0016 0A4B     		ldr	r3, .L69
 1158 0018 1A6A     		ldr	r2, [r3, #32]
 1159              		.loc 1 672 19
 1160 001a BB68     		ldr	r3, [r7, #8]
 1161 001c 1A40     		ands	r2, r2, r3
 1162              		.loc 1 672 29
 1163 001e 7B68     		ldr	r3, [r7, #4]
 1164 0020 1340     		ands	r3, r3, r2
 1165              		.loc 1 672 6
 1166 0022 002B     		cmp	r3, #0
 1167 0024 02D0     		beq	.L66
 673:./Library/stm32f4xx_hash.c ****   {
 674:./Library/stm32f4xx_hash.c ****     /* HASH_IT is set */
 675:./Library/stm32f4xx_hash.c ****     bitstatus = SET;
 1168              		.loc 1 675 15
 1169 0026 0123     		movs	r3, #1
 1170 0028 FB73     		strb	r3, [r7, #15]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 33


 1171 002a 01E0     		b	.L67
 1172              	.L66:
 676:./Library/stm32f4xx_hash.c ****   }
 677:./Library/stm32f4xx_hash.c ****   else
 678:./Library/stm32f4xx_hash.c ****   {
 679:./Library/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 680:./Library/stm32f4xx_hash.c ****     bitstatus = RESET;
 1173              		.loc 1 680 15
 1174 002c 0023     		movs	r3, #0
 1175 002e FB73     		strb	r3, [r7, #15]
 1176              	.L67:
 681:./Library/stm32f4xx_hash.c ****   }
 682:./Library/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 683:./Library/stm32f4xx_hash.c ****   return bitstatus;
 1177              		.loc 1 683 10
 1178 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 684:./Library/stm32f4xx_hash.c **** }
 1179              		.loc 1 684 1
 1180 0032 1846     		mov	r0, r3
 1181 0034 1437     		adds	r7, r7, #20
 1182              	.LCFI89:
 1183              		.cfi_def_cfa_offset 4
 1184 0036 BD46     		mov	sp, r7
 1185              	.LCFI90:
 1186              		.cfi_def_cfa_register 13
 1187              		@ sp needed
 1188 0038 5DF8047B 		ldr	r7, [sp], #4
 1189              	.LCFI91:
 1190              		.cfi_restore 7
 1191              		.cfi_def_cfa_offset 0
 1192 003c 7047     		bx	lr
 1193              	.L70:
 1194 003e 00BF     		.align	2
 1195              	.L69:
 1196 0040 00040650 		.word	1342571520
 1197              		.cfi_endproc
 1198              	.LFE139:
 1200              		.section	.text.HASH_ClearITPendingBit,"ax",%progbits
 1201              		.align	1
 1202              		.global	HASH_ClearITPendingBit
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1207              	HASH_ClearITPendingBit:
 1208              	.LFB140:
 685:./Library/stm32f4xx_hash.c **** 
 686:./Library/stm32f4xx_hash.c **** /**
 687:./Library/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 688:./Library/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 689:./Library/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 690:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 691:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 692:./Library/stm32f4xx_hash.c ****   * @retval None
 693:./Library/stm32f4xx_hash.c ****   */
 694:./Library/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint32_t HASH_IT)
 695:./Library/stm32f4xx_hash.c **** {
 1209              		.loc 1 695 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 34


 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 8
 1212              		@ frame_needed = 1, uses_anonymous_args = 0
 1213              		@ link register save eliminated.
 1214 0000 80B4     		push	{r7}
 1215              	.LCFI92:
 1216              		.cfi_def_cfa_offset 4
 1217              		.cfi_offset 7, -4
 1218 0002 83B0     		sub	sp, sp, #12
 1219              	.LCFI93:
 1220              		.cfi_def_cfa_offset 16
 1221 0004 00AF     		add	r7, sp, #0
 1222              	.LCFI94:
 1223              		.cfi_def_cfa_register 7
 1224 0006 7860     		str	r0, [r7, #4]
 696:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 697:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 698:./Library/stm32f4xx_hash.c **** 
 699:./Library/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 700:./Library/stm32f4xx_hash.c ****   HASH->SR = (uint32_t)(~HASH_IT);
 1225              		.loc 1 700 7
 1226 0008 044A     		ldr	r2, .L72
 1227              		.loc 1 700 25
 1228 000a 7B68     		ldr	r3, [r7, #4]
 1229 000c DB43     		mvns	r3, r3
 1230              		.loc 1 700 12
 1231 000e 5362     		str	r3, [r2, #36]
 701:./Library/stm32f4xx_hash.c **** }
 1232              		.loc 1 701 1
 1233 0010 00BF     		nop
 1234 0012 0C37     		adds	r7, r7, #12
 1235              	.LCFI95:
 1236              		.cfi_def_cfa_offset 4
 1237 0014 BD46     		mov	sp, r7
 1238              	.LCFI96:
 1239              		.cfi_def_cfa_register 13
 1240              		@ sp needed
 1241 0016 5DF8047B 		ldr	r7, [sp], #4
 1242              	.LCFI97:
 1243              		.cfi_restore 7
 1244              		.cfi_def_cfa_offset 0
 1245 001a 7047     		bx	lr
 1246              	.L73:
 1247              		.align	2
 1248              	.L72:
 1249 001c 00040650 		.word	1342571520
 1250              		.cfi_endproc
 1251              	.LFE140:
 1253              		.text
 1254              	.Letext0:
 1255              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 1256              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 1257              		.file 4 "./CORE/stm32f4xx.h"
 1258              		.file 5 "./Library/stm32f4xx_hash.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hash.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:20     .text.HASH_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:26     .text.HASH_DeInit:0000000000000000 HASH_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:56     .text.HASH_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:62     .text.HASH_Init:0000000000000000 HASH_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:153    .text.HASH_Init:000000000000006c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:158    .text.HASH_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:164    .text.HASH_StructInit:0000000000000000 HASH_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:216    .text.HASH_Reset:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:222    .text.HASH_Reset:0000000000000000 HASH_Reset
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:256    .text.HASH_Reset:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:261    .text.HASH_SetLastWordValidBitsNbr:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:267    .text.HASH_SetLastWordValidBitsNbr:0000000000000000 HASH_SetLastWordValidBitsNbr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:316    .text.HASH_SetLastWordValidBitsNbr:0000000000000030 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:321    .text.HASH_DataIn:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:327    .text.HASH_DataIn:0000000000000000 HASH_DataIn
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:367    .text.HASH_DataIn:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:372    .text.HASH_GetInFIFOWordsNbr:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:378    .text.HASH_GetInFIFOWordsNbr:0000000000000000 HASH_GetInFIFOWordsNbr
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:414    .text.HASH_GetInFIFOWordsNbr:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:419    .text.HASH_GetDigest:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:425    .text.HASH_GetDigest:0000000000000000 HASH_GetDigest
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:516    .text.HASH_GetDigest:0000000000000054 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:522    .text.HASH_StartDigest:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:528    .text.HASH_StartDigest:0000000000000000 HASH_StartDigest
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:562    .text.HASH_StartDigest:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:567    .text.HASH_SaveContext:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:573    .text.HASH_SaveContext:0000000000000000 HASH_SaveContext
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:660    .text.HASH_SaveContext:000000000000005c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:665    .text.HASH_RestoreContext:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:671    .text.HASH_RestoreContext:0000000000000000 HASH_RestoreContext
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:767    .text.HASH_RestoreContext:0000000000000068 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:772    .text.HASH_AutoStartDigest:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:778    .text.HASH_AutoStartDigest:0000000000000000 HASH_AutoStartDigest
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:834    .text.HASH_AutoStartDigest:0000000000000038 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:839    .text.HASH_DMACmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:845    .text.HASH_DMACmd:0000000000000000 HASH_DMACmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:901    .text.HASH_DMACmd:0000000000000038 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:906    .text.HASH_ITConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:912    .text.HASH_ITConfig:0000000000000000 HASH_ITConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:974    .text.HASH_ITConfig:000000000000003c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:979    .text.HASH_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:985    .text.HASH_GetFlagStatus:0000000000000000 HASH_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1063   .text.HASH_GetFlagStatus:000000000000004c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1068   .text.HASH_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1074   .text.HASH_ClearFlag:0000000000000000 HASH_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1116   .text.HASH_ClearFlag:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1121   .text.HASH_GetITStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1127   .text.HASH_GetITStatus:0000000000000000 HASH_GetITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1196   .text.HASH_GetITStatus:0000000000000040 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1201   .text.HASH_ClearITPendingBit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1207   .text.HASH_ClearITPendingBit:0000000000000000 HASH_ClearITPendingBit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s:1249   .text.HASH_ClearITPendingBit:000000000000001c $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccwmWUgL.s 			page 36


