ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_i2c.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	I2C_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	I2C_DeInit:
  27              	.LFB123:
  28              		.file 1 "./Library/stm32f4xx_i2c.c"
   1:./Library/stm32f4xx_i2c.c **** /**
   2:./Library/stm32f4xx_i2c.c ****   ******************************************************************************
   3:./Library/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:./Library/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_i2c.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_i2c.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:./Library/stm32f4xx_i2c.c ****   *           + Initialization and Configuration
  10:./Library/stm32f4xx_i2c.c ****   *           + Data transfers
  11:./Library/stm32f4xx_i2c.c ****   *           + PEC management
  12:./Library/stm32f4xx_i2c.c ****   *           + DMA transfers management
  13:./Library/stm32f4xx_i2c.c ****   *           + Interrupts, events and flags management 
  14:./Library/stm32f4xx_i2c.c ****   *           
  15:./Library/stm32f4xx_i2c.c ****     @verbatim    
  16:./Library/stm32f4xx_i2c.c ****  ===============================================================================
  17:./Library/stm32f4xx_i2c.c ****                     ##### How to use this driver #####
  18:./Library/stm32f4xx_i2c.c ****  ===============================================================================
  19:./Library/stm32f4xx_i2c.c ****     [..]
  20:./Library/stm32f4xx_i2c.c ****       (#) Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:./Library/stm32f4xx_i2c.c ****           function for I2C1, I2C2 or I2C3.
  22:./Library/stm32f4xx_i2c.c ****   
  23:./Library/stm32f4xx_i2c.c ****       (#) Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:./Library/stm32f4xx_i2c.c ****           RCC_AHBPeriphClockCmd() function. 
  25:./Library/stm32f4xx_i2c.c ****   
  26:./Library/stm32f4xx_i2c.c ****       (#) Peripherals alternate function: 
  27:./Library/stm32f4xx_i2c.c ****         (++) Connect the pin to the desired peripherals' Alternate 
  28:./Library/stm32f4xx_i2c.c ****              Function (AF) using GPIO_PinAFConfig() function
  29:./Library/stm32f4xx_i2c.c ****         (++) Configure the desired pin in alternate function by:
  30:./Library/stm32f4xx_i2c.c ****              GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 2


  31:./Library/stm32f4xx_i2c.c ****         (++) Select the type, pull-up/pull-down and output speed via 
  32:./Library/stm32f4xx_i2c.c ****              GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:./Library/stm32f4xx_i2c.c ****         (++) Call GPIO_Init() function
  34:./Library/stm32f4xx_i2c.c ****              Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:./Library/stm32f4xx_i2c.c ****              Add an external pull up if necessary (typically 4.7 KOhm).      
  36:./Library/stm32f4xx_i2c.c ****           
  37:./Library/stm32f4xx_i2c.c ****       (#) Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:./Library/stm32f4xx_i2c.c ****           Address using the I2C_Init() function.
  39:./Library/stm32f4xx_i2c.c ****   
  40:./Library/stm32f4xx_i2c.c ****       (#) Optionally you can enable/configure the following parameters without
  41:./Library/stm32f4xx_i2c.c ****           re-initialization (i.e there is no need to call again I2C_Init() function):
  42:./Library/stm32f4xx_i2c.c ****         (++) Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:./Library/stm32f4xx_i2c.c ****         (++) Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:./Library/stm32f4xx_i2c.c ****         (++) Enable the general call using the I2C_GeneralCallCmd() function
  45:./Library/stm32f4xx_i2c.c ****         (++) Enable the clock stretching using I2C_StretchClockCmd() function
  46:./Library/stm32f4xx_i2c.c ****         (++) Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:./Library/stm32f4xx_i2c.c ****              function.
  48:./Library/stm32f4xx_i2c.c ****         (++) Configure the NACK position for Master Receiver mode in case of 
  49:./Library/stm32f4xx_i2c.c ****              2 bytes reception using the function I2C_NACKPositionConfig().  
  50:./Library/stm32f4xx_i2c.c ****         (++) Enable the PEC Calculation using I2C_CalculatePEC() function
  51:./Library/stm32f4xx_i2c.c ****         (++) For SMBus Mode: 
  52:./Library/stm32f4xx_i2c.c ****           (+++) Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:./Library/stm32f4xx_i2c.c ****           (+++) Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:./Library/stm32f4xx_i2c.c ****   
  55:./Library/stm32f4xx_i2c.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  56:./Library/stm32f4xx_i2c.c ****           I2C_ITConfig() if you need to use interrupt mode. 
  57:./Library/stm32f4xx_i2c.c ****   
  58:./Library/stm32f4xx_i2c.c ****       (#) When using the DMA mode 
  59:./Library/stm32f4xx_i2c.c ****         (++) Configure the DMA using DMA_Init() function
  60:./Library/stm32f4xx_i2c.c ****         (++) Active the needed channel Request using I2C_DMACmd() or
  61:./Library/stm32f4xx_i2c.c ****              I2C_DMALastTransferCmd() function.
  62:./Library/stm32f4xx_i2c.c ****         -@@- When using DMA mode, I2C interrupts may be used at the same time to
  63:./Library/stm32f4xx_i2c.c ****              control the communication flow (Start/Stop/Ack... events and errors).
  64:./Library/stm32f4xx_i2c.c ****    
  65:./Library/stm32f4xx_i2c.c ****       (#) Enable the I2C using the I2C_Cmd() function.
  66:./Library/stm32f4xx_i2c.c ****    
  67:./Library/stm32f4xx_i2c.c ****       (#) Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:./Library/stm32f4xx_i2c.c ****           transfers. 
  69:./Library/stm32f4xx_i2c.c ****   
  70:./Library/stm32f4xx_i2c.c ****     @endverbatim  
  71:./Library/stm32f4xx_i2c.c ****   ******************************************************************************
  72:./Library/stm32f4xx_i2c.c ****   * @attention
  73:./Library/stm32f4xx_i2c.c ****   *
  74:./Library/stm32f4xx_i2c.c ****   * Copyright (c) 2016 STMicroelectronics.
  75:./Library/stm32f4xx_i2c.c ****   * All rights reserved.
  76:./Library/stm32f4xx_i2c.c ****   *
  77:./Library/stm32f4xx_i2c.c ****   * This software is licensed under terms that can be found in the LICENSE file
  78:./Library/stm32f4xx_i2c.c ****   * in the root directory of this software component.
  79:./Library/stm32f4xx_i2c.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  80:./Library/stm32f4xx_i2c.c ****   *
  81:./Library/stm32f4xx_i2c.c ****   ******************************************************************************
  82:./Library/stm32f4xx_i2c.c ****   */
  83:./Library/stm32f4xx_i2c.c **** 
  84:./Library/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  85:./Library/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  86:./Library/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  87:./Library/stm32f4xx_i2c.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 3


  88:./Library/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  89:./Library/stm32f4xx_i2c.c ****   * @{
  90:./Library/stm32f4xx_i2c.c ****   */
  91:./Library/stm32f4xx_i2c.c **** 
  92:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C 
  93:./Library/stm32f4xx_i2c.c ****   * @brief I2C driver modules
  94:./Library/stm32f4xx_i2c.c ****   * @{
  95:./Library/stm32f4xx_i2c.c ****   */ 
  96:./Library/stm32f4xx_i2c.c **** 
  97:./Library/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
  98:./Library/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
  99:./Library/stm32f4xx_i2c.c **** 
 100:./Library/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 101:./Library/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 102:./Library/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 103:./Library/stm32f4xx_i2c.c **** 
 104:./Library/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 105:./Library/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 106:./Library/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 107:./Library/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 108:./Library/stm32f4xx_i2c.c **** 
 109:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 110:./Library/stm32f4xx_i2c.c ****   * @{
 111:./Library/stm32f4xx_i2c.c ****   */
 112:./Library/stm32f4xx_i2c.c **** 
 113:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 114:./Library/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 115:./Library/stm32f4xx_i2c.c ****  *
 116:./Library/stm32f4xx_i2c.c **** @verbatim   
 117:./Library/stm32f4xx_i2c.c ****  ===============================================================================
 118:./Library/stm32f4xx_i2c.c ****             ##### Initialization and Configuration functions #####
 119:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
 120:./Library/stm32f4xx_i2c.c **** 
 121:./Library/stm32f4xx_i2c.c **** @endverbatim
 122:./Library/stm32f4xx_i2c.c ****   * @{
 123:./Library/stm32f4xx_i2c.c ****   */
 124:./Library/stm32f4xx_i2c.c **** 
 125:./Library/stm32f4xx_i2c.c **** /**
 126:./Library/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 127:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 128:./Library/stm32f4xx_i2c.c ****   * @retval None
 129:./Library/stm32f4xx_i2c.c ****   */
 130:./Library/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 131:./Library/stm32f4xx_i2c.c **** {
  29              		.loc 1 131 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 4


  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 132:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 133:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 134:./Library/stm32f4xx_i2c.c **** 
 135:./Library/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
  45              		.loc 1 135 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 174A     		ldr	r2, .L6
  48 000c 9342     		cmp	r3, r2
  49 000e 0AD1     		bne	.L2
 136:./Library/stm32f4xx_i2c.c ****   {
 137:./Library/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 138:./Library/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
  50              		.loc 1 138 5
  51 0010 0121     		movs	r1, #1
  52 0012 4FF40010 		mov	r0, #2097152
  53 0016 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 139:./Library/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 140:./Library/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
  54              		.loc 1 140 5
  55 001a 0021     		movs	r1, #0
  56 001c 4FF40010 		mov	r0, #2097152
  57 0020 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 141:./Library/stm32f4xx_i2c.c ****   }
 142:./Library/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
 143:./Library/stm32f4xx_i2c.c ****   {
 144:./Library/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 145:./Library/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
 146:./Library/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 147:./Library/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
 148:./Library/stm32f4xx_i2c.c ****   }
 149:./Library/stm32f4xx_i2c.c ****   else 
 150:./Library/stm32f4xx_i2c.c ****   {
 151:./Library/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
 152:./Library/stm32f4xx_i2c.c ****     {
 153:./Library/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 154:./Library/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
 155:./Library/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 156:./Library/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
 157:./Library/stm32f4xx_i2c.c ****     }
 158:./Library/stm32f4xx_i2c.c ****   }
 159:./Library/stm32f4xx_i2c.c **** }
  58              		.loc 1 159 1
  59 0024 1CE0     		b	.L5
  60              	.L2:
 142:./Library/stm32f4xx_i2c.c ****   {
  61              		.loc 1 142 11
  62 0026 7B68     		ldr	r3, [r7, #4]
  63 0028 104A     		ldr	r2, .L6+4
  64 002a 9342     		cmp	r3, r2
  65 002c 0AD1     		bne	.L4
 145:./Library/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
  66              		.loc 1 145 5
  67 002e 0121     		movs	r1, #1
  68 0030 4FF48000 		mov	r0, #4194304
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 5


  69 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 147:./Library/stm32f4xx_i2c.c ****   }
  70              		.loc 1 147 5
  71 0038 0021     		movs	r1, #0
  72 003a 4FF48000 		mov	r0, #4194304
  73 003e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  74              		.loc 1 159 1
  75 0042 0DE0     		b	.L5
  76              	.L4:
 151:./Library/stm32f4xx_i2c.c ****     {
  77              		.loc 1 151 8
  78 0044 7B68     		ldr	r3, [r7, #4]
  79 0046 0A4A     		ldr	r2, .L6+8
  80 0048 9342     		cmp	r3, r2
  81 004a 09D1     		bne	.L5
 154:./Library/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
  82              		.loc 1 154 7
  83 004c 0121     		movs	r1, #1
  84 004e 4FF40000 		mov	r0, #8388608
  85 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 156:./Library/stm32f4xx_i2c.c ****     }
  86              		.loc 1 156 7
  87 0056 0021     		movs	r1, #0
  88 0058 4FF40000 		mov	r0, #8388608
  89 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  90              	.L5:
  91              		.loc 1 159 1
  92 0060 00BF     		nop
  93 0062 0837     		adds	r7, r7, #8
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 8
  96 0064 BD46     		mov	sp, r7
  97              	.LCFI4:
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0066 80BD     		pop	{r7, pc}
 101              	.L7:
 102              		.align	2
 103              	.L6:
 104 0068 00540040 		.word	1073763328
 105 006c 00580040 		.word	1073764352
 106 0070 005C0040 		.word	1073765376
 107              		.cfi_endproc
 108              	.LFE123:
 110              		.section	.text.I2C_Init,"ax",%progbits
 111              		.align	1
 112              		.global	I2C_Init
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	I2C_Init:
 118              	.LFB124:
 160:./Library/stm32f4xx_i2c.c **** 
 161:./Library/stm32f4xx_i2c.c **** /**
 162:./Library/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 163:./Library/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 164:./Library/stm32f4xx_i2c.c ****   *           
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 6


 165:./Library/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 166:./Library/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 167:./Library/stm32f4xx_i2c.c ****   *           
 168:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 169:./Library/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 170:./Library/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 171:./Library/stm32f4xx_i2c.c ****   * @retval None
 172:./Library/stm32f4xx_i2c.c ****   */
 173:./Library/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 174:./Library/stm32f4xx_i2c.c **** {
 119              		.loc 1 174 1
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 40
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0000 80B5     		push	{r7, lr}
 124              	.LCFI5:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 8AB0     		sub	sp, sp, #40
 129              	.LCFI6:
 130              		.cfi_def_cfa_offset 48
 131 0004 00AF     		add	r7, sp, #0
 132              	.LCFI7:
 133              		.cfi_def_cfa_register 7
 134 0006 7860     		str	r0, [r7, #4]
 135 0008 3960     		str	r1, [r7]
 175:./Library/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 136              		.loc 1 175 12
 137 000a 0023     		movs	r3, #0
 138 000c FB84     		strh	r3, [r7, #38]	@ movhi
 139              		.loc 1 175 24
 140 000e 0023     		movs	r3, #0
 141 0010 7B84     		strh	r3, [r7, #34]	@ movhi
 176:./Library/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 142              		.loc 1 176 12
 143 0012 0423     		movs	r3, #4
 144 0014 BB84     		strh	r3, [r7, #36]	@ movhi
 177:./Library/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 145              		.loc 1 177 12
 146 0016 574B     		ldr	r3, .L15
 147 0018 FB61     		str	r3, [r7, #28]
 178:./Library/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 179:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 180:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 181:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 182:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 183:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 184:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 185:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 186:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 187:./Library/stm32f4xx_i2c.c **** 
 188:./Library/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 189:./Library/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 190:./Library/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 148              		.loc 1 190 10
 149 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 7


 150 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 151 001e FB84     		strh	r3, [r7, #38]	@ movhi
 191:./Library/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 192:./Library/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 152              		.loc 1 192 10
 153 0020 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 154 0022 23F03F03 		bic	r3, r3, #63
 155 0026 FB84     		strh	r3, [r7, #38]	@ movhi
 193:./Library/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 194:./Library/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 156              		.loc 1 194 3
 157 0028 07F10C03 		add	r3, r7, #12
 158 002c 1846     		mov	r0, r3
 159 002e FFF7FEFF 		bl	RCC_GetClocksFreq
 195:./Library/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 160              		.loc 1 195 9
 161 0032 7B69     		ldr	r3, [r7, #20]
 162 0034 FB61     		str	r3, [r7, #28]
 196:./Library/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 197:./Library/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 163              		.loc 1 197 32
 164 0036 FB69     		ldr	r3, [r7, #28]
 165 0038 4F4A     		ldr	r2, .L15+4
 166 003a A2FB0323 		umull	r2, r3, r2, r3
 167 003e 9B0C     		lsrs	r3, r3, #18
 168              		.loc 1 197 13
 169 0040 7B84     		strh	r3, [r7, #34]	@ movhi
 198:./Library/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 170              		.loc 1 198 10
 171 0042 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 172 0044 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 173 0046 1343     		orrs	r3, r3, r2
 174 0048 FB84     		strh	r3, [r7, #38]	@ movhi
 199:./Library/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 200:./Library/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 175              		.loc 1 200 13
 176 004a 7B68     		ldr	r3, [r7, #4]
 177 004c FA8C     		ldrh	r2, [r7, #38]	@ movhi
 178 004e 9A80     		strh	r2, [r3, #4]	@ movhi
 201:./Library/stm32f4xx_i2c.c **** 
 202:./Library/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 203:./Library/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 204:./Library/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 179              		.loc 1 204 13
 180 0050 7B68     		ldr	r3, [r7, #4]
 181 0052 1B88     		ldrh	r3, [r3]	@ movhi
 182 0054 9BB2     		uxth	r3, r3
 183 0056 23F00103 		bic	r3, r3, #1
 184 005a 9AB2     		uxth	r2, r3
 185 005c 7B68     		ldr	r3, [r7, #4]
 186 005e 1A80     		strh	r2, [r3]	@ movhi
 205:./Library/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 206:./Library/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 207:./Library/stm32f4xx_i2c.c ****   tmpreg = 0;
 187              		.loc 1 207 10
 188 0060 0023     		movs	r3, #0
 189 0062 FB84     		strh	r3, [r7, #38]	@ movhi
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 8


 208:./Library/stm32f4xx_i2c.c **** 
 209:./Library/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 210:./Library/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 190              		.loc 1 210 21
 191 0064 3B68     		ldr	r3, [r7]
 192 0066 1B68     		ldr	r3, [r3]
 193              		.loc 1 210 6
 194 0068 444A     		ldr	r2, .L15+8
 195 006a 9342     		cmp	r3, r2
 196 006c 15D8     		bhi	.L9
 211:./Library/stm32f4xx_i2c.c ****   {
 212:./Library/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 213:./Library/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 197              		.loc 1 213 48
 198 006e 3B68     		ldr	r3, [r7]
 199 0070 1B68     		ldr	r3, [r3]
 200              		.loc 1 213 65
 201 0072 5B00     		lsls	r3, r3, #1
 202              		.loc 1 213 31
 203 0074 FA69     		ldr	r2, [r7, #28]
 204 0076 B2FBF3F3 		udiv	r3, r2, r3
 205              		.loc 1 213 12
 206 007a BB84     		strh	r3, [r7, #36]	@ movhi
 214:./Library/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 215:./Library/stm32f4xx_i2c.c ****     if (result < 0x04)
 207              		.loc 1 215 8
 208 007c BB8C     		ldrh	r3, [r7, #36]
 209 007e 032B     		cmp	r3, #3
 210 0080 01D8     		bhi	.L10
 216:./Library/stm32f4xx_i2c.c ****     {
 217:./Library/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 218:./Library/stm32f4xx_i2c.c ****       result = 0x04;  
 211              		.loc 1 218 14
 212 0082 0423     		movs	r3, #4
 213 0084 BB84     		strh	r3, [r7, #36]	@ movhi
 214              	.L10:
 219:./Library/stm32f4xx_i2c.c ****     }
 220:./Library/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 221:./Library/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 215              		.loc 1 221 12
 216 0086 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 217 0088 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 218 008a 1343     		orrs	r3, r3, r2
 219 008c FB84     		strh	r3, [r7, #38]	@ movhi
 222:./Library/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 223:./Library/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 220              		.loc 1 223 29
 221 008e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 222 0090 0133     		adds	r3, r3, #1
 223 0092 9AB2     		uxth	r2, r3
 224              		.loc 1 223 17
 225 0094 7B68     		ldr	r3, [r7, #4]
 226 0096 1A84     		strh	r2, [r3, #32]	@ movhi
 227 0098 40E0     		b	.L11
 228              	.L9:
 224:./Library/stm32f4xx_i2c.c ****   }
 225:./Library/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 9


 226:./Library/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 227:./Library/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 228:./Library/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 229:./Library/stm32f4xx_i2c.c ****   {
 230:./Library/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 229              		.loc 1 230 23
 230 009a 3B68     		ldr	r3, [r7]
 231 009c DB88     		ldrh	r3, [r3, #6]
 232              		.loc 1 230 8
 233 009e 4BF6FF72 		movw	r2, #49151
 234 00a2 9342     		cmp	r3, r2
 235 00a4 09D1     		bne	.L12
 231:./Library/stm32f4xx_i2c.c ****     {
 232:./Library/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 233:./Library/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 236              		.loc 1 233 50
 237 00a6 3B68     		ldr	r3, [r7]
 238 00a8 1A68     		ldr	r2, [r3]
 239              		.loc 1 233 67
 240 00aa 1346     		mov	r3, r2
 241 00ac 5B00     		lsls	r3, r3, #1
 242 00ae 1344     		add	r3, r3, r2
 243              		.loc 1 233 33
 244 00b0 FA69     		ldr	r2, [r7, #28]
 245 00b2 B2FBF3F3 		udiv	r3, r2, r3
 246              		.loc 1 233 14
 247 00b6 BB84     		strh	r3, [r7, #36]	@ movhi
 248 00b8 0EE0     		b	.L13
 249              	.L12:
 234:./Library/stm32f4xx_i2c.c ****     }
 235:./Library/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 236:./Library/stm32f4xx_i2c.c ****     {
 237:./Library/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 238:./Library/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 250              		.loc 1 238 50
 251 00ba 3B68     		ldr	r3, [r7]
 252 00bc 1A68     		ldr	r2, [r3]
 253              		.loc 1 238 67
 254 00be 1346     		mov	r3, r2
 255 00c0 9B00     		lsls	r3, r3, #2
 256 00c2 1344     		add	r3, r3, r2
 257 00c4 9A00     		lsls	r2, r3, #2
 258 00c6 1344     		add	r3, r3, r2
 259              		.loc 1 238 33
 260 00c8 FA69     		ldr	r2, [r7, #28]
 261 00ca B2FBF3F3 		udiv	r3, r2, r3
 262              		.loc 1 238 14
 263 00ce BB84     		strh	r3, [r7, #36]	@ movhi
 239:./Library/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 240:./Library/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 264              		.loc 1 240 14
 265 00d0 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 266 00d2 43F48043 		orr	r3, r3, #16384
 267 00d6 BB84     		strh	r3, [r7, #36]	@ movhi
 268              	.L13:
 241:./Library/stm32f4xx_i2c.c ****     }
 242:./Library/stm32f4xx_i2c.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 10


 243:./Library/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 244:./Library/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 269              		.loc 1 244 17
 270 00d8 BB8C     		ldrh	r3, [r7, #36]
 271 00da C3F30B03 		ubfx	r3, r3, #0, #12
 272              		.loc 1 244 8
 273 00de 002B     		cmp	r3, #0
 274 00e0 03D1     		bne	.L14
 245:./Library/stm32f4xx_i2c.c ****     {
 246:./Library/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 247:./Library/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 275              		.loc 1 247 14
 276 00e2 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 277 00e4 43F00103 		orr	r3, r3, #1
 278 00e8 BB84     		strh	r3, [r7, #36]	@ movhi
 279              	.L14:
 248:./Library/stm32f4xx_i2c.c ****     }
 249:./Library/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 250:./Library/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 280              		.loc 1 250 12
 281 00ea BA8C     		ldrh	r2, [r7, #36]	@ movhi
 282 00ec FB8C     		ldrh	r3, [r7, #38]	@ movhi
 283 00ee 1343     		orrs	r3, r3, r2
 284 00f0 9BB2     		uxth	r3, r3
 285 00f2 6FEA4343 		mvn	r3, r3, lsl #17
 286 00f6 6FEA5343 		mvn	r3, r3, lsr #17
 287 00fa FB84     		strh	r3, [r7, #38]	@ movhi
 251:./Library/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 252:./Library/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 288              		.loc 1 252 42
 289 00fc 7B8C     		ldrh	r3, [r7, #34]
 290 00fe 4FF49672 		mov	r2, #300
 291 0102 02FB03F3 		mul	r3, r2, r3
 292              		.loc 1 252 59
 293 0106 1E4A     		ldr	r2, .L15+12
 294 0108 82FB0312 		smull	r1, r2, r2, r3
 295 010c 9211     		asrs	r2, r2, #6
 296 010e DB17     		asrs	r3, r3, #31
 297 0110 D31A     		subs	r3, r2, r3
 298              		.loc 1 252 19
 299 0112 9BB2     		uxth	r3, r3
 300 0114 0133     		adds	r3, r3, #1
 301 0116 9AB2     		uxth	r2, r3
 302              		.loc 1 252 17
 303 0118 7B68     		ldr	r3, [r7, #4]
 304 011a 1A84     		strh	r2, [r3, #32]	@ movhi
 305              	.L11:
 253:./Library/stm32f4xx_i2c.c ****   }
 254:./Library/stm32f4xx_i2c.c **** 
 255:./Library/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 256:./Library/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 306              		.loc 1 256 13
 307 011c 7B68     		ldr	r3, [r7, #4]
 308 011e FA8C     		ldrh	r2, [r7, #38]	@ movhi
 309 0120 9A83     		strh	r2, [r3, #28]	@ movhi
 257:./Library/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 258:./Library/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 11


 310              		.loc 1 258 13
 311 0122 7B68     		ldr	r3, [r7, #4]
 312 0124 1B88     		ldrh	r3, [r3]	@ movhi
 313 0126 9BB2     		uxth	r3, r3
 314 0128 43F00103 		orr	r3, r3, #1
 315 012c 9AB2     		uxth	r2, r3
 316 012e 7B68     		ldr	r3, [r7, #4]
 317 0130 1A80     		strh	r2, [r3]	@ movhi
 259:./Library/stm32f4xx_i2c.c **** 
 260:./Library/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 261:./Library/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 262:./Library/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 318              		.loc 1 262 10
 319 0132 7B68     		ldr	r3, [r7, #4]
 320 0134 1B88     		ldrh	r3, [r3]	@ movhi
 321 0136 FB84     		strh	r3, [r7, #38]	@ movhi
 263:./Library/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 264:./Library/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 322              		.loc 1 264 10
 323 0138 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 324 013a 23F48163 		bic	r3, r3, #1032
 325 013e 23F00203 		bic	r3, r3, #2
 326 0142 FB84     		strh	r3, [r7, #38]	@ movhi
 265:./Library/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 266:./Library/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 267:./Library/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 268:./Library/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 327              		.loc 1 268 48
 328 0144 3B68     		ldr	r3, [r7]
 329 0146 9A88     		ldrh	r2, [r3, #4]
 330              		.loc 1 268 75
 331 0148 3B68     		ldr	r3, [r7]
 332 014a 5B89     		ldrh	r3, [r3, #10]
 333              		.loc 1 268 13
 334 014c 1343     		orrs	r3, r3, r2
 335 014e 9AB2     		uxth	r2, r3
 336              		.loc 1 268 10
 337 0150 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 338 0152 1343     		orrs	r3, r3, r2
 339 0154 FB84     		strh	r3, [r7, #38]	@ movhi
 269:./Library/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 270:./Library/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 340              		.loc 1 270 13
 341 0156 7B68     		ldr	r3, [r7, #4]
 342 0158 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 343 015a 1A80     		strh	r2, [r3]	@ movhi
 271:./Library/stm32f4xx_i2c.c **** 
 272:./Library/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 273:./Library/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 274:./Library/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 344              		.loc 1 274 31
 345 015c 3B68     		ldr	r3, [r7]
 346 015e 9A89     		ldrh	r2, [r3, #12]
 347              		.loc 1 274 73
 348 0160 3B68     		ldr	r3, [r7]
 349 0162 1B89     		ldrh	r3, [r3, #8]
 350              		.loc 1 274 14
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 12


 351 0164 1343     		orrs	r3, r3, r2
 352 0166 9AB2     		uxth	r2, r3
 353 0168 7B68     		ldr	r3, [r7, #4]
 354 016a 1A81     		strh	r2, [r3, #8]	@ movhi
 275:./Library/stm32f4xx_i2c.c **** }
 355              		.loc 1 275 1
 356 016c 00BF     		nop
 357 016e 2837     		adds	r7, r7, #40
 358              	.LCFI8:
 359              		.cfi_def_cfa_offset 8
 360 0170 BD46     		mov	sp, r7
 361              	.LCFI9:
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0172 80BD     		pop	{r7, pc}
 365              	.L16:
 366              		.align	2
 367              	.L15:
 368 0174 00127A00 		.word	8000000
 369 0178 83DE1B43 		.word	1125899907
 370 017c A0860100 		.word	100000
 371 0180 D34D6210 		.word	274877907
 372              		.cfi_endproc
 373              	.LFE124:
 375              		.section	.text.I2C_StructInit,"ax",%progbits
 376              		.align	1
 377              		.global	I2C_StructInit
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	I2C_StructInit:
 383              	.LFB125:
 276:./Library/stm32f4xx_i2c.c **** 
 277:./Library/stm32f4xx_i2c.c **** /**
 278:./Library/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 279:./Library/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 280:./Library/stm32f4xx_i2c.c ****   * @retval None
 281:./Library/stm32f4xx_i2c.c ****   */
 282:./Library/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 283:./Library/stm32f4xx_i2c.c **** {
 384              		.loc 1 283 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI10:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 83B0     		sub	sp, sp, #12
 394              	.LCFI11:
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              	.LCFI12:
 398              		.cfi_def_cfa_register 7
 399 0006 7860     		str	r0, [r7, #4]
 284:./Library/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 13


 285:./Library/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 286:./Library/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 400              		.loc 1 286 34
 401 0008 7B68     		ldr	r3, [r7, #4]
 402 000a 41F28832 		movw	r2, #5000
 403 000e 1A60     		str	r2, [r3]
 287:./Library/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 288:./Library/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 404              		.loc 1 288 28
 405 0010 7B68     		ldr	r3, [r7, #4]
 406 0012 0022     		movs	r2, #0
 407 0014 9A80     		strh	r2, [r3, #4]	@ movhi
 289:./Library/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 290:./Library/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 408              		.loc 1 290 33
 409 0016 7B68     		ldr	r3, [r7, #4]
 410 0018 4BF6FF72 		movw	r2, #49151
 411 001c DA80     		strh	r2, [r3, #6]	@ movhi
 291:./Library/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 292:./Library/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 412              		.loc 1 292 35
 413 001e 7B68     		ldr	r3, [r7, #4]
 414 0020 0022     		movs	r2, #0
 415 0022 1A81     		strh	r2, [r3, #8]	@ movhi
 293:./Library/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 294:./Library/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 416              		.loc 1 294 27
 417 0024 7B68     		ldr	r3, [r7, #4]
 418 0026 0022     		movs	r2, #0
 419 0028 5A81     		strh	r2, [r3, #10]	@ movhi
 295:./Library/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 296:./Library/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 420              		.loc 1 296 43
 421 002a 7B68     		ldr	r3, [r7, #4]
 422 002c 4FF48042 		mov	r2, #16384
 423 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 297:./Library/stm32f4xx_i2c.c **** }
 424              		.loc 1 297 1
 425 0032 00BF     		nop
 426 0034 0C37     		adds	r7, r7, #12
 427              	.LCFI13:
 428              		.cfi_def_cfa_offset 4
 429 0036 BD46     		mov	sp, r7
 430              	.LCFI14:
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 0038 5DF8047B 		ldr	r7, [sp], #4
 434              	.LCFI15:
 435              		.cfi_restore 7
 436              		.cfi_def_cfa_offset 0
 437 003c 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE125:
 441              		.section	.text.I2C_Cmd,"ax",%progbits
 442              		.align	1
 443              		.global	I2C_Cmd
 444              		.syntax unified
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 14


 445              		.thumb
 446              		.thumb_func
 448              	I2C_Cmd:
 449              	.LFB126:
 298:./Library/stm32f4xx_i2c.c **** 
 299:./Library/stm32f4xx_i2c.c **** /**
 300:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 301:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 302:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 303:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 304:./Library/stm32f4xx_i2c.c ****   * @retval None
 305:./Library/stm32f4xx_i2c.c ****   */
 306:./Library/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 307:./Library/stm32f4xx_i2c.c **** {
 450              		.loc 1 307 1
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 8
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              	.LCFI16:
 457              		.cfi_def_cfa_offset 4
 458              		.cfi_offset 7, -4
 459 0002 83B0     		sub	sp, sp, #12
 460              	.LCFI17:
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              	.LCFI18:
 464              		.cfi_def_cfa_register 7
 465 0006 7860     		str	r0, [r7, #4]
 466 0008 0B46     		mov	r3, r1
 467 000a FB70     		strb	r3, [r7, #3]
 308:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 309:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 310:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 311:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 468              		.loc 1 311 6
 469 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 470 000e 002B     		cmp	r3, #0
 471 0010 08D0     		beq	.L19
 312:./Library/stm32f4xx_i2c.c ****   {
 313:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 314:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 472              		.loc 1 314 15
 473 0012 7B68     		ldr	r3, [r7, #4]
 474 0014 1B88     		ldrh	r3, [r3]	@ movhi
 475 0016 9BB2     		uxth	r3, r3
 476 0018 43F00103 		orr	r3, r3, #1
 477 001c 9AB2     		uxth	r2, r3
 478 001e 7B68     		ldr	r3, [r7, #4]
 479 0020 1A80     		strh	r2, [r3]	@ movhi
 315:./Library/stm32f4xx_i2c.c ****   }
 316:./Library/stm32f4xx_i2c.c ****   else
 317:./Library/stm32f4xx_i2c.c ****   {
 318:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 319:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 320:./Library/stm32f4xx_i2c.c ****   }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 15


 321:./Library/stm32f4xx_i2c.c **** }
 480              		.loc 1 321 1
 481 0022 07E0     		b	.L21
 482              	.L19:
 319:./Library/stm32f4xx_i2c.c ****   }
 483              		.loc 1 319 15
 484 0024 7B68     		ldr	r3, [r7, #4]
 485 0026 1B88     		ldrh	r3, [r3]	@ movhi
 486 0028 9BB2     		uxth	r3, r3
 487 002a 23F00103 		bic	r3, r3, #1
 488 002e 9AB2     		uxth	r2, r3
 489 0030 7B68     		ldr	r3, [r7, #4]
 490 0032 1A80     		strh	r2, [r3]	@ movhi
 491              	.L21:
 492              		.loc 1 321 1
 493 0034 00BF     		nop
 494 0036 0C37     		adds	r7, r7, #12
 495              	.LCFI19:
 496              		.cfi_def_cfa_offset 4
 497 0038 BD46     		mov	sp, r7
 498              	.LCFI20:
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 003a 5DF8047B 		ldr	r7, [sp], #4
 502              	.LCFI21:
 503              		.cfi_restore 7
 504              		.cfi_def_cfa_offset 0
 505 003e 7047     		bx	lr
 506              		.cfi_endproc
 507              	.LFE126:
 509              		.section	.text.I2C_AnalogFilterCmd,"ax",%progbits
 510              		.align	1
 511              		.global	I2C_AnalogFilterCmd
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 516              	I2C_AnalogFilterCmd:
 517              	.LFB127:
 322:./Library/stm32f4xx_i2c.c **** 
 323:./Library/stm32f4xx_i2c.c **** /**
 324:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the Analog filter of I2C peripheral.
 325:./Library/stm32f4xx_i2c.c ****   * 
 326:./Library/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx, STM32F401xx, STM32F410xx and
 327:./Library/stm32f4xx_i2c.c ****   *        
 328:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 329:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the Analog filter. 
 330:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 331:./Library/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 332:./Library/stm32f4xx_i2c.c ****             the I2C Peripheral.
 333:./Library/stm32f4xx_i2c.c ****   * @retval None
 334:./Library/stm32f4xx_i2c.c ****   */
 335:./Library/stm32f4xx_i2c.c **** void I2C_AnalogFilterCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 336:./Library/stm32f4xx_i2c.c **** {
 518              		.loc 1 336 1
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 16


 522              		@ link register save eliminated.
 523 0000 80B4     		push	{r7}
 524              	.LCFI22:
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              	.LCFI23:
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              	.LCFI24:
 532              		.cfi_def_cfa_register 7
 533 0006 7860     		str	r0, [r7, #4]
 534 0008 0B46     		mov	r3, r1
 535 000a FB70     		strb	r3, [r7, #3]
 337:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 338:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 339:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 340:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 536              		.loc 1 340 6
 537 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 538 000e 002B     		cmp	r3, #0
 539 0010 08D0     		beq	.L23
 341:./Library/stm32f4xx_i2c.c ****   {
 342:./Library/stm32f4xx_i2c.c ****     /* Enable the analog filter */
 343:./Library/stm32f4xx_i2c.c ****     I2Cx->FLTR &= (uint16_t)~((uint16_t)I2C_FLTR_ANOFF);    
 540              		.loc 1 343 16
 541 0012 7B68     		ldr	r3, [r7, #4]
 542 0014 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 543 0016 9BB2     		uxth	r3, r3
 544 0018 23F01003 		bic	r3, r3, #16
 545 001c 9AB2     		uxth	r2, r3
 546 001e 7B68     		ldr	r3, [r7, #4]
 547 0020 9A84     		strh	r2, [r3, #36]	@ movhi
 344:./Library/stm32f4xx_i2c.c ****   }
 345:./Library/stm32f4xx_i2c.c ****   else
 346:./Library/stm32f4xx_i2c.c ****   {
 347:./Library/stm32f4xx_i2c.c ****     /* Disable the analog filter */
 348:./Library/stm32f4xx_i2c.c ****     I2Cx->FLTR |= I2C_FLTR_ANOFF;
 349:./Library/stm32f4xx_i2c.c ****   }
 350:./Library/stm32f4xx_i2c.c **** }
 548              		.loc 1 350 1
 549 0022 07E0     		b	.L25
 550              	.L23:
 348:./Library/stm32f4xx_i2c.c ****   }
 551              		.loc 1 348 16
 552 0024 7B68     		ldr	r3, [r7, #4]
 553 0026 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 554 0028 9BB2     		uxth	r3, r3
 555 002a 43F01003 		orr	r3, r3, #16
 556 002e 9AB2     		uxth	r2, r3
 557 0030 7B68     		ldr	r3, [r7, #4]
 558 0032 9A84     		strh	r2, [r3, #36]	@ movhi
 559              	.L25:
 560              		.loc 1 350 1
 561 0034 00BF     		nop
 562 0036 0C37     		adds	r7, r7, #12
 563              	.LCFI25:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 17


 564              		.cfi_def_cfa_offset 4
 565 0038 BD46     		mov	sp, r7
 566              	.LCFI26:
 567              		.cfi_def_cfa_register 13
 568              		@ sp needed
 569 003a 5DF8047B 		ldr	r7, [sp], #4
 570              	.LCFI27:
 571              		.cfi_restore 7
 572              		.cfi_def_cfa_offset 0
 573 003e 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE127:
 577              		.section	.text.I2C_DigitalFilterConfig,"ax",%progbits
 578              		.align	1
 579              		.global	I2C_DigitalFilterConfig
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 584              	I2C_DigitalFilterConfig:
 585              	.LFB128:
 351:./Library/stm32f4xx_i2c.c **** 
 352:./Library/stm32f4xx_i2c.c **** /**
 353:./Library/stm32f4xx_i2c.c ****   * @brief  Configures the Digital noise filter of I2C peripheral.
 354:./Library/stm32f4xx_i2c.c ****   * 
 355:./Library/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx, STM32F401xx, STM32F410xx and
 356:./Library/stm32f4xx_i2c.c ****   *       
 357:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 358:./Library/stm32f4xx_i2c.c ****   * @param  I2C_DigitalFilter: Coefficient of digital noise filter. 
 359:./Library/stm32f4xx_i2c.c ****   *          This parameter can be a number between 0x00 and 0x0F.
 360:./Library/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 361:./Library/stm32f4xx_i2c.c ****             the I2C Peripheral.
 362:./Library/stm32f4xx_i2c.c ****   * @retval None
 363:./Library/stm32f4xx_i2c.c ****   */
 364:./Library/stm32f4xx_i2c.c **** void I2C_DigitalFilterConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DigitalFilter)
 365:./Library/stm32f4xx_i2c.c **** {
 586              		.loc 1 365 1
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 16
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591 0000 80B4     		push	{r7}
 592              	.LCFI28:
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 85B0     		sub	sp, sp, #20
 596              	.LCFI29:
 597              		.cfi_def_cfa_offset 24
 598 0004 00AF     		add	r7, sp, #0
 599              	.LCFI30:
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 602 0008 0B46     		mov	r3, r1
 603 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 366:./Library/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 604              		.loc 1 366 12
 605 000c 0023     		movs	r3, #0
 606 000e FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 18


 367:./Library/stm32f4xx_i2c.c ****   
 368:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 369:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 370:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIGITAL_FILTER(I2C_DigitalFilter));
 371:./Library/stm32f4xx_i2c.c ****   
 372:./Library/stm32f4xx_i2c.c ****   /* Get the old register value */
 373:./Library/stm32f4xx_i2c.c ****   tmpreg = I2Cx->FLTR;
 607              		.loc 1 373 10
 608 0010 7B68     		ldr	r3, [r7, #4]
 609 0012 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 610 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 374:./Library/stm32f4xx_i2c.c ****   
 375:./Library/stm32f4xx_i2c.c ****   /* Reset I2Cx DNF bit [3:0] */
 376:./Library/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_FLTR_DNF);
 611              		.loc 1 376 10
 612 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 613 0018 23F00F03 		bic	r3, r3, #15
 614 001c FB81     		strh	r3, [r7, #14]	@ movhi
 377:./Library/stm32f4xx_i2c.c ****   
 378:./Library/stm32f4xx_i2c.c ****   /* Set I2Cx DNF coefficient */
 379:./Library/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)I2C_DigitalFilter & I2C_FLTR_DNF);
 615              		.loc 1 379 13
 616 001e B7F90230 		ldrsh	r3, [r7, #2]
 617 0022 03F00F03 		and	r3, r3, #15
 618 0026 1AB2     		sxth	r2, r3
 619              		.loc 1 379 10
 620 0028 B7F90E30 		ldrsh	r3, [r7, #14]
 621 002c 1343     		orrs	r3, r3, r2
 622 002e 1BB2     		sxth	r3, r3
 623 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 380:./Library/stm32f4xx_i2c.c ****   
 381:./Library/stm32f4xx_i2c.c ****   /* Store the new register value */
 382:./Library/stm32f4xx_i2c.c ****   I2Cx->FLTR = tmpreg;
 624              		.loc 1 382 14
 625 0032 7B68     		ldr	r3, [r7, #4]
 626 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 627 0036 9A84     		strh	r2, [r3, #36]	@ movhi
 383:./Library/stm32f4xx_i2c.c **** }
 628              		.loc 1 383 1
 629 0038 00BF     		nop
 630 003a 1437     		adds	r7, r7, #20
 631              	.LCFI31:
 632              		.cfi_def_cfa_offset 4
 633 003c BD46     		mov	sp, r7
 634              	.LCFI32:
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 003e 5DF8047B 		ldr	r7, [sp], #4
 638              	.LCFI33:
 639              		.cfi_restore 7
 640              		.cfi_def_cfa_offset 0
 641 0042 7047     		bx	lr
 642              		.cfi_endproc
 643              	.LFE128:
 645              		.section	.text.I2C_GenerateSTART,"ax",%progbits
 646              		.align	1
 647              		.global	I2C_GenerateSTART
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 19


 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	I2C_GenerateSTART:
 653              	.LFB129:
 384:./Library/stm32f4xx_i2c.c **** 
 385:./Library/stm32f4xx_i2c.c **** /**
 386:./Library/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 387:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 388:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 389:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 390:./Library/stm32f4xx_i2c.c ****   * @retval None.
 391:./Library/stm32f4xx_i2c.c ****   */
 392:./Library/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 393:./Library/stm32f4xx_i2c.c **** {
 654              		.loc 1 393 1
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 8
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659 0000 80B4     		push	{r7}
 660              	.LCFI34:
 661              		.cfi_def_cfa_offset 4
 662              		.cfi_offset 7, -4
 663 0002 83B0     		sub	sp, sp, #12
 664              	.LCFI35:
 665              		.cfi_def_cfa_offset 16
 666 0004 00AF     		add	r7, sp, #0
 667              	.LCFI36:
 668              		.cfi_def_cfa_register 7
 669 0006 7860     		str	r0, [r7, #4]
 670 0008 0B46     		mov	r3, r1
 671 000a FB70     		strb	r3, [r7, #3]
 394:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 395:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 396:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 397:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 672              		.loc 1 397 6
 673 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 674 000e 002B     		cmp	r3, #0
 675 0010 08D0     		beq	.L28
 398:./Library/stm32f4xx_i2c.c ****   {
 399:./Library/stm32f4xx_i2c.c ****     /* Generate a START condition */
 400:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 676              		.loc 1 400 15
 677 0012 7B68     		ldr	r3, [r7, #4]
 678 0014 1B88     		ldrh	r3, [r3]	@ movhi
 679 0016 9BB2     		uxth	r3, r3
 680 0018 43F48073 		orr	r3, r3, #256
 681 001c 9AB2     		uxth	r2, r3
 682 001e 7B68     		ldr	r3, [r7, #4]
 683 0020 1A80     		strh	r2, [r3]	@ movhi
 401:./Library/stm32f4xx_i2c.c ****   }
 402:./Library/stm32f4xx_i2c.c ****   else
 403:./Library/stm32f4xx_i2c.c ****   {
 404:./Library/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 405:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 20


 406:./Library/stm32f4xx_i2c.c ****   }
 407:./Library/stm32f4xx_i2c.c **** }
 684              		.loc 1 407 1
 685 0022 07E0     		b	.L30
 686              	.L28:
 405:./Library/stm32f4xx_i2c.c ****   }
 687              		.loc 1 405 15
 688 0024 7B68     		ldr	r3, [r7, #4]
 689 0026 1B88     		ldrh	r3, [r3]	@ movhi
 690 0028 9BB2     		uxth	r3, r3
 691 002a 23F48073 		bic	r3, r3, #256
 692 002e 9AB2     		uxth	r2, r3
 693 0030 7B68     		ldr	r3, [r7, #4]
 694 0032 1A80     		strh	r2, [r3]	@ movhi
 695              	.L30:
 696              		.loc 1 407 1
 697 0034 00BF     		nop
 698 0036 0C37     		adds	r7, r7, #12
 699              	.LCFI37:
 700              		.cfi_def_cfa_offset 4
 701 0038 BD46     		mov	sp, r7
 702              	.LCFI38:
 703              		.cfi_def_cfa_register 13
 704              		@ sp needed
 705 003a 5DF8047B 		ldr	r7, [sp], #4
 706              	.LCFI39:
 707              		.cfi_restore 7
 708              		.cfi_def_cfa_offset 0
 709 003e 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE129:
 713              		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 714              		.align	1
 715              		.global	I2C_GenerateSTOP
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 720              	I2C_GenerateSTOP:
 721              	.LFB130:
 408:./Library/stm32f4xx_i2c.c **** 
 409:./Library/stm32f4xx_i2c.c **** /**
 410:./Library/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 411:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 412:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 413:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 414:./Library/stm32f4xx_i2c.c ****   * @retval None.
 415:./Library/stm32f4xx_i2c.c ****   */
 416:./Library/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 417:./Library/stm32f4xx_i2c.c **** {
 722              		.loc 1 417 1
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727 0000 80B4     		push	{r7}
 728              	.LCFI40:
 729              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 21


 730              		.cfi_offset 7, -4
 731 0002 83B0     		sub	sp, sp, #12
 732              	.LCFI41:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI42:
 736              		.cfi_def_cfa_register 7
 737 0006 7860     		str	r0, [r7, #4]
 738 0008 0B46     		mov	r3, r1
 739 000a FB70     		strb	r3, [r7, #3]
 418:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 419:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 420:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 421:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 740              		.loc 1 421 6
 741 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 742 000e 002B     		cmp	r3, #0
 743 0010 08D0     		beq	.L32
 422:./Library/stm32f4xx_i2c.c ****   {
 423:./Library/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 424:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 744              		.loc 1 424 15
 745 0012 7B68     		ldr	r3, [r7, #4]
 746 0014 1B88     		ldrh	r3, [r3]	@ movhi
 747 0016 9BB2     		uxth	r3, r3
 748 0018 43F40073 		orr	r3, r3, #512
 749 001c 9AB2     		uxth	r2, r3
 750 001e 7B68     		ldr	r3, [r7, #4]
 751 0020 1A80     		strh	r2, [r3]	@ movhi
 425:./Library/stm32f4xx_i2c.c ****   }
 426:./Library/stm32f4xx_i2c.c ****   else
 427:./Library/stm32f4xx_i2c.c ****   {
 428:./Library/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 429:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 430:./Library/stm32f4xx_i2c.c ****   }
 431:./Library/stm32f4xx_i2c.c **** }
 752              		.loc 1 431 1
 753 0022 07E0     		b	.L34
 754              	.L32:
 429:./Library/stm32f4xx_i2c.c ****   }
 755              		.loc 1 429 15
 756 0024 7B68     		ldr	r3, [r7, #4]
 757 0026 1B88     		ldrh	r3, [r3]	@ movhi
 758 0028 9BB2     		uxth	r3, r3
 759 002a 23F40073 		bic	r3, r3, #512
 760 002e 9AB2     		uxth	r2, r3
 761 0030 7B68     		ldr	r3, [r7, #4]
 762 0032 1A80     		strh	r2, [r3]	@ movhi
 763              	.L34:
 764              		.loc 1 431 1
 765 0034 00BF     		nop
 766 0036 0C37     		adds	r7, r7, #12
 767              	.LCFI43:
 768              		.cfi_def_cfa_offset 4
 769 0038 BD46     		mov	sp, r7
 770              	.LCFI44:
 771              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 22


 772              		@ sp needed
 773 003a 5DF8047B 		ldr	r7, [sp], #4
 774              	.LCFI45:
 775              		.cfi_restore 7
 776              		.cfi_def_cfa_offset 0
 777 003e 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE130:
 781              		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 782              		.align	1
 783              		.global	I2C_Send7bitAddress
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	I2C_Send7bitAddress:
 789              	.LFB131:
 432:./Library/stm32f4xx_i2c.c **** 
 433:./Library/stm32f4xx_i2c.c **** /**
 434:./Library/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 435:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 436:./Library/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 437:./Library/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 438:./Library/stm32f4xx_i2c.c ****   *         or a Receiver. 
 439:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 440:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 441:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 442:./Library/stm32f4xx_i2c.c ****   * @retval None.
 443:./Library/stm32f4xx_i2c.c ****   */
 444:./Library/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 445:./Library/stm32f4xx_i2c.c **** {
 790              		.loc 1 445 1
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0000 80B4     		push	{r7}
 796              	.LCFI46:
 797              		.cfi_def_cfa_offset 4
 798              		.cfi_offset 7, -4
 799 0002 83B0     		sub	sp, sp, #12
 800              	.LCFI47:
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              	.LCFI48:
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 806 0008 0B46     		mov	r3, r1
 807 000a FB70     		strb	r3, [r7, #3]
 808 000c 1346     		mov	r3, r2
 809 000e BB70     		strb	r3, [r7, #2]
 446:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 447:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 448:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 449:./Library/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 450:./Library/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 810              		.loc 1 450 6
 811 0010 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 23


 812 0012 002B     		cmp	r3, #0
 813 0014 04D0     		beq	.L36
 451:./Library/stm32f4xx_i2c.c ****   {
 452:./Library/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 453:./Library/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 814              		.loc 1 453 13
 815 0016 FB78     		ldrb	r3, [r7, #3]
 816 0018 43F00103 		orr	r3, r3, #1
 817 001c FB70     		strb	r3, [r7, #3]
 818 001e 03E0     		b	.L37
 819              	.L36:
 454:./Library/stm32f4xx_i2c.c ****   }
 455:./Library/stm32f4xx_i2c.c ****   else
 456:./Library/stm32f4xx_i2c.c ****   {
 457:./Library/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 458:./Library/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 820              		.loc 1 458 13
 821 0020 FB78     		ldrb	r3, [r7, #3]
 822 0022 23F00103 		bic	r3, r3, #1
 823 0026 FB70     		strb	r3, [r7, #3]
 824              	.L37:
 459:./Library/stm32f4xx_i2c.c ****   }
 460:./Library/stm32f4xx_i2c.c ****   /* Send the address */
 461:./Library/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 825              		.loc 1 461 12
 826 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 827 002a 9AB2     		uxth	r2, r3
 828 002c 7B68     		ldr	r3, [r7, #4]
 829 002e 1A82     		strh	r2, [r3, #16]	@ movhi
 462:./Library/stm32f4xx_i2c.c **** }
 830              		.loc 1 462 1
 831 0030 00BF     		nop
 832 0032 0C37     		adds	r7, r7, #12
 833              	.LCFI49:
 834              		.cfi_def_cfa_offset 4
 835 0034 BD46     		mov	sp, r7
 836              	.LCFI50:
 837              		.cfi_def_cfa_register 13
 838              		@ sp needed
 839 0036 5DF8047B 		ldr	r7, [sp], #4
 840              	.LCFI51:
 841              		.cfi_restore 7
 842              		.cfi_def_cfa_offset 0
 843 003a 7047     		bx	lr
 844              		.cfi_endproc
 845              	.LFE131:
 847              		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 848              		.align	1
 849              		.global	I2C_AcknowledgeConfig
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 854              	I2C_AcknowledgeConfig:
 855              	.LFB132:
 463:./Library/stm32f4xx_i2c.c **** 
 464:./Library/stm32f4xx_i2c.c **** /**
 465:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 24


 466:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 467:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 468:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 469:./Library/stm32f4xx_i2c.c ****   * @retval None.
 470:./Library/stm32f4xx_i2c.c ****   */
 471:./Library/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 472:./Library/stm32f4xx_i2c.c **** {
 856              		.loc 1 472 1
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 8
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861 0000 80B4     		push	{r7}
 862              	.LCFI52:
 863              		.cfi_def_cfa_offset 4
 864              		.cfi_offset 7, -4
 865 0002 83B0     		sub	sp, sp, #12
 866              	.LCFI53:
 867              		.cfi_def_cfa_offset 16
 868 0004 00AF     		add	r7, sp, #0
 869              	.LCFI54:
 870              		.cfi_def_cfa_register 7
 871 0006 7860     		str	r0, [r7, #4]
 872 0008 0B46     		mov	r3, r1
 873 000a FB70     		strb	r3, [r7, #3]
 473:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 474:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 475:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 476:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 874              		.loc 1 476 6
 875 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 876 000e 002B     		cmp	r3, #0
 877 0010 08D0     		beq	.L39
 477:./Library/stm32f4xx_i2c.c ****   {
 478:./Library/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 479:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 878              		.loc 1 479 15
 879 0012 7B68     		ldr	r3, [r7, #4]
 880 0014 1B88     		ldrh	r3, [r3]	@ movhi
 881 0016 9BB2     		uxth	r3, r3
 882 0018 43F48063 		orr	r3, r3, #1024
 883 001c 9AB2     		uxth	r2, r3
 884 001e 7B68     		ldr	r3, [r7, #4]
 885 0020 1A80     		strh	r2, [r3]	@ movhi
 480:./Library/stm32f4xx_i2c.c ****   }
 481:./Library/stm32f4xx_i2c.c ****   else
 482:./Library/stm32f4xx_i2c.c ****   {
 483:./Library/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 484:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 485:./Library/stm32f4xx_i2c.c ****   }
 486:./Library/stm32f4xx_i2c.c **** }
 886              		.loc 1 486 1
 887 0022 07E0     		b	.L41
 888              	.L39:
 484:./Library/stm32f4xx_i2c.c ****   }
 889              		.loc 1 484 15
 890 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 25


 891 0026 1B88     		ldrh	r3, [r3]	@ movhi
 892 0028 9BB2     		uxth	r3, r3
 893 002a 23F48063 		bic	r3, r3, #1024
 894 002e 9AB2     		uxth	r2, r3
 895 0030 7B68     		ldr	r3, [r7, #4]
 896 0032 1A80     		strh	r2, [r3]	@ movhi
 897              	.L41:
 898              		.loc 1 486 1
 899 0034 00BF     		nop
 900 0036 0C37     		adds	r7, r7, #12
 901              	.LCFI55:
 902              		.cfi_def_cfa_offset 4
 903 0038 BD46     		mov	sp, r7
 904              	.LCFI56:
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 003a 5DF8047B 		ldr	r7, [sp], #4
 908              	.LCFI57:
 909              		.cfi_restore 7
 910              		.cfi_def_cfa_offset 0
 911 003e 7047     		bx	lr
 912              		.cfi_endproc
 913              	.LFE132:
 915              		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 916              		.align	1
 917              		.global	I2C_OwnAddress2Config
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 922              	I2C_OwnAddress2Config:
 923              	.LFB133:
 487:./Library/stm32f4xx_i2c.c **** 
 488:./Library/stm32f4xx_i2c.c **** /**
 489:./Library/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 490:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 491:./Library/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 492:./Library/stm32f4xx_i2c.c ****   * @retval None.
 493:./Library/stm32f4xx_i2c.c ****   */
 494:./Library/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 495:./Library/stm32f4xx_i2c.c **** {
 924              		.loc 1 495 1
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 16
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 929 0000 80B4     		push	{r7}
 930              	.LCFI58:
 931              		.cfi_def_cfa_offset 4
 932              		.cfi_offset 7, -4
 933 0002 85B0     		sub	sp, sp, #20
 934              	.LCFI59:
 935              		.cfi_def_cfa_offset 24
 936 0004 00AF     		add	r7, sp, #0
 937              	.LCFI60:
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
 940 0008 0B46     		mov	r3, r1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 26


 941 000a FB70     		strb	r3, [r7, #3]
 496:./Library/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 942              		.loc 1 496 12
 943 000c 0023     		movs	r3, #0
 944 000e FB81     		strh	r3, [r7, #14]	@ movhi
 497:./Library/stm32f4xx_i2c.c **** 
 498:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 499:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 500:./Library/stm32f4xx_i2c.c **** 
 501:./Library/stm32f4xx_i2c.c ****   /* Get the old register value */
 502:./Library/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 945              		.loc 1 502 10
 946 0010 7B68     		ldr	r3, [r7, #4]
 947 0012 9B89     		ldrh	r3, [r3, #12]	@ movhi
 948 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 503:./Library/stm32f4xx_i2c.c **** 
 504:./Library/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 505:./Library/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 949              		.loc 1 505 10
 950 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 951 0018 23F0FE03 		bic	r3, r3, #254
 952 001c FB81     		strh	r3, [r7, #14]	@ movhi
 506:./Library/stm32f4xx_i2c.c **** 
 507:./Library/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 508:./Library/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 953              		.loc 1 508 13
 954 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 955 0020 1BB2     		sxth	r3, r3
 956 0022 03F0FE03 		and	r3, r3, #254
 957 0026 1AB2     		sxth	r2, r3
 958              		.loc 1 508 10
 959 0028 B7F90E30 		ldrsh	r3, [r7, #14]
 960 002c 1343     		orrs	r3, r3, r2
 961 002e 1BB2     		sxth	r3, r3
 962 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 509:./Library/stm32f4xx_i2c.c **** 
 510:./Library/stm32f4xx_i2c.c ****   /* Store the new register value */
 511:./Library/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 963              		.loc 1 511 14
 964 0032 7B68     		ldr	r3, [r7, #4]
 965 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 966 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 512:./Library/stm32f4xx_i2c.c **** }
 967              		.loc 1 512 1
 968 0038 00BF     		nop
 969 003a 1437     		adds	r7, r7, #20
 970              	.LCFI61:
 971              		.cfi_def_cfa_offset 4
 972 003c BD46     		mov	sp, r7
 973              	.LCFI62:
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 003e 5DF8047B 		ldr	r7, [sp], #4
 977              	.LCFI63:
 978              		.cfi_restore 7
 979              		.cfi_def_cfa_offset 0
 980 0042 7047     		bx	lr
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 27


 981              		.cfi_endproc
 982              	.LFE133:
 984              		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 985              		.align	1
 986              		.global	I2C_DualAddressCmd
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	I2C_DualAddressCmd:
 992              	.LFB134:
 513:./Library/stm32f4xx_i2c.c **** 
 514:./Library/stm32f4xx_i2c.c **** /**
 515:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 516:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 517:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 518:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 519:./Library/stm32f4xx_i2c.c ****   * @retval None
 520:./Library/stm32f4xx_i2c.c ****   */
 521:./Library/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 522:./Library/stm32f4xx_i2c.c **** {
 993              		.loc 1 522 1
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              	.LCFI64:
 1000              		.cfi_def_cfa_offset 4
 1001              		.cfi_offset 7, -4
 1002 0002 83B0     		sub	sp, sp, #12
 1003              	.LCFI65:
 1004              		.cfi_def_cfa_offset 16
 1005 0004 00AF     		add	r7, sp, #0
 1006              	.LCFI66:
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
 1009 0008 0B46     		mov	r3, r1
 1010 000a FB70     		strb	r3, [r7, #3]
 523:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 524:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 525:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 526:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1011              		.loc 1 526 6
 1012 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1013 000e 002B     		cmp	r3, #0
 1014 0010 08D0     		beq	.L44
 527:./Library/stm32f4xx_i2c.c ****   {
 528:./Library/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 529:./Library/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 1015              		.loc 1 529 16
 1016 0012 7B68     		ldr	r3, [r7, #4]
 1017 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1018 0016 9BB2     		uxth	r3, r3
 1019 0018 43F00103 		orr	r3, r3, #1
 1020 001c 9AB2     		uxth	r2, r3
 1021 001e 7B68     		ldr	r3, [r7, #4]
 1022 0020 9A81     		strh	r2, [r3, #12]	@ movhi
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 28


 530:./Library/stm32f4xx_i2c.c ****   }
 531:./Library/stm32f4xx_i2c.c ****   else
 532:./Library/stm32f4xx_i2c.c ****   {
 533:./Library/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 534:./Library/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 535:./Library/stm32f4xx_i2c.c ****   }
 536:./Library/stm32f4xx_i2c.c **** }
 1023              		.loc 1 536 1
 1024 0022 07E0     		b	.L46
 1025              	.L44:
 534:./Library/stm32f4xx_i2c.c ****   }
 1026              		.loc 1 534 16
 1027 0024 7B68     		ldr	r3, [r7, #4]
 1028 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1029 0028 9BB2     		uxth	r3, r3
 1030 002a 23F00103 		bic	r3, r3, #1
 1031 002e 9AB2     		uxth	r2, r3
 1032 0030 7B68     		ldr	r3, [r7, #4]
 1033 0032 9A81     		strh	r2, [r3, #12]	@ movhi
 1034              	.L46:
 1035              		.loc 1 536 1
 1036 0034 00BF     		nop
 1037 0036 0C37     		adds	r7, r7, #12
 1038              	.LCFI67:
 1039              		.cfi_def_cfa_offset 4
 1040 0038 BD46     		mov	sp, r7
 1041              	.LCFI68:
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 003a 5DF8047B 		ldr	r7, [sp], #4
 1045              	.LCFI69:
 1046              		.cfi_restore 7
 1047              		.cfi_def_cfa_offset 0
 1048 003e 7047     		bx	lr
 1049              		.cfi_endproc
 1050              	.LFE134:
 1052              		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 1053              		.align	1
 1054              		.global	I2C_GeneralCallCmd
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1059              	I2C_GeneralCallCmd:
 1060              	.LFB135:
 537:./Library/stm32f4xx_i2c.c **** 
 538:./Library/stm32f4xx_i2c.c **** /**
 539:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 540:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 541:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 542:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:./Library/stm32f4xx_i2c.c ****   * @retval None
 544:./Library/stm32f4xx_i2c.c ****   */
 545:./Library/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 546:./Library/stm32f4xx_i2c.c **** {
 1061              		.loc 1 546 1
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 29


 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066 0000 80B4     		push	{r7}
 1067              	.LCFI70:
 1068              		.cfi_def_cfa_offset 4
 1069              		.cfi_offset 7, -4
 1070 0002 83B0     		sub	sp, sp, #12
 1071              	.LCFI71:
 1072              		.cfi_def_cfa_offset 16
 1073 0004 00AF     		add	r7, sp, #0
 1074              	.LCFI72:
 1075              		.cfi_def_cfa_register 7
 1076 0006 7860     		str	r0, [r7, #4]
 1077 0008 0B46     		mov	r3, r1
 1078 000a FB70     		strb	r3, [r7, #3]
 547:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 548:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 549:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1079              		.loc 1 550 6
 1080 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1081 000e 002B     		cmp	r3, #0
 1082 0010 08D0     		beq	.L48
 551:./Library/stm32f4xx_i2c.c ****   {
 552:./Library/stm32f4xx_i2c.c ****     /* Enable general call */
 553:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 1083              		.loc 1 553 15
 1084 0012 7B68     		ldr	r3, [r7, #4]
 1085 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1086 0016 9BB2     		uxth	r3, r3
 1087 0018 43F04003 		orr	r3, r3, #64
 1088 001c 9AB2     		uxth	r2, r3
 1089 001e 7B68     		ldr	r3, [r7, #4]
 1090 0020 1A80     		strh	r2, [r3]	@ movhi
 554:./Library/stm32f4xx_i2c.c ****   }
 555:./Library/stm32f4xx_i2c.c ****   else
 556:./Library/stm32f4xx_i2c.c ****   {
 557:./Library/stm32f4xx_i2c.c ****     /* Disable general call */
 558:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 559:./Library/stm32f4xx_i2c.c ****   }
 560:./Library/stm32f4xx_i2c.c **** }
 1091              		.loc 1 560 1
 1092 0022 07E0     		b	.L50
 1093              	.L48:
 558:./Library/stm32f4xx_i2c.c ****   }
 1094              		.loc 1 558 15
 1095 0024 7B68     		ldr	r3, [r7, #4]
 1096 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1097 0028 9BB2     		uxth	r3, r3
 1098 002a 23F04003 		bic	r3, r3, #64
 1099 002e 9AB2     		uxth	r2, r3
 1100 0030 7B68     		ldr	r3, [r7, #4]
 1101 0032 1A80     		strh	r2, [r3]	@ movhi
 1102              	.L50:
 1103              		.loc 1 560 1
 1104 0034 00BF     		nop
 1105 0036 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 30


 1106              	.LCFI73:
 1107              		.cfi_def_cfa_offset 4
 1108 0038 BD46     		mov	sp, r7
 1109              	.LCFI74:
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 003a 5DF8047B 		ldr	r7, [sp], #4
 1113              	.LCFI75:
 1114              		.cfi_restore 7
 1115              		.cfi_def_cfa_offset 0
 1116 003e 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE135:
 1120              		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 1121              		.align	1
 1122              		.global	I2C_SoftwareResetCmd
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1127              	I2C_SoftwareResetCmd:
 1128              	.LFB136:
 561:./Library/stm32f4xx_i2c.c **** 
 562:./Library/stm32f4xx_i2c.c **** /**
 563:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 564:./Library/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 565:./Library/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 566:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 567:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 568:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 569:./Library/stm32f4xx_i2c.c ****   * @retval None
 570:./Library/stm32f4xx_i2c.c ****   */
 571:./Library/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 572:./Library/stm32f4xx_i2c.c **** {
 1129              		.loc 1 572 1
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 8
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 1134 0000 80B4     		push	{r7}
 1135              	.LCFI76:
 1136              		.cfi_def_cfa_offset 4
 1137              		.cfi_offset 7, -4
 1138 0002 83B0     		sub	sp, sp, #12
 1139              	.LCFI77:
 1140              		.cfi_def_cfa_offset 16
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI78:
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 1145 0008 0B46     		mov	r3, r1
 1146 000a FB70     		strb	r3, [r7, #3]
 573:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 574:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 575:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 576:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1147              		.loc 1 576 6
 1148 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 31


 1149 000e 002B     		cmp	r3, #0
 1150 0010 0AD0     		beq	.L52
 577:./Library/stm32f4xx_i2c.c ****   {
 578:./Library/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 579:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 1151              		.loc 1 579 15
 1152 0012 7B68     		ldr	r3, [r7, #4]
 1153 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1154 0016 9BB2     		uxth	r3, r3
 1155 0018 6FEA4343 		mvn	r3, r3, lsl #17
 1156 001c 6FEA5343 		mvn	r3, r3, lsr #17
 1157 0020 9AB2     		uxth	r2, r3
 1158 0022 7B68     		ldr	r3, [r7, #4]
 1159 0024 1A80     		strh	r2, [r3]	@ movhi
 580:./Library/stm32f4xx_i2c.c ****   }
 581:./Library/stm32f4xx_i2c.c ****   else
 582:./Library/stm32f4xx_i2c.c ****   {
 583:./Library/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 584:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 585:./Library/stm32f4xx_i2c.c ****   }
 586:./Library/stm32f4xx_i2c.c **** }
 1160              		.loc 1 586 1
 1161 0026 07E0     		b	.L54
 1162              	.L52:
 584:./Library/stm32f4xx_i2c.c ****   }
 1163              		.loc 1 584 15
 1164 0028 7B68     		ldr	r3, [r7, #4]
 1165 002a 1B88     		ldrh	r3, [r3]	@ movhi
 1166 002c 9BB2     		uxth	r3, r3
 1167 002e C3F30E03 		ubfx	r3, r3, #0, #15
 1168 0032 9AB2     		uxth	r2, r3
 1169 0034 7B68     		ldr	r3, [r7, #4]
 1170 0036 1A80     		strh	r2, [r3]	@ movhi
 1171              	.L54:
 1172              		.loc 1 586 1
 1173 0038 00BF     		nop
 1174 003a 0C37     		adds	r7, r7, #12
 1175              	.LCFI79:
 1176              		.cfi_def_cfa_offset 4
 1177 003c BD46     		mov	sp, r7
 1178              	.LCFI80:
 1179              		.cfi_def_cfa_register 13
 1180              		@ sp needed
 1181 003e 5DF8047B 		ldr	r7, [sp], #4
 1182              	.LCFI81:
 1183              		.cfi_restore 7
 1184              		.cfi_def_cfa_offset 0
 1185 0042 7047     		bx	lr
 1186              		.cfi_endproc
 1187              	.LFE136:
 1189              		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 1190              		.align	1
 1191              		.global	I2C_StretchClockCmd
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1196              	I2C_StretchClockCmd:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 32


 1197              	.LFB137:
 587:./Library/stm32f4xx_i2c.c **** 
 588:./Library/stm32f4xx_i2c.c **** /**
 589:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 590:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 591:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 592:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 593:./Library/stm32f4xx_i2c.c ****   * @retval None
 594:./Library/stm32f4xx_i2c.c ****   */
 595:./Library/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 596:./Library/stm32f4xx_i2c.c **** {
 1198              		.loc 1 596 1
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 8
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203 0000 80B4     		push	{r7}
 1204              	.LCFI82:
 1205              		.cfi_def_cfa_offset 4
 1206              		.cfi_offset 7, -4
 1207 0002 83B0     		sub	sp, sp, #12
 1208              	.LCFI83:
 1209              		.cfi_def_cfa_offset 16
 1210 0004 00AF     		add	r7, sp, #0
 1211              	.LCFI84:
 1212              		.cfi_def_cfa_register 7
 1213 0006 7860     		str	r0, [r7, #4]
 1214 0008 0B46     		mov	r3, r1
 1215 000a FB70     		strb	r3, [r7, #3]
 597:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 598:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 599:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 600:./Library/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 1216              		.loc 1 600 6
 1217 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1218 000e 002B     		cmp	r3, #0
 1219 0010 08D1     		bne	.L56
 601:./Library/stm32f4xx_i2c.c ****   {
 602:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 603:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 1220              		.loc 1 603 15
 1221 0012 7B68     		ldr	r3, [r7, #4]
 1222 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1223 0016 9BB2     		uxth	r3, r3
 1224 0018 43F08003 		orr	r3, r3, #128
 1225 001c 9AB2     		uxth	r2, r3
 1226 001e 7B68     		ldr	r3, [r7, #4]
 1227 0020 1A80     		strh	r2, [r3]	@ movhi
 604:./Library/stm32f4xx_i2c.c ****   }
 605:./Library/stm32f4xx_i2c.c ****   else
 606:./Library/stm32f4xx_i2c.c ****   {
 607:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 608:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 609:./Library/stm32f4xx_i2c.c ****   }
 610:./Library/stm32f4xx_i2c.c **** }
 1228              		.loc 1 610 1
 1229 0022 07E0     		b	.L58
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 33


 1230              	.L56:
 608:./Library/stm32f4xx_i2c.c ****   }
 1231              		.loc 1 608 15
 1232 0024 7B68     		ldr	r3, [r7, #4]
 1233 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1234 0028 9BB2     		uxth	r3, r3
 1235 002a 23F08003 		bic	r3, r3, #128
 1236 002e 9AB2     		uxth	r2, r3
 1237 0030 7B68     		ldr	r3, [r7, #4]
 1238 0032 1A80     		strh	r2, [r3]	@ movhi
 1239              	.L58:
 1240              		.loc 1 610 1
 1241 0034 00BF     		nop
 1242 0036 0C37     		adds	r7, r7, #12
 1243              	.LCFI85:
 1244              		.cfi_def_cfa_offset 4
 1245 0038 BD46     		mov	sp, r7
 1246              	.LCFI86:
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 003a 5DF8047B 		ldr	r7, [sp], #4
 1250              	.LCFI87:
 1251              		.cfi_restore 7
 1252              		.cfi_def_cfa_offset 0
 1253 003e 7047     		bx	lr
 1254              		.cfi_endproc
 1255              	.LFE137:
 1257              		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 1258              		.align	1
 1259              		.global	I2C_FastModeDutyCycleConfig
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	I2C_FastModeDutyCycleConfig:
 1265              	.LFB138:
 611:./Library/stm32f4xx_i2c.c **** 
 612:./Library/stm32f4xx_i2c.c **** /**
 613:./Library/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 614:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 615:./Library/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 616:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 617:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 618:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 619:./Library/stm32f4xx_i2c.c ****   * @retval None
 620:./Library/stm32f4xx_i2c.c ****   */
 621:./Library/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 622:./Library/stm32f4xx_i2c.c **** {
 1266              		.loc 1 622 1
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 8
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
 1271 0000 80B4     		push	{r7}
 1272              	.LCFI88:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 7, -4
 1275 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 34


 1276              	.LCFI89:
 1277              		.cfi_def_cfa_offset 16
 1278 0004 00AF     		add	r7, sp, #0
 1279              	.LCFI90:
 1280              		.cfi_def_cfa_register 7
 1281 0006 7860     		str	r0, [r7, #4]
 1282 0008 0B46     		mov	r3, r1
 1283 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 623:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 624:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 625:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 626:./Library/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 1284              		.loc 1 626 6
 1285 000c 7B88     		ldrh	r3, [r7, #2]
 1286 000e B3F5804F 		cmp	r3, #16384
 1287 0012 08D0     		beq	.L60
 627:./Library/stm32f4xx_i2c.c ****   {
 628:./Library/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 629:./Library/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 1288              		.loc 1 629 15
 1289 0014 7B68     		ldr	r3, [r7, #4]
 1290 0016 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1291 0018 9BB2     		uxth	r3, r3
 1292 001a 23F48043 		bic	r3, r3, #16384
 1293 001e 9AB2     		uxth	r2, r3
 1294 0020 7B68     		ldr	r3, [r7, #4]
 1295 0022 9A83     		strh	r2, [r3, #28]	@ movhi
 630:./Library/stm32f4xx_i2c.c ****   }
 631:./Library/stm32f4xx_i2c.c ****   else
 632:./Library/stm32f4xx_i2c.c ****   {
 633:./Library/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 634:./Library/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 635:./Library/stm32f4xx_i2c.c ****   }
 636:./Library/stm32f4xx_i2c.c **** }
 1296              		.loc 1 636 1
 1297 0024 07E0     		b	.L62
 1298              	.L60:
 634:./Library/stm32f4xx_i2c.c ****   }
 1299              		.loc 1 634 15
 1300 0026 7B68     		ldr	r3, [r7, #4]
 1301 0028 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1302 002a 9BB2     		uxth	r3, r3
 1303 002c 43F48043 		orr	r3, r3, #16384
 1304 0030 9AB2     		uxth	r2, r3
 1305 0032 7B68     		ldr	r3, [r7, #4]
 1306 0034 9A83     		strh	r2, [r3, #28]	@ movhi
 1307              	.L62:
 1308              		.loc 1 636 1
 1309 0036 00BF     		nop
 1310 0038 0C37     		adds	r7, r7, #12
 1311              	.LCFI91:
 1312              		.cfi_def_cfa_offset 4
 1313 003a BD46     		mov	sp, r7
 1314              	.LCFI92:
 1315              		.cfi_def_cfa_register 13
 1316              		@ sp needed
 1317 003c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 35


 1318              	.LCFI93:
 1319              		.cfi_restore 7
 1320              		.cfi_def_cfa_offset 0
 1321 0040 7047     		bx	lr
 1322              		.cfi_endproc
 1323              	.LFE138:
 1325              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 1326              		.align	1
 1327              		.global	I2C_NACKPositionConfig
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1332              	I2C_NACKPositionConfig:
 1333              	.LFB139:
 637:./Library/stm32f4xx_i2c.c **** 
 638:./Library/stm32f4xx_i2c.c **** /**
 639:./Library/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 640:./Library/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 641:./Library/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 642:./Library/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 643:./Library/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 644:./Library/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 645:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 646:./Library/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 647:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 648:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 649:./Library/stm32f4xx_i2c.c ****   *                                        received byte.  
 650:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 651:./Library/stm32f4xx_i2c.c ****   *                                           received byte.
 652:./Library/stm32f4xx_i2c.c ****   *            
 653:./Library/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 654:./Library/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 655:./Library/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 656:./Library/stm32f4xx_i2c.c ****   *            
 657:./Library/stm32f4xx_i2c.c ****   * @retval None
 658:./Library/stm32f4xx_i2c.c ****   */
 659:./Library/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 660:./Library/stm32f4xx_i2c.c **** {
 1334              		.loc 1 660 1
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 8
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339 0000 80B4     		push	{r7}
 1340              	.LCFI94:
 1341              		.cfi_def_cfa_offset 4
 1342              		.cfi_offset 7, -4
 1343 0002 83B0     		sub	sp, sp, #12
 1344              	.LCFI95:
 1345              		.cfi_def_cfa_offset 16
 1346 0004 00AF     		add	r7, sp, #0
 1347              	.LCFI96:
 1348              		.cfi_def_cfa_register 7
 1349 0006 7860     		str	r0, [r7, #4]
 1350 0008 0B46     		mov	r3, r1
 1351 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 661:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 36


 662:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 663:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 664:./Library/stm32f4xx_i2c.c ****   
 665:./Library/stm32f4xx_i2c.c ****   /* Check the input parameter */
 666:./Library/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 1352              		.loc 1 666 6
 1353 000c 7B88     		ldrh	r3, [r7, #2]
 1354 000e B3F5006F 		cmp	r3, #2048
 1355 0012 08D1     		bne	.L64
 667:./Library/stm32f4xx_i2c.c ****   {
 668:./Library/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 669:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 1356              		.loc 1 669 15
 1357 0014 7B68     		ldr	r3, [r7, #4]
 1358 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1359 0018 9BB2     		uxth	r3, r3
 1360 001a 43F40063 		orr	r3, r3, #2048
 1361 001e 9AB2     		uxth	r2, r3
 1362 0020 7B68     		ldr	r3, [r7, #4]
 1363 0022 1A80     		strh	r2, [r3]	@ movhi
 670:./Library/stm32f4xx_i2c.c ****   }
 671:./Library/stm32f4xx_i2c.c ****   else
 672:./Library/stm32f4xx_i2c.c ****   {
 673:./Library/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 674:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 675:./Library/stm32f4xx_i2c.c ****   }
 676:./Library/stm32f4xx_i2c.c **** }
 1364              		.loc 1 676 1
 1365 0024 07E0     		b	.L66
 1366              	.L64:
 674:./Library/stm32f4xx_i2c.c ****   }
 1367              		.loc 1 674 15
 1368 0026 7B68     		ldr	r3, [r7, #4]
 1369 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1370 002a 9BB2     		uxth	r3, r3
 1371 002c 23F40063 		bic	r3, r3, #2048
 1372 0030 9AB2     		uxth	r2, r3
 1373 0032 7B68     		ldr	r3, [r7, #4]
 1374 0034 1A80     		strh	r2, [r3]	@ movhi
 1375              	.L66:
 1376              		.loc 1 676 1
 1377 0036 00BF     		nop
 1378 0038 0C37     		adds	r7, r7, #12
 1379              	.LCFI97:
 1380              		.cfi_def_cfa_offset 4
 1381 003a BD46     		mov	sp, r7
 1382              	.LCFI98:
 1383              		.cfi_def_cfa_register 13
 1384              		@ sp needed
 1385 003c 5DF8047B 		ldr	r7, [sp], #4
 1386              	.LCFI99:
 1387              		.cfi_restore 7
 1388              		.cfi_def_cfa_offset 0
 1389 0040 7047     		bx	lr
 1390              		.cfi_endproc
 1391              	.LFE139:
 1393              		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 37


 1394              		.align	1
 1395              		.global	I2C_SMBusAlertConfig
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1400              	I2C_SMBusAlertConfig:
 1401              	.LFB140:
 677:./Library/stm32f4xx_i2c.c **** 
 678:./Library/stm32f4xx_i2c.c **** /**
 679:./Library/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 680:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 681:./Library/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 682:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 683:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 684:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 685:./Library/stm32f4xx_i2c.c ****   * @retval None
 686:./Library/stm32f4xx_i2c.c ****   */
 687:./Library/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 688:./Library/stm32f4xx_i2c.c **** {
 1402              		.loc 1 688 1
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 8
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406              		@ link register save eliminated.
 1407 0000 80B4     		push	{r7}
 1408              	.LCFI100:
 1409              		.cfi_def_cfa_offset 4
 1410              		.cfi_offset 7, -4
 1411 0002 83B0     		sub	sp, sp, #12
 1412              	.LCFI101:
 1413              		.cfi_def_cfa_offset 16
 1414 0004 00AF     		add	r7, sp, #0
 1415              	.LCFI102:
 1416              		.cfi_def_cfa_register 7
 1417 0006 7860     		str	r0, [r7, #4]
 1418 0008 0B46     		mov	r3, r1
 1419 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 689:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 690:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 691:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 692:./Library/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 1420              		.loc 1 692 6
 1421 000c 7B88     		ldrh	r3, [r7, #2]
 1422 000e B3F5005F 		cmp	r3, #8192
 1423 0012 08D1     		bne	.L68
 693:./Library/stm32f4xx_i2c.c ****   {
 694:./Library/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 695:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 1424              		.loc 1 695 15
 1425 0014 7B68     		ldr	r3, [r7, #4]
 1426 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1427 0018 9BB2     		uxth	r3, r3
 1428 001a 43F40053 		orr	r3, r3, #8192
 1429 001e 9AB2     		uxth	r2, r3
 1430 0020 7B68     		ldr	r3, [r7, #4]
 1431 0022 1A80     		strh	r2, [r3]	@ movhi
 696:./Library/stm32f4xx_i2c.c ****   }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 38


 697:./Library/stm32f4xx_i2c.c ****   else
 698:./Library/stm32f4xx_i2c.c ****   {
 699:./Library/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 700:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 701:./Library/stm32f4xx_i2c.c ****   }
 702:./Library/stm32f4xx_i2c.c **** }
 1432              		.loc 1 702 1
 1433 0024 07E0     		b	.L70
 1434              	.L68:
 700:./Library/stm32f4xx_i2c.c ****   }
 1435              		.loc 1 700 15
 1436 0026 7B68     		ldr	r3, [r7, #4]
 1437 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1438 002a 9BB2     		uxth	r3, r3
 1439 002c 23F40053 		bic	r3, r3, #8192
 1440 0030 9AB2     		uxth	r2, r3
 1441 0032 7B68     		ldr	r3, [r7, #4]
 1442 0034 1A80     		strh	r2, [r3]	@ movhi
 1443              	.L70:
 1444              		.loc 1 702 1
 1445 0036 00BF     		nop
 1446 0038 0C37     		adds	r7, r7, #12
 1447              	.LCFI103:
 1448              		.cfi_def_cfa_offset 4
 1449 003a BD46     		mov	sp, r7
 1450              	.LCFI104:
 1451              		.cfi_def_cfa_register 13
 1452              		@ sp needed
 1453 003c 5DF8047B 		ldr	r7, [sp], #4
 1454              	.LCFI105:
 1455              		.cfi_restore 7
 1456              		.cfi_def_cfa_offset 0
 1457 0040 7047     		bx	lr
 1458              		.cfi_endproc
 1459              	.LFE140:
 1461              		.section	.text.I2C_ARPCmd,"ax",%progbits
 1462              		.align	1
 1463              		.global	I2C_ARPCmd
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1468              	I2C_ARPCmd:
 1469              	.LFB141:
 703:./Library/stm32f4xx_i2c.c **** 
 704:./Library/stm32f4xx_i2c.c **** /**
 705:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 706:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 707:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 708:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 709:./Library/stm32f4xx_i2c.c ****   * @retval None
 710:./Library/stm32f4xx_i2c.c ****   */
 711:./Library/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 712:./Library/stm32f4xx_i2c.c **** {
 1470              		.loc 1 712 1
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 8
 1473              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 39


 1474              		@ link register save eliminated.
 1475 0000 80B4     		push	{r7}
 1476              	.LCFI106:
 1477              		.cfi_def_cfa_offset 4
 1478              		.cfi_offset 7, -4
 1479 0002 83B0     		sub	sp, sp, #12
 1480              	.LCFI107:
 1481              		.cfi_def_cfa_offset 16
 1482 0004 00AF     		add	r7, sp, #0
 1483              	.LCFI108:
 1484              		.cfi_def_cfa_register 7
 1485 0006 7860     		str	r0, [r7, #4]
 1486 0008 0B46     		mov	r3, r1
 1487 000a FB70     		strb	r3, [r7, #3]
 713:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 714:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 715:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 716:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1488              		.loc 1 716 6
 1489 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1490 000e 002B     		cmp	r3, #0
 1491 0010 08D0     		beq	.L72
 717:./Library/stm32f4xx_i2c.c ****   {
 718:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 719:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 1492              		.loc 1 719 15
 1493 0012 7B68     		ldr	r3, [r7, #4]
 1494 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1495 0016 9BB2     		uxth	r3, r3
 1496 0018 43F01003 		orr	r3, r3, #16
 1497 001c 9AB2     		uxth	r2, r3
 1498 001e 7B68     		ldr	r3, [r7, #4]
 1499 0020 1A80     		strh	r2, [r3]	@ movhi
 720:./Library/stm32f4xx_i2c.c ****   }
 721:./Library/stm32f4xx_i2c.c ****   else
 722:./Library/stm32f4xx_i2c.c ****   {
 723:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 724:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 725:./Library/stm32f4xx_i2c.c ****   }
 726:./Library/stm32f4xx_i2c.c **** }
 1500              		.loc 1 726 1
 1501 0022 07E0     		b	.L74
 1502              	.L72:
 724:./Library/stm32f4xx_i2c.c ****   }
 1503              		.loc 1 724 15
 1504 0024 7B68     		ldr	r3, [r7, #4]
 1505 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1506 0028 9BB2     		uxth	r3, r3
 1507 002a 23F01003 		bic	r3, r3, #16
 1508 002e 9AB2     		uxth	r2, r3
 1509 0030 7B68     		ldr	r3, [r7, #4]
 1510 0032 1A80     		strh	r2, [r3]	@ movhi
 1511              	.L74:
 1512              		.loc 1 726 1
 1513 0034 00BF     		nop
 1514 0036 0C37     		adds	r7, r7, #12
 1515              	.LCFI109:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 40


 1516              		.cfi_def_cfa_offset 4
 1517 0038 BD46     		mov	sp, r7
 1518              	.LCFI110:
 1519              		.cfi_def_cfa_register 13
 1520              		@ sp needed
 1521 003a 5DF8047B 		ldr	r7, [sp], #4
 1522              	.LCFI111:
 1523              		.cfi_restore 7
 1524              		.cfi_def_cfa_offset 0
 1525 003e 7047     		bx	lr
 1526              		.cfi_endproc
 1527              	.LFE141:
 1529              		.section	.text.I2C_SendData,"ax",%progbits
 1530              		.align	1
 1531              		.global	I2C_SendData
 1532              		.syntax unified
 1533              		.thumb
 1534              		.thumb_func
 1536              	I2C_SendData:
 1537              	.LFB142:
 727:./Library/stm32f4xx_i2c.c **** /**
 728:./Library/stm32f4xx_i2c.c ****   * @}
 729:./Library/stm32f4xx_i2c.c ****   */
 730:./Library/stm32f4xx_i2c.c **** 
 731:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 732:./Library/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 733:./Library/stm32f4xx_i2c.c ****  *
 734:./Library/stm32f4xx_i2c.c **** @verbatim   
 735:./Library/stm32f4xx_i2c.c ****  ===============================================================================
 736:./Library/stm32f4xx_i2c.c ****                   ##### Data transfers functions #####
 737:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
 738:./Library/stm32f4xx_i2c.c **** 
 739:./Library/stm32f4xx_i2c.c **** @endverbatim
 740:./Library/stm32f4xx_i2c.c ****   * @{
 741:./Library/stm32f4xx_i2c.c ****   */
 742:./Library/stm32f4xx_i2c.c **** 
 743:./Library/stm32f4xx_i2c.c **** /**
 744:./Library/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 745:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 746:./Library/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 747:./Library/stm32f4xx_i2c.c ****   * @retval None
 748:./Library/stm32f4xx_i2c.c ****   */
 749:./Library/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 750:./Library/stm32f4xx_i2c.c **** {
 1538              		.loc 1 750 1
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 8
 1541              		@ frame_needed = 1, uses_anonymous_args = 0
 1542              		@ link register save eliminated.
 1543 0000 80B4     		push	{r7}
 1544              	.LCFI112:
 1545              		.cfi_def_cfa_offset 4
 1546              		.cfi_offset 7, -4
 1547 0002 83B0     		sub	sp, sp, #12
 1548              	.LCFI113:
 1549              		.cfi_def_cfa_offset 16
 1550 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 41


 1551              	.LCFI114:
 1552              		.cfi_def_cfa_register 7
 1553 0006 7860     		str	r0, [r7, #4]
 1554 0008 0B46     		mov	r3, r1
 1555 000a FB70     		strb	r3, [r7, #3]
 751:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 752:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 753:./Library/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 754:./Library/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 1556              		.loc 1 754 12
 1557 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1558 000e 9AB2     		uxth	r2, r3
 1559 0010 7B68     		ldr	r3, [r7, #4]
 1560 0012 1A82     		strh	r2, [r3, #16]	@ movhi
 755:./Library/stm32f4xx_i2c.c **** }
 1561              		.loc 1 755 1
 1562 0014 00BF     		nop
 1563 0016 0C37     		adds	r7, r7, #12
 1564              	.LCFI115:
 1565              		.cfi_def_cfa_offset 4
 1566 0018 BD46     		mov	sp, r7
 1567              	.LCFI116:
 1568              		.cfi_def_cfa_register 13
 1569              		@ sp needed
 1570 001a 5DF8047B 		ldr	r7, [sp], #4
 1571              	.LCFI117:
 1572              		.cfi_restore 7
 1573              		.cfi_def_cfa_offset 0
 1574 001e 7047     		bx	lr
 1575              		.cfi_endproc
 1576              	.LFE142:
 1578              		.section	.text.I2C_ReceiveData,"ax",%progbits
 1579              		.align	1
 1580              		.global	I2C_ReceiveData
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1585              	I2C_ReceiveData:
 1586              	.LFB143:
 756:./Library/stm32f4xx_i2c.c **** 
 757:./Library/stm32f4xx_i2c.c **** /**
 758:./Library/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 759:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 760:./Library/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 761:./Library/stm32f4xx_i2c.c ****   */
 762:./Library/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 763:./Library/stm32f4xx_i2c.c **** {
 1587              		.loc 1 763 1
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 8
 1590              		@ frame_needed = 1, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
 1592 0000 80B4     		push	{r7}
 1593              	.LCFI118:
 1594              		.cfi_def_cfa_offset 4
 1595              		.cfi_offset 7, -4
 1596 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 42


 1597              	.LCFI119:
 1598              		.cfi_def_cfa_offset 16
 1599 0004 00AF     		add	r7, sp, #0
 1600              	.LCFI120:
 1601              		.cfi_def_cfa_register 7
 1602 0006 7860     		str	r0, [r7, #4]
 764:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 765:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 766:./Library/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 767:./Library/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 1603              		.loc 1 767 23
 1604 0008 7B68     		ldr	r3, [r7, #4]
 1605 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1606 000c 9BB2     		uxth	r3, r3
 1607              		.loc 1 767 10
 1608 000e DBB2     		uxtb	r3, r3
 768:./Library/stm32f4xx_i2c.c **** }
 1609              		.loc 1 768 1
 1610 0010 1846     		mov	r0, r3
 1611 0012 0C37     		adds	r7, r7, #12
 1612              	.LCFI121:
 1613              		.cfi_def_cfa_offset 4
 1614 0014 BD46     		mov	sp, r7
 1615              	.LCFI122:
 1616              		.cfi_def_cfa_register 13
 1617              		@ sp needed
 1618 0016 5DF8047B 		ldr	r7, [sp], #4
 1619              	.LCFI123:
 1620              		.cfi_restore 7
 1621              		.cfi_def_cfa_offset 0
 1622 001a 7047     		bx	lr
 1623              		.cfi_endproc
 1624              	.LFE143:
 1626              		.section	.text.I2C_TransmitPEC,"ax",%progbits
 1627              		.align	1
 1628              		.global	I2C_TransmitPEC
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1633              	I2C_TransmitPEC:
 1634              	.LFB144:
 769:./Library/stm32f4xx_i2c.c **** 
 770:./Library/stm32f4xx_i2c.c **** /**
 771:./Library/stm32f4xx_i2c.c ****   * @}
 772:./Library/stm32f4xx_i2c.c ****   */
 773:./Library/stm32f4xx_i2c.c **** 
 774:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 775:./Library/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 776:./Library/stm32f4xx_i2c.c ****  *
 777:./Library/stm32f4xx_i2c.c **** @verbatim   
 778:./Library/stm32f4xx_i2c.c ****  ===============================================================================
 779:./Library/stm32f4xx_i2c.c ****                   ##### PEC management functions #####
 780:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
 781:./Library/stm32f4xx_i2c.c **** 
 782:./Library/stm32f4xx_i2c.c **** @endverbatim
 783:./Library/stm32f4xx_i2c.c ****   * @{
 784:./Library/stm32f4xx_i2c.c ****   */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 43


 785:./Library/stm32f4xx_i2c.c **** 
 786:./Library/stm32f4xx_i2c.c **** /**
 787:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 788:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 789:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 790:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 791:./Library/stm32f4xx_i2c.c ****   * @retval None
 792:./Library/stm32f4xx_i2c.c ****   */
 793:./Library/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 794:./Library/stm32f4xx_i2c.c **** {
 1635              		.loc 1 794 1
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 8
 1638              		@ frame_needed = 1, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
 1640 0000 80B4     		push	{r7}
 1641              	.LCFI124:
 1642              		.cfi_def_cfa_offset 4
 1643              		.cfi_offset 7, -4
 1644 0002 83B0     		sub	sp, sp, #12
 1645              	.LCFI125:
 1646              		.cfi_def_cfa_offset 16
 1647 0004 00AF     		add	r7, sp, #0
 1648              	.LCFI126:
 1649              		.cfi_def_cfa_register 7
 1650 0006 7860     		str	r0, [r7, #4]
 1651 0008 0B46     		mov	r3, r1
 1652 000a FB70     		strb	r3, [r7, #3]
 795:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 796:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 797:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 798:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1653              		.loc 1 798 6
 1654 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1655 000e 002B     		cmp	r3, #0
 1656 0010 08D0     		beq	.L79
 799:./Library/stm32f4xx_i2c.c ****   {
 800:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 801:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 1657              		.loc 1 801 15
 1658 0012 7B68     		ldr	r3, [r7, #4]
 1659 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1660 0016 9BB2     		uxth	r3, r3
 1661 0018 43F48053 		orr	r3, r3, #4096
 1662 001c 9AB2     		uxth	r2, r3
 1663 001e 7B68     		ldr	r3, [r7, #4]
 1664 0020 1A80     		strh	r2, [r3]	@ movhi
 802:./Library/stm32f4xx_i2c.c ****   }
 803:./Library/stm32f4xx_i2c.c ****   else
 804:./Library/stm32f4xx_i2c.c ****   {
 805:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 806:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 807:./Library/stm32f4xx_i2c.c ****   }
 808:./Library/stm32f4xx_i2c.c **** }
 1665              		.loc 1 808 1
 1666 0022 07E0     		b	.L81
 1667              	.L79:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 44


 806:./Library/stm32f4xx_i2c.c ****   }
 1668              		.loc 1 806 15
 1669 0024 7B68     		ldr	r3, [r7, #4]
 1670 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1671 0028 9BB2     		uxth	r3, r3
 1672 002a 23F48053 		bic	r3, r3, #4096
 1673 002e 9AB2     		uxth	r2, r3
 1674 0030 7B68     		ldr	r3, [r7, #4]
 1675 0032 1A80     		strh	r2, [r3]	@ movhi
 1676              	.L81:
 1677              		.loc 1 808 1
 1678 0034 00BF     		nop
 1679 0036 0C37     		adds	r7, r7, #12
 1680              	.LCFI127:
 1681              		.cfi_def_cfa_offset 4
 1682 0038 BD46     		mov	sp, r7
 1683              	.LCFI128:
 1684              		.cfi_def_cfa_register 13
 1685              		@ sp needed
 1686 003a 5DF8047B 		ldr	r7, [sp], #4
 1687              	.LCFI129:
 1688              		.cfi_restore 7
 1689              		.cfi_def_cfa_offset 0
 1690 003e 7047     		bx	lr
 1691              		.cfi_endproc
 1692              	.LFE144:
 1694              		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 1695              		.align	1
 1696              		.global	I2C_PECPositionConfig
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1701              	I2C_PECPositionConfig:
 1702              	.LFB145:
 809:./Library/stm32f4xx_i2c.c **** 
 810:./Library/stm32f4xx_i2c.c **** /**
 811:./Library/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 812:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 813:./Library/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 814:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 815:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 816:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 817:./Library/stm32f4xx_i2c.c ****   *       
 818:./Library/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 819:./Library/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 820:./Library/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 821:./Library/stm32f4xx_i2c.c ****   *                
 822:./Library/stm32f4xx_i2c.c ****   * @retval None
 823:./Library/stm32f4xx_i2c.c ****   */
 824:./Library/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 825:./Library/stm32f4xx_i2c.c **** {
 1703              		.loc 1 825 1
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 8
 1706              		@ frame_needed = 1, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
 1708 0000 80B4     		push	{r7}
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 45


 1709              	.LCFI130:
 1710              		.cfi_def_cfa_offset 4
 1711              		.cfi_offset 7, -4
 1712 0002 83B0     		sub	sp, sp, #12
 1713              	.LCFI131:
 1714              		.cfi_def_cfa_offset 16
 1715 0004 00AF     		add	r7, sp, #0
 1716              	.LCFI132:
 1717              		.cfi_def_cfa_register 7
 1718 0006 7860     		str	r0, [r7, #4]
 1719 0008 0B46     		mov	r3, r1
 1720 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 826:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 827:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 828:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 829:./Library/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 1721              		.loc 1 829 6
 1722 000c 7B88     		ldrh	r3, [r7, #2]
 1723 000e B3F5006F 		cmp	r3, #2048
 1724 0012 08D1     		bne	.L83
 830:./Library/stm32f4xx_i2c.c ****   {
 831:./Library/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 832:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 1725              		.loc 1 832 15
 1726 0014 7B68     		ldr	r3, [r7, #4]
 1727 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1728 0018 9BB2     		uxth	r3, r3
 1729 001a 43F40063 		orr	r3, r3, #2048
 1730 001e 9AB2     		uxth	r2, r3
 1731 0020 7B68     		ldr	r3, [r7, #4]
 1732 0022 1A80     		strh	r2, [r3]	@ movhi
 833:./Library/stm32f4xx_i2c.c ****   }
 834:./Library/stm32f4xx_i2c.c ****   else
 835:./Library/stm32f4xx_i2c.c ****   {
 836:./Library/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 837:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 838:./Library/stm32f4xx_i2c.c ****   }
 839:./Library/stm32f4xx_i2c.c **** }
 1733              		.loc 1 839 1
 1734 0024 07E0     		b	.L85
 1735              	.L83:
 837:./Library/stm32f4xx_i2c.c ****   }
 1736              		.loc 1 837 15
 1737 0026 7B68     		ldr	r3, [r7, #4]
 1738 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1739 002a 9BB2     		uxth	r3, r3
 1740 002c 23F40063 		bic	r3, r3, #2048
 1741 0030 9AB2     		uxth	r2, r3
 1742 0032 7B68     		ldr	r3, [r7, #4]
 1743 0034 1A80     		strh	r2, [r3]	@ movhi
 1744              	.L85:
 1745              		.loc 1 839 1
 1746 0036 00BF     		nop
 1747 0038 0C37     		adds	r7, r7, #12
 1748              	.LCFI133:
 1749              		.cfi_def_cfa_offset 4
 1750 003a BD46     		mov	sp, r7
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 46


 1751              	.LCFI134:
 1752              		.cfi_def_cfa_register 13
 1753              		@ sp needed
 1754 003c 5DF8047B 		ldr	r7, [sp], #4
 1755              	.LCFI135:
 1756              		.cfi_restore 7
 1757              		.cfi_def_cfa_offset 0
 1758 0040 7047     		bx	lr
 1759              		.cfi_endproc
 1760              	.LFE145:
 1762              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1763              		.align	1
 1764              		.global	I2C_CalculatePEC
 1765              		.syntax unified
 1766              		.thumb
 1767              		.thumb_func
 1769              	I2C_CalculatePEC:
 1770              	.LFB146:
 840:./Library/stm32f4xx_i2c.c **** 
 841:./Library/stm32f4xx_i2c.c **** /**
 842:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 843:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 844:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 845:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 846:./Library/stm32f4xx_i2c.c ****   * @retval None
 847:./Library/stm32f4xx_i2c.c ****   */
 848:./Library/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 849:./Library/stm32f4xx_i2c.c **** {
 1771              		.loc 1 849 1
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 8
 1774              		@ frame_needed = 1, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776 0000 80B4     		push	{r7}
 1777              	.LCFI136:
 1778              		.cfi_def_cfa_offset 4
 1779              		.cfi_offset 7, -4
 1780 0002 83B0     		sub	sp, sp, #12
 1781              	.LCFI137:
 1782              		.cfi_def_cfa_offset 16
 1783 0004 00AF     		add	r7, sp, #0
 1784              	.LCFI138:
 1785              		.cfi_def_cfa_register 7
 1786 0006 7860     		str	r0, [r7, #4]
 1787 0008 0B46     		mov	r3, r1
 1788 000a FB70     		strb	r3, [r7, #3]
 850:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 851:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 852:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 853:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1789              		.loc 1 853 6
 1790 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1791 000e 002B     		cmp	r3, #0
 1792 0010 08D0     		beq	.L87
 854:./Library/stm32f4xx_i2c.c ****   {
 855:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 856:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 47


 1793              		.loc 1 856 15
 1794 0012 7B68     		ldr	r3, [r7, #4]
 1795 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1796 0016 9BB2     		uxth	r3, r3
 1797 0018 43F02003 		orr	r3, r3, #32
 1798 001c 9AB2     		uxth	r2, r3
 1799 001e 7B68     		ldr	r3, [r7, #4]
 1800 0020 1A80     		strh	r2, [r3]	@ movhi
 857:./Library/stm32f4xx_i2c.c ****   }
 858:./Library/stm32f4xx_i2c.c ****   else
 859:./Library/stm32f4xx_i2c.c ****   {
 860:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 861:./Library/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 862:./Library/stm32f4xx_i2c.c ****   }
 863:./Library/stm32f4xx_i2c.c **** }
 1801              		.loc 1 863 1
 1802 0022 07E0     		b	.L89
 1803              	.L87:
 861:./Library/stm32f4xx_i2c.c ****   }
 1804              		.loc 1 861 15
 1805 0024 7B68     		ldr	r3, [r7, #4]
 1806 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1807 0028 9BB2     		uxth	r3, r3
 1808 002a 23F02003 		bic	r3, r3, #32
 1809 002e 9AB2     		uxth	r2, r3
 1810 0030 7B68     		ldr	r3, [r7, #4]
 1811 0032 1A80     		strh	r2, [r3]	@ movhi
 1812              	.L89:
 1813              		.loc 1 863 1
 1814 0034 00BF     		nop
 1815 0036 0C37     		adds	r7, r7, #12
 1816              	.LCFI139:
 1817              		.cfi_def_cfa_offset 4
 1818 0038 BD46     		mov	sp, r7
 1819              	.LCFI140:
 1820              		.cfi_def_cfa_register 13
 1821              		@ sp needed
 1822 003a 5DF8047B 		ldr	r7, [sp], #4
 1823              	.LCFI141:
 1824              		.cfi_restore 7
 1825              		.cfi_def_cfa_offset 0
 1826 003e 7047     		bx	lr
 1827              		.cfi_endproc
 1828              	.LFE146:
 1830              		.section	.text.I2C_GetPEC,"ax",%progbits
 1831              		.align	1
 1832              		.global	I2C_GetPEC
 1833              		.syntax unified
 1834              		.thumb
 1835              		.thumb_func
 1837              	I2C_GetPEC:
 1838              	.LFB147:
 864:./Library/stm32f4xx_i2c.c **** 
 865:./Library/stm32f4xx_i2c.c **** /**
 866:./Library/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 867:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 868:./Library/stm32f4xx_i2c.c ****   * @retval The PEC value.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 48


 869:./Library/stm32f4xx_i2c.c ****   */
 870:./Library/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 871:./Library/stm32f4xx_i2c.c **** {
 1839              		.loc 1 871 1
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 8
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843              		@ link register save eliminated.
 1844 0000 80B4     		push	{r7}
 1845              	.LCFI142:
 1846              		.cfi_def_cfa_offset 4
 1847              		.cfi_offset 7, -4
 1848 0002 83B0     		sub	sp, sp, #12
 1849              	.LCFI143:
 1850              		.cfi_def_cfa_offset 16
 1851 0004 00AF     		add	r7, sp, #0
 1852              	.LCFI144:
 1853              		.cfi_def_cfa_register 7
 1854 0006 7860     		str	r0, [r7, #4]
 872:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 873:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 874:./Library/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 875:./Library/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 1855              		.loc 1 875 16
 1856 0008 7B68     		ldr	r3, [r7, #4]
 1857 000a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1858 000c 9BB2     		uxth	r3, r3
 1859              		.loc 1 875 23
 1860 000e 1B0A     		lsrs	r3, r3, #8
 1861 0010 9BB2     		uxth	r3, r3
 1862 0012 DBB2     		uxtb	r3, r3
 876:./Library/stm32f4xx_i2c.c **** }
 1863              		.loc 1 876 1
 1864 0014 1846     		mov	r0, r3
 1865 0016 0C37     		adds	r7, r7, #12
 1866              	.LCFI145:
 1867              		.cfi_def_cfa_offset 4
 1868 0018 BD46     		mov	sp, r7
 1869              	.LCFI146:
 1870              		.cfi_def_cfa_register 13
 1871              		@ sp needed
 1872 001a 5DF8047B 		ldr	r7, [sp], #4
 1873              	.LCFI147:
 1874              		.cfi_restore 7
 1875              		.cfi_def_cfa_offset 0
 1876 001e 7047     		bx	lr
 1877              		.cfi_endproc
 1878              	.LFE147:
 1880              		.section	.text.I2C_DMACmd,"ax",%progbits
 1881              		.align	1
 1882              		.global	I2C_DMACmd
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1887              	I2C_DMACmd:
 1888              	.LFB148:
 877:./Library/stm32f4xx_i2c.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 49


 878:./Library/stm32f4xx_i2c.c **** /**
 879:./Library/stm32f4xx_i2c.c ****   * @}
 880:./Library/stm32f4xx_i2c.c ****   */
 881:./Library/stm32f4xx_i2c.c **** 
 882:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 883:./Library/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 884:./Library/stm32f4xx_i2c.c ****  *
 885:./Library/stm32f4xx_i2c.c **** @verbatim   
 886:./Library/stm32f4xx_i2c.c ****  ===============================================================================
 887:./Library/stm32f4xx_i2c.c ****                 ##### DMA transfers management functions #####
 888:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
 889:./Library/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 890:./Library/stm32f4xx_i2c.c ****   requests.
 891:./Library/stm32f4xx_i2c.c ****   
 892:./Library/stm32f4xx_i2c.c **** @endverbatim
 893:./Library/stm32f4xx_i2c.c ****   * @{
 894:./Library/stm32f4xx_i2c.c ****   */
 895:./Library/stm32f4xx_i2c.c **** 
 896:./Library/stm32f4xx_i2c.c **** /**
 897:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 898:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 899:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 900:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 901:./Library/stm32f4xx_i2c.c ****   * @retval None
 902:./Library/stm32f4xx_i2c.c ****   */
 903:./Library/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 904:./Library/stm32f4xx_i2c.c **** {
 1889              		.loc 1 904 1
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 8
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893              		@ link register save eliminated.
 1894 0000 80B4     		push	{r7}
 1895              	.LCFI148:
 1896              		.cfi_def_cfa_offset 4
 1897              		.cfi_offset 7, -4
 1898 0002 83B0     		sub	sp, sp, #12
 1899              	.LCFI149:
 1900              		.cfi_def_cfa_offset 16
 1901 0004 00AF     		add	r7, sp, #0
 1902              	.LCFI150:
 1903              		.cfi_def_cfa_register 7
 1904 0006 7860     		str	r0, [r7, #4]
 1905 0008 0B46     		mov	r3, r1
 1906 000a FB70     		strb	r3, [r7, #3]
 905:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 906:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 907:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 908:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1907              		.loc 1 908 6
 1908 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1909 000e 002B     		cmp	r3, #0
 1910 0010 08D0     		beq	.L93
 909:./Library/stm32f4xx_i2c.c ****   {
 910:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 911:./Library/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1911              		.loc 1 911 15
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 50


 1912 0012 7B68     		ldr	r3, [r7, #4]
 1913 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1914 0016 9BB2     		uxth	r3, r3
 1915 0018 43F40063 		orr	r3, r3, #2048
 1916 001c 9AB2     		uxth	r2, r3
 1917 001e 7B68     		ldr	r3, [r7, #4]
 1918 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 912:./Library/stm32f4xx_i2c.c ****   }
 913:./Library/stm32f4xx_i2c.c ****   else
 914:./Library/stm32f4xx_i2c.c ****   {
 915:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 916:./Library/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 917:./Library/stm32f4xx_i2c.c ****   }
 918:./Library/stm32f4xx_i2c.c **** }
 1919              		.loc 1 918 1
 1920 0022 07E0     		b	.L95
 1921              	.L93:
 916:./Library/stm32f4xx_i2c.c ****   }
 1922              		.loc 1 916 15
 1923 0024 7B68     		ldr	r3, [r7, #4]
 1924 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1925 0028 9BB2     		uxth	r3, r3
 1926 002a 23F40063 		bic	r3, r3, #2048
 1927 002e 9AB2     		uxth	r2, r3
 1928 0030 7B68     		ldr	r3, [r7, #4]
 1929 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1930              	.L95:
 1931              		.loc 1 918 1
 1932 0034 00BF     		nop
 1933 0036 0C37     		adds	r7, r7, #12
 1934              	.LCFI151:
 1935              		.cfi_def_cfa_offset 4
 1936 0038 BD46     		mov	sp, r7
 1937              	.LCFI152:
 1938              		.cfi_def_cfa_register 13
 1939              		@ sp needed
 1940 003a 5DF8047B 		ldr	r7, [sp], #4
 1941              	.LCFI153:
 1942              		.cfi_restore 7
 1943              		.cfi_def_cfa_offset 0
 1944 003e 7047     		bx	lr
 1945              		.cfi_endproc
 1946              	.LFE148:
 1948              		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1949              		.align	1
 1950              		.global	I2C_DMALastTransferCmd
 1951              		.syntax unified
 1952              		.thumb
 1953              		.thumb_func
 1955              	I2C_DMALastTransferCmd:
 1956              	.LFB149:
 919:./Library/stm32f4xx_i2c.c **** 
 920:./Library/stm32f4xx_i2c.c **** /**
 921:./Library/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 922:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 923:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 924:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 51


 925:./Library/stm32f4xx_i2c.c ****   * @retval None
 926:./Library/stm32f4xx_i2c.c ****   */
 927:./Library/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 928:./Library/stm32f4xx_i2c.c **** {
 1957              		.loc 1 928 1
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 8
 1960              		@ frame_needed = 1, uses_anonymous_args = 0
 1961              		@ link register save eliminated.
 1962 0000 80B4     		push	{r7}
 1963              	.LCFI154:
 1964              		.cfi_def_cfa_offset 4
 1965              		.cfi_offset 7, -4
 1966 0002 83B0     		sub	sp, sp, #12
 1967              	.LCFI155:
 1968              		.cfi_def_cfa_offset 16
 1969 0004 00AF     		add	r7, sp, #0
 1970              	.LCFI156:
 1971              		.cfi_def_cfa_register 7
 1972 0006 7860     		str	r0, [r7, #4]
 1973 0008 0B46     		mov	r3, r1
 1974 000a FB70     		strb	r3, [r7, #3]
 929:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
 930:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 931:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 932:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1975              		.loc 1 932 6
 1976 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1977 000e 002B     		cmp	r3, #0
 1978 0010 08D0     		beq	.L97
 933:./Library/stm32f4xx_i2c.c ****   {
 934:./Library/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 935:./Library/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1979              		.loc 1 935 15
 1980 0012 7B68     		ldr	r3, [r7, #4]
 1981 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1982 0016 9BB2     		uxth	r3, r3
 1983 0018 43F48053 		orr	r3, r3, #4096
 1984 001c 9AB2     		uxth	r2, r3
 1985 001e 7B68     		ldr	r3, [r7, #4]
 1986 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 936:./Library/stm32f4xx_i2c.c ****   }
 937:./Library/stm32f4xx_i2c.c ****   else
 938:./Library/stm32f4xx_i2c.c ****   {
 939:./Library/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 940:./Library/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 941:./Library/stm32f4xx_i2c.c ****   }
 942:./Library/stm32f4xx_i2c.c **** }
 1987              		.loc 1 942 1
 1988 0022 07E0     		b	.L99
 1989              	.L97:
 940:./Library/stm32f4xx_i2c.c ****   }
 1990              		.loc 1 940 15
 1991 0024 7B68     		ldr	r3, [r7, #4]
 1992 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1993 0028 9BB2     		uxth	r3, r3
 1994 002a 23F48053 		bic	r3, r3, #4096
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 52


 1995 002e 9AB2     		uxth	r2, r3
 1996 0030 7B68     		ldr	r3, [r7, #4]
 1997 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1998              	.L99:
 1999              		.loc 1 942 1
 2000 0034 00BF     		nop
 2001 0036 0C37     		adds	r7, r7, #12
 2002              	.LCFI157:
 2003              		.cfi_def_cfa_offset 4
 2004 0038 BD46     		mov	sp, r7
 2005              	.LCFI158:
 2006              		.cfi_def_cfa_register 13
 2007              		@ sp needed
 2008 003a 5DF8047B 		ldr	r7, [sp], #4
 2009              	.LCFI159:
 2010              		.cfi_restore 7
 2011              		.cfi_def_cfa_offset 0
 2012 003e 7047     		bx	lr
 2013              		.cfi_endproc
 2014              	.LFE149:
 2016              		.section	.text.I2C_ReadRegister,"ax",%progbits
 2017              		.align	1
 2018              		.global	I2C_ReadRegister
 2019              		.syntax unified
 2020              		.thumb
 2021              		.thumb_func
 2023              	I2C_ReadRegister:
 2024              	.LFB150:
 943:./Library/stm32f4xx_i2c.c **** 
 944:./Library/stm32f4xx_i2c.c **** /**
 945:./Library/stm32f4xx_i2c.c ****   * @}
 946:./Library/stm32f4xx_i2c.c ****   */
 947:./Library/stm32f4xx_i2c.c **** 
 948:./Library/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 949:./Library/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 950:./Library/stm32f4xx_i2c.c ****  *
 951:./Library/stm32f4xx_i2c.c **** @verbatim   
 952:./Library/stm32f4xx_i2c.c ****  ===============================================================================
 953:./Library/stm32f4xx_i2c.c ****           ##### Interrupts, events and flags management functions #####
 954:./Library/stm32f4xx_i2c.c ****  ===============================================================================
 955:./Library/stm32f4xx_i2c.c ****     [..]
 956:./Library/stm32f4xx_i2c.c ****     This section provides functions allowing to configure the I2C Interrupts 
 957:./Library/stm32f4xx_i2c.c ****     sources and check or clear the flags or pending bits status.
 958:./Library/stm32f4xx_i2c.c ****     The user should identify which mode will be used in his application to manage 
 959:./Library/stm32f4xx_i2c.c ****     the communication: Polling mode, Interrupt mode or DMA mode. 
 960:./Library/stm32f4xx_i2c.c **** 
 961:./Library/stm32f4xx_i2c.c **** 
 962:./Library/stm32f4xx_i2c.c ****                 ##### I2C State Monitoring Functions #####                   
 963:./Library/stm32f4xx_i2c.c ****  =============================================================================== 
 964:./Library/stm32f4xx_i2c.c ****     [..]  
 965:./Library/stm32f4xx_i2c.c ****     This I2C driver provides three different ways for I2C state monitoring
 966:./Library/stm32f4xx_i2c.c ****     depending on the application requirements and constraints:
 967:./Library/stm32f4xx_i2c.c ****          
 968:./Library/stm32f4xx_i2c.c ****    
 969:./Library/stm32f4xx_i2c.c ****      (#) Basic state monitoring (Using I2C_CheckEvent() function)
 970:./Library/stm32f4xx_i2c.c ****      
 971:./Library/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 53


 972:./Library/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 973:./Library/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 974:./Library/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 975:./Library/stm32f4xx_i2c.c **** 
 976:./Library/stm32f4xx_i2c.c ****           (++) When to use
 977:./Library/stm32f4xx_i2c.c ****              (+++) This function is suitable for most applications as well as for startup 
 978:./Library/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 979:./Library/stm32f4xx_i2c.c ****                manual (RM0090).
 980:./Library/stm32f4xx_i2c.c ****              (+++) It is also suitable for users who need to define their own events.
 981:./Library/stm32f4xx_i2c.c **** 
 982:./Library/stm32f4xx_i2c.c ****           (++) Limitations
 983:./Library/stm32f4xx_i2c.c ****                If an error occurs (ie. error flags are set besides to the monitored 
 984:./Library/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 985:./Library/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 986:./Library/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 987:./Library/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 988:./Library/stm32f4xx_i2c.c ****          
 989:./Library/stm32f4xx_i2c.c ****      -@@- For error management, it is advised to use the following functions:
 990:./Library/stm32f4xx_i2c.c ****         (+@@) I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 991:./Library/stm32f4xx_i2c.c ****         (+@@) I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 992:./Library/stm32f4xx_i2c.c ****               Where x is the peripheral instance (I2C1, I2C2 ...)
 993:./Library/stm32f4xx_i2c.c ****         (+@@) I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
 994:./Library/stm32f4xx_i2c.c ****               I2Cx_ER_IRQHandler() function in order to determine which error occurred.
 995:./Library/stm32f4xx_i2c.c ****         (+@@) I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
 996:./Library/stm32f4xx_i2c.c ****               and/or I2C_GenerateStop() in order to clear the error flag and source 
 997:./Library/stm32f4xx_i2c.c ****               and return to correct  communication status.
 998:./Library/stm32f4xx_i2c.c ****              
 999:./Library/stm32f4xx_i2c.c ****  
1000:./Library/stm32f4xx_i2c.c ****      (#) Advanced state monitoring (Using the function I2C_GetLastEvent())
1001:./Library/stm32f4xx_i2c.c **** 
1002:./Library/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
1003:./Library/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
1004:./Library/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
1005:./Library/stm32f4xx_i2c.c **** 
1006:./Library/stm32f4xx_i2c.c ****           (++) When to use
1007:./Library/stm32f4xx_i2c.c ****              (+++) This function is suitable for the same applications above but it 
1008:./Library/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
1009:./Library/stm32f4xx_i2c.c ****                function.
1010:./Library/stm32f4xx_i2c.c ****              (+++) The returned value could be compared to events already defined in 
1011:./Library/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
1012:./Library/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
1013:./Library/stm32f4xx_i2c.c ****                same time.
1014:./Library/stm32f4xx_i2c.c ****              (+++) At the opposite of I2C_CheckEvent() function, this function allows 
1015:./Library/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
1016:./Library/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
1017:./Library/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
1018:./Library/stm32f4xx_i2c.c **** 
1019:./Library/stm32f4xx_i2c.c ****           (++) Limitations
1020:./Library/stm32f4xx_i2c.c ****              (+++) User may need to define his own events.
1021:./Library/stm32f4xx_i2c.c ****              (+++) Same remark concerning the error management is applicable for this 
1022:./Library/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
1023:./Library/stm32f4xx_i2c.c ****                (and ignores error flags).
1024:./Library/stm32f4xx_i2c.c ****       
1025:./Library/stm32f4xx_i2c.c ****  
1026:./Library/stm32f4xx_i2c.c ****      (#) Flag-based state monitoring (Using the function I2C_GetFlagStatus())
1027:./Library/stm32f4xx_i2c.c ****      
1028:./Library/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 54


1029:./Library/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
1030:./Library/stm32f4xx_i2c.c **** 
1031:./Library/stm32f4xx_i2c.c ****           (++) When to use
1032:./Library/stm32f4xx_i2c.c ****              (+++) This function could be used for specific applications or in debug 
1033:./Library/stm32f4xx_i2c.c ****                phase.
1034:./Library/stm32f4xx_i2c.c ****              (+++) It is suitable when only one flag checking is needed (most I2C 
1035:./Library/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
1036:./Library/stm32f4xx_i2c.c ****           (++) Limitations: 
1037:./Library/stm32f4xx_i2c.c ****              (+++) When calling this function, the Status register is accessed. 
1038:./Library/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
1039:./Library/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
1040:./Library/stm32f4xx_i2c.c ****              (+++) Function may need to be called twice or more in order to monitor 
1041:./Library/stm32f4xx_i2c.c ****                one single event.
1042:./Library/stm32f4xx_i2c.c ****  
1043:./Library/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
1044:./Library/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
1045:./Library/stm32f4xx_i2c.c ****        
1046:./Library/stm32f4xx_i2c.c **** @endverbatim
1047:./Library/stm32f4xx_i2c.c ****   * @{
1048:./Library/stm32f4xx_i2c.c ****   */
1049:./Library/stm32f4xx_i2c.c ****    
1050:./Library/stm32f4xx_i2c.c **** /**
1051:./Library/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
1052:./Library/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
1053:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1054:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
1055:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
1056:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
1057:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
1058:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
1059:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1060:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1061:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1062:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1063:./Library/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1064:./Library/stm32f4xx_i2c.c ****   */
1065:./Library/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1066:./Library/stm32f4xx_i2c.c **** {
 2025              		.loc 1 1066 1
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 16
 2028              		@ frame_needed = 1, uses_anonymous_args = 0
 2029              		@ link register save eliminated.
 2030 0000 80B4     		push	{r7}
 2031              	.LCFI160:
 2032              		.cfi_def_cfa_offset 4
 2033              		.cfi_offset 7, -4
 2034 0002 85B0     		sub	sp, sp, #20
 2035              	.LCFI161:
 2036              		.cfi_def_cfa_offset 24
 2037 0004 00AF     		add	r7, sp, #0
 2038              	.LCFI162:
 2039              		.cfi_def_cfa_register 7
 2040 0006 7860     		str	r0, [r7, #4]
 2041 0008 0B46     		mov	r3, r1
 2042 000a FB70     		strb	r3, [r7, #3]
1067:./Library/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 55


 2043              		.loc 1 1067 17
 2044 000c 0023     		movs	r3, #0
 2045 000e FB60     		str	r3, [r7, #12]
1068:./Library/stm32f4xx_i2c.c **** 
1069:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1070:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1071:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1072:./Library/stm32f4xx_i2c.c **** 
1073:./Library/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 2046              		.loc 1 1073 9
 2047 0010 7B68     		ldr	r3, [r7, #4]
 2048              		.loc 1 1073 7
 2049 0012 FB60     		str	r3, [r7, #12]
1074:./Library/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 2050              		.loc 1 1074 7
 2051 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2052 0016 FB68     		ldr	r3, [r7, #12]
 2053 0018 1344     		add	r3, r3, r2
 2054 001a FB60     		str	r3, [r7, #12]
1075:./Library/stm32f4xx_i2c.c **** 
1076:./Library/stm32f4xx_i2c.c ****   /* Return the selected register value */
1077:./Library/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 2055              		.loc 1 1077 12
 2056 001c FB68     		ldr	r3, [r7, #12]
 2057              		.loc 1 1077 11
 2058 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2059 0020 9BB2     		uxth	r3, r3
1078:./Library/stm32f4xx_i2c.c **** }
 2060              		.loc 1 1078 1
 2061 0022 1846     		mov	r0, r3
 2062 0024 1437     		adds	r7, r7, #20
 2063              	.LCFI163:
 2064              		.cfi_def_cfa_offset 4
 2065 0026 BD46     		mov	sp, r7
 2066              	.LCFI164:
 2067              		.cfi_def_cfa_register 13
 2068              		@ sp needed
 2069 0028 5DF8047B 		ldr	r7, [sp], #4
 2070              	.LCFI165:
 2071              		.cfi_restore 7
 2072              		.cfi_def_cfa_offset 0
 2073 002c 7047     		bx	lr
 2074              		.cfi_endproc
 2075              	.LFE150:
 2077              		.section	.text.I2C_ITConfig,"ax",%progbits
 2078              		.align	1
 2079              		.global	I2C_ITConfig
 2080              		.syntax unified
 2081              		.thumb
 2082              		.thumb_func
 2084              	I2C_ITConfig:
 2085              	.LFB151:
1079:./Library/stm32f4xx_i2c.c **** 
1080:./Library/stm32f4xx_i2c.c **** /**
1081:./Library/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1082:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1083:./Library/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 56


1084:./Library/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1085:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1086:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1087:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1088:./Library/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1089:./Library/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1090:./Library/stm32f4xx_i2c.c ****   * @retval None
1091:./Library/stm32f4xx_i2c.c ****   */
1092:./Library/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1093:./Library/stm32f4xx_i2c.c **** {
 2086              		.loc 1 1093 1
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 8
 2089              		@ frame_needed = 1, uses_anonymous_args = 0
 2090              		@ link register save eliminated.
 2091 0000 80B4     		push	{r7}
 2092              	.LCFI166:
 2093              		.cfi_def_cfa_offset 4
 2094              		.cfi_offset 7, -4
 2095 0002 83B0     		sub	sp, sp, #12
 2096              	.LCFI167:
 2097              		.cfi_def_cfa_offset 16
 2098 0004 00AF     		add	r7, sp, #0
 2099              	.LCFI168:
 2100              		.cfi_def_cfa_register 7
 2101 0006 7860     		str	r0, [r7, #4]
 2102 0008 0B46     		mov	r3, r1
 2103 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 2104 000c 1346     		mov	r3, r2
 2105 000e 7B70     		strb	r3, [r7, #1]
1094:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1095:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1096:./Library/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1097:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
1098:./Library/stm32f4xx_i2c.c ****   
1099:./Library/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 2106              		.loc 1 1099 6
 2107 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2108 0012 002B     		cmp	r3, #0
 2109 0014 08D0     		beq	.L103
1100:./Library/stm32f4xx_i2c.c ****   {
1101:./Library/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1102:./Library/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 2110              		.loc 1 1102 15
 2111 0016 7B68     		ldr	r3, [r7, #4]
 2112 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2113 001a 9AB2     		uxth	r2, r3
 2114 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2115 001e 1343     		orrs	r3, r3, r2
 2116 0020 9AB2     		uxth	r2, r3
 2117 0022 7B68     		ldr	r3, [r7, #4]
 2118 0024 9A80     		strh	r2, [r3, #4]	@ movhi
1103:./Library/stm32f4xx_i2c.c ****   }
1104:./Library/stm32f4xx_i2c.c ****   else
1105:./Library/stm32f4xx_i2c.c ****   {
1106:./Library/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1107:./Library/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 57


1108:./Library/stm32f4xx_i2c.c ****   }
1109:./Library/stm32f4xx_i2c.c **** }
 2119              		.loc 1 1109 1
 2120 0026 09E0     		b	.L105
 2121              	.L103:
1107:./Library/stm32f4xx_i2c.c ****   }
 2122              		.loc 1 1107 15
 2123 0028 7B68     		ldr	r3, [r7, #4]
 2124 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2125 002c 9AB2     		uxth	r2, r3
1107:./Library/stm32f4xx_i2c.c ****   }
 2126              		.loc 1 1107 18
 2127 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2128 0030 DB43     		mvns	r3, r3
 2129 0032 9BB2     		uxth	r3, r3
1107:./Library/stm32f4xx_i2c.c ****   }
 2130              		.loc 1 1107 15
 2131 0034 1340     		ands	r3, r3, r2
 2132 0036 9AB2     		uxth	r2, r3
 2133 0038 7B68     		ldr	r3, [r7, #4]
 2134 003a 9A80     		strh	r2, [r3, #4]	@ movhi
 2135              	.L105:
 2136              		.loc 1 1109 1
 2137 003c 00BF     		nop
 2138 003e 0C37     		adds	r7, r7, #12
 2139              	.LCFI169:
 2140              		.cfi_def_cfa_offset 4
 2141 0040 BD46     		mov	sp, r7
 2142              	.LCFI170:
 2143              		.cfi_def_cfa_register 13
 2144              		@ sp needed
 2145 0042 5DF8047B 		ldr	r7, [sp], #4
 2146              	.LCFI171:
 2147              		.cfi_restore 7
 2148              		.cfi_def_cfa_offset 0
 2149 0046 7047     		bx	lr
 2150              		.cfi_endproc
 2151              	.LFE151:
 2153              		.section	.text.I2C_CheckEvent,"ax",%progbits
 2154              		.align	1
 2155              		.global	I2C_CheckEvent
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2160              	I2C_CheckEvent:
 2161              	.LFB152:
1110:./Library/stm32f4xx_i2c.c **** 
1111:./Library/stm32f4xx_i2c.c **** /*
1112:./Library/stm32f4xx_i2c.c ****  ===============================================================================
1113:./Library/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1114:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
1115:./Library/stm32f4xx_i2c.c ****  */
1116:./Library/stm32f4xx_i2c.c **** 
1117:./Library/stm32f4xx_i2c.c **** /**
1118:./Library/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1119:./Library/stm32f4xx_i2c.c ****   *         as parameter.
1120:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 58


1121:./Library/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1122:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1123:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1124:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1125:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1126:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1127:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1128:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1129:./Library/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1130:./Library/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1131:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1132:./Library/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1133:./Library/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1134:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1135:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1136:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1137:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1138:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1139:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1140:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1141:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1142:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1143:./Library/stm32f4xx_i2c.c ****   *     
1144:./Library/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1145:./Library/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1146:./Library/stm32f4xx_i2c.c ****   *    
1147:./Library/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1148:./Library/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1149:./Library/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1150:./Library/stm32f4xx_i2c.c ****   */
1151:./Library/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1152:./Library/stm32f4xx_i2c.c **** {
 2162              		.loc 1 1152 1
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 24
 2165              		@ frame_needed = 1, uses_anonymous_args = 0
 2166              		@ link register save eliminated.
 2167 0000 80B4     		push	{r7}
 2168              	.LCFI172:
 2169              		.cfi_def_cfa_offset 4
 2170              		.cfi_offset 7, -4
 2171 0002 87B0     		sub	sp, sp, #28
 2172              	.LCFI173:
 2173              		.cfi_def_cfa_offset 32
 2174 0004 00AF     		add	r7, sp, #0
 2175              	.LCFI174:
 2176              		.cfi_def_cfa_register 7
 2177 0006 7860     		str	r0, [r7, #4]
 2178 0008 3960     		str	r1, [r7]
1153:./Library/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 2179              		.loc 1 1153 12
 2180 000a 0023     		movs	r3, #0
 2181 000c 3B61     		str	r3, [r7, #16]
1154:./Library/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 2182              		.loc 1 1154 12
 2183 000e 0023     		movs	r3, #0
 2184 0010 FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 59


 2185              		.loc 1 1154 23
 2186 0012 0023     		movs	r3, #0
 2187 0014 BB60     		str	r3, [r7, #8]
1155:./Library/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
 2188              		.loc 1 1155 15
 2189 0016 0023     		movs	r3, #0
 2190 0018 FB75     		strb	r3, [r7, #23]
1156:./Library/stm32f4xx_i2c.c **** 
1157:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1158:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1159:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
1160:./Library/stm32f4xx_i2c.c **** 
1161:./Library/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1162:./Library/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 2191              		.loc 1 1162 15
 2192 001a 7B68     		ldr	r3, [r7, #4]
 2193 001c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2194 001e 9BB2     		uxth	r3, r3
 2195              		.loc 1 1162 9
 2196 0020 FB60     		str	r3, [r7, #12]
1163:./Library/stm32f4xx_i2c.c **** 
1164:./Library/stm32f4xx_i2c.c ****   /* I2C_SR2 must be read only when ADDR is found set in I2C_SR1 or when the STOPF bit is cleared *
1165:./Library/stm32f4xx_i2c.c ****   if((flag1 & I2C_SR1_ADDR) || (flag1 & ~I2C_SR1_STOPF)) 
 2197              		.loc 1 1165 13
 2198 0022 FB68     		ldr	r3, [r7, #12]
 2199 0024 03F00203 		and	r3, r3, #2
 2200              		.loc 1 1165 5
 2201 0028 002B     		cmp	r3, #0
 2202 002a 04D1     		bne	.L107
 2203              		.loc 1 1165 39 discriminator 1
 2204 002c FB68     		ldr	r3, [r7, #12]
 2205 002e 23F01003 		bic	r3, r3, #16
 2206              		.loc 1 1165 29 discriminator 1
 2207 0032 002B     		cmp	r3, #0
 2208 0034 13D0     		beq	.L108
 2209              	.L107:
1166:./Library/stm32f4xx_i2c.c ****   {
1167:./Library/stm32f4xx_i2c.c ****     flag2 = I2Cx->SR2;
 2210              		.loc 1 1167 17
 2211 0036 7B68     		ldr	r3, [r7, #4]
 2212 0038 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2213 003a 9BB2     		uxth	r3, r3
 2214              		.loc 1 1167 11
 2215 003c BB60     		str	r3, [r7, #8]
1168:./Library/stm32f4xx_i2c.c ****   }
1169:./Library/stm32f4xx_i2c.c ****   else 
1170:./Library/stm32f4xx_i2c.c ****   { 
1171:./Library/stm32f4xx_i2c.c ****     return ERROR; 
1172:./Library/stm32f4xx_i2c.c ****   }
1173:./Library/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 2216              		.loc 1 1173 9
 2217 003e BB68     		ldr	r3, [r7, #8]
 2218 0040 1B04     		lsls	r3, r3, #16
 2219 0042 BB60     		str	r3, [r7, #8]
1174:./Library/stm32f4xx_i2c.c **** 
1175:./Library/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1176:./Library/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 60


 2220              		.loc 1 1176 22
 2221 0044 FA68     		ldr	r2, [r7, #12]
 2222 0046 BB68     		ldr	r3, [r7, #8]
 2223 0048 1343     		orrs	r3, r3, r2
 2224              		.loc 1 1176 13
 2225 004a 23F07F43 		bic	r3, r3, #-16777216
 2226 004e 3B61     		str	r3, [r7, #16]
1177:./Library/stm32f4xx_i2c.c **** 
1178:./Library/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1179:./Library/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 2227              		.loc 1 1179 18
 2228 0050 3A69     		ldr	r2, [r7, #16]
 2229 0052 3B68     		ldr	r3, [r7]
 2230 0054 1340     		ands	r3, r3, r2
 2231              		.loc 1 1179 6
 2232 0056 3A68     		ldr	r2, [r7]
 2233 0058 9A42     		cmp	r2, r3
 2234 005a 02D0     		beq	.L109
 2235 005c 04E0     		b	.L113
 2236              	.L108:
1171:./Library/stm32f4xx_i2c.c ****   }
 2237              		.loc 1 1171 12
 2238 005e 0023     		movs	r3, #0
 2239 0060 05E0     		b	.L111
 2240              	.L109:
1180:./Library/stm32f4xx_i2c.c ****   {
1181:./Library/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1182:./Library/stm32f4xx_i2c.c ****     status = SUCCESS;
 2241              		.loc 1 1182 12
 2242 0062 0123     		movs	r3, #1
 2243 0064 FB75     		strb	r3, [r7, #23]
 2244 0066 01E0     		b	.L112
 2245              	.L113:
1183:./Library/stm32f4xx_i2c.c ****   }
1184:./Library/stm32f4xx_i2c.c ****   else
1185:./Library/stm32f4xx_i2c.c ****   {
1186:./Library/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1187:./Library/stm32f4xx_i2c.c ****     status = ERROR;
 2246              		.loc 1 1187 12
 2247 0068 0023     		movs	r3, #0
 2248 006a FB75     		strb	r3, [r7, #23]
 2249              	.L112:
1188:./Library/stm32f4xx_i2c.c ****   }
1189:./Library/stm32f4xx_i2c.c ****   /* Return status */
1190:./Library/stm32f4xx_i2c.c ****   return status;
 2250              		.loc 1 1190 10
 2251 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2252              	.L111:
1191:./Library/stm32f4xx_i2c.c **** }
 2253              		.loc 1 1191 1
 2254 006e 1846     		mov	r0, r3
 2255 0070 1C37     		adds	r7, r7, #28
 2256              	.LCFI175:
 2257              		.cfi_def_cfa_offset 4
 2258 0072 BD46     		mov	sp, r7
 2259              	.LCFI176:
 2260              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 61


 2261              		@ sp needed
 2262 0074 5DF8047B 		ldr	r7, [sp], #4
 2263              	.LCFI177:
 2264              		.cfi_restore 7
 2265              		.cfi_def_cfa_offset 0
 2266 0078 7047     		bx	lr
 2267              		.cfi_endproc
 2268              	.LFE152:
 2270              		.section	.text.I2C_GetLastEvent,"ax",%progbits
 2271              		.align	1
 2272              		.global	I2C_GetLastEvent
 2273              		.syntax unified
 2274              		.thumb
 2275              		.thumb_func
 2277              	I2C_GetLastEvent:
 2278              	.LFB153:
1192:./Library/stm32f4xx_i2c.c **** 
1193:./Library/stm32f4xx_i2c.c **** /*
1194:./Library/stm32f4xx_i2c.c ****  ===============================================================================
1195:./Library/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1196:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
1197:./Library/stm32f4xx_i2c.c ****  */
1198:./Library/stm32f4xx_i2c.c **** 
1199:./Library/stm32f4xx_i2c.c **** /**
1200:./Library/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1201:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1202:./Library/stm32f4xx_i2c.c ****   *     
1203:./Library/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1204:./Library/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1205:./Library/stm32f4xx_i2c.c ****   *    
1206:./Library/stm32f4xx_i2c.c ****   * @retval The last event
1207:./Library/stm32f4xx_i2c.c ****   */
1208:./Library/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1209:./Library/stm32f4xx_i2c.c **** {
 2279              		.loc 1 1209 1
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 24
 2282              		@ frame_needed = 1, uses_anonymous_args = 0
 2283              		@ link register save eliminated.
 2284 0000 80B4     		push	{r7}
 2285              	.LCFI178:
 2286              		.cfi_def_cfa_offset 4
 2287              		.cfi_offset 7, -4
 2288 0002 87B0     		sub	sp, sp, #28
 2289              	.LCFI179:
 2290              		.cfi_def_cfa_offset 32
 2291 0004 00AF     		add	r7, sp, #0
 2292              	.LCFI180:
 2293              		.cfi_def_cfa_register 7
 2294 0006 7860     		str	r0, [r7, #4]
1210:./Library/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 2295              		.loc 1 1210 12
 2296 0008 0023     		movs	r3, #0
 2297 000a 7B61     		str	r3, [r7, #20]
1211:./Library/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 2298              		.loc 1 1211 12
 2299 000c 0023     		movs	r3, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 62


 2300 000e 3B61     		str	r3, [r7, #16]
 2301              		.loc 1 1211 23
 2302 0010 0023     		movs	r3, #0
 2303 0012 FB60     		str	r3, [r7, #12]
1212:./Library/stm32f4xx_i2c.c **** 
1213:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1214:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1215:./Library/stm32f4xx_i2c.c **** 
1216:./Library/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1217:./Library/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 2304              		.loc 1 1217 15
 2305 0014 7B68     		ldr	r3, [r7, #4]
 2306 0016 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2307 0018 9BB2     		uxth	r3, r3
 2308              		.loc 1 1217 9
 2309 001a 3B61     		str	r3, [r7, #16]
1218:./Library/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 2310              		.loc 1 1218 15
 2311 001c 7B68     		ldr	r3, [r7, #4]
 2312 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2313 0020 9BB2     		uxth	r3, r3
 2314              		.loc 1 1218 9
 2315 0022 FB60     		str	r3, [r7, #12]
1219:./Library/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 2316              		.loc 1 1219 9
 2317 0024 FB68     		ldr	r3, [r7, #12]
 2318 0026 1B04     		lsls	r3, r3, #16
 2319 0028 FB60     		str	r3, [r7, #12]
1220:./Library/stm32f4xx_i2c.c **** 
1221:./Library/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1222:./Library/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 2320              		.loc 1 1222 22
 2321 002a 3A69     		ldr	r2, [r7, #16]
 2322 002c FB68     		ldr	r3, [r7, #12]
 2323 002e 1343     		orrs	r3, r3, r2
 2324              		.loc 1 1222 13
 2325 0030 23F07F43 		bic	r3, r3, #-16777216
 2326 0034 7B61     		str	r3, [r7, #20]
1223:./Library/stm32f4xx_i2c.c **** 
1224:./Library/stm32f4xx_i2c.c ****   /* Return status */
1225:./Library/stm32f4xx_i2c.c ****   return lastevent;
 2327              		.loc 1 1225 10
 2328 0036 7B69     		ldr	r3, [r7, #20]
1226:./Library/stm32f4xx_i2c.c **** }
 2329              		.loc 1 1226 1
 2330 0038 1846     		mov	r0, r3
 2331 003a 1C37     		adds	r7, r7, #28
 2332              	.LCFI181:
 2333              		.cfi_def_cfa_offset 4
 2334 003c BD46     		mov	sp, r7
 2335              	.LCFI182:
 2336              		.cfi_def_cfa_register 13
 2337              		@ sp needed
 2338 003e 5DF8047B 		ldr	r7, [sp], #4
 2339              	.LCFI183:
 2340              		.cfi_restore 7
 2341              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 63


 2342 0042 7047     		bx	lr
 2343              		.cfi_endproc
 2344              	.LFE153:
 2346              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 2347              		.align	1
 2348              		.global	I2C_GetFlagStatus
 2349              		.syntax unified
 2350              		.thumb
 2351              		.thumb_func
 2353              	I2C_GetFlagStatus:
 2354              	.LFB154:
1227:./Library/stm32f4xx_i2c.c **** 
1228:./Library/stm32f4xx_i2c.c **** /*
1229:./Library/stm32f4xx_i2c.c ****  ===============================================================================
1230:./Library/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1231:./Library/stm32f4xx_i2c.c ****  ===============================================================================  
1232:./Library/stm32f4xx_i2c.c ****  */
1233:./Library/stm32f4xx_i2c.c **** 
1234:./Library/stm32f4xx_i2c.c **** /**
1235:./Library/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1236:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1237:./Library/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1238:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1239:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1240:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1241:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1242:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1243:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1244:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1245:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1246:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1247:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1248:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1249:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1250:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1251:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1252:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1253:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1254:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1255:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1256:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1257:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1258:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1259:./Library/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1260:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1261:./Library/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1262:./Library/stm32f4xx_i2c.c ****   */
1263:./Library/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1264:./Library/stm32f4xx_i2c.c **** {
 2355              		.loc 1 1264 1
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 24
 2358              		@ frame_needed = 1, uses_anonymous_args = 0
 2359              		@ link register save eliminated.
 2360 0000 80B4     		push	{r7}
 2361              	.LCFI184:
 2362              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 64


 2363              		.cfi_offset 7, -4
 2364 0002 87B0     		sub	sp, sp, #28
 2365              	.LCFI185:
 2366              		.cfi_def_cfa_offset 32
 2367 0004 00AF     		add	r7, sp, #0
 2368              	.LCFI186:
 2369              		.cfi_def_cfa_register 7
 2370 0006 7860     		str	r0, [r7, #4]
 2371 0008 3960     		str	r1, [r7]
1265:./Library/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 2372              		.loc 1 1265 14
 2373 000a 0023     		movs	r3, #0
 2374 000c FB75     		strb	r3, [r7, #23]
1266:./Library/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 2375              		.loc 1 1266 17
 2376 000e 0023     		movs	r3, #0
 2377 0010 3B61     		str	r3, [r7, #16]
 2378              		.loc 1 1266 29
 2379 0012 0023     		movs	r3, #0
 2380 0014 FB60     		str	r3, [r7, #12]
1267:./Library/stm32f4xx_i2c.c **** 
1268:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1269:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1270:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1271:./Library/stm32f4xx_i2c.c **** 
1272:./Library/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1273:./Library/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
 2381              		.loc 1 1273 14
 2382 0016 7B68     		ldr	r3, [r7, #4]
 2383              		.loc 1 1273 12
 2384 0018 FB60     		str	r3, [r7, #12]
1274:./Library/stm32f4xx_i2c.c ****   
1275:./Library/stm32f4xx_i2c.c ****   /* Read flag register index */
1276:./Library/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 2385              		.loc 1 1276 21
 2386 001a 3B68     		ldr	r3, [r7]
 2387 001c 1B0F     		lsrs	r3, r3, #28
 2388              		.loc 1 1276 10
 2389 001e 3B61     		str	r3, [r7, #16]
1277:./Library/stm32f4xx_i2c.c ****   
1278:./Library/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1279:./Library/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
 2390              		.loc 1 1279 12
 2391 0020 3B68     		ldr	r3, [r7]
 2392 0022 23F07F43 		bic	r3, r3, #-16777216
 2393 0026 3B60     		str	r3, [r7]
1280:./Library/stm32f4xx_i2c.c ****   
1281:./Library/stm32f4xx_i2c.c ****   if(i2creg != 0)
 2394              		.loc 1 1281 13
 2395 0028 3B69     		ldr	r3, [r7, #16]
 2396              		.loc 1 1281 5
 2397 002a 002B     		cmp	r3, #0
 2398 002c 03D0     		beq	.L117
1282:./Library/stm32f4xx_i2c.c ****   {
1283:./Library/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1284:./Library/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 2399              		.loc 1 1284 14
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 65


 2400 002e FB68     		ldr	r3, [r7, #12]
 2401 0030 1433     		adds	r3, r3, #20
 2402 0032 FB60     		str	r3, [r7, #12]
 2403 0034 05E0     		b	.L118
 2404              	.L117:
1285:./Library/stm32f4xx_i2c.c ****   }
1286:./Library/stm32f4xx_i2c.c ****   else
1287:./Library/stm32f4xx_i2c.c ****   {
1288:./Library/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1289:./Library/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
 2405              		.loc 1 1289 14
 2406 0036 3B68     		ldr	r3, [r7]
 2407 0038 1B0C     		lsrs	r3, r3, #16
 2408 003a 3B60     		str	r3, [r7]
1290:./Library/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1291:./Library/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
 2409              		.loc 1 1291 14
 2410 003c FB68     		ldr	r3, [r7, #12]
 2411 003e 1833     		adds	r3, r3, #24
 2412 0040 FB60     		str	r3, [r7, #12]
 2413              	.L118:
1292:./Library/stm32f4xx_i2c.c ****   }
1293:./Library/stm32f4xx_i2c.c ****   
1294:./Library/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 2414              		.loc 1 1294 9
 2415 0042 FB68     		ldr	r3, [r7, #12]
 2416              		.loc 1 1294 8
 2417 0044 1A68     		ldr	r2, [r3]
 2418              		.loc 1 1294 36
 2419 0046 3B68     		ldr	r3, [r7]
 2420 0048 1340     		ands	r3, r3, r2
 2421              		.loc 1 1294 5
 2422 004a 002B     		cmp	r3, #0
 2423 004c 02D0     		beq	.L119
1295:./Library/stm32f4xx_i2c.c ****   {
1296:./Library/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1297:./Library/stm32f4xx_i2c.c ****     bitstatus = SET;
 2424              		.loc 1 1297 15
 2425 004e 0123     		movs	r3, #1
 2426 0050 FB75     		strb	r3, [r7, #23]
 2427 0052 01E0     		b	.L120
 2428              	.L119:
1298:./Library/stm32f4xx_i2c.c ****   }
1299:./Library/stm32f4xx_i2c.c ****   else
1300:./Library/stm32f4xx_i2c.c ****   {
1301:./Library/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1302:./Library/stm32f4xx_i2c.c ****     bitstatus = RESET;
 2429              		.loc 1 1302 15
 2430 0054 0023     		movs	r3, #0
 2431 0056 FB75     		strb	r3, [r7, #23]
 2432              	.L120:
1303:./Library/stm32f4xx_i2c.c ****   }
1304:./Library/stm32f4xx_i2c.c ****   
1305:./Library/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1306:./Library/stm32f4xx_i2c.c ****   return  bitstatus;
 2433              		.loc 1 1306 11
 2434 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 66


1307:./Library/stm32f4xx_i2c.c **** }
 2435              		.loc 1 1307 1
 2436 005a 1846     		mov	r0, r3
 2437 005c 1C37     		adds	r7, r7, #28
 2438              	.LCFI187:
 2439              		.cfi_def_cfa_offset 4
 2440 005e BD46     		mov	sp, r7
 2441              	.LCFI188:
 2442              		.cfi_def_cfa_register 13
 2443              		@ sp needed
 2444 0060 5DF8047B 		ldr	r7, [sp], #4
 2445              	.LCFI189:
 2446              		.cfi_restore 7
 2447              		.cfi_def_cfa_offset 0
 2448 0064 7047     		bx	lr
 2449              		.cfi_endproc
 2450              	.LFE154:
 2452              		.section	.text.I2C_ClearFlag,"ax",%progbits
 2453              		.align	1
 2454              		.global	I2C_ClearFlag
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2459              	I2C_ClearFlag:
 2460              	.LFB155:
1308:./Library/stm32f4xx_i2c.c **** 
1309:./Library/stm32f4xx_i2c.c **** /**
1310:./Library/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1311:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1312:./Library/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1313:./Library/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1314:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1315:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1316:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1317:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1318:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1319:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1320:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1321:./Library/stm32f4xx_i2c.c ****   *   
1322:./Library/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1323:./Library/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1324:./Library/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1325:./Library/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1326:./Library/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1327:./Library/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1328:./Library/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1329:./Library/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1330:./Library/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1331:./Library/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1332:./Library/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1333:./Library/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1334:./Library/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1335:./Library/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1336:./Library/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1337:./Library/stm32f4xx_i2c.c ****   *  
1338:./Library/stm32f4xx_i2c.c ****   * @retval None
1339:./Library/stm32f4xx_i2c.c ****   */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 67


1340:./Library/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1341:./Library/stm32f4xx_i2c.c **** {
 2461              		.loc 1 1341 1
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 16
 2464              		@ frame_needed = 1, uses_anonymous_args = 0
 2465              		@ link register save eliminated.
 2466 0000 80B4     		push	{r7}
 2467              	.LCFI190:
 2468              		.cfi_def_cfa_offset 4
 2469              		.cfi_offset 7, -4
 2470 0002 85B0     		sub	sp, sp, #20
 2471              	.LCFI191:
 2472              		.cfi_def_cfa_offset 24
 2473 0004 00AF     		add	r7, sp, #0
 2474              	.LCFI192:
 2475              		.cfi_def_cfa_register 7
 2476 0006 7860     		str	r0, [r7, #4]
 2477 0008 3960     		str	r1, [r7]
1342:./Library/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 2478              		.loc 1 1342 12
 2479 000a 0023     		movs	r3, #0
 2480 000c FB60     		str	r3, [r7, #12]
1343:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1344:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1345:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1346:./Library/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1347:./Library/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
 2481              		.loc 1 1347 11
 2482 000e 3B68     		ldr	r3, [r7]
 2483 0010 23F07F43 		bic	r3, r3, #-16777216
 2484 0014 FB60     		str	r3, [r7, #12]
1348:./Library/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1349:./Library/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2485              		.loc 1 1349 15
 2486 0016 FB68     		ldr	r3, [r7, #12]
 2487 0018 9BB2     		uxth	r3, r3
 2488 001a DB43     		mvns	r3, r3
 2489 001c 9AB2     		uxth	r2, r3
 2490              		.loc 1 1349 13
 2491 001e 7B68     		ldr	r3, [r7, #4]
 2492 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1350:./Library/stm32f4xx_i2c.c **** }
 2493              		.loc 1 1350 1
 2494 0022 00BF     		nop
 2495 0024 1437     		adds	r7, r7, #20
 2496              	.LCFI193:
 2497              		.cfi_def_cfa_offset 4
 2498 0026 BD46     		mov	sp, r7
 2499              	.LCFI194:
 2500              		.cfi_def_cfa_register 13
 2501              		@ sp needed
 2502 0028 5DF8047B 		ldr	r7, [sp], #4
 2503              	.LCFI195:
 2504              		.cfi_restore 7
 2505              		.cfi_def_cfa_offset 0
 2506 002c 7047     		bx	lr
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 68


 2507              		.cfi_endproc
 2508              	.LFE155:
 2510              		.section	.text.I2C_GetITStatus,"ax",%progbits
 2511              		.align	1
 2512              		.global	I2C_GetITStatus
 2513              		.syntax unified
 2514              		.thumb
 2515              		.thumb_func
 2517              	I2C_GetITStatus:
 2518              	.LFB156:
1351:./Library/stm32f4xx_i2c.c **** 
1352:./Library/stm32f4xx_i2c.c **** /**
1353:./Library/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1354:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1355:./Library/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1356:./Library/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1357:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1358:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1359:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1360:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1361:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1362:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1363:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1364:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1365:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1366:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1367:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1368:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1369:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1370:./Library/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1371:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1372:./Library/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1373:./Library/stm32f4xx_i2c.c ****   */
1374:./Library/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1375:./Library/stm32f4xx_i2c.c **** {
 2519              		.loc 1 1375 1
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 16
 2522              		@ frame_needed = 1, uses_anonymous_args = 0
 2523              		@ link register save eliminated.
 2524 0000 80B4     		push	{r7}
 2525              	.LCFI196:
 2526              		.cfi_def_cfa_offset 4
 2527              		.cfi_offset 7, -4
 2528 0002 85B0     		sub	sp, sp, #20
 2529              	.LCFI197:
 2530              		.cfi_def_cfa_offset 24
 2531 0004 00AF     		add	r7, sp, #0
 2532              	.LCFI198:
 2533              		.cfi_def_cfa_register 7
 2534 0006 7860     		str	r0, [r7, #4]
 2535 0008 3960     		str	r1, [r7]
1376:./Library/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
 2536              		.loc 1 1376 12
 2537 000a 0023     		movs	r3, #0
 2538 000c FB73     		strb	r3, [r7, #15]
1377:./Library/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 69


 2539              		.loc 1 1377 12
 2540 000e 0023     		movs	r3, #0
 2541 0010 BB60     		str	r3, [r7, #8]
1378:./Library/stm32f4xx_i2c.c **** 
1379:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1380:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1381:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1382:./Library/stm32f4xx_i2c.c **** 
1383:./Library/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1384:./Library/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 2542              		.loc 1 1384 51
 2543 0012 3B68     		ldr	r3, [r7]
 2544 0014 1B0C     		lsrs	r3, r3, #16
 2545              		.loc 1 1384 65
 2546 0016 7A68     		ldr	r2, [r7, #4]
 2547 0018 9288     		ldrh	r2, [r2, #4]	@ movhi
 2548 001a 92B2     		uxth	r2, r2
 2549              		.loc 1 1384 18
 2550 001c 1340     		ands	r3, r3, r2
 2551              		.loc 1 1384 16
 2552 001e 03F4E063 		and	r3, r3, #1792
 2553 0022 BB60     		str	r3, [r7, #8]
1385:./Library/stm32f4xx_i2c.c ****   
1386:./Library/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1387:./Library/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
 2554              		.loc 1 1387 10
 2555 0024 3B68     		ldr	r3, [r7]
 2556 0026 23F07F43 		bic	r3, r3, #-16777216
 2557 002a 3B60     		str	r3, [r7]
1388:./Library/stm32f4xx_i2c.c **** 
1389:./Library/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1390:./Library/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 2558              		.loc 1 1390 13
 2559 002c 7B68     		ldr	r3, [r7, #4]
 2560 002e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2561 0030 9BB2     		uxth	r3, r3
 2562 0032 1A46     		mov	r2, r3
 2563              		.loc 1 1390 19
 2564 0034 3B68     		ldr	r3, [r7]
 2565 0036 1340     		ands	r3, r3, r2
 2566              		.loc 1 1390 6
 2567 0038 002B     		cmp	r3, #0
 2568 003a 05D0     		beq	.L124
 2569              		.loc 1 1390 49 discriminator 1
 2570 003c BB68     		ldr	r3, [r7, #8]
 2571 003e 002B     		cmp	r3, #0
 2572 0040 02D0     		beq	.L124
1391:./Library/stm32f4xx_i2c.c ****   {
1392:./Library/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1393:./Library/stm32f4xx_i2c.c ****     bitstatus = SET;
 2573              		.loc 1 1393 15
 2574 0042 0123     		movs	r3, #1
 2575 0044 FB73     		strb	r3, [r7, #15]
 2576 0046 01E0     		b	.L125
 2577              	.L124:
1394:./Library/stm32f4xx_i2c.c ****   }
1395:./Library/stm32f4xx_i2c.c ****   else
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 70


1396:./Library/stm32f4xx_i2c.c ****   {
1397:./Library/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1398:./Library/stm32f4xx_i2c.c ****     bitstatus = RESET;
 2578              		.loc 1 1398 15
 2579 0048 0023     		movs	r3, #0
 2580 004a FB73     		strb	r3, [r7, #15]
 2581              	.L125:
1399:./Library/stm32f4xx_i2c.c ****   }
1400:./Library/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1401:./Library/stm32f4xx_i2c.c ****   return  bitstatus;
 2582              		.loc 1 1401 11
 2583 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1402:./Library/stm32f4xx_i2c.c **** }
 2584              		.loc 1 1402 1
 2585 004e 1846     		mov	r0, r3
 2586 0050 1437     		adds	r7, r7, #20
 2587              	.LCFI199:
 2588              		.cfi_def_cfa_offset 4
 2589 0052 BD46     		mov	sp, r7
 2590              	.LCFI200:
 2591              		.cfi_def_cfa_register 13
 2592              		@ sp needed
 2593 0054 5DF8047B 		ldr	r7, [sp], #4
 2594              	.LCFI201:
 2595              		.cfi_restore 7
 2596              		.cfi_def_cfa_offset 0
 2597 0058 7047     		bx	lr
 2598              		.cfi_endproc
 2599              	.LFE156:
 2601              		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 2602              		.align	1
 2603              		.global	I2C_ClearITPendingBit
 2604              		.syntax unified
 2605              		.thumb
 2606              		.thumb_func
 2608              	I2C_ClearITPendingBit:
 2609              	.LFB157:
1403:./Library/stm32f4xx_i2c.c **** 
1404:./Library/stm32f4xx_i2c.c **** /**
1405:./Library/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1406:./Library/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1407:./Library/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1408:./Library/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1409:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1410:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1411:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1412:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1413:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1414:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1415:./Library/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1416:./Library/stm32f4xx_i2c.c ****   * 
1417:./Library/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1418:./Library/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1419:./Library/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1420:./Library/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1421:./Library/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1422:./Library/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 71


1423:./Library/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1424:./Library/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1425:./Library/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1426:./Library/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1427:./Library/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1428:./Library/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1429:./Library/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1430:./Library/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1431:./Library/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1432:./Library/stm32f4xx_i2c.c ****   * @retval None
1433:./Library/stm32f4xx_i2c.c ****   */
1434:./Library/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1435:./Library/stm32f4xx_i2c.c **** {
 2610              		.loc 1 1435 1
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 16
 2613              		@ frame_needed = 1, uses_anonymous_args = 0
 2614              		@ link register save eliminated.
 2615 0000 80B4     		push	{r7}
 2616              	.LCFI202:
 2617              		.cfi_def_cfa_offset 4
 2618              		.cfi_offset 7, -4
 2619 0002 85B0     		sub	sp, sp, #20
 2620              	.LCFI203:
 2621              		.cfi_def_cfa_offset 24
 2622 0004 00AF     		add	r7, sp, #0
 2623              	.LCFI204:
 2624              		.cfi_def_cfa_register 7
 2625 0006 7860     		str	r0, [r7, #4]
 2626 0008 3960     		str	r1, [r7]
1436:./Library/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 2627              		.loc 1 1436 12
 2628 000a 0023     		movs	r3, #0
 2629 000c FB60     		str	r3, [r7, #12]
1437:./Library/stm32f4xx_i2c.c ****   /* Check the parameters */
1438:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1439:./Library/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1440:./Library/stm32f4xx_i2c.c **** 
1441:./Library/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1442:./Library/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
 2630              		.loc 1 1442 11
 2631 000e 3B68     		ldr	r3, [r7]
 2632 0010 23F07F43 		bic	r3, r3, #-16777216
 2633 0014 FB60     		str	r3, [r7, #12]
1443:./Library/stm32f4xx_i2c.c **** 
1444:./Library/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1445:./Library/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2634              		.loc 1 1445 15
 2635 0016 FB68     		ldr	r3, [r7, #12]
 2636 0018 9BB2     		uxth	r3, r3
 2637 001a DB43     		mvns	r3, r3
 2638 001c 9AB2     		uxth	r2, r3
 2639              		.loc 1 1445 13
 2640 001e 7B68     		ldr	r3, [r7, #4]
 2641 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1446:./Library/stm32f4xx_i2c.c **** }
 2642              		.loc 1 1446 1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 72


 2643 0022 00BF     		nop
 2644 0024 1437     		adds	r7, r7, #20
 2645              	.LCFI205:
 2646              		.cfi_def_cfa_offset 4
 2647 0026 BD46     		mov	sp, r7
 2648              	.LCFI206:
 2649              		.cfi_def_cfa_register 13
 2650              		@ sp needed
 2651 0028 5DF8047B 		ldr	r7, [sp], #4
 2652              	.LCFI207:
 2653              		.cfi_restore 7
 2654              		.cfi_def_cfa_offset 0
 2655 002c 7047     		bx	lr
 2656              		.cfi_endproc
 2657              	.LFE157:
 2659              		.text
 2660              	.Letext0:
 2661              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 2662              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 2663              		.file 4 "./CORE/stm32f4xx.h"
 2664              		.file 5 "./Library/stm32f4xx_rcc.h"
 2665              		.file 6 "./Library/stm32f4xx_i2c.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_i2c.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:20     .text.I2C_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:26     .text.I2C_DeInit:0000000000000000 I2C_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:104    .text.I2C_DeInit:0000000000000068 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:111    .text.I2C_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:117    .text.I2C_Init:0000000000000000 I2C_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:368    .text.I2C_Init:0000000000000174 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:376    .text.I2C_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:382    .text.I2C_StructInit:0000000000000000 I2C_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:442    .text.I2C_Cmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:448    .text.I2C_Cmd:0000000000000000 I2C_Cmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:510    .text.I2C_AnalogFilterCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:516    .text.I2C_AnalogFilterCmd:0000000000000000 I2C_AnalogFilterCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:578    .text.I2C_DigitalFilterConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:584    .text.I2C_DigitalFilterConfig:0000000000000000 I2C_DigitalFilterConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:646    .text.I2C_GenerateSTART:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:652    .text.I2C_GenerateSTART:0000000000000000 I2C_GenerateSTART
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:714    .text.I2C_GenerateSTOP:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:720    .text.I2C_GenerateSTOP:0000000000000000 I2C_GenerateSTOP
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:782    .text.I2C_Send7bitAddress:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:788    .text.I2C_Send7bitAddress:0000000000000000 I2C_Send7bitAddress
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:848    .text.I2C_AcknowledgeConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:854    .text.I2C_AcknowledgeConfig:0000000000000000 I2C_AcknowledgeConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:916    .text.I2C_OwnAddress2Config:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:922    .text.I2C_OwnAddress2Config:0000000000000000 I2C_OwnAddress2Config
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:985    .text.I2C_DualAddressCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:991    .text.I2C_DualAddressCmd:0000000000000000 I2C_DualAddressCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1053   .text.I2C_GeneralCallCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1059   .text.I2C_GeneralCallCmd:0000000000000000 I2C_GeneralCallCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1121   .text.I2C_SoftwareResetCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1127   .text.I2C_SoftwareResetCmd:0000000000000000 I2C_SoftwareResetCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1190   .text.I2C_StretchClockCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1196   .text.I2C_StretchClockCmd:0000000000000000 I2C_StretchClockCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1258   .text.I2C_FastModeDutyCycleConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1264   .text.I2C_FastModeDutyCycleConfig:0000000000000000 I2C_FastModeDutyCycleConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1326   .text.I2C_NACKPositionConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1332   .text.I2C_NACKPositionConfig:0000000000000000 I2C_NACKPositionConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1394   .text.I2C_SMBusAlertConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1400   .text.I2C_SMBusAlertConfig:0000000000000000 I2C_SMBusAlertConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1462   .text.I2C_ARPCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1468   .text.I2C_ARPCmd:0000000000000000 I2C_ARPCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1530   .text.I2C_SendData:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1536   .text.I2C_SendData:0000000000000000 I2C_SendData
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1579   .text.I2C_ReceiveData:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1585   .text.I2C_ReceiveData:0000000000000000 I2C_ReceiveData
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1627   .text.I2C_TransmitPEC:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1633   .text.I2C_TransmitPEC:0000000000000000 I2C_TransmitPEC
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1695   .text.I2C_PECPositionConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1701   .text.I2C_PECPositionConfig:0000000000000000 I2C_PECPositionConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1763   .text.I2C_CalculatePEC:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1769   .text.I2C_CalculatePEC:0000000000000000 I2C_CalculatePEC
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1831   .text.I2C_GetPEC:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1837   .text.I2C_GetPEC:0000000000000000 I2C_GetPEC
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1881   .text.I2C_DMACmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1887   .text.I2C_DMACmd:0000000000000000 I2C_DMACmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1949   .text.I2C_DMALastTransferCmd:0000000000000000 $t
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s 			page 74


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:1955   .text.I2C_DMALastTransferCmd:0000000000000000 I2C_DMALastTransferCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2017   .text.I2C_ReadRegister:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2023   .text.I2C_ReadRegister:0000000000000000 I2C_ReadRegister
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2078   .text.I2C_ITConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2084   .text.I2C_ITConfig:0000000000000000 I2C_ITConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2154   .text.I2C_CheckEvent:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2160   .text.I2C_CheckEvent:0000000000000000 I2C_CheckEvent
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2271   .text.I2C_GetLastEvent:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2277   .text.I2C_GetLastEvent:0000000000000000 I2C_GetLastEvent
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2347   .text.I2C_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2353   .text.I2C_GetFlagStatus:0000000000000000 I2C_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2453   .text.I2C_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2459   .text.I2C_ClearFlag:0000000000000000 I2C_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2511   .text.I2C_GetITStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2517   .text.I2C_GetITStatus:0000000000000000 I2C_GetITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2602   .text.I2C_ClearITPendingBit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccsJbS41.s:2608   .text.I2C_ClearITPendingBit:0000000000000000 I2C_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
