ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	RTC_ByteToBcd2:
  26              	.LVL0:
  27              	.LFB178:
  28              		.file 1 "./Library/stm32f4xx_rtc.c"
   1:./Library/stm32f4xx_rtc.c **** /**
   2:./Library/stm32f4xx_rtc.c ****   ******************************************************************************
   3:./Library/stm32f4xx_rtc.c ****   * @file    stm32f4xx_rtc.c
   4:./Library/stm32f4xx_rtc.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_rtc.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_rtc.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_rtc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   9:./Library/stm32f4xx_rtc.c ****   *           + Initialization
  10:./Library/stm32f4xx_rtc.c ****   *           + Calendar (Time and Date) configuration
  11:./Library/stm32f4xx_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  12:./Library/stm32f4xx_rtc.c ****   *           + WakeUp Timer configuration
  13:./Library/stm32f4xx_rtc.c ****   *           + Daylight Saving configuration
  14:./Library/stm32f4xx_rtc.c ****   *           + Output pin Configuration
  15:./Library/stm32f4xx_rtc.c ****   *           + Coarse digital Calibration configuration
  16:./Library/stm32f4xx_rtc.c ****   *           + Smooth digital Calibration configuration
  17:./Library/stm32f4xx_rtc.c ****   *           + TimeStamp configuration
  18:./Library/stm32f4xx_rtc.c ****   *           + Tampers configuration
  19:./Library/stm32f4xx_rtc.c ****   *           + Backup Data Registers configuration
  20:./Library/stm32f4xx_rtc.c ****   *           + Shift control synchronisation    
  21:./Library/stm32f4xx_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration
  22:./Library/stm32f4xx_rtc.c ****   *           + Interrupts and flags management
  23:./Library/stm32f4xx_rtc.c ****   *
  24:./Library/stm32f4xx_rtc.c **** @verbatim
  25:./Library/stm32f4xx_rtc.c **** 
  26:./Library/stm32f4xx_rtc.c ****  ===================================================================
  27:./Library/stm32f4xx_rtc.c ****               ##### Backup Domain Operating Condition #####
  28:./Library/stm32f4xx_rtc.c ****  ===================================================================
  29:./Library/stm32f4xx_rtc.c ****  [..] The real-time clock (RTC), the RTC backup registers, and the backup 
  30:./Library/stm32f4xx_rtc.c ****       SRAM (BKP SRAM) can be powered from the VBAT voltage when the main 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 2


  31:./Library/stm32f4xx_rtc.c ****       VDD supply is powered off.
  32:./Library/stm32f4xx_rtc.c ****       To retain the content of the RTC backup registers, backup SRAM, and supply 
  33:./Library/stm32f4xx_rtc.c ****       the RTC when VDD is turned off, VBAT pin can be connected to an optional 
  34:./Library/stm32f4xx_rtc.c ****       standby voltage supplied by a battery or by another source.
  35:./Library/stm32f4xx_rtc.c **** 
  36:./Library/stm32f4xx_rtc.c ****  [..] To allow the RTC to operate even when the main digital supply (VDD) is turned
  37:./Library/stm32f4xx_rtc.c ****       off, the VBAT pin powers the following blocks:
  38:./Library/stm32f4xx_rtc.c ****    (#) The RTC
  39:./Library/stm32f4xx_rtc.c ****    (#) The LSE oscillator
  40:./Library/stm32f4xx_rtc.c ****    (#) The backup SRAM when the low power backup regulator is enabled
  41:./Library/stm32f4xx_rtc.c ****    (#) PC13 to PC15 I/Os, plus PI8 I/O (when available)
  42:./Library/stm32f4xx_rtc.c ****   
  43:./Library/stm32f4xx_rtc.c ****  [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  44:./Library/stm32f4xx_rtc.c ****       the following functions are available:
  45:./Library/stm32f4xx_rtc.c ****    (#) PC14 and PC15 can be used as either GPIO or LSE pins
  46:./Library/stm32f4xx_rtc.c ****    (#) PC13 can be used as a GPIO or as the RTC_AF1 pin
  47:./Library/stm32f4xx_rtc.c ****    (#) PI8 can be used as a GPIO or as the RTC_AF2 pin
  48:./Library/stm32f4xx_rtc.c ****   
  49:./Library/stm32f4xx_rtc.c ****  [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT 
  50:./Library/stm32f4xx_rtc.c ****       because VDD is not present), the following functions are available:
  51:./Library/stm32f4xx_rtc.c ****    (#) PC14 and PC15 can be used as LSE pins only
  52:./Library/stm32f4xx_rtc.c ****    (#) PC13 can be used as the RTC_AF1 pin 
  53:./Library/stm32f4xx_rtc.c ****    (#) PI8 can be used as the RTC_AF2 pin
  54:./Library/stm32f4xx_rtc.c ****   
  55:./Library/stm32f4xx_rtc.c ****             
  56:./Library/stm32f4xx_rtc.c ****                    ##### Backup Domain Reset #####
  57:./Library/stm32f4xx_rtc.c ****  ===================================================================
  58:./Library/stm32f4xx_rtc.c ****  [..] The backup domain reset sets all RTC registers and the RCC_BDCR register 
  59:./Library/stm32f4xx_rtc.c ****       to their reset values. The BKPSRAM is not affected by this reset. The only
  60:./Library/stm32f4xx_rtc.c ****       way of resetting the BKPSRAM is through the Flash interface by requesting 
  61:./Library/stm32f4xx_rtc.c ****       a protection level change from 1 to 0.
  62:./Library/stm32f4xx_rtc.c ****  [..] A backup domain reset is generated when one of the following events occurs:
  63:./Library/stm32f4xx_rtc.c ****    (#) Software reset, triggered by setting the BDRST bit in the 
  64:./Library/stm32f4xx_rtc.c ****        RCC Backup domain control register (RCC_BDCR). You can use the
  65:./Library/stm32f4xx_rtc.c ****        RCC_BackupResetCmd().
  66:./Library/stm32f4xx_rtc.c ****    (#) VDD or VBAT power on, if both supplies have previously been powered off.
  67:./Library/stm32f4xx_rtc.c ****   
  68:./Library/stm32f4xx_rtc.c **** 
  69:./Library/stm32f4xx_rtc.c ****                    ##### Backup Domain Access #####
  70:./Library/stm32f4xx_rtc.c ****  ===================================================================
  71:./Library/stm32f4xx_rtc.c ****  [..] After reset, the backup domain (RTC registers, RTC backup data 
  72:./Library/stm32f4xx_rtc.c ****       registers and backup SRAM) is protected against possible unwanted write 
  73:./Library/stm32f4xx_rtc.c ****       accesses. 
  74:./Library/stm32f4xx_rtc.c ****  [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  75:./Library/stm32f4xx_rtc.c ****    (+) Enable the Power Controller (PWR) APB1 interface clock using the
  76:./Library/stm32f4xx_rtc.c ****        RCC_APB1PeriphClockCmd() function.
  77:./Library/stm32f4xx_rtc.c ****    (+) Enable access to RTC domain using the PWR_BackupAccessCmd() function.
  78:./Library/stm32f4xx_rtc.c ****    (+) Select the RTC clock source using the RCC_RTCCLKConfig() function.
  79:./Library/stm32f4xx_rtc.c ****    (+) Enable RTC Clock using the RCC_RTCCLKCmd() function.
  80:./Library/stm32f4xx_rtc.c ****   
  81:./Library/stm32f4xx_rtc.c ****   
  82:./Library/stm32f4xx_rtc.c ****                   ##### How to use RTC Driver #####
  83:./Library/stm32f4xx_rtc.c ****  ===================================================================
  84:./Library/stm32f4xx_rtc.c ****  [..] 
  85:./Library/stm32f4xx_rtc.c ****    (+) Enable the RTC domain access (see description in the section above)
  86:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  87:./Library/stm32f4xx_rtc.c ****        format using the RTC_Init() function.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 3


  88:./Library/stm32f4xx_rtc.c ****   
  89:./Library/stm32f4xx_rtc.c ****  *** Time and Date configuration ***
  90:./Library/stm32f4xx_rtc.c ****  ===================================
  91:./Library/stm32f4xx_rtc.c ****  [..] 
  92:./Library/stm32f4xx_rtc.c ****    (+) To configure the RTC Calendar (Time and Date) use the RTC_SetTime()
  93:./Library/stm32f4xx_rtc.c ****        and RTC_SetDate() functions.
  94:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC Calendar, use the RTC_GetTime() and RTC_GetDate() functions.
  95:./Library/stm32f4xx_rtc.c ****    (+) Use the RTC_DayLightSavingConfig() function to add or sub one
  96:./Library/stm32f4xx_rtc.c ****        hour to the RTC Calendar.    
  97:./Library/stm32f4xx_rtc.c ****   
  98:./Library/stm32f4xx_rtc.c ****  *** Alarm configuration ***
  99:./Library/stm32f4xx_rtc.c ****  ===========================
 100:./Library/stm32f4xx_rtc.c ****  [..]
 101:./Library/stm32f4xx_rtc.c ****    (+) To configure the RTC Alarm use the RTC_SetAlarm() function.
 102:./Library/stm32f4xx_rtc.c ****    (+) Enable the selected RTC Alarm using the RTC_AlarmCmd() function
 103:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC Alarm, use the RTC_GetAlarm() function.
 104:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC alarm SubSecond, use the RTC_GetAlarmSubSecond() function.
 105:./Library/stm32f4xx_rtc.c ****   
 106:./Library/stm32f4xx_rtc.c ****  *** RTC Wakeup configuration ***
 107:./Library/stm32f4xx_rtc.c ****  ================================
 108:./Library/stm32f4xx_rtc.c ****  [..] 
 109:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC Wakeup Clock source use the RTC_WakeUpClockConfig()
 110:./Library/stm32f4xx_rtc.c ****        function.
 111:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC WakeUp Counter using the RTC_SetWakeUpCounter() function  
 112:./Library/stm32f4xx_rtc.c ****    (+) Enable the RTC WakeUp using the RTC_WakeUpCmd() function  
 113:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC WakeUp Counter register, use the RTC_GetWakeUpCounter() 
 114:./Library/stm32f4xx_rtc.c ****        function.
 115:./Library/stm32f4xx_rtc.c ****   
 116:./Library/stm32f4xx_rtc.c ****  *** Outputs configuration ***
 117:./Library/stm32f4xx_rtc.c ****  =============================
 118:./Library/stm32f4xx_rtc.c ****  [..] The RTC has 2 different outputs:
 119:./Library/stm32f4xx_rtc.c ****    (+) AFO_ALARM: this output is used to manage the RTC Alarm A, Alarm B
 120:./Library/stm32f4xx_rtc.c ****        and WaKeUp signals. To output the selected RTC signal on RTC_AF1 pin, use the 
 121:./Library/stm32f4xx_rtc.c ****        RTC_OutputConfig() function.                
 122:./Library/stm32f4xx_rtc.c ****    (+) AFO_CALIB: this output is 512Hz signal or 1Hz. To output the RTC Clock on 
 123:./Library/stm32f4xx_rtc.c ****        RTC_AF1 pin, use the RTC_CalibOutputCmd() function.
 124:./Library/stm32f4xx_rtc.c ****   
 125:./Library/stm32f4xx_rtc.c ****  *** Smooth digital Calibration configuration ***
 126:./Library/stm32f4xx_rtc.c ****  ================================================    
 127:./Library/stm32f4xx_rtc.c ****  [..]
 128:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC Original Digital Calibration Value and the corresponding
 129:./Library/stm32f4xx_rtc.c ****        calibration cycle period (32s,16s and 8s) using the RTC_SmoothCalibConfig() 
 130:./Library/stm32f4xx_rtc.c ****        function.
 131:./Library/stm32f4xx_rtc.c ****   
 132:./Library/stm32f4xx_rtc.c ****  *** Coarse digital Calibration configuration ***
 133:./Library/stm32f4xx_rtc.c ****  ================================================
 134:./Library/stm32f4xx_rtc.c ****  [..]
 135:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC Coarse Calibration Value and the corresponding
 136:./Library/stm32f4xx_rtc.c ****        sign using the RTC_CoarseCalibConfig() function.
 137:./Library/stm32f4xx_rtc.c ****    (+) Enable the RTC Coarse Calibration using the RTC_CoarseCalibCmd() function  
 138:./Library/stm32f4xx_rtc.c ****   
 139:./Library/stm32f4xx_rtc.c ****  *** TimeStamp configuration ***
 140:./Library/stm32f4xx_rtc.c ****  ===============================
 141:./Library/stm32f4xx_rtc.c ****  [..]
 142:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC_AF1 trigger and enables the RTC TimeStamp using the RTC
 143:./Library/stm32f4xx_rtc.c ****       _TimeStampCmd() function.
 144:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC TimeStamp Time and Date register, use the RTC_GetTimeStamp()
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 4


 145:./Library/stm32f4xx_rtc.c ****        function.
 146:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC TimeStamp SubSecond register, use the 
 147:./Library/stm32f4xx_rtc.c ****        RTC_GetTimeStampSubSecond() function.
 148:./Library/stm32f4xx_rtc.c ****    (+) The TAMPER1 alternate function can be mapped either to RTC_AF1(PC13)
 149:./Library/stm32f4xx_rtc.c ****        or RTC_AF2 (PI8) depending on the value of TAMP1INSEL bit in 
 150:./Library/stm32f4xx_rtc.c ****        RTC_TAFCR register. You can use the  RTC_TamperPinSelection() function to
 151:./Library/stm32f4xx_rtc.c ****        select the corresponding pin.     
 152:./Library/stm32f4xx_rtc.c ****   
 153:./Library/stm32f4xx_rtc.c ****  *** Tamper configuration ***
 154:./Library/stm32f4xx_rtc.c ****  ============================
 155:./Library/stm32f4xx_rtc.c ****  [..]
 156:./Library/stm32f4xx_rtc.c ****    (+) Enable the RTC Tamper using the RTC_TamperCmd() function.
 157:./Library/stm32f4xx_rtc.c ****    (+) Configure the Tamper filter count using RTC_TamperFilterConfig()
 158:./Library/stm32f4xx_rtc.c ****        function. 
 159:./Library/stm32f4xx_rtc.c ****    (+) Configure the RTC Tamper trigger Edge or Level according to the Tamper 
 160:./Library/stm32f4xx_rtc.c ****        filter (if equal to 0 Edge else Level) value using the RTC_TamperConfig() 
 161:./Library/stm32f4xx_rtc.c ****        function.
 162:./Library/stm32f4xx_rtc.c ****    (+) Configure the Tamper sampling frequency using RTC_TamperSamplingFreqConfig()
 163:./Library/stm32f4xx_rtc.c ****        function.
 164:./Library/stm32f4xx_rtc.c ****    (+) Configure the Tamper precharge or discharge duration using 
 165:./Library/stm32f4xx_rtc.c ****        RTC_TamperPinsPrechargeDuration() function.
 166:./Library/stm32f4xx_rtc.c ****    (+) Enable the Tamper Pull-UP using RTC_TamperPullUpDisableCmd() function.
 167:./Library/stm32f4xx_rtc.c ****    (+) Enable the Time stamp on Tamper detection event using  
 168:./Library/stm32f4xx_rtc.c ****        TC_TSOnTamperDetecCmd() function.
 169:./Library/stm32f4xx_rtc.c ****    (+) The TIMESTAMP alternate function can be mapped to either RTC_AF1 
 170:./Library/stm32f4xx_rtc.c ****        or RTC_AF2 depending on the value of the TSINSEL bit in the RTC_TAFCR 
 171:./Library/stm32f4xx_rtc.c ****        register. You can use the  RTC_TimeStampPinSelection() function to select 
 172:./Library/stm32f4xx_rtc.c ****        the corresponding pin. 
 173:./Library/stm32f4xx_rtc.c ****   
 174:./Library/stm32f4xx_rtc.c ****  *** Backup Data Registers configuration ***
 175:./Library/stm32f4xx_rtc.c ****  ===========================================
 176:./Library/stm32f4xx_rtc.c ****  [..]
 177:./Library/stm32f4xx_rtc.c ****    (+) To write to the RTC Backup Data registers, use the RTC_WriteBackupRegister()
 178:./Library/stm32f4xx_rtc.c ****        function.  
 179:./Library/stm32f4xx_rtc.c ****    (+) To read the RTC Backup Data registers, use the RTC_ReadBackupRegister()
 180:./Library/stm32f4xx_rtc.c ****        function.
 181:./Library/stm32f4xx_rtc.c ****    
 182:./Library/stm32f4xx_rtc.c **** 
 183:./Library/stm32f4xx_rtc.c ****                   ##### RTC and low power modes #####
 184:./Library/stm32f4xx_rtc.c ****  ===================================================================
 185:./Library/stm32f4xx_rtc.c ****  [..] The MCU can be woken up from a low power mode by an RTC alternate 
 186:./Library/stm32f4xx_rtc.c ****       function.
 187:./Library/stm32f4xx_rtc.c ****  [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 188:./Library/stm32f4xx_rtc.c ****       RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 189:./Library/stm32f4xx_rtc.c ****       These RTC alternate functions can wake up the system from the Stop and 
 190:./Library/stm32f4xx_rtc.c ****       Standby lowpower modes.
 191:./Library/stm32f4xx_rtc.c ****  [..] The system can also wake up from low power modes without depending 
 192:./Library/stm32f4xx_rtc.c ****       on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 193:./Library/stm32f4xx_rtc.c ****       or the RTC wakeup events.
 194:./Library/stm32f4xx_rtc.c ****  [..] The RTC provides a programmable time base for waking up from the 
 195:./Library/stm32f4xx_rtc.c ****       Stop or Standby mode at regular intervals.
 196:./Library/stm32f4xx_rtc.c ****       Wakeup from STOP and Standby modes is possible only when the RTC clock source
 197:./Library/stm32f4xx_rtc.c ****       is LSE or LSI.
 198:./Library/stm32f4xx_rtc.c ****   
 199:./Library/stm32f4xx_rtc.c **** 
 200:./Library/stm32f4xx_rtc.c ****           ##### Selection of RTC_AF1 alternate functions #####
 201:./Library/stm32f4xx_rtc.c ****  ===================================================================
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 5


 202:./Library/stm32f4xx_rtc.c ****  [..] The RTC_AF1 pin (PC13) can be used for the following purposes:
 203:./Library/stm32f4xx_rtc.c ****    (+) AFO_ALARM output
 204:./Library/stm32f4xx_rtc.c ****    (+) AFO_CALIB output
 205:./Library/stm32f4xx_rtc.c ****    (+) AFI_TAMPER
 206:./Library/stm32f4xx_rtc.c ****    (+) AFI_TIMESTAMP
 207:./Library/stm32f4xx_rtc.c ****  
 208:./Library/stm32f4xx_rtc.c ****  [..]   
 209:./Library/stm32f4xx_rtc.c ****    +-----------------------------------------------------------------------------------------------
 210:./Library/stm32f4xx_rtc.c ****    |     Pin         |AFO_ALARM |AFO_CALIB |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |
 211:./Library/stm32f4xx_rtc.c ****    |  configuration  | ENABLED  | ENABLED  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |
 212:./Library/stm32f4xx_rtc.c ****    |  and function   |          |          |           |              | selection  |  selection   |
 213:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 214:./Library/stm32f4xx_rtc.c ****    |   Alarm out     |          |          |           |              |    Don't   |     Don't    |
 215:./Library/stm32f4xx_rtc.c ****    |   output OD     |     1    |Don't care|Don't care | Don't care   |    care    |     care     |
 216:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 217:./Library/stm32f4xx_rtc.c ****    |   Alarm out     |          |          |           |              |    Don't   |     Don't    |
 218:./Library/stm32f4xx_rtc.c ****    |   output PP     |     1    |Don't care|Don't care | Don't care   |    care    |     care     |
 219:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 220:./Library/stm32f4xx_rtc.c ****    | Calibration out |          |          |           |              |    Don't   |     Don't    |
 221:./Library/stm32f4xx_rtc.c ****    |   output PP     |     0    |    1     |Don't care | Don't care   |    care    |     care     |
 222:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 223:./Library/stm32f4xx_rtc.c ****    |  TAMPER input   |          |          |           |              |            |     Don't    |
 224:./Library/stm32f4xx_rtc.c ****    |   floating      |     0    |    0     |     1     |      0       |      0     |     care     |
 225:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 226:./Library/stm32f4xx_rtc.c ****    |  TIMESTAMP and  |          |          |           |              |            |              |
 227:./Library/stm32f4xx_rtc.c ****    |  TAMPER input   |     0    |    0     |     1     |      1       |      0     |      0       |
 228:./Library/stm32f4xx_rtc.c ****    |   floating      |          |          |           |              |            |              |
 229:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 230:./Library/stm32f4xx_rtc.c ****    | TIMESTAMP input |          |          |           |              |    Don't   |              |
 231:./Library/stm32f4xx_rtc.c ****    |    floating     |     0    |    0     |     0     |      1       |    care    |      0       |
 232:./Library/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 233:./Library/stm32f4xx_rtc.c ****    |  Standard GPIO  |     0    |    0     |     0     |      0       | Don't care |  Don't care  |
 234:./Library/stm32f4xx_rtc.c ****    +-----------------------------------------------------------------------------------------------
 235:./Library/stm32f4xx_rtc.c **** 
 236:./Library/stm32f4xx_rtc.c ****             
 237:./Library/stm32f4xx_rtc.c ****         #####  Selection of RTC_AF2 alternate functions #####
 238:./Library/stm32f4xx_rtc.c ****  ===================================================================
 239:./Library/stm32f4xx_rtc.c ****  [..] The RTC_AF2 pin (PI8) can be used for the following purposes:
 240:./Library/stm32f4xx_rtc.c ****    (+) AFI_TAMPER
 241:./Library/stm32f4xx_rtc.c ****    (+) AFI_TIMESTAMP
 242:./Library/stm32f4xx_rtc.c ****  [..]
 243:./Library/stm32f4xx_rtc.c ****    +---------------------------------------------------------------------------------------+
 244:./Library/stm32f4xx_rtc.c ****    |     Pin         |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |ALARMOUTTYPE  |
 245:./Library/stm32f4xx_rtc.c ****    |  configuration  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |  AFO_ALARM   |
 246:./Library/stm32f4xx_rtc.c ****    |  and function   |           |              | selection  |  selection   |Configuration |
 247:./Library/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 248:./Library/stm32f4xx_rtc.c ****    |  TAMPER input   |           |              |            |     Don't    |              |
 249:./Library/stm32f4xx_rtc.c ****    |   floating      |     1     |      0       |      1     |     care     |  Don't care  |
 250:./Library/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 251:./Library/stm32f4xx_rtc.c ****    |  TIMESTAMP and  |           |              |            |              |              |
 252:./Library/stm32f4xx_rtc.c ****    |  TAMPER input   |     1     |      1       |      1     |      1       |  Don't care  |
 253:./Library/stm32f4xx_rtc.c ****    |   floating      |           |              |            |              |              |
 254:./Library/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 255:./Library/stm32f4xx_rtc.c ****    | TIMESTAMP input |           |              |    Don't   |              |              |
 256:./Library/stm32f4xx_rtc.c ****    |    floating     |     0     |      1       |    care    |      1       |  Don't care  |
 257:./Library/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 258:./Library/stm32f4xx_rtc.c ****    |  Standard GPIO  |     0     |      0       | Don't care |  Don't care  |  Don't care  |
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 6


 259:./Library/stm32f4xx_rtc.c ****    +---------------------------------------------------------------------------------------+   
 260:./Library/stm32f4xx_rtc.c ****  
 261:./Library/stm32f4xx_rtc.c ****      
 262:./Library/stm32f4xx_rtc.c **** @endverbatim
 263:./Library/stm32f4xx_rtc.c ****   
 264:./Library/stm32f4xx_rtc.c ****   ******************************************************************************
 265:./Library/stm32f4xx_rtc.c ****   * @attention
 266:./Library/stm32f4xx_rtc.c ****   *
 267:./Library/stm32f4xx_rtc.c ****   * Copyright (c) 2016 STMicroelectronics.
 268:./Library/stm32f4xx_rtc.c ****   * All rights reserved.
 269:./Library/stm32f4xx_rtc.c ****   *
 270:./Library/stm32f4xx_rtc.c ****   * This software is licensed under terms that can be found in the LICENSE file
 271:./Library/stm32f4xx_rtc.c ****   * in the root directory of this software component.
 272:./Library/stm32f4xx_rtc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 273:./Library/stm32f4xx_rtc.c ****   *
 274:./Library/stm32f4xx_rtc.c ****   ******************************************************************************
 275:./Library/stm32f4xx_rtc.c ****   */
 276:./Library/stm32f4xx_rtc.c **** 
 277:./Library/stm32f4xx_rtc.c **** /* Includes ------------------------------------------------------------------*/
 278:./Library/stm32f4xx_rtc.c **** #include "stm32f4xx_rtc.h"
 279:./Library/stm32f4xx_rtc.c **** 
 280:./Library/stm32f4xx_rtc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 281:./Library/stm32f4xx_rtc.c ****   * @{
 282:./Library/stm32f4xx_rtc.c ****   */
 283:./Library/stm32f4xx_rtc.c **** 
 284:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC 
 285:./Library/stm32f4xx_rtc.c ****   * @brief RTC driver modules
 286:./Library/stm32f4xx_rtc.c ****   * @{
 287:./Library/stm32f4xx_rtc.c ****   */
 288:./Library/stm32f4xx_rtc.c **** 
 289:./Library/stm32f4xx_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 290:./Library/stm32f4xx_rtc.c **** /* Private define ------------------------------------------------------------*/
 291:./Library/stm32f4xx_rtc.c **** 
 292:./Library/stm32f4xx_rtc.c **** /* Masks Definition */
 293:./Library/stm32f4xx_rtc.c **** #define RTC_TR_RESERVED_MASK    ((uint32_t)0x007F7F7F)
 294:./Library/stm32f4xx_rtc.c **** #define RTC_DR_RESERVED_MASK    ((uint32_t)0x00FFFF3F) 
 295:./Library/stm32f4xx_rtc.c **** #define RTC_INIT_MASK           ((uint32_t)0xFFFFFFFF)  
 296:./Library/stm32f4xx_rtc.c **** #define RTC_RSF_MASK            ((uint32_t)0xFFFFFF5F)
 297:./Library/stm32f4xx_rtc.c **** #define RTC_FLAGS_MASK          ((uint32_t)(RTC_FLAG_TSOVF | RTC_FLAG_TSF | RTC_FLAG_WUTF | \
 298:./Library/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBF | RTC_FLAG_ALRAF | RTC_FLAG_INITF | \
 299:./Library/stm32f4xx_rtc.c ****                                             RTC_FLAG_RSF | RTC_FLAG_INITS | RTC_FLAG_WUTWF | \
 300:./Library/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBWF | RTC_FLAG_ALRAWF | RTC_FLAG_TAMP1F | \
 301:./Library/stm32f4xx_rtc.c ****                                             RTC_FLAG_TAMP2F | RTC_FLAG_RECALPF | RTC_FLAG_SHPF))
 302:./Library/stm32f4xx_rtc.c **** 
 303:./Library/stm32f4xx_rtc.c **** #define INITMODE_TIMEOUT         ((uint32_t) 0x00010000)
 304:./Library/stm32f4xx_rtc.c **** #define SYNCHRO_TIMEOUT          ((uint32_t) 0x00020000)
 305:./Library/stm32f4xx_rtc.c **** #define RECALPF_TIMEOUT          ((uint32_t) 0x00020000)
 306:./Library/stm32f4xx_rtc.c **** #define SHPF_TIMEOUT             ((uint32_t) 0x00001000)
 307:./Library/stm32f4xx_rtc.c **** 
 308:./Library/stm32f4xx_rtc.c **** /* Private macro -------------------------------------------------------------*/
 309:./Library/stm32f4xx_rtc.c **** /* Private variables ---------------------------------------------------------*/
 310:./Library/stm32f4xx_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 311:./Library/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value);
 312:./Library/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value);
 313:./Library/stm32f4xx_rtc.c **** 
 314:./Library/stm32f4xx_rtc.c **** /* Private functions ---------------------------------------------------------*/
 315:./Library/stm32f4xx_rtc.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 7


 316:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Private_Functions
 317:./Library/stm32f4xx_rtc.c ****   * @{
 318:./Library/stm32f4xx_rtc.c ****   */ 
 319:./Library/stm32f4xx_rtc.c **** 
 320:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group1 Initialization and Configuration functions
 321:./Library/stm32f4xx_rtc.c ****  *  @brief   Initialization and Configuration functions 
 322:./Library/stm32f4xx_rtc.c ****  *
 323:./Library/stm32f4xx_rtc.c **** @verbatim   
 324:./Library/stm32f4xx_rtc.c ****  ===============================================================================
 325:./Library/stm32f4xx_rtc.c ****              ##### Initialization and Configuration functions #####
 326:./Library/stm32f4xx_rtc.c ****  ===============================================================================
 327:./Library/stm32f4xx_rtc.c ****  
 328:./Library/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to initialize and configure the RTC
 329:./Library/stm32f4xx_rtc.c ****       Prescaler (Synchronous and Asynchronous), RTC Hour format, disable RTC registers
 330:./Library/stm32f4xx_rtc.c ****       Write protection, enter and exit the RTC initialization mode, RTC registers
 331:./Library/stm32f4xx_rtc.c ****       synchronization check and reference clock detection enable.
 332:./Library/stm32f4xx_rtc.c ****   
 333:./Library/stm32f4xx_rtc.c ****    (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base. It is
 334:./Library/stm32f4xx_rtc.c ****        split into 2 programmable prescalers to minimize power consumption.
 335:./Library/stm32f4xx_rtc.c ****        (++) A 7-bit asynchronous prescaler and A 13-bit synchronous prescaler.
 336:./Library/stm32f4xx_rtc.c ****        (++) When both prescalers are used, it is recommended to configure the 
 337:./Library/stm32f4xx_rtc.c ****             asynchronous prescaler to a high value to minimize consumption.
 338:./Library/stm32f4xx_rtc.c **** 
 339:./Library/stm32f4xx_rtc.c ****    (#) All RTC registers are Write protected. Writing to the RTC registers
 340:./Library/stm32f4xx_rtc.c ****        is enabled by writing a key into the Write Protection register, RTC_WPR.
 341:./Library/stm32f4xx_rtc.c **** 
 342:./Library/stm32f4xx_rtc.c ****    (#) To Configure the RTC Calendar, user application should enter initialization
 343:./Library/stm32f4xx_rtc.c ****        mode. In this mode, the calendar counter is stopped and its value can be 
 344:./Library/stm32f4xx_rtc.c ****        updated. When the initialization sequence is complete, the calendar restarts 
 345:./Library/stm32f4xx_rtc.c ****        counting after 4 RTCCLK cycles.
 346:./Library/stm32f4xx_rtc.c **** 
 347:./Library/stm32f4xx_rtc.c ****    (#) To read the calendar through the shadow registers after Calendar initialization,
 348:./Library/stm32f4xx_rtc.c ****        calendar update or after wakeup from low power modes the software must first 
 349:./Library/stm32f4xx_rtc.c ****        clear the RSF flag. The software must then wait until it is set again before 
 350:./Library/stm32f4xx_rtc.c ****        reading the calendar, which means that the calendar registers have been 
 351:./Library/stm32f4xx_rtc.c ****        correctly copied into the RTC_TR and RTC_DR shadow registers.
 352:./Library/stm32f4xx_rtc.c ****        The RTC_WaitForSynchro() function implements the above software sequence 
 353:./Library/stm32f4xx_rtc.c ****        (RSF clear and RSF check).
 354:./Library/stm32f4xx_rtc.c **** 
 355:./Library/stm32f4xx_rtc.c **** @endverbatim
 356:./Library/stm32f4xx_rtc.c ****   * @{
 357:./Library/stm32f4xx_rtc.c ****   */
 358:./Library/stm32f4xx_rtc.c **** 
 359:./Library/stm32f4xx_rtc.c **** /**
 360:./Library/stm32f4xx_rtc.c ****   * @brief  Deinitializes the RTC registers to their default reset values.
 361:./Library/stm32f4xx_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 362:./Library/stm32f4xx_rtc.c ****   *         registers.       
 363:./Library/stm32f4xx_rtc.c ****   * @param  None
 364:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 365:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are deinitialized
 366:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not deinitialized
 367:./Library/stm32f4xx_rtc.c ****   */
 368:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_DeInit(void)
 369:./Library/stm32f4xx_rtc.c **** {
 370:./Library/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 371:./Library/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 372:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 8


 373:./Library/stm32f4xx_rtc.c ****   
 374:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 375:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 376:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 377:./Library/stm32f4xx_rtc.c **** 
 378:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 379:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 380:./Library/stm32f4xx_rtc.c ****   {
 381:./Library/stm32f4xx_rtc.c ****     status = ERROR;
 382:./Library/stm32f4xx_rtc.c ****   }  
 383:./Library/stm32f4xx_rtc.c ****   else
 384:./Library/stm32f4xx_rtc.c ****   {
 385:./Library/stm32f4xx_rtc.c ****     /* Reset TR, DR and CR registers */
 386:./Library/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)0x00000000;
 387:./Library/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 388:./Library/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 389:./Library/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)0x00000007;
 390:./Library/stm32f4xx_rtc.c ****   
 391:./Library/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 392:./Library/stm32f4xx_rtc.c ****     do
 393:./Library/stm32f4xx_rtc.c ****     {
 394:./Library/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 395:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 396:./Library/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 397:./Library/stm32f4xx_rtc.c ****     
 398:./Library/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 399:./Library/stm32f4xx_rtc.c ****     {
 400:./Library/stm32f4xx_rtc.c ****       status = ERROR;
 401:./Library/stm32f4xx_rtc.c ****     }
 402:./Library/stm32f4xx_rtc.c ****     else
 403:./Library/stm32f4xx_rtc.c ****     {
 404:./Library/stm32f4xx_rtc.c ****       /* Reset all RTC CR register bits */
 405:./Library/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 406:./Library/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 407:./Library/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 408:./Library/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 409:./Library/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 410:./Library/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 411:./Library/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)0x00000000;
 412:./Library/stm32f4xx_rtc.c ****       RTC->CALR = (uint32_t)0x00000000;
 413:./Library/stm32f4xx_rtc.c ****       RTC->ALRMASSR = (uint32_t)0x00000000;
 414:./Library/stm32f4xx_rtc.c ****       RTC->ALRMBSSR = (uint32_t)0x00000000;
 415:./Library/stm32f4xx_rtc.c ****       
 416:./Library/stm32f4xx_rtc.c ****       /* Reset ISR register and exit initialization mode */
 417:./Library/stm32f4xx_rtc.c ****       RTC->ISR = (uint32_t)0x00000000;
 418:./Library/stm32f4xx_rtc.c ****       
 419:./Library/stm32f4xx_rtc.c ****       /* Reset Tamper and alternate functions configuration register */
 420:./Library/stm32f4xx_rtc.c ****       RTC->TAFCR = 0x00000000;
 421:./Library/stm32f4xx_rtc.c ****   
 422:./Library/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 423:./Library/stm32f4xx_rtc.c ****       {
 424:./Library/stm32f4xx_rtc.c ****         status = ERROR;
 425:./Library/stm32f4xx_rtc.c ****       }
 426:./Library/stm32f4xx_rtc.c ****       else
 427:./Library/stm32f4xx_rtc.c ****       {
 428:./Library/stm32f4xx_rtc.c ****         status = SUCCESS;      
 429:./Library/stm32f4xx_rtc.c ****       }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 9


 430:./Library/stm32f4xx_rtc.c ****     }
 431:./Library/stm32f4xx_rtc.c ****   }
 432:./Library/stm32f4xx_rtc.c ****   
 433:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 434:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 435:./Library/stm32f4xx_rtc.c ****   
 436:./Library/stm32f4xx_rtc.c ****   return status;
 437:./Library/stm32f4xx_rtc.c **** }
 438:./Library/stm32f4xx_rtc.c **** 
 439:./Library/stm32f4xx_rtc.c **** /**
 440:./Library/stm32f4xx_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters 
 441:./Library/stm32f4xx_rtc.c ****   *         in RTC_InitStruct.
 442:./Library/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure that contains 
 443:./Library/stm32f4xx_rtc.c ****   *         the configuration information for the RTC peripheral.
 444:./Library/stm32f4xx_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in 
 445:./Library/stm32f4xx_rtc.c ****   *         initialization mode only.  
 446:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 447:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 448:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not initialized  
 449:./Library/stm32f4xx_rtc.c ****   */
 450:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct)
 451:./Library/stm32f4xx_rtc.c **** {
 452:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 453:./Library/stm32f4xx_rtc.c ****   
 454:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 455:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(RTC_InitStruct->RTC_HourFormat));
 456:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
 457:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
 458:./Library/stm32f4xx_rtc.c **** 
 459:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 460:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 461:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 462:./Library/stm32f4xx_rtc.c **** 
 463:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 464:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 465:./Library/stm32f4xx_rtc.c ****   {
 466:./Library/stm32f4xx_rtc.c ****     status = ERROR;
 467:./Library/stm32f4xx_rtc.c ****   } 
 468:./Library/stm32f4xx_rtc.c ****   else
 469:./Library/stm32f4xx_rtc.c ****   {
 470:./Library/stm32f4xx_rtc.c ****     /* Clear RTC CR FMT Bit */
 471:./Library/stm32f4xx_rtc.c ****     RTC->CR &= ((uint32_t)~(RTC_CR_FMT));
 472:./Library/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 473:./Library/stm32f4xx_rtc.c ****     RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
 474:./Library/stm32f4xx_rtc.c ****   
 475:./Library/stm32f4xx_rtc.c ****     /* Configure the RTC PRER */
 476:./Library/stm32f4xx_rtc.c ****     RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
 477:./Library/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 478:./Library/stm32f4xx_rtc.c **** 
 479:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 480:./Library/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 481:./Library/stm32f4xx_rtc.c **** 
 482:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;    
 483:./Library/stm32f4xx_rtc.c ****   }
 484:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 485:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 486:./Library/stm32f4xx_rtc.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 10


 487:./Library/stm32f4xx_rtc.c ****   return status;
 488:./Library/stm32f4xx_rtc.c **** }
 489:./Library/stm32f4xx_rtc.c **** 
 490:./Library/stm32f4xx_rtc.c **** /**
 491:./Library/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_InitStruct member with its default value.
 492:./Library/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure which will be 
 493:./Library/stm32f4xx_rtc.c ****   *         initialized.
 494:./Library/stm32f4xx_rtc.c ****   * @retval None
 495:./Library/stm32f4xx_rtc.c ****   */
 496:./Library/stm32f4xx_rtc.c **** void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct)
 497:./Library/stm32f4xx_rtc.c **** {
 498:./Library/stm32f4xx_rtc.c ****   /* Initialize the RTC_HourFormat member */
 499:./Library/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_HourFormat = RTC_HourFormat_24;
 500:./Library/stm32f4xx_rtc.c ****     
 501:./Library/stm32f4xx_rtc.c ****   /* Initialize the RTC_AsynchPrediv member */
 502:./Library/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
 503:./Library/stm32f4xx_rtc.c **** 
 504:./Library/stm32f4xx_rtc.c ****   /* Initialize the RTC_SynchPrediv member */
 505:./Library/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
 506:./Library/stm32f4xx_rtc.c **** }
 507:./Library/stm32f4xx_rtc.c **** 
 508:./Library/stm32f4xx_rtc.c **** /**
 509:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC registers write protection.
 510:./Library/stm32f4xx_rtc.c ****   * @note   All the RTC registers are write protected except for RTC_ISR[13:8], 
 511:./Library/stm32f4xx_rtc.c ****   *         RTC_TAFCR and RTC_BKPxR.
 512:./Library/stm32f4xx_rtc.c ****   * @note   Writing a wrong key reactivates the write protection.
 513:./Library/stm32f4xx_rtc.c ****   * @note   The protection mechanism is not affected by system reset.  
 514:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the write protection.
 515:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 516:./Library/stm32f4xx_rtc.c ****   * @retval None
 517:./Library/stm32f4xx_rtc.c ****   */
 518:./Library/stm32f4xx_rtc.c **** void RTC_WriteProtectionCmd(FunctionalState NewState)
 519:./Library/stm32f4xx_rtc.c **** {
 520:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 521:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 522:./Library/stm32f4xx_rtc.c ****     
 523:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 524:./Library/stm32f4xx_rtc.c ****   {
 525:./Library/stm32f4xx_rtc.c ****     /* Enable the write protection for RTC registers */
 526:./Library/stm32f4xx_rtc.c ****     RTC->WPR = 0xFF;   
 527:./Library/stm32f4xx_rtc.c ****   }
 528:./Library/stm32f4xx_rtc.c ****   else
 529:./Library/stm32f4xx_rtc.c ****   {
 530:./Library/stm32f4xx_rtc.c ****     /* Disable the write protection for RTC registers */
 531:./Library/stm32f4xx_rtc.c ****     RTC->WPR = 0xCA;
 532:./Library/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
 533:./Library/stm32f4xx_rtc.c ****   }
 534:./Library/stm32f4xx_rtc.c **** }
 535:./Library/stm32f4xx_rtc.c **** 
 536:./Library/stm32f4xx_rtc.c **** /**
 537:./Library/stm32f4xx_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 538:./Library/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 539:./Library/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.    
 540:./Library/stm32f4xx_rtc.c ****   * @param  None
 541:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 542:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 543:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC is not in Init mode  
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 11


 544:./Library/stm32f4xx_rtc.c ****   */
 545:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_EnterInitMode(void)
 546:./Library/stm32f4xx_rtc.c **** {
 547:./Library/stm32f4xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 548:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 549:./Library/stm32f4xx_rtc.c ****   uint32_t initstatus = 0x00;
 550:./Library/stm32f4xx_rtc.c ****      
 551:./Library/stm32f4xx_rtc.c ****   /* Check if the Initialization mode is set */
 552:./Library/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 553:./Library/stm32f4xx_rtc.c ****   {
 554:./Library/stm32f4xx_rtc.c ****     /* Set the Initialization mode */
 555:./Library/stm32f4xx_rtc.c ****     RTC->ISR = (uint32_t)RTC_INIT_MASK;
 556:./Library/stm32f4xx_rtc.c ****     
 557:./Library/stm32f4xx_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 558:./Library/stm32f4xx_rtc.c ****     do
 559:./Library/stm32f4xx_rtc.c ****     {
 560:./Library/stm32f4xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 561:./Library/stm32f4xx_rtc.c ****       initcounter++;  
 562:./Library/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 563:./Library/stm32f4xx_rtc.c ****     
 564:./Library/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_INITF) != RESET)
 565:./Library/stm32f4xx_rtc.c ****     {
 566:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
 567:./Library/stm32f4xx_rtc.c ****     }
 568:./Library/stm32f4xx_rtc.c ****     else
 569:./Library/stm32f4xx_rtc.c ****     {
 570:./Library/stm32f4xx_rtc.c ****       status = ERROR;
 571:./Library/stm32f4xx_rtc.c ****     }        
 572:./Library/stm32f4xx_rtc.c ****   }
 573:./Library/stm32f4xx_rtc.c ****   else
 574:./Library/stm32f4xx_rtc.c ****   {
 575:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;  
 576:./Library/stm32f4xx_rtc.c ****   } 
 577:./Library/stm32f4xx_rtc.c ****     
 578:./Library/stm32f4xx_rtc.c ****   return (status);  
 579:./Library/stm32f4xx_rtc.c **** }
 580:./Library/stm32f4xx_rtc.c **** 
 581:./Library/stm32f4xx_rtc.c **** /**
 582:./Library/stm32f4xx_rtc.c ****   * @brief  Exits the RTC Initialization mode.
 583:./Library/stm32f4xx_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts 
 584:./Library/stm32f4xx_rtc.c ****   *         counting after 4 RTCCLK cycles.  
 585:./Library/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 586:./Library/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.      
 587:./Library/stm32f4xx_rtc.c ****   * @param  None
 588:./Library/stm32f4xx_rtc.c ****   * @retval None
 589:./Library/stm32f4xx_rtc.c ****   */
 590:./Library/stm32f4xx_rtc.c **** void RTC_ExitInitMode(void)
 591:./Library/stm32f4xx_rtc.c **** { 
 592:./Library/stm32f4xx_rtc.c ****   /* Exit Initialization mode */
 593:./Library/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)~RTC_ISR_INIT;  
 594:./Library/stm32f4xx_rtc.c **** }
 595:./Library/stm32f4xx_rtc.c **** 
 596:./Library/stm32f4xx_rtc.c **** /**
 597:./Library/stm32f4xx_rtc.c ****   * @brief  Waits until the RTC Time and Date registers (RTC_TR and RTC_DR) are 
 598:./Library/stm32f4xx_rtc.c ****   *         synchronized with RTC APB clock.
 599:./Library/stm32f4xx_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
 600:./Library/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function. 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 12


 601:./Library/stm32f4xx_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
 602:./Library/stm32f4xx_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
 603:./Library/stm32f4xx_rtc.c ****   *         the software must first clear the RSF flag. 
 604:./Library/stm32f4xx_rtc.c ****   *         The software must then wait until it is set again before reading 
 605:./Library/stm32f4xx_rtc.c ****   *         the calendar, which means that the calendar registers have been 
 606:./Library/stm32f4xx_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
 607:./Library/stm32f4xx_rtc.c ****   * @param  None
 608:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 609:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 610:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 611:./Library/stm32f4xx_rtc.c ****   */
 612:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_WaitForSynchro(void)
 613:./Library/stm32f4xx_rtc.c **** {
 614:./Library/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 615:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 616:./Library/stm32f4xx_rtc.c ****   uint32_t synchrostatus = 0x00;
 617:./Library/stm32f4xx_rtc.c **** 
 618:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 619:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 620:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 621:./Library/stm32f4xx_rtc.c ****     
 622:./Library/stm32f4xx_rtc.c ****   /* Clear RSF flag */
 623:./Library/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)RTC_RSF_MASK;
 624:./Library/stm32f4xx_rtc.c ****     
 625:./Library/stm32f4xx_rtc.c ****   /* Wait the registers to be synchronised */
 626:./Library/stm32f4xx_rtc.c ****   do
 627:./Library/stm32f4xx_rtc.c ****   {
 628:./Library/stm32f4xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 629:./Library/stm32f4xx_rtc.c ****     synchrocounter++;  
 630:./Library/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 631:./Library/stm32f4xx_rtc.c ****     
 632:./Library/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RSF) != RESET)
 633:./Library/stm32f4xx_rtc.c ****   {
 634:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;
 635:./Library/stm32f4xx_rtc.c ****   }
 636:./Library/stm32f4xx_rtc.c ****   else
 637:./Library/stm32f4xx_rtc.c ****   {
 638:./Library/stm32f4xx_rtc.c ****     status = ERROR;
 639:./Library/stm32f4xx_rtc.c ****   }        
 640:./Library/stm32f4xx_rtc.c **** 
 641:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 642:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 643:./Library/stm32f4xx_rtc.c ****     
 644:./Library/stm32f4xx_rtc.c ****   return (status); 
 645:./Library/stm32f4xx_rtc.c **** }
 646:./Library/stm32f4xx_rtc.c **** 
 647:./Library/stm32f4xx_rtc.c **** /**
 648:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC reference clock detection.
 649:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the RTC reference clock.
 650:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 651:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 652:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC reference clock detection is enabled
 653:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC reference clock detection is disabled  
 654:./Library/stm32f4xx_rtc.c ****   */
 655:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_RefClockCmd(FunctionalState NewState)
 656:./Library/stm32f4xx_rtc.c **** { 
 657:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 13


 658:./Library/stm32f4xx_rtc.c ****   
 659:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 660:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 661:./Library/stm32f4xx_rtc.c ****   
 662:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 663:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 664:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 665:./Library/stm32f4xx_rtc.c ****     
 666:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 667:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 668:./Library/stm32f4xx_rtc.c ****   {
 669:./Library/stm32f4xx_rtc.c ****     status = ERROR;
 670:./Library/stm32f4xx_rtc.c ****   } 
 671:./Library/stm32f4xx_rtc.c ****   else
 672:./Library/stm32f4xx_rtc.c ****   {  
 673:./Library/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
 674:./Library/stm32f4xx_rtc.c ****     {
 675:./Library/stm32f4xx_rtc.c ****       /* Enable the RTC reference clock detection */
 676:./Library/stm32f4xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 677:./Library/stm32f4xx_rtc.c ****     }
 678:./Library/stm32f4xx_rtc.c ****     else
 679:./Library/stm32f4xx_rtc.c ****     {
 680:./Library/stm32f4xx_rtc.c ****       /* Disable the RTC reference clock detection */
 681:./Library/stm32f4xx_rtc.c ****       RTC->CR &= ~RTC_CR_REFCKON;    
 682:./Library/stm32f4xx_rtc.c ****     }
 683:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 684:./Library/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 685:./Library/stm32f4xx_rtc.c ****     
 686:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;
 687:./Library/stm32f4xx_rtc.c ****   }
 688:./Library/stm32f4xx_rtc.c ****   
 689:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 690:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 691:./Library/stm32f4xx_rtc.c ****   
 692:./Library/stm32f4xx_rtc.c ****   return status; 
 693:./Library/stm32f4xx_rtc.c **** }
 694:./Library/stm32f4xx_rtc.c **** 
 695:./Library/stm32f4xx_rtc.c **** /**
 696:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Bypass Shadow feature.
 697:./Library/stm32f4xx_rtc.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
 698:./Library/stm32f4xx_rtc.c ****   *         directly from the Calendar counter.
 699:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Bypass Shadow feature.
 700:./Library/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
 701:./Library/stm32f4xx_rtc.c ****   * @retval None
 702:./Library/stm32f4xx_rtc.c **** */
 703:./Library/stm32f4xx_rtc.c **** void RTC_BypassShadowCmd(FunctionalState NewState)
 704:./Library/stm32f4xx_rtc.c **** {
 705:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 706:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 707:./Library/stm32f4xx_rtc.c **** 
 708:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 709:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 710:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 711:./Library/stm32f4xx_rtc.c ****   
 712:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 713:./Library/stm32f4xx_rtc.c ****   {
 714:./Library/stm32f4xx_rtc.c ****     /* Set the BYPSHAD bit */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 14


 715:./Library/stm32f4xx_rtc.c ****     RTC->CR |= (uint8_t)RTC_CR_BYPSHAD;
 716:./Library/stm32f4xx_rtc.c ****   }
 717:./Library/stm32f4xx_rtc.c ****   else
 718:./Library/stm32f4xx_rtc.c ****   {
 719:./Library/stm32f4xx_rtc.c ****     /* Reset the BYPSHAD bit */
 720:./Library/stm32f4xx_rtc.c ****     RTC->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 721:./Library/stm32f4xx_rtc.c ****   }
 722:./Library/stm32f4xx_rtc.c **** 
 723:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 724:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 725:./Library/stm32f4xx_rtc.c **** }
 726:./Library/stm32f4xx_rtc.c **** 
 727:./Library/stm32f4xx_rtc.c **** /**
 728:./Library/stm32f4xx_rtc.c ****   * @}
 729:./Library/stm32f4xx_rtc.c ****   */
 730:./Library/stm32f4xx_rtc.c **** 
 731:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group2 Time and Date configuration functions
 732:./Library/stm32f4xx_rtc.c ****  *  @brief   Time and Date configuration functions 
 733:./Library/stm32f4xx_rtc.c ****  *
 734:./Library/stm32f4xx_rtc.c **** @verbatim   
 735:./Library/stm32f4xx_rtc.c ****  ===============================================================================
 736:./Library/stm32f4xx_rtc.c ****                  ##### Time and Date configuration functions #####
 737:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
 738:./Library/stm32f4xx_rtc.c ****  
 739:./Library/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to program and read the RTC Calendar
 740:./Library/stm32f4xx_rtc.c ****       (Time and Date).
 741:./Library/stm32f4xx_rtc.c **** 
 742:./Library/stm32f4xx_rtc.c **** @endverbatim
 743:./Library/stm32f4xx_rtc.c ****   * @{
 744:./Library/stm32f4xx_rtc.c ****   */
 745:./Library/stm32f4xx_rtc.c **** 
 746:./Library/stm32f4xx_rtc.c **** /**
 747:./Library/stm32f4xx_rtc.c ****   * @brief  Set the RTC current time.
 748:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 749:./Library/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 750:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 751:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 752:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that contains 
 753:./Library/stm32f4xx_rtc.c ****   *                        the time configuration information for the RTC.     
 754:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 755:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 756:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Time register is not configured
 757:./Library/stm32f4xx_rtc.c ****   */
 758:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 759:./Library/stm32f4xx_rtc.c **** {
 760:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 761:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 762:./Library/stm32f4xx_rtc.c ****     
 763:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 764:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 765:./Library/stm32f4xx_rtc.c ****   
 766:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 767:./Library/stm32f4xx_rtc.c ****   {
 768:./Library/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 769:./Library/stm32f4xx_rtc.c ****     {
 770:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_TimeStruct->RTC_Hours));
 771:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 15


 772:./Library/stm32f4xx_rtc.c ****     } 
 773:./Library/stm32f4xx_rtc.c ****     else
 774:./Library/stm32f4xx_rtc.c ****     {
 775:./Library/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 776:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 777:./Library/stm32f4xx_rtc.c ****     }
 778:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_TimeStruct->RTC_Minutes));
 779:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_TimeStruct->RTC_Seconds));
 780:./Library/stm32f4xx_rtc.c ****   }
 781:./Library/stm32f4xx_rtc.c ****   else
 782:./Library/stm32f4xx_rtc.c ****   {
 783:./Library/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 784:./Library/stm32f4xx_rtc.c ****     {
 785:./Library/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 786:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 787:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12)); 
 788:./Library/stm32f4xx_rtc.c ****     } 
 789:./Library/stm32f4xx_rtc.c ****     else
 790:./Library/stm32f4xx_rtc.c ****     {
 791:./Library/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 792:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 793:./Library/stm32f4xx_rtc.c ****     }
 794:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes)));
 795:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
 796:./Library/stm32f4xx_rtc.c ****   }
 797:./Library/stm32f4xx_rtc.c ****   
 798:./Library/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 799:./Library/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 800:./Library/stm32f4xx_rtc.c ****   {
 801:./Library/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 802:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 803:./Library/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 804:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 805:./Library/stm32f4xx_rtc.c ****   }  
 806:./Library/stm32f4xx_rtc.c ****   else
 807:./Library/stm32f4xx_rtc.c ****   {
 808:./Library/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 809:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 810:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 811:./Library/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 812:./Library/stm32f4xx_rtc.c ****   }  
 813:./Library/stm32f4xx_rtc.c **** 
 814:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 815:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 816:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 817:./Library/stm32f4xx_rtc.c **** 
 818:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 819:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 820:./Library/stm32f4xx_rtc.c ****   {
 821:./Library/stm32f4xx_rtc.c ****     status = ERROR;
 822:./Library/stm32f4xx_rtc.c ****   } 
 823:./Library/stm32f4xx_rtc.c ****   else
 824:./Library/stm32f4xx_rtc.c ****   {
 825:./Library/stm32f4xx_rtc.c ****     /* Set the RTC_TR register */
 826:./Library/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 827:./Library/stm32f4xx_rtc.c **** 
 828:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 16


 829:./Library/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 830:./Library/stm32f4xx_rtc.c **** 
 831:./Library/stm32f4xx_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 832:./Library/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_BYPSHAD) == RESET)
 833:./Library/stm32f4xx_rtc.c ****     {
 834:./Library/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 835:./Library/stm32f4xx_rtc.c ****     {
 836:./Library/stm32f4xx_rtc.c ****       status = ERROR;
 837:./Library/stm32f4xx_rtc.c ****     }
 838:./Library/stm32f4xx_rtc.c ****     else
 839:./Library/stm32f4xx_rtc.c ****     {
 840:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
 841:./Library/stm32f4xx_rtc.c ****     }
 842:./Library/stm32f4xx_rtc.c ****   }
 843:./Library/stm32f4xx_rtc.c ****     else
 844:./Library/stm32f4xx_rtc.c ****     {
 845:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
 846:./Library/stm32f4xx_rtc.c ****     }
 847:./Library/stm32f4xx_rtc.c ****   }
 848:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 849:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 850:./Library/stm32f4xx_rtc.c ****     
 851:./Library/stm32f4xx_rtc.c ****   return status;
 852:./Library/stm32f4xx_rtc.c **** }
 853:./Library/stm32f4xx_rtc.c **** 
 854:./Library/stm32f4xx_rtc.c **** /**
 855:./Library/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_TimeStruct member with its default value
 856:./Library/stm32f4xx_rtc.c ****   *         (Time = 00h:00min:00sec).
 857:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure which will be 
 858:./Library/stm32f4xx_rtc.c ****   *         initialized.
 859:./Library/stm32f4xx_rtc.c ****   * @retval None
 860:./Library/stm32f4xx_rtc.c ****   */
 861:./Library/stm32f4xx_rtc.c **** void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct)
 862:./Library/stm32f4xx_rtc.c **** {
 863:./Library/stm32f4xx_rtc.c ****   /* Time = 00h:00min:00sec */
 864:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
 865:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 866:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 867:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 868:./Library/stm32f4xx_rtc.c **** }
 869:./Library/stm32f4xx_rtc.c **** 
 870:./Library/stm32f4xx_rtc.c **** /**
 871:./Library/stm32f4xx_rtc.c ****   * @brief  Get the RTC current Time.
 872:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
 873:./Library/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 874:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 875:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 876:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that will 
 877:./Library/stm32f4xx_rtc.c ****   *                        contain the returned current time configuration.     
 878:./Library/stm32f4xx_rtc.c ****   * @retval None
 879:./Library/stm32f4xx_rtc.c ****   */
 880:./Library/stm32f4xx_rtc.c **** void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 881:./Library/stm32f4xx_rtc.c **** {
 882:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 883:./Library/stm32f4xx_rtc.c **** 
 884:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 885:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 17


 886:./Library/stm32f4xx_rtc.c **** 
 887:./Library/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
 888:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 889:./Library/stm32f4xx_rtc.c ****   
 890:./Library/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
 891:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 892:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 893:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 894:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 895:./Library/stm32f4xx_rtc.c **** 
 896:./Library/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 897:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 898:./Library/stm32f4xx_rtc.c ****   {
 899:./Library/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
 900:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 901:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 902:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 903:./Library/stm32f4xx_rtc.c ****   }
 904:./Library/stm32f4xx_rtc.c **** }
 905:./Library/stm32f4xx_rtc.c **** 
 906:./Library/stm32f4xx_rtc.c **** /**
 907:./Library/stm32f4xx_rtc.c ****   * @brief  Gets the RTC current Calendar Sub seconds value.
 908:./Library/stm32f4xx_rtc.c ****   * @note   This function freeze the Time and Date registers after reading the 
 909:./Library/stm32f4xx_rtc.c ****   *         SSR register.
 910:./Library/stm32f4xx_rtc.c ****   * @param  None
 911:./Library/stm32f4xx_rtc.c ****   * @retval RTC current Calendar Sub seconds value.
 912:./Library/stm32f4xx_rtc.c ****   */
 913:./Library/stm32f4xx_rtc.c **** uint32_t RTC_GetSubSecond(void)
 914:./Library/stm32f4xx_rtc.c **** {
 915:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 916:./Library/stm32f4xx_rtc.c ****   
 917:./Library/stm32f4xx_rtc.c ****   /* Get sub seconds values from the correspondent registers*/
 918:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->SSR);
 919:./Library/stm32f4xx_rtc.c ****   
 920:./Library/stm32f4xx_rtc.c ****   /* Read DR register to unfroze calendar registers */
 921:./Library/stm32f4xx_rtc.c ****   (void) (RTC->DR);
 922:./Library/stm32f4xx_rtc.c ****   
 923:./Library/stm32f4xx_rtc.c ****   return (tmpreg);
 924:./Library/stm32f4xx_rtc.c **** }
 925:./Library/stm32f4xx_rtc.c **** 
 926:./Library/stm32f4xx_rtc.c **** /**
 927:./Library/stm32f4xx_rtc.c ****   * @brief  Set the RTC current date.
 928:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 929:./Library/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 930:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 931:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 932:./Library/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains 
 933:./Library/stm32f4xx_rtc.c ****   *                         the date configuration information for the RTC.
 934:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 935:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Date register is configured
 936:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Date register is not configured
 937:./Library/stm32f4xx_rtc.c ****   */
 938:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
 939:./Library/stm32f4xx_rtc.c **** {
 940:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 941:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 942:./Library/stm32f4xx_rtc.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 18


 943:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 944:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 945:./Library/stm32f4xx_rtc.c **** 
 946:./Library/stm32f4xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 947:./Library/stm32f4xx_rtc.c ****   {
 948:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
 949:./Library/stm32f4xx_rtc.c ****   }  
 950:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 951:./Library/stm32f4xx_rtc.c ****   {
 952:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_DateStruct->RTC_Year));
 953:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_DateStruct->RTC_Month));
 954:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(RTC_DateStruct->RTC_Date));
 955:./Library/stm32f4xx_rtc.c ****   }
 956:./Library/stm32f4xx_rtc.c ****   else
 957:./Library/stm32f4xx_rtc.c ****   {
 958:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year)));
 959:./Library/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 960:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(tmpreg));
 961:./Library/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 962:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(tmpreg));
 963:./Library/stm32f4xx_rtc.c ****   }
 964:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WEEKDAY(RTC_DateStruct->RTC_WeekDay));
 965:./Library/stm32f4xx_rtc.c **** 
 966:./Library/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 967:./Library/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 968:./Library/stm32f4xx_rtc.c ****   {
 969:./Library/stm32f4xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 970:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 971:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 972:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 973:./Library/stm32f4xx_rtc.c ****   }  
 974:./Library/stm32f4xx_rtc.c ****   else
 975:./Library/stm32f4xx_rtc.c ****   {
 976:./Library/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 977:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 978:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 979:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 980:./Library/stm32f4xx_rtc.c ****   }
 981:./Library/stm32f4xx_rtc.c **** 
 982:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 983:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 984:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 985:./Library/stm32f4xx_rtc.c **** 
 986:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 987:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 988:./Library/stm32f4xx_rtc.c ****   {
 989:./Library/stm32f4xx_rtc.c ****     status = ERROR;
 990:./Library/stm32f4xx_rtc.c ****   } 
 991:./Library/stm32f4xx_rtc.c ****   else
 992:./Library/stm32f4xx_rtc.c ****   {
 993:./Library/stm32f4xx_rtc.c ****     /* Set the RTC_DR register */
 994:./Library/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)(tmpreg & RTC_DR_RESERVED_MASK);
 995:./Library/stm32f4xx_rtc.c **** 
 996:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 997:./Library/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 998:./Library/stm32f4xx_rtc.c **** 
 999:./Library/stm32f4xx_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 19


1000:./Library/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_BYPSHAD) == RESET)
1001:./Library/stm32f4xx_rtc.c ****     {
1002:./Library/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
1003:./Library/stm32f4xx_rtc.c ****     {
1004:./Library/stm32f4xx_rtc.c ****       status = ERROR;
1005:./Library/stm32f4xx_rtc.c ****     }
1006:./Library/stm32f4xx_rtc.c ****     else
1007:./Library/stm32f4xx_rtc.c ****     {
1008:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
1009:./Library/stm32f4xx_rtc.c ****     }
1010:./Library/stm32f4xx_rtc.c ****   }
1011:./Library/stm32f4xx_rtc.c ****     else
1012:./Library/stm32f4xx_rtc.c ****     {
1013:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
1014:./Library/stm32f4xx_rtc.c ****     }
1015:./Library/stm32f4xx_rtc.c ****   }
1016:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1017:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
1018:./Library/stm32f4xx_rtc.c ****   
1019:./Library/stm32f4xx_rtc.c ****   return status;
1020:./Library/stm32f4xx_rtc.c **** }
1021:./Library/stm32f4xx_rtc.c **** 
1022:./Library/stm32f4xx_rtc.c **** /**
1023:./Library/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_DateStruct member with its default value
1024:./Library/stm32f4xx_rtc.c ****   *         (Monday, January 01 xx00).
1025:./Library/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure which will be 
1026:./Library/stm32f4xx_rtc.c ****   *         initialized.
1027:./Library/stm32f4xx_rtc.c ****   * @retval None
1028:./Library/stm32f4xx_rtc.c ****   */
1029:./Library/stm32f4xx_rtc.c **** void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct)
1030:./Library/stm32f4xx_rtc.c **** {
1031:./Library/stm32f4xx_rtc.c ****   /* Monday, January 01 xx00 */
1032:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
1033:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
1034:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
1035:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
1036:./Library/stm32f4xx_rtc.c **** }
1037:./Library/stm32f4xx_rtc.c **** 
1038:./Library/stm32f4xx_rtc.c **** /**
1039:./Library/stm32f4xx_rtc.c ****   * @brief  Get the RTC current date. 
1040:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1041:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1042:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1043:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1044:./Library/stm32f4xx_rtc.c ****   * @param RTC_DateStruct: pointer to a RTC_DateTypeDef structure that will 
1045:./Library/stm32f4xx_rtc.c ****   *                        contain the returned current date configuration.     
1046:./Library/stm32f4xx_rtc.c ****   * @retval None
1047:./Library/stm32f4xx_rtc.c ****   */
1048:./Library/stm32f4xx_rtc.c **** void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
1049:./Library/stm32f4xx_rtc.c **** {
1050:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1051:./Library/stm32f4xx_rtc.c **** 
1052:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1053:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1054:./Library/stm32f4xx_rtc.c ****   
1055:./Library/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
1056:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 20


1057:./Library/stm32f4xx_rtc.c **** 
1058:./Library/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
1059:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
1060:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
1061:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
1062:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
1063:./Library/stm32f4xx_rtc.c **** 
1064:./Library/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1065:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1066:./Library/stm32f4xx_rtc.c ****   {
1067:./Library/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
1068:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
1069:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
1070:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
1071:./Library/stm32f4xx_rtc.c ****   }
1072:./Library/stm32f4xx_rtc.c **** }
1073:./Library/stm32f4xx_rtc.c **** 
1074:./Library/stm32f4xx_rtc.c **** /**
1075:./Library/stm32f4xx_rtc.c ****   * @}
1076:./Library/stm32f4xx_rtc.c ****   */
1077:./Library/stm32f4xx_rtc.c **** 
1078:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group3 Alarms configuration functions
1079:./Library/stm32f4xx_rtc.c ****  *  @brief   Alarms (Alarm A and Alarm B) configuration functions 
1080:./Library/stm32f4xx_rtc.c ****  *
1081:./Library/stm32f4xx_rtc.c **** @verbatim   
1082:./Library/stm32f4xx_rtc.c ****  ===============================================================================
1083:./Library/stm32f4xx_rtc.c ****          ##### Alarms A and B configuration functions #####
1084:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
1085:./Library/stm32f4xx_rtc.c ****  
1086:./Library/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to program and read the RTC Alarms.
1087:./Library/stm32f4xx_rtc.c **** 
1088:./Library/stm32f4xx_rtc.c **** @endverbatim
1089:./Library/stm32f4xx_rtc.c ****   * @{
1090:./Library/stm32f4xx_rtc.c ****   */
1091:./Library/stm32f4xx_rtc.c **** 
1092:./Library/stm32f4xx_rtc.c **** /**
1093:./Library/stm32f4xx_rtc.c ****   * @brief  Set the specified RTC Alarm.
1094:./Library/stm32f4xx_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1095:./Library/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_AlarmCmd(DISABLE)).    
1096:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1097:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1098:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1099:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1100:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1101:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1102:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1103:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1104:./Library/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that 
1105:./Library/stm32f4xx_rtc.c ****   *                          contains the alarm configuration parameters.     
1106:./Library/stm32f4xx_rtc.c ****   * @retval None
1107:./Library/stm32f4xx_rtc.c ****   */
1108:./Library/stm32f4xx_rtc.c **** void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1109:./Library/stm32f4xx_rtc.c **** {
1110:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1111:./Library/stm32f4xx_rtc.c ****   
1112:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1113:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 21


1114:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1115:./Library/stm32f4xx_rtc.c ****   assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
1116:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
1117:./Library/stm32f4xx_rtc.c **** 
1118:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1119:./Library/stm32f4xx_rtc.c ****   {
1120:./Library/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
1121:./Library/stm32f4xx_rtc.c ****     {
1122:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1123:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1124:./Library/stm32f4xx_rtc.c ****     } 
1125:./Library/stm32f4xx_rtc.c ****     else
1126:./Library/stm32f4xx_rtc.c ****     {
1127:./Library/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
1128:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1129:./Library/stm32f4xx_rtc.c ****     }
1130:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes));
1131:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
1132:./Library/stm32f4xx_rtc.c ****     
1133:./Library/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1134:./Library/stm32f4xx_rtc.c ****     {
1135:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1136:./Library/stm32f4xx_rtc.c ****     }
1137:./Library/stm32f4xx_rtc.c ****     else
1138:./Library/stm32f4xx_rtc.c ****     {
1139:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1140:./Library/stm32f4xx_rtc.c ****     }
1141:./Library/stm32f4xx_rtc.c ****   }
1142:./Library/stm32f4xx_rtc.c ****   else
1143:./Library/stm32f4xx_rtc.c ****   {
1144:./Library/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
1145:./Library/stm32f4xx_rtc.c ****     {
1146:./Library/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours);
1147:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1148:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1149:./Library/stm32f4xx_rtc.c ****     } 
1150:./Library/stm32f4xx_rtc.c ****     else
1151:./Library/stm32f4xx_rtc.c ****     {
1152:./Library/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
1153:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
1154:./Library/stm32f4xx_rtc.c ****     }
1155:./Library/stm32f4xx_rtc.c ****     
1156:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes)));
1157:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
1158:./Library/stm32f4xx_rtc.c ****     
1159:./Library/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1160:./Library/stm32f4xx_rtc.c ****     {
1161:./Library/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1162:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1163:./Library/stm32f4xx_rtc.c ****     }
1164:./Library/stm32f4xx_rtc.c ****     else
1165:./Library/stm32f4xx_rtc.c ****     {
1166:./Library/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1167:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1168:./Library/stm32f4xx_rtc.c ****     }    
1169:./Library/stm32f4xx_rtc.c ****   }
1170:./Library/stm32f4xx_rtc.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 22


1171:./Library/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1172:./Library/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
1173:./Library/stm32f4xx_rtc.c ****   {
1174:./Library/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
1175:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
1176:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
1177:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
1178:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
1179:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
1180:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
1181:./Library/stm32f4xx_rtc.c ****   }  
1182:./Library/stm32f4xx_rtc.c ****   else
1183:./Library/stm32f4xx_rtc.c ****   {
1184:./Library/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
1185:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
1186:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
1187:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
1188:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
1189:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
1190:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
1191:./Library/stm32f4xx_rtc.c ****   } 
1192:./Library/stm32f4xx_rtc.c **** 
1193:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1194:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1195:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1196:./Library/stm32f4xx_rtc.c **** 
1197:./Library/stm32f4xx_rtc.c ****   /* Configure the Alarm register */
1198:./Library/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1199:./Library/stm32f4xx_rtc.c ****   {
1200:./Library/stm32f4xx_rtc.c ****     RTC->ALRMAR = (uint32_t)tmpreg;
1201:./Library/stm32f4xx_rtc.c ****   }
1202:./Library/stm32f4xx_rtc.c ****   else
1203:./Library/stm32f4xx_rtc.c ****   {
1204:./Library/stm32f4xx_rtc.c ****     RTC->ALRMBR = (uint32_t)tmpreg;
1205:./Library/stm32f4xx_rtc.c ****   }
1206:./Library/stm32f4xx_rtc.c **** 
1207:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1208:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
1209:./Library/stm32f4xx_rtc.c **** }
1210:./Library/stm32f4xx_rtc.c **** 
1211:./Library/stm32f4xx_rtc.c **** /**
1212:./Library/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_AlarmStruct member with its default value
1213:./Library/stm32f4xx_rtc.c ****   *         (Time = 00h:00mn:00sec / Date = 1st day of the month/Mask =
1214:./Library/stm32f4xx_rtc.c ****   *         all fields are masked).
1215:./Library/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a @ref RTC_AlarmTypeDef structure which
1216:./Library/stm32f4xx_rtc.c ****   *         will be initialized.
1217:./Library/stm32f4xx_rtc.c ****   * @retval None
1218:./Library/stm32f4xx_rtc.c ****   */
1219:./Library/stm32f4xx_rtc.c **** void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct)
1220:./Library/stm32f4xx_rtc.c **** {
1221:./Library/stm32f4xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
1222:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
1223:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
1224:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
1225:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
1226:./Library/stm32f4xx_rtc.c **** 
1227:./Library/stm32f4xx_rtc.c ****   /* Alarm Date Settings : Date = 1st day of the month */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 23


1228:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
1229:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
1230:./Library/stm32f4xx_rtc.c **** 
1231:./Library/stm32f4xx_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
1232:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
1233:./Library/stm32f4xx_rtc.c **** }
1234:./Library/stm32f4xx_rtc.c **** 
1235:./Library/stm32f4xx_rtc.c **** /**
1236:./Library/stm32f4xx_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1237:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1238:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1239:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1240:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1241:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1242:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1243:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1244:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1245:./Library/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that will 
1246:./Library/stm32f4xx_rtc.c ****   *                          contains the output alarm configuration values.     
1247:./Library/stm32f4xx_rtc.c ****   * @retval None
1248:./Library/stm32f4xx_rtc.c ****   */
1249:./Library/stm32f4xx_rtc.c **** void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1250:./Library/stm32f4xx_rtc.c **** {
1251:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1252:./Library/stm32f4xx_rtc.c **** 
1253:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1254:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1255:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm)); 
1256:./Library/stm32f4xx_rtc.c **** 
1257:./Library/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1258:./Library/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1259:./Library/stm32f4xx_rtc.c ****   {
1260:./Library/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMAR);
1261:./Library/stm32f4xx_rtc.c ****   }
1262:./Library/stm32f4xx_rtc.c ****   else
1263:./Library/stm32f4xx_rtc.c ****   {
1264:./Library/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMBR);
1265:./Library/stm32f4xx_rtc.c ****   }
1266:./Library/stm32f4xx_rtc.c **** 
1267:./Library/stm32f4xx_rtc.c ****   /* Fill the structure with the read parameters */
1268:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
1269:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
1270:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
1271:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
1272:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
1273:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
1274:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
1275:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
1276:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1277:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
1278:./Library/stm32f4xx_rtc.c **** 
1279:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1280:./Library/stm32f4xx_rtc.c ****   {
1281:./Library/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1282:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
1283:./Library/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1284:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 24


1285:./Library/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1286:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
1287:./Library/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1288:./Library/stm32f4xx_rtc.c ****   }  
1289:./Library/stm32f4xx_rtc.c **** }
1290:./Library/stm32f4xx_rtc.c **** 
1291:./Library/stm32f4xx_rtc.c **** /**
1292:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC Alarm.
1293:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1294:./Library/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
1295:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1296:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1297:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified alarm.
1298:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1299:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1300:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Alarm is enabled/disabled
1301:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Alarm is not enabled/disabled  
1302:./Library/stm32f4xx_rtc.c ****   */
1303:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_AlarmCmd(uint32_t RTC_Alarm, FunctionalState NewState)
1304:./Library/stm32f4xx_rtc.c **** {
1305:./Library/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
1306:./Library/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
1307:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1308:./Library/stm32f4xx_rtc.c ****     
1309:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1310:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CMD_ALARM(RTC_Alarm));
1311:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1312:./Library/stm32f4xx_rtc.c **** 
1313:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1314:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1315:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1316:./Library/stm32f4xx_rtc.c **** 
1317:./Library/stm32f4xx_rtc.c ****   /* Configure the Alarm state */
1318:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1319:./Library/stm32f4xx_rtc.c ****   {
1320:./Library/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
1321:./Library/stm32f4xx_rtc.c **** 
1322:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;    
1323:./Library/stm32f4xx_rtc.c ****   }
1324:./Library/stm32f4xx_rtc.c ****   else
1325:./Library/stm32f4xx_rtc.c ****   { 
1326:./Library/stm32f4xx_rtc.c ****     /* Disable the Alarm in RTC_CR register */
1327:./Library/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_Alarm;
1328:./Library/stm32f4xx_rtc.c ****    
1329:./Library/stm32f4xx_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1330:./Library/stm32f4xx_rtc.c ****     do
1331:./Library/stm32f4xx_rtc.c ****     {
1332:./Library/stm32f4xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
1333:./Library/stm32f4xx_rtc.c ****       alarmcounter++;  
1334:./Library/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
1335:./Library/stm32f4xx_rtc.c ****     
1336:./Library/stm32f4xx_rtc.c ****     if ((RTC->ISR & (RTC_Alarm >> 8)) == RESET)
1337:./Library/stm32f4xx_rtc.c ****     {
1338:./Library/stm32f4xx_rtc.c ****       status = ERROR;
1339:./Library/stm32f4xx_rtc.c ****     } 
1340:./Library/stm32f4xx_rtc.c ****     else
1341:./Library/stm32f4xx_rtc.c ****     {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 25


1342:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
1343:./Library/stm32f4xx_rtc.c ****     }        
1344:./Library/stm32f4xx_rtc.c ****   } 
1345:./Library/stm32f4xx_rtc.c **** 
1346:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1347:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1348:./Library/stm32f4xx_rtc.c ****   
1349:./Library/stm32f4xx_rtc.c ****   return status;
1350:./Library/stm32f4xx_rtc.c **** }
1351:./Library/stm32f4xx_rtc.c **** 
1352:./Library/stm32f4xx_rtc.c **** /**
1353:./Library/stm32f4xx_rtc.c ****   * @brief  Configure the RTC AlarmA/B Sub seconds value and mask.*
1354:./Library/stm32f4xx_rtc.c ****   * @note   This function is performed only when the Alarm is disabled. 
1355:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1356:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1357:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1358:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1359:./Library/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondValue: specifies the Sub seconds value.
1360:./Library/stm32f4xx_rtc.c ****   *   This parameter can be a value from 0 to 0x00007FFF.
1361:./Library/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondMask:  specifies the Sub seconds Mask.
1362:./Library/stm32f4xx_rtc.c ****   *   This parameter can be any combination of the following values:
1363:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_All    : All Alarm SS fields are masked.
1364:./Library/stm32f4xx_rtc.c ****   *                                          There is no comparison on sub seconds for Alarm.
1365:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_1 : SS[14:1] are don't care in Alarm comparison.
1366:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[0] is compared
1367:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_2 : SS[14:2] are don't care in Alarm comparison.
1368:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[1:0] are compared
1369:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_3 : SS[14:3] are don't care in Alarm comparison.
1370:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[2:0] are compared
1371:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_4 : SS[14:4] are don't care in Alarm comparison.
1372:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[3:0] are compared
1373:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_5 : SS[14:5] are don't care in Alarm comparison.
1374:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[4:0] are compared
1375:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_6 : SS[14:6] are don't care in Alarm comparison.
1376:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[5:0] are compared
1377:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_7 : SS[14:7] are don't care in Alarm comparison.
1378:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[6:0] are compared
1379:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_8 : SS[14:8] are don't care in Alarm comparison.
1380:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[7:0] are compared
1381:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_9 : SS[14:9] are don't care in Alarm comparison.
1382:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[8:0] are compared
1383:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_10: SS[14:10] are don't care in Alarm comparison.
1384:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[9:0] are compared
1385:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_11: SS[14:11] are don't care in Alarm comparison.
1386:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[10:0] are compared
1387:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_12: SS[14:12] are don't care in Alarm comparison.
1388:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[11:0] are compared
1389:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_13: SS[14:13] are don't care in Alarm comparison.
1390:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[12:0] are compared
1391:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14   : SS[14] is don't care in Alarm comparison.
1392:./Library/stm32f4xx_rtc.c ****   *                                          Only SS[13:0] are compared
1393:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_None   : SS[14:0] are compared and must match
1394:./Library/stm32f4xx_rtc.c ****   *                                          to activate alarm
1395:./Library/stm32f4xx_rtc.c ****   * @retval None
1396:./Library/stm32f4xx_rtc.c ****   */
1397:./Library/stm32f4xx_rtc.c **** void RTC_AlarmSubSecondConfig(uint32_t RTC_Alarm, uint32_t RTC_AlarmSubSecondValue, uint32_t RTC_Al
1398:./Library/stm32f4xx_rtc.c **** {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 26


1399:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1400:./Library/stm32f4xx_rtc.c **** 
1401:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1402:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1403:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(RTC_AlarmSubSecondValue));
1404:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(RTC_AlarmSubSecondMask));
1405:./Library/stm32f4xx_rtc.c ****   
1406:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1407:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1408:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1409:./Library/stm32f4xx_rtc.c ****   
1410:./Library/stm32f4xx_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1411:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t) (uint32_t)(RTC_AlarmSubSecondValue) | (uint32_t)(RTC_AlarmSubSecondMask);
1412:./Library/stm32f4xx_rtc.c ****   
1413:./Library/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1414:./Library/stm32f4xx_rtc.c ****   {
1415:./Library/stm32f4xx_rtc.c ****     /* Configure the Alarm A Sub Second register */
1416:./Library/stm32f4xx_rtc.c ****     RTC->ALRMASSR = tmpreg;
1417:./Library/stm32f4xx_rtc.c ****   }
1418:./Library/stm32f4xx_rtc.c ****   else
1419:./Library/stm32f4xx_rtc.c ****   {
1420:./Library/stm32f4xx_rtc.c ****     /* Configure the Alarm B Sub Second register */
1421:./Library/stm32f4xx_rtc.c ****     RTC->ALRMBSSR = tmpreg;
1422:./Library/stm32f4xx_rtc.c ****   }
1423:./Library/stm32f4xx_rtc.c **** 
1424:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1425:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
1426:./Library/stm32f4xx_rtc.c **** 
1427:./Library/stm32f4xx_rtc.c **** }
1428:./Library/stm32f4xx_rtc.c **** 
1429:./Library/stm32f4xx_rtc.c **** /**
1430:./Library/stm32f4xx_rtc.c ****   * @brief  Gets the RTC Alarm Sub seconds value.
1431:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1432:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1433:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1434:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1435:./Library/stm32f4xx_rtc.c ****   * @param  None
1436:./Library/stm32f4xx_rtc.c ****   * @retval RTC Alarm Sub seconds value.
1437:./Library/stm32f4xx_rtc.c ****   */
1438:./Library/stm32f4xx_rtc.c **** uint32_t RTC_GetAlarmSubSecond(uint32_t RTC_Alarm)
1439:./Library/stm32f4xx_rtc.c **** {
1440:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1441:./Library/stm32f4xx_rtc.c ****   
1442:./Library/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1443:./Library/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1444:./Library/stm32f4xx_rtc.c ****   {
1445:./Library/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMASSR) & RTC_ALRMASSR_SS);
1446:./Library/stm32f4xx_rtc.c ****   }
1447:./Library/stm32f4xx_rtc.c ****   else
1448:./Library/stm32f4xx_rtc.c ****   {
1449:./Library/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMBSSR) & RTC_ALRMBSSR_SS);
1450:./Library/stm32f4xx_rtc.c ****   } 
1451:./Library/stm32f4xx_rtc.c ****   
1452:./Library/stm32f4xx_rtc.c ****   return (tmpreg);
1453:./Library/stm32f4xx_rtc.c **** }
1454:./Library/stm32f4xx_rtc.c **** 
1455:./Library/stm32f4xx_rtc.c **** /**
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 27


1456:./Library/stm32f4xx_rtc.c ****   * @}
1457:./Library/stm32f4xx_rtc.c ****   */
1458:./Library/stm32f4xx_rtc.c **** 
1459:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group4 WakeUp Timer configuration functions
1460:./Library/stm32f4xx_rtc.c ****  *  @brief   WakeUp Timer configuration functions 
1461:./Library/stm32f4xx_rtc.c ****  *
1462:./Library/stm32f4xx_rtc.c **** @verbatim   
1463:./Library/stm32f4xx_rtc.c ****  ===============================================================================
1464:./Library/stm32f4xx_rtc.c ****                  ##### WakeUp Timer configuration functions #####
1465:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
1466:./Library/stm32f4xx_rtc.c **** 
1467:./Library/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to program and read the RTC WakeUp.
1468:./Library/stm32f4xx_rtc.c **** 
1469:./Library/stm32f4xx_rtc.c **** @endverbatim
1470:./Library/stm32f4xx_rtc.c ****   * @{
1471:./Library/stm32f4xx_rtc.c ****   */
1472:./Library/stm32f4xx_rtc.c **** 
1473:./Library/stm32f4xx_rtc.c **** /**
1474:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup clock source.
1475:./Library/stm32f4xx_rtc.c ****   * @note   The WakeUp Clock source can only be changed when the RTC WakeUp
1476:./Library/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).      
1477:./Library/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpClock: Wakeup Clock source.
1478:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1479:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div16: RTC Wakeup Counter Clock = RTCCLK/16
1480:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div8: RTC Wakeup Counter Clock = RTCCLK/8
1481:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div4: RTC Wakeup Counter Clock = RTCCLK/4
1482:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div2: RTC Wakeup Counter Clock = RTCCLK/2
1483:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_16bits: RTC Wakeup Counter Clock = CK_SPRE
1484:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_17bits: RTC Wakeup Counter Clock = CK_SPRE
1485:./Library/stm32f4xx_rtc.c ****   * @retval None
1486:./Library/stm32f4xx_rtc.c ****   */
1487:./Library/stm32f4xx_rtc.c **** void RTC_WakeUpClockConfig(uint32_t RTC_WakeUpClock)
1488:./Library/stm32f4xx_rtc.c **** {
1489:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1490:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(RTC_WakeUpClock));
1491:./Library/stm32f4xx_rtc.c **** 
1492:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1493:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1494:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1495:./Library/stm32f4xx_rtc.c **** 
1496:./Library/stm32f4xx_rtc.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1497:./Library/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~RTC_CR_WUCKSEL;
1498:./Library/stm32f4xx_rtc.c **** 
1499:./Library/stm32f4xx_rtc.c ****   /* Configure the clock source */
1500:./Library/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_WakeUpClock;
1501:./Library/stm32f4xx_rtc.c ****   
1502:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1503:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1504:./Library/stm32f4xx_rtc.c **** }
1505:./Library/stm32f4xx_rtc.c **** 
1506:./Library/stm32f4xx_rtc.c **** /**
1507:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup counter.
1508:./Library/stm32f4xx_rtc.c ****   * @note   The RTC WakeUp counter can only be written when the RTC WakeUp
1509:./Library/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).        
1510:./Library/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpCounter: specifies the WakeUp counter.
1511:./Library/stm32f4xx_rtc.c ****   *          This parameter can be a value from 0x0000 to 0xFFFF. 
1512:./Library/stm32f4xx_rtc.c ****   * @retval None
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 28


1513:./Library/stm32f4xx_rtc.c ****   */
1514:./Library/stm32f4xx_rtc.c **** void RTC_SetWakeUpCounter(uint32_t RTC_WakeUpCounter)
1515:./Library/stm32f4xx_rtc.c **** {
1516:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1517:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(RTC_WakeUpCounter));
1518:./Library/stm32f4xx_rtc.c ****   
1519:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1520:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1521:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1522:./Library/stm32f4xx_rtc.c ****   
1523:./Library/stm32f4xx_rtc.c ****   /* Configure the Wakeup Timer counter */
1524:./Library/stm32f4xx_rtc.c ****   RTC->WUTR = (uint32_t)RTC_WakeUpCounter;
1525:./Library/stm32f4xx_rtc.c ****   
1526:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1527:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1528:./Library/stm32f4xx_rtc.c **** }
1529:./Library/stm32f4xx_rtc.c **** 
1530:./Library/stm32f4xx_rtc.c **** /**
1531:./Library/stm32f4xx_rtc.c ****   * @brief  Returns the RTC WakeUp timer counter value.
1532:./Library/stm32f4xx_rtc.c ****   * @param  None
1533:./Library/stm32f4xx_rtc.c ****   * @retval The RTC WakeUp Counter value.
1534:./Library/stm32f4xx_rtc.c ****   */
1535:./Library/stm32f4xx_rtc.c **** uint32_t RTC_GetWakeUpCounter(void)
1536:./Library/stm32f4xx_rtc.c **** {
1537:./Library/stm32f4xx_rtc.c ****   /* Get the counter value */
1538:./Library/stm32f4xx_rtc.c ****   return ((uint32_t)(RTC->WUTR & RTC_WUTR_WUT));
1539:./Library/stm32f4xx_rtc.c **** }
1540:./Library/stm32f4xx_rtc.c **** 
1541:./Library/stm32f4xx_rtc.c **** /**
1542:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC WakeUp timer.
1543:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the WakeUp timer.
1544:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1545:./Library/stm32f4xx_rtc.c ****   * @retval None
1546:./Library/stm32f4xx_rtc.c ****   */
1547:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_WakeUpCmd(FunctionalState NewState)
1548:./Library/stm32f4xx_rtc.c **** {
1549:./Library/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
1550:./Library/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
1551:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1552:./Library/stm32f4xx_rtc.c ****   
1553:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1554:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1555:./Library/stm32f4xx_rtc.c **** 
1556:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1557:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1558:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1559:./Library/stm32f4xx_rtc.c **** 
1560:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1561:./Library/stm32f4xx_rtc.c ****   {
1562:./Library/stm32f4xx_rtc.c ****     /* Enable the Wakeup Timer */
1563:./Library/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
1564:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;    
1565:./Library/stm32f4xx_rtc.c ****   }
1566:./Library/stm32f4xx_rtc.c ****   else
1567:./Library/stm32f4xx_rtc.c ****   {
1568:./Library/stm32f4xx_rtc.c ****     /* Disable the Wakeup Timer */
1569:./Library/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_WUTE;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 29


1570:./Library/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1571:./Library/stm32f4xx_rtc.c ****     do
1572:./Library/stm32f4xx_rtc.c ****     {
1573:./Library/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
1574:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
1575:./Library/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
1576:./Library/stm32f4xx_rtc.c ****     
1577:./Library/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
1578:./Library/stm32f4xx_rtc.c ****     {
1579:./Library/stm32f4xx_rtc.c ****       status = ERROR;
1580:./Library/stm32f4xx_rtc.c ****     }
1581:./Library/stm32f4xx_rtc.c ****     else
1582:./Library/stm32f4xx_rtc.c ****     {
1583:./Library/stm32f4xx_rtc.c ****       status = SUCCESS;
1584:./Library/stm32f4xx_rtc.c ****     }    
1585:./Library/stm32f4xx_rtc.c ****   }
1586:./Library/stm32f4xx_rtc.c **** 
1587:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1588:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1589:./Library/stm32f4xx_rtc.c ****   
1590:./Library/stm32f4xx_rtc.c ****   return status;
1591:./Library/stm32f4xx_rtc.c **** }
1592:./Library/stm32f4xx_rtc.c **** 
1593:./Library/stm32f4xx_rtc.c **** /**
1594:./Library/stm32f4xx_rtc.c ****   * @}
1595:./Library/stm32f4xx_rtc.c ****   */
1596:./Library/stm32f4xx_rtc.c **** 
1597:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group5 Daylight Saving configuration functions
1598:./Library/stm32f4xx_rtc.c ****  *  @brief   Daylight Saving configuration functions 
1599:./Library/stm32f4xx_rtc.c ****  *
1600:./Library/stm32f4xx_rtc.c **** @verbatim   
1601:./Library/stm32f4xx_rtc.c ****  ===============================================================================
1602:./Library/stm32f4xx_rtc.c ****               ##### Daylight Saving configuration functions #####
1603:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
1604:./Library/stm32f4xx_rtc.c **** 
1605:./Library/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to configure the RTC DayLight Saving.
1606:./Library/stm32f4xx_rtc.c **** 
1607:./Library/stm32f4xx_rtc.c **** @endverbatim
1608:./Library/stm32f4xx_rtc.c ****   * @{
1609:./Library/stm32f4xx_rtc.c ****   */
1610:./Library/stm32f4xx_rtc.c **** 
1611:./Library/stm32f4xx_rtc.c **** /**
1612:./Library/stm32f4xx_rtc.c ****   * @brief  Adds or substract one hour from the current time.
1613:./Library/stm32f4xx_rtc.c ****   * @param  RTC_DayLightSaveOperation: the value of hour adjustment. 
1614:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1615:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_SUB1H: Substract one hour (winter time)
1616:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_ADD1H: Add one hour (summer time)
1617:./Library/stm32f4xx_rtc.c ****   * @param  RTC_StoreOperation: Specifies the value to be written in the BCK bit 
1618:./Library/stm32f4xx_rtc.c ****   *                            in CR register to store the operation.
1619:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1620:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Reset: BCK Bit Reset
1621:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Set: BCK Bit Set
1622:./Library/stm32f4xx_rtc.c ****   * @retval None
1623:./Library/stm32f4xx_rtc.c ****   */
1624:./Library/stm32f4xx_rtc.c **** void RTC_DayLightSavingConfig(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation)
1625:./Library/stm32f4xx_rtc.c **** {
1626:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 30


1627:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(RTC_DayLightSaving));
1628:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(RTC_StoreOperation));
1629:./Library/stm32f4xx_rtc.c **** 
1630:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1631:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1632:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1633:./Library/stm32f4xx_rtc.c **** 
1634:./Library/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1635:./Library/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_BCK);
1636:./Library/stm32f4xx_rtc.c **** 
1637:./Library/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1638:./Library/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
1639:./Library/stm32f4xx_rtc.c **** 
1640:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1641:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1642:./Library/stm32f4xx_rtc.c **** }
1643:./Library/stm32f4xx_rtc.c **** 
1644:./Library/stm32f4xx_rtc.c **** /**
1645:./Library/stm32f4xx_rtc.c ****   * @brief  Returns the RTC Day Light Saving stored operation.
1646:./Library/stm32f4xx_rtc.c ****   * @param  None
1647:./Library/stm32f4xx_rtc.c ****   * @retval RTC Day Light Saving stored operation.
1648:./Library/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Reset
1649:./Library/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Set       
1650:./Library/stm32f4xx_rtc.c ****   */
1651:./Library/stm32f4xx_rtc.c **** uint32_t RTC_GetStoreOperation(void)
1652:./Library/stm32f4xx_rtc.c **** {
1653:./Library/stm32f4xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
1654:./Library/stm32f4xx_rtc.c **** }
1655:./Library/stm32f4xx_rtc.c **** 
1656:./Library/stm32f4xx_rtc.c **** /**
1657:./Library/stm32f4xx_rtc.c ****   * @}
1658:./Library/stm32f4xx_rtc.c ****   */
1659:./Library/stm32f4xx_rtc.c **** 
1660:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group6 Output pin Configuration function
1661:./Library/stm32f4xx_rtc.c ****  *  @brief   Output pin Configuration function 
1662:./Library/stm32f4xx_rtc.c ****  *
1663:./Library/stm32f4xx_rtc.c **** @verbatim   
1664:./Library/stm32f4xx_rtc.c ****  ===============================================================================
1665:./Library/stm32f4xx_rtc.c ****                  ##### Output pin Configuration function #####
1666:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
1667:./Library/stm32f4xx_rtc.c **** 
1668:./Library/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to configure the RTC Output source.
1669:./Library/stm32f4xx_rtc.c **** 
1670:./Library/stm32f4xx_rtc.c **** @endverbatim
1671:./Library/stm32f4xx_rtc.c ****   * @{
1672:./Library/stm32f4xx_rtc.c ****   */
1673:./Library/stm32f4xx_rtc.c **** 
1674:./Library/stm32f4xx_rtc.c **** /**
1675:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the RTC output source (AFO_ALARM).
1676:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Output: Specifies which signal will be routed to the RTC output. 
1677:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1678:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Output_Disable: No output selected
1679:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmA: signal of AlarmA mapped to output
1680:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmB: signal of AlarmB mapped to output
1681:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Output_WakeUp: signal of WakeUp mapped to output
1682:./Library/stm32f4xx_rtc.c ****   * @param  RTC_OutputPolarity: Specifies the polarity of the output signal. 
1683:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 31


1684:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_High: The output pin is high when the 
1685:./Library/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1686:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_Low: The output pin is low when the 
1687:./Library/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1688:./Library/stm32f4xx_rtc.c ****   * @retval None
1689:./Library/stm32f4xx_rtc.c ****   */
1690:./Library/stm32f4xx_rtc.c **** void RTC_OutputConfig(uint32_t RTC_Output, uint32_t RTC_OutputPolarity)
1691:./Library/stm32f4xx_rtc.c **** {
1692:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1693:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT(RTC_Output));
1694:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(RTC_OutputPolarity));
1695:./Library/stm32f4xx_rtc.c **** 
1696:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1697:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1698:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1699:./Library/stm32f4xx_rtc.c **** 
1700:./Library/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1701:./Library/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_OSEL | RTC_CR_POL);
1702:./Library/stm32f4xx_rtc.c **** 
1703:./Library/stm32f4xx_rtc.c ****   /* Configure the output selection and polarity */
1704:./Library/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
1705:./Library/stm32f4xx_rtc.c **** 
1706:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1707:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1708:./Library/stm32f4xx_rtc.c **** }
1709:./Library/stm32f4xx_rtc.c **** 
1710:./Library/stm32f4xx_rtc.c **** /**
1711:./Library/stm32f4xx_rtc.c ****   * @}
1712:./Library/stm32f4xx_rtc.c ****   */
1713:./Library/stm32f4xx_rtc.c **** 
1714:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group7 Digital Calibration configuration functions
1715:./Library/stm32f4xx_rtc.c ****  *  @brief   Coarse Calibration configuration functions 
1716:./Library/stm32f4xx_rtc.c ****  *
1717:./Library/stm32f4xx_rtc.c **** @verbatim   
1718:./Library/stm32f4xx_rtc.c ****  ===============================================================================
1719:./Library/stm32f4xx_rtc.c ****               ##### Digital Calibration configuration functions #####
1720:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
1721:./Library/stm32f4xx_rtc.c **** 
1722:./Library/stm32f4xx_rtc.c **** @endverbatim
1723:./Library/stm32f4xx_rtc.c ****   * @{
1724:./Library/stm32f4xx_rtc.c ****   */
1725:./Library/stm32f4xx_rtc.c **** 
1726:./Library/stm32f4xx_rtc.c **** /**
1727:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the Coarse calibration parameters.
1728:./Library/stm32f4xx_rtc.c ****   * @param  RTC_CalibSign: specifies the sign of the coarse calibration value.
1729:./Library/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
1730:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Positive: The value sign is positive 
1731:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Negative: The value sign is negative
1732:./Library/stm32f4xx_rtc.c ****   * @param  Value: value of coarse calibration expressed in ppm (coded on 5 bits).
1733:./Library/stm32f4xx_rtc.c ****   *    
1734:./Library/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 63 when using negative
1735:./Library/stm32f4xx_rtc.c ****   *         sign with a 2-ppm step.
1736:./Library/stm32f4xx_rtc.c ****   *           
1737:./Library/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 126 when using positive
1738:./Library/stm32f4xx_rtc.c ****   *         sign with a 4-ppm step.
1739:./Library/stm32f4xx_rtc.c ****   *           
1740:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 32


1741:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are initialized
1742:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not initialized     
1743:./Library/stm32f4xx_rtc.c ****   */
1744:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibConfig(uint32_t RTC_CalibSign, uint32_t Value)
1745:./Library/stm32f4xx_rtc.c **** {
1746:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1747:./Library/stm32f4xx_rtc.c ****    
1748:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1749:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_SIGN(RTC_CalibSign));
1750:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_VALUE(Value)); 
1751:./Library/stm32f4xx_rtc.c **** 
1752:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1753:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1754:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1755:./Library/stm32f4xx_rtc.c **** 
1756:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1757:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
1758:./Library/stm32f4xx_rtc.c ****   {
1759:./Library/stm32f4xx_rtc.c ****     status = ERROR;
1760:./Library/stm32f4xx_rtc.c ****   } 
1761:./Library/stm32f4xx_rtc.c ****   else
1762:./Library/stm32f4xx_rtc.c ****   {
1763:./Library/stm32f4xx_rtc.c ****     /* Set the coarse calibration value */
1764:./Library/stm32f4xx_rtc.c ****     RTC->CALIBR = (uint32_t)(RTC_CalibSign | Value);
1765:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1766:./Library/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
1767:./Library/stm32f4xx_rtc.c ****     
1768:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;
1769:./Library/stm32f4xx_rtc.c ****   } 
1770:./Library/stm32f4xx_rtc.c **** 
1771:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1772:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1773:./Library/stm32f4xx_rtc.c ****   
1774:./Library/stm32f4xx_rtc.c ****   return status;
1775:./Library/stm32f4xx_rtc.c **** }
1776:./Library/stm32f4xx_rtc.c **** 
1777:./Library/stm32f4xx_rtc.c **** /**
1778:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or disables the Coarse calibration process.
1779:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Coarse calibration.
1780:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1781:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1782:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are enabled/disabled
1783:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not enabled/disabled    
1784:./Library/stm32f4xx_rtc.c ****   */
1785:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibCmd(FunctionalState NewState)
1786:./Library/stm32f4xx_rtc.c **** {
1787:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1788:./Library/stm32f4xx_rtc.c ****   
1789:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1790:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1791:./Library/stm32f4xx_rtc.c **** 
1792:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1793:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1794:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1795:./Library/stm32f4xx_rtc.c ****   
1796:./Library/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1797:./Library/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 33


1798:./Library/stm32f4xx_rtc.c ****   {
1799:./Library/stm32f4xx_rtc.c ****     status =  ERROR;
1800:./Library/stm32f4xx_rtc.c ****   }
1801:./Library/stm32f4xx_rtc.c ****   else
1802:./Library/stm32f4xx_rtc.c ****   {
1803:./Library/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
1804:./Library/stm32f4xx_rtc.c ****     {
1805:./Library/stm32f4xx_rtc.c ****       /* Enable the Coarse Calibration */
1806:./Library/stm32f4xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
1807:./Library/stm32f4xx_rtc.c ****     }
1808:./Library/stm32f4xx_rtc.c ****     else
1809:./Library/stm32f4xx_rtc.c ****     { 
1810:./Library/stm32f4xx_rtc.c ****       /* Disable the Coarse Calibration */
1811:./Library/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)~RTC_CR_DCE;
1812:./Library/stm32f4xx_rtc.c ****     }
1813:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1814:./Library/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
1815:./Library/stm32f4xx_rtc.c ****     
1816:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;
1817:./Library/stm32f4xx_rtc.c ****   } 
1818:./Library/stm32f4xx_rtc.c ****   
1819:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1820:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1821:./Library/stm32f4xx_rtc.c ****   
1822:./Library/stm32f4xx_rtc.c ****   return status;
1823:./Library/stm32f4xx_rtc.c **** }
1824:./Library/stm32f4xx_rtc.c **** 
1825:./Library/stm32f4xx_rtc.c **** /**
1826:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC clock to be output through the relative pin.
1827:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the digital calibration Output.
1828:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1829:./Library/stm32f4xx_rtc.c ****   * @retval None
1830:./Library/stm32f4xx_rtc.c ****   */
1831:./Library/stm32f4xx_rtc.c **** void RTC_CalibOutputCmd(FunctionalState NewState)
1832:./Library/stm32f4xx_rtc.c **** {
1833:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1834:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1835:./Library/stm32f4xx_rtc.c ****   
1836:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1837:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1838:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1839:./Library/stm32f4xx_rtc.c ****   
1840:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1841:./Library/stm32f4xx_rtc.c ****   {
1842:./Library/stm32f4xx_rtc.c ****     /* Enable the RTC clock output */
1843:./Library/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
1844:./Library/stm32f4xx_rtc.c ****   }
1845:./Library/stm32f4xx_rtc.c ****   else
1846:./Library/stm32f4xx_rtc.c ****   { 
1847:./Library/stm32f4xx_rtc.c ****     /* Disable the RTC clock output */
1848:./Library/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
1849:./Library/stm32f4xx_rtc.c ****   }
1850:./Library/stm32f4xx_rtc.c ****   
1851:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1852:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1853:./Library/stm32f4xx_rtc.c **** }
1854:./Library/stm32f4xx_rtc.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 34


1855:./Library/stm32f4xx_rtc.c **** /**
1856:./Library/stm32f4xx_rtc.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1857:./Library/stm32f4xx_rtc.c ****   * @param  RTC_CalibOutput : Select the Calibration output Selection .
1858:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1859:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_512Hz: A signal has a regular waveform at 512Hz. 
1860:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_1Hz  : A signal has a regular waveform at 1Hz.
1861:./Library/stm32f4xx_rtc.c ****   * @retval None
1862:./Library/stm32f4xx_rtc.c **** */
1863:./Library/stm32f4xx_rtc.c **** void RTC_CalibOutputConfig(uint32_t RTC_CalibOutput)
1864:./Library/stm32f4xx_rtc.c **** {
1865:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1866:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(RTC_CalibOutput));
1867:./Library/stm32f4xx_rtc.c **** 
1868:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1869:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1870:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1871:./Library/stm32f4xx_rtc.c ****   
1872:./Library/stm32f4xx_rtc.c ****   /*clear flags before configuration */
1873:./Library/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_COSEL);
1874:./Library/stm32f4xx_rtc.c **** 
1875:./Library/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1876:./Library/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_CalibOutput;
1877:./Library/stm32f4xx_rtc.c **** 
1878:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1879:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
1880:./Library/stm32f4xx_rtc.c **** }
1881:./Library/stm32f4xx_rtc.c **** 
1882:./Library/stm32f4xx_rtc.c **** /**
1883:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the Smooth Calibration Settings.
1884:./Library/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPeriod : Select the Smooth Calibration Period.
1885:./Library/stm32f4xx_rtc.c ****   *   This parameter can be can be one of the following values:
1886:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_32sec : The smooth calibration period is 32s.
1887:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_16sec : The smooth calibration period is 16s.
1888:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_8sec  : The smooth calibration period is 8s.
1889:./Library/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPlusPulses : Select to Set or reset the CALP bit.
1890:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1891:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Set  : Add one RTCCLK pulse every 2**11 pulses.
1892:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Reset: No RTCCLK pulses are added.
1893:./Library/stm32f4xx_rtc.c ****   * @param  RTC_SmouthCalibMinusPulsesValue: Select the value of CALM[8:0] bits.
1894:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one any value from 0 to 0x000001FF.
1895:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1896:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Calib registers are configured
1897:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Calib registers are not configured
1898:./Library/stm32f4xx_rtc.c **** */
1899:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_SmoothCalibConfig(uint32_t RTC_SmoothCalibPeriod,
1900:./Library/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmoothCalibPlusPulses,
1901:./Library/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmouthCalibMinusPulsesValue)
1902:./Library/stm32f4xx_rtc.c **** {
1903:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1904:./Library/stm32f4xx_rtc.c ****   uint32_t recalpfcount = 0;
1905:./Library/stm32f4xx_rtc.c **** 
1906:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1907:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(RTC_SmoothCalibPeriod));
1908:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(RTC_SmoothCalibPlusPulses));
1909:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(RTC_SmouthCalibMinusPulsesValue));
1910:./Library/stm32f4xx_rtc.c **** 
1911:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 35


1912:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1913:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1914:./Library/stm32f4xx_rtc.c ****   
1915:./Library/stm32f4xx_rtc.c ****   /* check if a calibration is pending*/
1916:./Library/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) != RESET)
1917:./Library/stm32f4xx_rtc.c ****   {
1918:./Library/stm32f4xx_rtc.c ****     /* wait until the Calibration is completed*/
1919:./Library/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_RECALPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
1920:./Library/stm32f4xx_rtc.c ****     {
1921:./Library/stm32f4xx_rtc.c ****       recalpfcount++;
1922:./Library/stm32f4xx_rtc.c ****     }
1923:./Library/stm32f4xx_rtc.c ****   }
1924:./Library/stm32f4xx_rtc.c **** 
1925:./Library/stm32f4xx_rtc.c ****   /* check if the calibration pending is completed or if there is no calibration operation at all*/
1926:./Library/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) == RESET)
1927:./Library/stm32f4xx_rtc.c ****   {
1928:./Library/stm32f4xx_rtc.c ****     /* Configure the Smooth calibration settings */
1929:./Library/stm32f4xx_rtc.c ****     RTC->CALR = (uint32_t)((uint32_t)RTC_SmoothCalibPeriod | (uint32_t)RTC_SmoothCalibPlusPulses | 
1930:./Library/stm32f4xx_rtc.c **** 
1931:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;
1932:./Library/stm32f4xx_rtc.c ****   }
1933:./Library/stm32f4xx_rtc.c ****   else
1934:./Library/stm32f4xx_rtc.c ****   {
1935:./Library/stm32f4xx_rtc.c ****     status = ERROR;
1936:./Library/stm32f4xx_rtc.c ****   }
1937:./Library/stm32f4xx_rtc.c **** 
1938:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1939:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
1940:./Library/stm32f4xx_rtc.c ****   
1941:./Library/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
1942:./Library/stm32f4xx_rtc.c **** }
1943:./Library/stm32f4xx_rtc.c **** 
1944:./Library/stm32f4xx_rtc.c **** /**
1945:./Library/stm32f4xx_rtc.c ****   * @}
1946:./Library/stm32f4xx_rtc.c ****   */
1947:./Library/stm32f4xx_rtc.c **** 
1948:./Library/stm32f4xx_rtc.c **** 
1949:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group8 TimeStamp configuration functions
1950:./Library/stm32f4xx_rtc.c ****  *  @brief   TimeStamp configuration functions 
1951:./Library/stm32f4xx_rtc.c ****  *
1952:./Library/stm32f4xx_rtc.c **** @verbatim   
1953:./Library/stm32f4xx_rtc.c ****  ===============================================================================
1954:./Library/stm32f4xx_rtc.c ****                  ##### TimeStamp configuration functions #####
1955:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
1956:./Library/stm32f4xx_rtc.c **** 
1957:./Library/stm32f4xx_rtc.c **** @endverbatim
1958:./Library/stm32f4xx_rtc.c ****   * @{
1959:./Library/stm32f4xx_rtc.c ****   */
1960:./Library/stm32f4xx_rtc.c **** 
1961:./Library/stm32f4xx_rtc.c **** /**
1962:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC TimeStamp functionality with the 
1963:./Library/stm32f4xx_rtc.c ****   *         specified time stamp pin stimulating edge.
1964:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampEdge: Specifies the pin edge on which the TimeStamp is 
1965:./Library/stm32f4xx_rtc.c ****   *         activated.
1966:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1967:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Rising: the Time stamp event occurs on the rising 
1968:./Library/stm32f4xx_rtc.c ****   *                                    edge of the related pin.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 36


1969:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Falling: the Time stamp event occurs on the 
1970:./Library/stm32f4xx_rtc.c ****   *                                     falling edge of the related pin.
1971:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the TimeStamp.
1972:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1973:./Library/stm32f4xx_rtc.c ****   * @retval None
1974:./Library/stm32f4xx_rtc.c ****   */
1975:./Library/stm32f4xx_rtc.c **** void RTC_TimeStampCmd(uint32_t RTC_TimeStampEdge, FunctionalState NewState)
1976:./Library/stm32f4xx_rtc.c **** {
1977:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1978:./Library/stm32f4xx_rtc.c **** 
1979:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
1980:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_EDGE(RTC_TimeStampEdge));
1981:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1982:./Library/stm32f4xx_rtc.c **** 
1983:./Library/stm32f4xx_rtc.c ****   /* Get the RTC_CR register and clear the bits to be configured */
1984:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
1985:./Library/stm32f4xx_rtc.c **** 
1986:./Library/stm32f4xx_rtc.c ****   /* Get the new configuration */
1987:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1988:./Library/stm32f4xx_rtc.c ****   {
1989:./Library/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge | RTC_CR_TSE);
1990:./Library/stm32f4xx_rtc.c ****   }
1991:./Library/stm32f4xx_rtc.c ****   else
1992:./Library/stm32f4xx_rtc.c ****   {
1993:./Library/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge);
1994:./Library/stm32f4xx_rtc.c ****   }
1995:./Library/stm32f4xx_rtc.c **** 
1996:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1997:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1998:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1999:./Library/stm32f4xx_rtc.c **** 
2000:./Library/stm32f4xx_rtc.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
2001:./Library/stm32f4xx_rtc.c ****   RTC->CR = (uint32_t)tmpreg;
2002:./Library/stm32f4xx_rtc.c **** 
2003:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2004:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
2005:./Library/stm32f4xx_rtc.c **** }
2006:./Library/stm32f4xx_rtc.c **** 
2007:./Library/stm32f4xx_rtc.c **** /**
2008:./Library/stm32f4xx_rtc.c ****   * @brief  Get the RTC TimeStamp value and masks.
2009:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
2010:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2011:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
2012:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
2013:./Library/stm32f4xx_rtc.c ****   * @param RTC_StampTimeStruct: pointer to a RTC_TimeTypeDef structure that will 
2014:./Library/stm32f4xx_rtc.c ****   *                             contains the TimeStamp time values. 
2015:./Library/stm32f4xx_rtc.c ****   * @param RTC_StampDateStruct: pointer to a RTC_DateTypeDef structure that will 
2016:./Library/stm32f4xx_rtc.c ****   *                             contains the TimeStamp date values.     
2017:./Library/stm32f4xx_rtc.c ****   * @retval None
2018:./Library/stm32f4xx_rtc.c ****   */
2019:./Library/stm32f4xx_rtc.c **** void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct, 
2020:./Library/stm32f4xx_rtc.c ****                                       RTC_DateTypeDef* RTC_StampDateStruct)
2021:./Library/stm32f4xx_rtc.c **** {
2022:./Library/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
2023:./Library/stm32f4xx_rtc.c **** 
2024:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2025:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 37


2026:./Library/stm32f4xx_rtc.c **** 
2027:./Library/stm32f4xx_rtc.c ****   /* Get the TimeStamp time and date registers values */
2028:./Library/stm32f4xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
2029:./Library/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
2030:./Library/stm32f4xx_rtc.c **** 
2031:./Library/stm32f4xx_rtc.c ****   /* Fill the Time structure fields with the read parameters */
2032:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
2033:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
2034:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
2035:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
2036:./Library/stm32f4xx_rtc.c **** 
2037:./Library/stm32f4xx_rtc.c ****   /* Fill the Date structure fields with the read parameters */
2038:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
2039:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
2040:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
2041:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
2042:./Library/stm32f4xx_rtc.c **** 
2043:./Library/stm32f4xx_rtc.c ****   /* Check the input parameters format */
2044:./Library/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
2045:./Library/stm32f4xx_rtc.c ****   {
2046:./Library/stm32f4xx_rtc.c ****     /* Convert the Time structure parameters to Binary format */
2047:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
2048:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
2049:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
2050:./Library/stm32f4xx_rtc.c **** 
2051:./Library/stm32f4xx_rtc.c ****     /* Convert the Date structure parameters to Binary format */
2052:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
2053:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
2054:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
2055:./Library/stm32f4xx_rtc.c ****   }
2056:./Library/stm32f4xx_rtc.c **** }
2057:./Library/stm32f4xx_rtc.c **** 
2058:./Library/stm32f4xx_rtc.c **** /**
2059:./Library/stm32f4xx_rtc.c ****   * @brief  Get the RTC timestamp Sub seconds value.
2060:./Library/stm32f4xx_rtc.c ****   * @param  None
2061:./Library/stm32f4xx_rtc.c ****   * @retval RTC current timestamp Sub seconds value.
2062:./Library/stm32f4xx_rtc.c ****   */
2063:./Library/stm32f4xx_rtc.c **** uint32_t RTC_GetTimeStampSubSecond(void)
2064:./Library/stm32f4xx_rtc.c **** {
2065:./Library/stm32f4xx_rtc.c ****   /* Get timestamp sub seconds values from the correspondent registers */
2066:./Library/stm32f4xx_rtc.c ****   return (uint32_t)(RTC->TSSSR);
2067:./Library/stm32f4xx_rtc.c **** }
2068:./Library/stm32f4xx_rtc.c **** 
2069:./Library/stm32f4xx_rtc.c **** /**
2070:./Library/stm32f4xx_rtc.c ****   * @}
2071:./Library/stm32f4xx_rtc.c ****   */
2072:./Library/stm32f4xx_rtc.c **** 
2073:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group9 Tampers configuration functions
2074:./Library/stm32f4xx_rtc.c ****  *  @brief   Tampers configuration functions 
2075:./Library/stm32f4xx_rtc.c ****  *
2076:./Library/stm32f4xx_rtc.c **** @verbatim   
2077:./Library/stm32f4xx_rtc.c ****  ===============================================================================
2078:./Library/stm32f4xx_rtc.c ****                  ##### Tampers configuration functions #####
2079:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
2080:./Library/stm32f4xx_rtc.c **** 
2081:./Library/stm32f4xx_rtc.c **** @endverbatim
2082:./Library/stm32f4xx_rtc.c ****   * @{
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 38


2083:./Library/stm32f4xx_rtc.c ****   */
2084:./Library/stm32f4xx_rtc.c **** 
2085:./Library/stm32f4xx_rtc.c **** /**
2086:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the select Tamper pin edge.
2087:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2088:./Library/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1 or RTC_Tamper 2
2089:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TamperTrigger: Specifies the trigger on the tamper pin that 
2090:./Library/stm32f4xx_rtc.c ****   *         stimulates tamper event. 
2091:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2092:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_RisingEdge: Rising Edge of the tamper pin causes tamper event.
2093:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_FallingEdge: Falling Edge of the tamper pin causes tamper event.
2094:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_LowLevel: Low Level of the tamper pin causes tamper event.
2095:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_HighLevel: High Level of the tamper pin causes tamper event.
2096:./Library/stm32f4xx_rtc.c ****   * @retval None
2097:./Library/stm32f4xx_rtc.c ****   */
2098:./Library/stm32f4xx_rtc.c **** void RTC_TamperTriggerConfig(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger)
2099:./Library/stm32f4xx_rtc.c **** {
2100:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2101:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper)); 
2102:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(RTC_TamperTrigger));
2103:./Library/stm32f4xx_rtc.c ****  
2104:./Library/stm32f4xx_rtc.c ****   if (RTC_TamperTrigger == RTC_TamperTrigger_RisingEdge)
2105:./Library/stm32f4xx_rtc.c ****   {  
2106:./Library/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2107:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
2108:./Library/stm32f4xx_rtc.c ****   }
2109:./Library/stm32f4xx_rtc.c ****   else
2110:./Library/stm32f4xx_rtc.c ****   { 
2111:./Library/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2112:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_Tamper << 1);  
2113:./Library/stm32f4xx_rtc.c ****   }  
2114:./Library/stm32f4xx_rtc.c **** }
2115:./Library/stm32f4xx_rtc.c **** 
2116:./Library/stm32f4xx_rtc.c **** /**
2117:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Tamper detection.
2118:./Library/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2119:./Library/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1 or RTC_Tamper_2
2120:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the tamper pin.
2121:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.                   
2122:./Library/stm32f4xx_rtc.c ****   * @retval None
2123:./Library/stm32f4xx_rtc.c ****   */
2124:./Library/stm32f4xx_rtc.c **** void RTC_TamperCmd(uint32_t RTC_Tamper, FunctionalState NewState)
2125:./Library/stm32f4xx_rtc.c **** {
2126:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2127:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper));  
2128:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2129:./Library/stm32f4xx_rtc.c ****   
2130:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
2131:./Library/stm32f4xx_rtc.c ****   {
2132:./Library/stm32f4xx_rtc.c ****     /* Enable the selected Tamper pin */
2133:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
2134:./Library/stm32f4xx_rtc.c ****   }
2135:./Library/stm32f4xx_rtc.c ****   else
2136:./Library/stm32f4xx_rtc.c ****   {
2137:./Library/stm32f4xx_rtc.c ****     /* Disable the selected Tamper pin */
2138:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_Tamper;    
2139:./Library/stm32f4xx_rtc.c ****   }  
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 39


2140:./Library/stm32f4xx_rtc.c **** }
2141:./Library/stm32f4xx_rtc.c **** 
2142:./Library/stm32f4xx_rtc.c **** /**
2143:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Filter.
2144:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TamperFilter: Specifies the tampers filter.
2145:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2146:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_Disable: Tamper filter is disabled.
2147:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_2Sample: Tamper is activated after 2 consecutive 
2148:./Library/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2149:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_4Sample: Tamper is activated after 4 consecutive 
2150:./Library/stm32f4xx_rtc.c ****   *                                    samples at the active level
2151:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_8Sample: Tamper is activated after 8 consecutive 
2152:./Library/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2153:./Library/stm32f4xx_rtc.c ****   * @retval None
2154:./Library/stm32f4xx_rtc.c ****   */
2155:./Library/stm32f4xx_rtc.c **** void RTC_TamperFilterConfig(uint32_t RTC_TamperFilter)
2156:./Library/stm32f4xx_rtc.c **** {
2157:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2158:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_FILTER(RTC_TamperFilter));
2159:./Library/stm32f4xx_rtc.c ****    
2160:./Library/stm32f4xx_rtc.c ****   /* Clear TAMPFLT[1:0] bits in the RTC_TAFCR register */
2161:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFLT);
2162:./Library/stm32f4xx_rtc.c **** 
2163:./Library/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2164:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperFilter;
2165:./Library/stm32f4xx_rtc.c **** }
2166:./Library/stm32f4xx_rtc.c **** 
2167:./Library/stm32f4xx_rtc.c **** /**
2168:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Sampling Frequency.
2169:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TamperSamplingFreq: Specifies the tampers Sampling Frequency.
2170:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2171:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div32768: Each of the tamper inputs are sampled
2172:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 32768
2173:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div16384: Each of the tamper inputs are sampled
2174:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 16384
2175:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div8192: Each of the tamper inputs are sampled
2176:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 8192
2177:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div4096: Each of the tamper inputs are sampled
2178:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 4096
2179:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div2048: Each of the tamper inputs are sampled
2180:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 2048
2181:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div1024: Each of the tamper inputs are sampled
2182:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 1024
2183:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div512: Each of the tamper inputs are sampled
2184:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 512  
2185:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div256: Each of the tamper inputs are sampled
2186:./Library/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 256  
2187:./Library/stm32f4xx_rtc.c ****   * @retval None
2188:./Library/stm32f4xx_rtc.c ****   */
2189:./Library/stm32f4xx_rtc.c **** void RTC_TamperSamplingFreqConfig(uint32_t RTC_TamperSamplingFreq)
2190:./Library/stm32f4xx_rtc.c **** {
2191:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2192:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(RTC_TamperSamplingFreq));
2193:./Library/stm32f4xx_rtc.c ****  
2194:./Library/stm32f4xx_rtc.c ****   /* Clear TAMPFREQ[2:0] bits in the RTC_TAFCR register */
2195:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFREQ);
2196:./Library/stm32f4xx_rtc.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 40


2197:./Library/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2198:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperSamplingFreq;
2199:./Library/stm32f4xx_rtc.c **** }
2200:./Library/stm32f4xx_rtc.c **** 
2201:./Library/stm32f4xx_rtc.c **** /**
2202:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Pins input Precharge Duration.
2203:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TamperPrechargeDuration: Specifies the Tampers Pins input
2204:./Library/stm32f4xx_rtc.c ****   *         Precharge Duration.
2205:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2206:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_1RTCCLK: Tamper pins are precharged before sampling during
2207:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_2RTCCLK: Tamper pins are precharged before sampling during
2208:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_4RTCCLK: Tamper pins are precharged before sampling during
2209:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_8RTCCLK: Tamper pins are precharged before sampling during
2210:./Library/stm32f4xx_rtc.c ****   * @retval None
2211:./Library/stm32f4xx_rtc.c ****   */
2212:./Library/stm32f4xx_rtc.c **** void RTC_TamperPinsPrechargeDuration(uint32_t RTC_TamperPrechargeDuration)
2213:./Library/stm32f4xx_rtc.c **** {
2214:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2215:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(RTC_TamperPrechargeDuration));
2216:./Library/stm32f4xx_rtc.c ****    
2217:./Library/stm32f4xx_rtc.c ****   /* Clear TAMPPRCH[1:0] bits in the RTC_TAFCR register */
2218:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPPRCH);
2219:./Library/stm32f4xx_rtc.c **** 
2220:./Library/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2221:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperPrechargeDuration;
2222:./Library/stm32f4xx_rtc.c **** }
2223:./Library/stm32f4xx_rtc.c **** 
2224:./Library/stm32f4xx_rtc.c **** /**
2225:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the TimeStamp on Tamper Detection Event.
2226:./Library/stm32f4xx_rtc.c ****   * @note   The timestamp is valid even the TSE bit in tamper control register 
2227:./Library/stm32f4xx_rtc.c ****   *         is reset.   
2228:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the timestamp on tamper event.
2229:./Library/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
2230:./Library/stm32f4xx_rtc.c ****   * @retval None
2231:./Library/stm32f4xx_rtc.c ****   */
2232:./Library/stm32f4xx_rtc.c **** void RTC_TimeStampOnTamperDetectionCmd(FunctionalState NewState)
2233:./Library/stm32f4xx_rtc.c **** {
2234:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2235:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2236:./Library/stm32f4xx_rtc.c ****    
2237:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
2238:./Library/stm32f4xx_rtc.c ****   {
2239:./Library/stm32f4xx_rtc.c ****     /* Save timestamp on tamper detection event */
2240:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPTS;
2241:./Library/stm32f4xx_rtc.c ****   }
2242:./Library/stm32f4xx_rtc.c ****   else
2243:./Library/stm32f4xx_rtc.c ****   {
2244:./Library/stm32f4xx_rtc.c ****     /* Tamper detection does not cause a timestamp to be saved */
2245:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPTS;    
2246:./Library/stm32f4xx_rtc.c ****   }
2247:./Library/stm32f4xx_rtc.c **** }
2248:./Library/stm32f4xx_rtc.c **** 
2249:./Library/stm32f4xx_rtc.c **** /**
2250:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Precharge of Tamper pin.
2251:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of tamper pull up.
2252:./Library/stm32f4xx_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.                   
2253:./Library/stm32f4xx_rtc.c ****   * @retval None
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 41


2254:./Library/stm32f4xx_rtc.c ****   */
2255:./Library/stm32f4xx_rtc.c **** void RTC_TamperPullUpCmd(FunctionalState NewState)
2256:./Library/stm32f4xx_rtc.c **** {
2257:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2258:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2259:./Library/stm32f4xx_rtc.c ****   
2260:./Library/stm32f4xx_rtc.c ****  if (NewState != DISABLE)
2261:./Library/stm32f4xx_rtc.c ****   {
2262:./Library/stm32f4xx_rtc.c ****     /* Enable precharge of the selected Tamper pin */
2263:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPPUDIS; 
2264:./Library/stm32f4xx_rtc.c ****   }
2265:./Library/stm32f4xx_rtc.c ****   else
2266:./Library/stm32f4xx_rtc.c ****   {
2267:./Library/stm32f4xx_rtc.c ****     /* Disable precharge of the selected Tamper pin */
2268:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPPUDIS;    
2269:./Library/stm32f4xx_rtc.c ****   } 
2270:./Library/stm32f4xx_rtc.c **** }
2271:./Library/stm32f4xx_rtc.c **** 
2272:./Library/stm32f4xx_rtc.c **** /**
2273:./Library/stm32f4xx_rtc.c ****   * @}
2274:./Library/stm32f4xx_rtc.c ****   */
2275:./Library/stm32f4xx_rtc.c **** 
2276:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group10 Backup Data Registers configuration functions
2277:./Library/stm32f4xx_rtc.c ****  *  @brief   Backup Data Registers configuration functions  
2278:./Library/stm32f4xx_rtc.c ****  *
2279:./Library/stm32f4xx_rtc.c **** @verbatim   
2280:./Library/stm32f4xx_rtc.c ****  ===============================================================================
2281:./Library/stm32f4xx_rtc.c ****              ##### Backup Data Registers configuration functions ##### 
2282:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
2283:./Library/stm32f4xx_rtc.c **** 
2284:./Library/stm32f4xx_rtc.c **** @endverbatim
2285:./Library/stm32f4xx_rtc.c ****   * @{
2286:./Library/stm32f4xx_rtc.c ****   */
2287:./Library/stm32f4xx_rtc.c **** 
2288:./Library/stm32f4xx_rtc.c **** /**
2289:./Library/stm32f4xx_rtc.c ****   * @brief  Writes a data in a specified RTC Backup data register.
2290:./Library/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2291:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2292:./Library/stm32f4xx_rtc.c ****   *                          specify the register.
2293:./Library/stm32f4xx_rtc.c ****   * @param  Data: Data to be written in the specified RTC Backup data register.                    
2294:./Library/stm32f4xx_rtc.c ****   * @retval None
2295:./Library/stm32f4xx_rtc.c ****   */
2296:./Library/stm32f4xx_rtc.c **** void RTC_WriteBackupRegister(uint32_t RTC_BKP_DR, uint32_t Data)
2297:./Library/stm32f4xx_rtc.c **** {
2298:./Library/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
2299:./Library/stm32f4xx_rtc.c ****   
2300:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2301:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
2302:./Library/stm32f4xx_rtc.c **** 
2303:./Library/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
2304:./Library/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
2305:./Library/stm32f4xx_rtc.c **** 
2306:./Library/stm32f4xx_rtc.c ****   /* Write the specified register */
2307:./Library/stm32f4xx_rtc.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
2308:./Library/stm32f4xx_rtc.c **** }
2309:./Library/stm32f4xx_rtc.c **** 
2310:./Library/stm32f4xx_rtc.c **** /**
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 42


2311:./Library/stm32f4xx_rtc.c ****   * @brief  Reads data from the specified RTC Backup data Register.
2312:./Library/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2313:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2314:./Library/stm32f4xx_rtc.c ****   *                          specify the register.                   
2315:./Library/stm32f4xx_rtc.c ****   * @retval None
2316:./Library/stm32f4xx_rtc.c ****   */
2317:./Library/stm32f4xx_rtc.c **** uint32_t RTC_ReadBackupRegister(uint32_t RTC_BKP_DR)
2318:./Library/stm32f4xx_rtc.c **** {
2319:./Library/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
2320:./Library/stm32f4xx_rtc.c ****   
2321:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2322:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
2323:./Library/stm32f4xx_rtc.c **** 
2324:./Library/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
2325:./Library/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
2326:./Library/stm32f4xx_rtc.c ****   
2327:./Library/stm32f4xx_rtc.c ****   /* Read the specified register */
2328:./Library/stm32f4xx_rtc.c ****   return (*(__IO uint32_t *)tmp);
2329:./Library/stm32f4xx_rtc.c **** }
2330:./Library/stm32f4xx_rtc.c **** 
2331:./Library/stm32f4xx_rtc.c **** /**
2332:./Library/stm32f4xx_rtc.c ****   * @}
2333:./Library/stm32f4xx_rtc.c ****   */
2334:./Library/stm32f4xx_rtc.c **** 
2335:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group11 RTC Tamper and TimeStamp Pins Selection and Output Type Config configurat
2336:./Library/stm32f4xx_rtc.c ****  *  @brief   RTC Tamper and TimeStamp Pins Selection and Output Type Config 
2337:./Library/stm32f4xx_rtc.c ****  *           configuration functions  
2338:./Library/stm32f4xx_rtc.c ****  *
2339:./Library/stm32f4xx_rtc.c **** @verbatim   
2340:./Library/stm32f4xx_rtc.c ****  ==================================================================================================
2341:./Library/stm32f4xx_rtc.c ****  ##### RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration functions #####
2342:./Library/stm32f4xx_rtc.c ****  ==================================================================================================
2343:./Library/stm32f4xx_rtc.c **** 
2344:./Library/stm32f4xx_rtc.c **** @endverbatim
2345:./Library/stm32f4xx_rtc.c ****   * @{
2346:./Library/stm32f4xx_rtc.c ****   */
2347:./Library/stm32f4xx_rtc.c **** 
2348:./Library/stm32f4xx_rtc.c **** /**
2349:./Library/stm32f4xx_rtc.c ****   * @brief  Selects the RTC Tamper Pin.
2350:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TamperPin: specifies the RTC Tamper Pin.
2351:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2352:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_Default: RTC_AF1 is used as RTC Tamper Pin.
2353:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_Pos1: RTC_AF2 is selected as RTC Tamper Pin.    
2354:./Library/stm32f4xx_rtc.c ****   * @retval None
2355:./Library/stm32f4xx_rtc.c ****   */
2356:./Library/stm32f4xx_rtc.c **** void RTC_TamperPinSelection(uint32_t RTC_TamperPin)
2357:./Library/stm32f4xx_rtc.c **** {
2358:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2359:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PIN(RTC_TamperPin));
2360:./Library/stm32f4xx_rtc.c ****   
2361:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPINSEL);
2362:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
2363:./Library/stm32f4xx_rtc.c **** }
2364:./Library/stm32f4xx_rtc.c **** 
2365:./Library/stm32f4xx_rtc.c **** /**
2366:./Library/stm32f4xx_rtc.c ****   * @brief  Selects the RTC TimeStamp Pin.
2367:./Library/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampPin: specifies the RTC TimeStamp Pin.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 43


2368:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2369:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PC13: PC13 is selected as RTC TimeStamp Pin.
2370:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PI8: PI8 is selected as RTC TimeStamp Pin.    
2371:./Library/stm32f4xx_rtc.c ****   * @retval None
2372:./Library/stm32f4xx_rtc.c ****   */
2373:./Library/stm32f4xx_rtc.c **** void RTC_TimeStampPinSelection(uint32_t RTC_TimeStampPin)
2374:./Library/stm32f4xx_rtc.c **** {
2375:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2376:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
2377:./Library/stm32f4xx_rtc.c ****   
2378:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TSINSEL);
2379:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
2380:./Library/stm32f4xx_rtc.c **** }
2381:./Library/stm32f4xx_rtc.c **** 
2382:./Library/stm32f4xx_rtc.c **** /**
2383:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Output Pin mode. 
2384:./Library/stm32f4xx_rtc.c ****   * @param  RTC_OutputType: specifies the RTC Output (PC13) pin mode.
2385:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2386:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_OpenDrain: RTC Output (PC13) is configured in 
2387:./Library/stm32f4xx_rtc.c ****   *                                    Open Drain mode.
2388:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_PushPull:  RTC Output (PC13) is configured in 
2389:./Library/stm32f4xx_rtc.c ****   *                                    Push Pull mode.    
2390:./Library/stm32f4xx_rtc.c ****   * @retval None
2391:./Library/stm32f4xx_rtc.c ****   */
2392:./Library/stm32f4xx_rtc.c **** void RTC_OutputTypeConfig(uint32_t RTC_OutputType)
2393:./Library/stm32f4xx_rtc.c **** {
2394:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2395:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(RTC_OutputType));
2396:./Library/stm32f4xx_rtc.c ****   
2397:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_ALARMOUTTYPE);
2398:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
2399:./Library/stm32f4xx_rtc.c **** }
2400:./Library/stm32f4xx_rtc.c **** 
2401:./Library/stm32f4xx_rtc.c **** /**
2402:./Library/stm32f4xx_rtc.c ****   * @}
2403:./Library/stm32f4xx_rtc.c ****   */
2404:./Library/stm32f4xx_rtc.c **** 
2405:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group12 Shift control synchronisation functions
2406:./Library/stm32f4xx_rtc.c ****  *  @brief   Shift control synchronisation functions 
2407:./Library/stm32f4xx_rtc.c ****  *
2408:./Library/stm32f4xx_rtc.c **** @verbatim   
2409:./Library/stm32f4xx_rtc.c ****  ===============================================================================
2410:./Library/stm32f4xx_rtc.c ****               ##### Shift control synchronisation functions #####
2411:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
2412:./Library/stm32f4xx_rtc.c **** 
2413:./Library/stm32f4xx_rtc.c **** @endverbatim
2414:./Library/stm32f4xx_rtc.c ****   * @{
2415:./Library/stm32f4xx_rtc.c ****   */
2416:./Library/stm32f4xx_rtc.c **** 
2417:./Library/stm32f4xx_rtc.c **** /**
2418:./Library/stm32f4xx_rtc.c ****   * @brief  Configures the Synchronization Shift Control Settings.
2419:./Library/stm32f4xx_rtc.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register 
2420:./Library/stm32f4xx_rtc.c ****   * @param  RTC_ShiftAdd1S : Select to add or not 1 second to the time Calendar.
2421:./Library/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values :
2422:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Set  : Add one second to the clock calendar. 
2423:./Library/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Reset: No effect.
2424:./Library/stm32f4xx_rtc.c ****   * @param  RTC_ShiftSubFS: Select the number of Second Fractions to Substitute.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 44


2425:./Library/stm32f4xx_rtc.c ****   *         This parameter can be one any value from 0 to 0x7FFF.
2426:./Library/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
2427:./Library/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Shift registers are configured
2428:./Library/stm32f4xx_rtc.c ****   *          - ERROR: RTC Shift registers are not configured
2429:./Library/stm32f4xx_rtc.c **** */
2430:./Library/stm32f4xx_rtc.c **** ErrorStatus RTC_SynchroShiftConfig(uint32_t RTC_ShiftAdd1S, uint32_t RTC_ShiftSubFS)
2431:./Library/stm32f4xx_rtc.c **** {
2432:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
2433:./Library/stm32f4xx_rtc.c ****   uint32_t shpfcount = 0;
2434:./Library/stm32f4xx_rtc.c **** 
2435:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2436:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_ADD1S(RTC_ShiftAdd1S));
2437:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_SUBFS(RTC_ShiftSubFS));
2438:./Library/stm32f4xx_rtc.c **** 
2439:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2440:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
2441:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
2442:./Library/stm32f4xx_rtc.c ****   
2443:./Library/stm32f4xx_rtc.c ****   /* Check if a Shift is pending*/
2444:./Library/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) != RESET)
2445:./Library/stm32f4xx_rtc.c ****   {
2446:./Library/stm32f4xx_rtc.c ****     /* Wait until the shift is completed*/
2447:./Library/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_SHPF) != RESET) && (shpfcount != SHPF_TIMEOUT))
2448:./Library/stm32f4xx_rtc.c ****     {
2449:./Library/stm32f4xx_rtc.c ****       shpfcount++;
2450:./Library/stm32f4xx_rtc.c ****     }
2451:./Library/stm32f4xx_rtc.c ****   }
2452:./Library/stm32f4xx_rtc.c **** 
2453:./Library/stm32f4xx_rtc.c ****   /* Check if the Shift pending is completed or if there is no Shift operation at all*/
2454:./Library/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) == RESET)
2455:./Library/stm32f4xx_rtc.c ****   {
2456:./Library/stm32f4xx_rtc.c ****     /* check if the reference clock detection is disabled */
2457:./Library/stm32f4xx_rtc.c ****     if((RTC->CR & RTC_CR_REFCKON) == RESET)
2458:./Library/stm32f4xx_rtc.c ****     {
2459:./Library/stm32f4xx_rtc.c ****       /* Configure the Shift settings */
2460:./Library/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)(uint32_t)(RTC_ShiftSubFS) | (uint32_t)(RTC_ShiftAdd1S);
2461:./Library/stm32f4xx_rtc.c ****     
2462:./Library/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
2463:./Library/stm32f4xx_rtc.c ****       {
2464:./Library/stm32f4xx_rtc.c ****         status = ERROR;
2465:./Library/stm32f4xx_rtc.c ****       }
2466:./Library/stm32f4xx_rtc.c ****       else
2467:./Library/stm32f4xx_rtc.c ****       {
2468:./Library/stm32f4xx_rtc.c ****         status = SUCCESS;
2469:./Library/stm32f4xx_rtc.c ****       }
2470:./Library/stm32f4xx_rtc.c ****     }
2471:./Library/stm32f4xx_rtc.c ****     else
2472:./Library/stm32f4xx_rtc.c ****     {
2473:./Library/stm32f4xx_rtc.c ****       status = ERROR;
2474:./Library/stm32f4xx_rtc.c ****     }
2475:./Library/stm32f4xx_rtc.c ****   }
2476:./Library/stm32f4xx_rtc.c ****   else
2477:./Library/stm32f4xx_rtc.c ****   {
2478:./Library/stm32f4xx_rtc.c ****     status = ERROR;
2479:./Library/stm32f4xx_rtc.c ****   }
2480:./Library/stm32f4xx_rtc.c **** 
2481:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 45


2482:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
2483:./Library/stm32f4xx_rtc.c ****   
2484:./Library/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
2485:./Library/stm32f4xx_rtc.c **** }
2486:./Library/stm32f4xx_rtc.c **** 
2487:./Library/stm32f4xx_rtc.c **** /**
2488:./Library/stm32f4xx_rtc.c ****   * @}
2489:./Library/stm32f4xx_rtc.c ****   */
2490:./Library/stm32f4xx_rtc.c **** 
2491:./Library/stm32f4xx_rtc.c **** /** @defgroup RTC_Group13 Interrupts and flags management functions
2492:./Library/stm32f4xx_rtc.c ****  *  @brief   Interrupts and flags management functions  
2493:./Library/stm32f4xx_rtc.c ****  *
2494:./Library/stm32f4xx_rtc.c **** @verbatim   
2495:./Library/stm32f4xx_rtc.c ****  ===============================================================================
2496:./Library/stm32f4xx_rtc.c ****               ##### Interrupts and flags management functions #####
2497:./Library/stm32f4xx_rtc.c ****  ===============================================================================  
2498:./Library/stm32f4xx_rtc.c ****  [..] All RTC interrupts are connected to the EXTI controller.
2499:./Library/stm32f4xx_rtc.c ****  
2500:./Library/stm32f4xx_rtc.c ****    (+) To enable the RTC Alarm interrupt, the following sequence is required:
2501:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 17 in interrupt mode and select 
2502:./Library/stm32f4xx_rtc.c ****             the rising edge sensitivity using the EXTI_Init() function.
2503:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the RTC_Alarm IRQ channel in the NVIC using the 
2504:./Library/stm32f4xx_rtc.c ****             NVIC_Init() function.
2505:./Library/stm32f4xx_rtc.c ****        (++) Configure the RTC to generate RTC alarms (Alarm A and/or Alarm B) using
2506:./Library/stm32f4xx_rtc.c ****             the RTC_SetAlarm() and RTC_AlarmCmd() functions.
2507:./Library/stm32f4xx_rtc.c **** 
2508:./Library/stm32f4xx_rtc.c ****    (+) To enable the RTC Wakeup interrupt, the following sequence is required:
2509:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 22 in interrupt mode and select the
2510:./Library/stm32f4xx_rtc.c ****             rising edge sensitivity using the EXTI_Init() function.
2511:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the RTC_WKUP IRQ channel in the NVIC using the 
2512:./Library/stm32f4xx_rtc.c ****             NVIC_Init() function.
2513:./Library/stm32f4xx_rtc.c ****        (++) Configure the RTC to generate the RTC wakeup timer event using the 
2514:./Library/stm32f4xx_rtc.c ****             RTC_WakeUpClockConfig(), RTC_SetWakeUpCounter() and RTC_WakeUpCmd() 
2515:./Library/stm32f4xx_rtc.c ****             functions.
2516:./Library/stm32f4xx_rtc.c **** 
2517:./Library/stm32f4xx_rtc.c ****    (+) To enable the RTC Tamper interrupt, the following sequence is required:
2518:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 21 in interrupt mode and select 
2519:./Library/stm32f4xx_rtc.c ****             the rising edge sensitivity using the EXTI_Init() function.
2520:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the
2521:./Library/stm32f4xx_rtc.c ****             NVIC_Init() function.
2522:./Library/stm32f4xx_rtc.c ****        (++) Configure the RTC to detect the RTC tamper event using the 
2523:./Library/stm32f4xx_rtc.c ****             RTC_TamperTriggerConfig() and RTC_TamperCmd() functions.
2524:./Library/stm32f4xx_rtc.c **** 
2525:./Library/stm32f4xx_rtc.c ****    (+) To enable the RTC TimeStamp interrupt, the following sequence is required:
2526:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 21 in interrupt mode and select the
2527:./Library/stm32f4xx_rtc.c ****             rising edge sensitivity using the EXTI_Init() function.
2528:./Library/stm32f4xx_rtc.c ****        (++) Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the 
2529:./Library/stm32f4xx_rtc.c ****             NVIC_Init() function.
2530:./Library/stm32f4xx_rtc.c ****        (++) Configure the RTC to detect the RTC time stamp event using the 
2531:./Library/stm32f4xx_rtc.c ****             RTC_TimeStampCmd() functions.
2532:./Library/stm32f4xx_rtc.c **** 
2533:./Library/stm32f4xx_rtc.c **** @endverbatim
2534:./Library/stm32f4xx_rtc.c ****   * @{
2535:./Library/stm32f4xx_rtc.c ****   */
2536:./Library/stm32f4xx_rtc.c **** 
2537:./Library/stm32f4xx_rtc.c **** /**
2538:./Library/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 46


2539:./Library/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt sources to be enabled or disabled. 
2540:./Library/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2541:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS:  Time Stamp interrupt mask
2542:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT:  WakeUp Timer interrupt mask
2543:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB:  Alarm B interrupt mask
2544:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA:  Alarm A interrupt mask
2545:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP: Tamper event interrupt mask
2546:./Library/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
2547:./Library/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
2548:./Library/stm32f4xx_rtc.c ****   * @retval None
2549:./Library/stm32f4xx_rtc.c ****   */
2550:./Library/stm32f4xx_rtc.c **** void RTC_ITConfig(uint32_t RTC_IT, FunctionalState NewState)
2551:./Library/stm32f4xx_rtc.c **** {
2552:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2553:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CONFIG_IT(RTC_IT));
2554:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2555:./Library/stm32f4xx_rtc.c **** 
2556:./Library/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2557:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
2558:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
2559:./Library/stm32f4xx_rtc.c **** 
2560:./Library/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
2561:./Library/stm32f4xx_rtc.c ****   {
2562:./Library/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2563:./Library/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)(RTC_IT & ~RTC_TAFCR_TAMPIE);
2564:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2565:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_IT & RTC_TAFCR_TAMPIE);
2566:./Library/stm32f4xx_rtc.c ****   }
2567:./Library/stm32f4xx_rtc.c ****   else
2568:./Library/stm32f4xx_rtc.c ****   {
2569:./Library/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2570:./Library/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
2571:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2572:./Library/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
2573:./Library/stm32f4xx_rtc.c ****   }
2574:./Library/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2575:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
2576:./Library/stm32f4xx_rtc.c **** }
2577:./Library/stm32f4xx_rtc.c **** 
2578:./Library/stm32f4xx_rtc.c **** /**
2579:./Library/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
2580:./Library/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
2581:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2582:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RECALPF: RECALPF event flag.
2583:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2584:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP2F: Tamper 2 event flag
2585:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp OverFlow flag
2586:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2587:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2588:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2589:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2590:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITF: Initialization mode flag
2591:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2592:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITS: Registers Configured flag
2593:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_SHPF: Shift operation pending flag.
2594:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTWF: WakeUp Timer Write flag
2595:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBWF: Alarm B Write flag
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 47


2596:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAWF: Alarm A write flag
2597:./Library/stm32f4xx_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
2598:./Library/stm32f4xx_rtc.c ****   */
2599:./Library/stm32f4xx_rtc.c **** FlagStatus RTC_GetFlagStatus(uint32_t RTC_FLAG)
2600:./Library/stm32f4xx_rtc.c **** {
2601:./Library/stm32f4xx_rtc.c ****   FlagStatus bitstatus = RESET;
2602:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
2603:./Library/stm32f4xx_rtc.c ****   
2604:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2605:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG));
2606:./Library/stm32f4xx_rtc.c ****   
2607:./Library/stm32f4xx_rtc.c ****   /* Get all the flags */
2608:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->ISR & RTC_FLAGS_MASK);
2609:./Library/stm32f4xx_rtc.c ****   
2610:./Library/stm32f4xx_rtc.c ****   /* Return the status of the flag */
2611:./Library/stm32f4xx_rtc.c ****   if ((tmpreg & RTC_FLAG) != (uint32_t)RESET)
2612:./Library/stm32f4xx_rtc.c ****   {
2613:./Library/stm32f4xx_rtc.c ****     bitstatus = SET;
2614:./Library/stm32f4xx_rtc.c ****   }
2615:./Library/stm32f4xx_rtc.c ****   else
2616:./Library/stm32f4xx_rtc.c ****   {
2617:./Library/stm32f4xx_rtc.c ****     bitstatus = RESET;
2618:./Library/stm32f4xx_rtc.c ****   }
2619:./Library/stm32f4xx_rtc.c ****   return bitstatus;
2620:./Library/stm32f4xx_rtc.c **** }
2621:./Library/stm32f4xx_rtc.c **** 
2622:./Library/stm32f4xx_rtc.c **** /**
2623:./Library/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's pending flags.
2624:./Library/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the RTC flag to clear.
2625:./Library/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2626:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2627:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP2F: Tamper 2 event flag
2628:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp Overflow flag 
2629:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2630:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2631:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2632:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2633:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2634:./Library/stm32f4xx_rtc.c ****   * @retval None
2635:./Library/stm32f4xx_rtc.c ****   */
2636:./Library/stm32f4xx_rtc.c **** void RTC_ClearFlag(uint32_t RTC_FLAG)
2637:./Library/stm32f4xx_rtc.c **** {
2638:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2639:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG));
2640:./Library/stm32f4xx_rtc.c **** 
2641:./Library/stm32f4xx_rtc.c ****   /* Clear the Flags in the RTC_ISR register */
2642:./Library/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR &
2643:./Library/stm32f4xx_rtc.c **** }
2644:./Library/stm32f4xx_rtc.c **** 
2645:./Library/stm32f4xx_rtc.c **** /**
2646:./Library/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
2647:./Library/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt source to check.
2648:./Library/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2649:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2650:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2651:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2652:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 48


2653:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt
2654:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP2: Tamper 2 event interrupt
2655:./Library/stm32f4xx_rtc.c ****   * @retval The new state of RTC_IT (SET or RESET).
2656:./Library/stm32f4xx_rtc.c ****   */
2657:./Library/stm32f4xx_rtc.c **** ITStatus RTC_GetITStatus(uint32_t RTC_IT)
2658:./Library/stm32f4xx_rtc.c **** {
2659:./Library/stm32f4xx_rtc.c ****   ITStatus bitstatus = RESET;
2660:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0, enablestatus = 0;
2661:./Library/stm32f4xx_rtc.c ****  
2662:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2663:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT));
2664:./Library/stm32f4xx_rtc.c ****   
2665:./Library/stm32f4xx_rtc.c ****   /* Get the TAMPER Interrupt enable bit and pending bit */
2666:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
2667:./Library/stm32f4xx_rtc.c ****  
2668:./Library/stm32f4xx_rtc.c ****   /* Get the Interrupt enable Status */
2669:./Library/stm32f4xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)) | (tmpreg & (RTC_IT >> 1
2670:./Library/stm32f4xx_rtc.c ****   
2671:./Library/stm32f4xx_rtc.c ****   /* Get the Interrupt pending bit */
2672:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
2673:./Library/stm32f4xx_rtc.c ****   
2674:./Library/stm32f4xx_rtc.c ****   /* Get the status of the Interrupt */
2675:./Library/stm32f4xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
2676:./Library/stm32f4xx_rtc.c ****   {
2677:./Library/stm32f4xx_rtc.c ****     bitstatus = SET;
2678:./Library/stm32f4xx_rtc.c ****   }
2679:./Library/stm32f4xx_rtc.c ****   else
2680:./Library/stm32f4xx_rtc.c ****   {
2681:./Library/stm32f4xx_rtc.c ****     bitstatus = RESET;
2682:./Library/stm32f4xx_rtc.c ****   }
2683:./Library/stm32f4xx_rtc.c ****   return bitstatus;
2684:./Library/stm32f4xx_rtc.c **** }
2685:./Library/stm32f4xx_rtc.c **** 
2686:./Library/stm32f4xx_rtc.c **** /**
2687:./Library/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
2688:./Library/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt pending bit to clear.
2689:./Library/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2690:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2691:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2692:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2693:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2694:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt
2695:./Library/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP2: Tamper 2 event interrupt 
2696:./Library/stm32f4xx_rtc.c ****   * @retval None
2697:./Library/stm32f4xx_rtc.c ****   */
2698:./Library/stm32f4xx_rtc.c **** void RTC_ClearITPendingBit(uint32_t RTC_IT)
2699:./Library/stm32f4xx_rtc.c **** {
2700:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
2701:./Library/stm32f4xx_rtc.c **** 
2702:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
2703:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_IT(RTC_IT));
2704:./Library/stm32f4xx_rtc.c **** 
2705:./Library/stm32f4xx_rtc.c ****   /* Get the RTC_ISR Interrupt pending bits mask */
2706:./Library/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC_IT >> 4);
2707:./Library/stm32f4xx_rtc.c **** 
2708:./Library/stm32f4xx_rtc.c ****   /* Clear the interrupt pending bits in the RTC_ISR register */
2709:./Library/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((tmpreg | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR & R
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 49


2710:./Library/stm32f4xx_rtc.c **** }
2711:./Library/stm32f4xx_rtc.c **** 
2712:./Library/stm32f4xx_rtc.c **** /**
2713:./Library/stm32f4xx_rtc.c ****   * @}
2714:./Library/stm32f4xx_rtc.c ****   */
2715:./Library/stm32f4xx_rtc.c **** 
2716:./Library/stm32f4xx_rtc.c **** /**
2717:./Library/stm32f4xx_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
2718:./Library/stm32f4xx_rtc.c ****   * @param  Value: Byte to be converted.
2719:./Library/stm32f4xx_rtc.c ****   * @retval Converted byte
2720:./Library/stm32f4xx_rtc.c ****   */
2721:./Library/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
2722:./Library/stm32f4xx_rtc.c **** {
  29              		.loc 1 2722 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
2723:./Library/stm32f4xx_rtc.c ****   uint8_t bcdhigh = 0;
  34              		.loc 1 2723 3 view .LVU1
2724:./Library/stm32f4xx_rtc.c ****   
2725:./Library/stm32f4xx_rtc.c ****   while (Value >= 10)
  35              		.loc 1 2725 3 view .LVU2
2723:./Library/stm32f4xx_rtc.c ****   uint8_t bcdhigh = 0;
  36              		.loc 1 2723 11 is_stmt 0 view .LVU3
  37 0000 0023     		movs	r3, #0
  38              		.loc 1 2725 9 view .LVU4
  39 0002 03E0     		b	.L2
  40              	.LVL1:
  41              	.L3:
2726:./Library/stm32f4xx_rtc.c ****   {
2727:./Library/stm32f4xx_rtc.c ****     bcdhigh++;
  42              		.loc 1 2727 5 is_stmt 1 view .LVU5
  43              		.loc 1 2727 12 is_stmt 0 view .LVU6
  44 0004 0133     		adds	r3, r3, #1
  45              	.LVL2:
  46              		.loc 1 2727 12 view .LVU7
  47 0006 DBB2     		uxtb	r3, r3
  48              	.LVL3:
2728:./Library/stm32f4xx_rtc.c ****     Value -= 10;
  49              		.loc 1 2728 5 is_stmt 1 view .LVU8
  50              		.loc 1 2728 11 is_stmt 0 view .LVU9
  51 0008 0A38     		subs	r0, r0, #10
  52              	.LVL4:
  53              		.loc 1 2728 11 view .LVU10
  54 000a C0B2     		uxtb	r0, r0
  55              	.LVL5:
  56              	.L2:
2725:./Library/stm32f4xx_rtc.c ****   {
  57              		.loc 1 2725 9 is_stmt 1 view .LVU11
  58 000c 0928     		cmp	r0, #9
  59 000e F9D8     		bhi	.L3
2729:./Library/stm32f4xx_rtc.c ****   }
2730:./Library/stm32f4xx_rtc.c ****   
2731:./Library/stm32f4xx_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
  60              		.loc 1 2731 3 view .LVU12
  61              		.loc 1 2731 12 is_stmt 0 view .LVU13
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 50


  62 0010 1B01     		lsls	r3, r3, #4
  63              	.LVL6:
  64              		.loc 1 2731 12 view .LVU14
  65 0012 DBB2     		uxtb	r3, r3
2732:./Library/stm32f4xx_rtc.c **** }
  66              		.loc 1 2732 1 view .LVU15
  67 0014 1843     		orrs	r0, r0, r3
  68              	.LVL7:
  69              		.loc 1 2732 1 view .LVU16
  70 0016 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE178:
  74              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	RTC_Bcd2ToByte:
  81              	.LVL8:
  82              	.LFB179:
2733:./Library/stm32f4xx_rtc.c **** 
2734:./Library/stm32f4xx_rtc.c **** /**
2735:./Library/stm32f4xx_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2736:./Library/stm32f4xx_rtc.c ****   * @param  Value: BCD value to be converted.
2737:./Library/stm32f4xx_rtc.c ****   * @retval Converted word
2738:./Library/stm32f4xx_rtc.c ****   */
2739:./Library/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
2740:./Library/stm32f4xx_rtc.c **** {
  83              		.loc 1 2740 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
2741:./Library/stm32f4xx_rtc.c ****   uint8_t tmp = 0;
  88              		.loc 1 2741 3 view .LVU18
2742:./Library/stm32f4xx_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
  89              		.loc 1 2742 3 view .LVU19
  90              		.loc 1 2742 43 is_stmt 0 view .LVU20
  91 0000 0309     		lsrs	r3, r0, #4
  92              		.loc 1 2742 7 view .LVU21
  93 0002 03EB8303 		add	r3, r3, r3, lsl #2
  94              	.LVL9:
2743:./Library/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
  95              		.loc 1 2743 3 is_stmt 1 view .LVU22
  96              		.loc 1 2743 24 is_stmt 0 view .LVU23
  97 0006 00F00F00 		and	r0, r0, #15
  98              	.LVL10:
  99              		.loc 1 2743 15 view .LVU24
 100 000a 00EB4300 		add	r0, r0, r3, lsl #1
2744:./Library/stm32f4xx_rtc.c **** }
 101              		.loc 1 2744 1 view .LVU25
 102 000e C0B2     		uxtb	r0, r0
 103 0010 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE179:
 107              		.section	.text.RTC_StructInit,"ax",%progbits
 108              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 51


 109              		.global	RTC_StructInit
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	RTC_StructInit:
 115              	.LVL11:
 116              	.LFB125:
 497:./Library/stm32f4xx_rtc.c ****   /* Initialize the RTC_HourFormat member */
 117              		.loc 1 497 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 499:./Library/stm32f4xx_rtc.c ****     
 122              		.loc 1 499 3 view .LVU27
 499:./Library/stm32f4xx_rtc.c ****     
 123              		.loc 1 499 34 is_stmt 0 view .LVU28
 124 0000 0023     		movs	r3, #0
 125 0002 0360     		str	r3, [r0]
 502:./Library/stm32f4xx_rtc.c **** 
 126              		.loc 1 502 3 is_stmt 1 view .LVU29
 502:./Library/stm32f4xx_rtc.c **** 
 127              		.loc 1 502 36 is_stmt 0 view .LVU30
 128 0004 7F23     		movs	r3, #127
 129 0006 4360     		str	r3, [r0, #4]
 505:./Library/stm32f4xx_rtc.c **** }
 130              		.loc 1 505 3 is_stmt 1 view .LVU31
 505:./Library/stm32f4xx_rtc.c **** }
 131              		.loc 1 505 35 is_stmt 0 view .LVU32
 132 0008 FF23     		movs	r3, #255
 133 000a 8360     		str	r3, [r0, #8]
 506:./Library/stm32f4xx_rtc.c **** 
 134              		.loc 1 506 1 view .LVU33
 135 000c 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE125:
 139              		.section	.text.RTC_WriteProtectionCmd,"ax",%progbits
 140              		.align	1
 141              		.global	RTC_WriteProtectionCmd
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	RTC_WriteProtectionCmd:
 147              	.LVL12:
 148              	.LFB126:
 519:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 149              		.loc 1 519 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 521:./Library/stm32f4xx_rtc.c ****     
 154              		.loc 1 521 3 view .LVU35
 523:./Library/stm32f4xx_rtc.c ****   {
 155              		.loc 1 523 3 view .LVU36
 523:./Library/stm32f4xx_rtc.c ****   {
 156              		.loc 1 523 6 is_stmt 0 view .LVU37
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 52


 157 0000 18B1     		cbz	r0, .L7
 526:./Library/stm32f4xx_rtc.c ****   }
 158              		.loc 1 526 5 is_stmt 1 view .LVU38
 526:./Library/stm32f4xx_rtc.c ****   }
 159              		.loc 1 526 14 is_stmt 0 view .LVU39
 160 0002 054B     		ldr	r3, .L9
 161 0004 FF22     		movs	r2, #255
 162 0006 5A62     		str	r2, [r3, #36]
 163 0008 7047     		bx	lr
 164              	.L7:
 531:./Library/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
 165              		.loc 1 531 5 is_stmt 1 view .LVU40
 531:./Library/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
 166              		.loc 1 531 14 is_stmt 0 view .LVU41
 167 000a 034B     		ldr	r3, .L9
 168 000c CA22     		movs	r2, #202
 169 000e 5A62     		str	r2, [r3, #36]
 532:./Library/stm32f4xx_rtc.c ****   }
 170              		.loc 1 532 5 is_stmt 1 view .LVU42
 532:./Library/stm32f4xx_rtc.c ****   }
 171              		.loc 1 532 14 is_stmt 0 view .LVU43
 172 0010 5322     		movs	r2, #83
 173 0012 5A62     		str	r2, [r3, #36]
 534:./Library/stm32f4xx_rtc.c **** 
 174              		.loc 1 534 1 view .LVU44
 175 0014 7047     		bx	lr
 176              	.L10:
 177 0016 00BF     		.align	2
 178              	.L9:
 179 0018 00280040 		.word	1073752064
 180              		.cfi_endproc
 181              	.LFE126:
 183              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 184              		.align	1
 185              		.global	RTC_EnterInitMode
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	RTC_EnterInitMode:
 191              	.LFB127:
 546:./Library/stm32f4xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 192              		.loc 1 546 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 82B0     		sub	sp, sp, #8
 198              	.LCFI0:
 199              		.cfi_def_cfa_offset 8
 547:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 200              		.loc 1 547 3 view .LVU46
 547:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 201              		.loc 1 547 17 is_stmt 0 view .LVU47
 202 0002 0023     		movs	r3, #0
 203 0004 0193     		str	r3, [sp, #4]
 548:./Library/stm32f4xx_rtc.c ****   uint32_t initstatus = 0x00;
 204              		.loc 1 548 3 is_stmt 1 view .LVU48
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 53


 205              	.LVL13:
 549:./Library/stm32f4xx_rtc.c ****      
 206              		.loc 1 549 3 view .LVU49
 552:./Library/stm32f4xx_rtc.c ****   {
 207              		.loc 1 552 3 view .LVU50
 552:./Library/stm32f4xx_rtc.c ****   {
 208              		.loc 1 552 11 is_stmt 0 view .LVU51
 209 0006 114B     		ldr	r3, .L18
 210 0008 DB68     		ldr	r3, [r3, #12]
 552:./Library/stm32f4xx_rtc.c ****   {
 211              		.loc 1 552 6 view .LVU52
 212 000a 13F0400F 		tst	r3, #64
 213 000e 17D1     		bne	.L15
 555:./Library/stm32f4xx_rtc.c ****     
 214              		.loc 1 555 5 is_stmt 1 view .LVU53
 555:./Library/stm32f4xx_rtc.c ****     
 215              		.loc 1 555 14 is_stmt 0 view .LVU54
 216 0010 0E4B     		ldr	r3, .L18
 217 0012 4FF0FF32 		mov	r2, #-1
 218 0016 DA60     		str	r2, [r3, #12]
 219              	.LVL14:
 220              	.L14:
 558:./Library/stm32f4xx_rtc.c ****     {
 221              		.loc 1 558 5 is_stmt 1 discriminator 2 view .LVU55
 560:./Library/stm32f4xx_rtc.c ****       initcounter++;  
 222              		.loc 1 560 7 discriminator 2 view .LVU56
 560:./Library/stm32f4xx_rtc.c ****       initcounter++;  
 223              		.loc 1 560 23 is_stmt 0 discriminator 2 view .LVU57
 224 0018 0C4B     		ldr	r3, .L18
 225 001a DA68     		ldr	r2, [r3, #12]
 560:./Library/stm32f4xx_rtc.c ****       initcounter++;  
 226              		.loc 1 560 18 discriminator 2 view .LVU58
 227 001c 02F04002 		and	r2, r2, #64
 228              	.LVL15:
 561:./Library/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 229              		.loc 1 561 7 is_stmt 1 discriminator 2 view .LVU59
 561:./Library/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 230              		.loc 1 561 18 is_stmt 0 discriminator 2 view .LVU60
 231 0020 019B     		ldr	r3, [sp, #4]
 232 0022 0133     		adds	r3, r3, #1
 233 0024 0193     		str	r3, [sp, #4]
 562:./Library/stm32f4xx_rtc.c ****     
 234              		.loc 1 562 12 is_stmt 1 discriminator 2 view .LVU61
 562:./Library/stm32f4xx_rtc.c ****     
 235              		.loc 1 562 26 is_stmt 0 discriminator 2 view .LVU62
 236 0026 019B     		ldr	r3, [sp, #4]
 562:./Library/stm32f4xx_rtc.c ****     
 237              		.loc 1 562 5 discriminator 2 view .LVU63
 238 0028 B3F5803F 		cmp	r3, #65536
 239 002c 01D0     		beq	.L13
 562:./Library/stm32f4xx_rtc.c ****     
 240              		.loc 1 562 47 discriminator 1 view .LVU64
 241 002e 002A     		cmp	r2, #0
 242 0030 F2D0     		beq	.L14
 243              	.L13:
 564:./Library/stm32f4xx_rtc.c ****     {
 244              		.loc 1 564 5 is_stmt 1 view .LVU65
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 54


 564:./Library/stm32f4xx_rtc.c ****     {
 245              		.loc 1 564 13 is_stmt 0 view .LVU66
 246 0032 064B     		ldr	r3, .L18
 247 0034 DB68     		ldr	r3, [r3, #12]
 564:./Library/stm32f4xx_rtc.c ****     {
 248              		.loc 1 564 8 view .LVU67
 249 0036 13F0400F 		tst	r3, #64
 250 003a 04D0     		beq	.L16
 566:./Library/stm32f4xx_rtc.c ****     }
 251              		.loc 1 566 14 view .LVU68
 252 003c 0120     		movs	r0, #1
 253 003e 00E0     		b	.L12
 254              	.LVL16:
 255              	.L15:
 575:./Library/stm32f4xx_rtc.c ****   } 
 256              		.loc 1 575 12 view .LVU69
 257 0040 0120     		movs	r0, #1
 258              	.LVL17:
 259              	.L12:
 578:./Library/stm32f4xx_rtc.c **** }
 260              		.loc 1 578 3 is_stmt 1 view .LVU70
 579:./Library/stm32f4xx_rtc.c **** 
 261              		.loc 1 579 1 is_stmt 0 view .LVU71
 262 0042 02B0     		add	sp, sp, #8
 263              	.LCFI1:
 264              		.cfi_remember_state
 265              		.cfi_def_cfa_offset 0
 266              		@ sp needed
 267 0044 7047     		bx	lr
 268              	.LVL18:
 269              	.L16:
 270              	.LCFI2:
 271              		.cfi_restore_state
 570:./Library/stm32f4xx_rtc.c ****     }        
 272              		.loc 1 570 14 view .LVU72
 273 0046 0020     		movs	r0, #0
 274 0048 FBE7     		b	.L12
 275              	.L19:
 276 004a 00BF     		.align	2
 277              	.L18:
 278 004c 00280040 		.word	1073752064
 279              		.cfi_endproc
 280              	.LFE127:
 282              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 283              		.align	1
 284              		.global	RTC_ExitInitMode
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	RTC_ExitInitMode:
 290              	.LFB128:
 591:./Library/stm32f4xx_rtc.c ****   /* Exit Initialization mode */
 291              		.loc 1 591 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 55


 593:./Library/stm32f4xx_rtc.c **** }
 296              		.loc 1 593 3 view .LVU74
 593:./Library/stm32f4xx_rtc.c **** }
 297              		.loc 1 593 12 is_stmt 0 view .LVU75
 298 0000 024A     		ldr	r2, .L21
 299 0002 D368     		ldr	r3, [r2, #12]
 300 0004 23F08003 		bic	r3, r3, #128
 301 0008 D360     		str	r3, [r2, #12]
 594:./Library/stm32f4xx_rtc.c **** 
 302              		.loc 1 594 1 view .LVU76
 303 000a 7047     		bx	lr
 304              	.L22:
 305              		.align	2
 306              	.L21:
 307 000c 00280040 		.word	1073752064
 308              		.cfi_endproc
 309              	.LFE128:
 311              		.section	.text.RTC_Init,"ax",%progbits
 312              		.align	1
 313              		.global	RTC_Init
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	RTC_Init:
 319              	.LVL19:
 320              	.LFB124:
 451:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 321              		.loc 1 451 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 451:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 325              		.loc 1 451 1 is_stmt 0 view .LVU78
 326 0000 10B5     		push	{r4, lr}
 327              	.LCFI3:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 4, -8
 330              		.cfi_offset 14, -4
 331 0002 0446     		mov	r4, r0
 452:./Library/stm32f4xx_rtc.c ****   
 332              		.loc 1 452 3 is_stmt 1 view .LVU79
 333              	.LVL20:
 455:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
 334              		.loc 1 455 3 view .LVU80
 456:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
 335              		.loc 1 456 3 view .LVU81
 457:./Library/stm32f4xx_rtc.c **** 
 336              		.loc 1 457 3 view .LVU82
 460:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 337              		.loc 1 460 3 view .LVU83
 460:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 338              		.loc 1 460 12 is_stmt 0 view .LVU84
 339 0004 0F4B     		ldr	r3, .L27
 340 0006 CA22     		movs	r2, #202
 341 0008 5A62     		str	r2, [r3, #36]
 461:./Library/stm32f4xx_rtc.c **** 
 342              		.loc 1 461 3 is_stmt 1 view .LVU85
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 56


 461:./Library/stm32f4xx_rtc.c **** 
 343              		.loc 1 461 12 is_stmt 0 view .LVU86
 344 000a 5322     		movs	r2, #83
 345 000c 5A62     		str	r2, [r3, #36]
 464:./Library/stm32f4xx_rtc.c ****   {
 346              		.loc 1 464 3 is_stmt 1 view .LVU87
 464:./Library/stm32f4xx_rtc.c ****   {
 347              		.loc 1 464 7 is_stmt 0 view .LVU88
 348 000e FFF7FEFF 		bl	RTC_EnterInitMode
 349              	.LVL21:
 464:./Library/stm32f4xx_rtc.c ****   {
 350              		.loc 1 464 6 view .LVU89
 351 0012 18B9     		cbnz	r0, .L26
 352              	.LVL22:
 353              	.L24:
 485:./Library/stm32f4xx_rtc.c ****   
 354              		.loc 1 485 3 is_stmt 1 view .LVU90
 485:./Library/stm32f4xx_rtc.c ****   
 355              		.loc 1 485 12 is_stmt 0 view .LVU91
 356 0014 0B4B     		ldr	r3, .L27
 357 0016 FF22     		movs	r2, #255
 358 0018 5A62     		str	r2, [r3, #36]
 487:./Library/stm32f4xx_rtc.c **** }
 359              		.loc 1 487 3 is_stmt 1 view .LVU92
 488:./Library/stm32f4xx_rtc.c **** 
 360              		.loc 1 488 1 is_stmt 0 view .LVU93
 361 001a 10BD     		pop	{r4, pc}
 362              	.LVL23:
 363              	.L26:
 471:./Library/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 364              		.loc 1 471 5 is_stmt 1 view .LVU94
 471:./Library/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 365              		.loc 1 471 13 is_stmt 0 view .LVU95
 366 001c 094B     		ldr	r3, .L27
 367 001e 9A68     		ldr	r2, [r3, #8]
 368 0020 22F04002 		bic	r2, r2, #64
 369 0024 9A60     		str	r2, [r3, #8]
 473:./Library/stm32f4xx_rtc.c ****   
 370              		.loc 1 473 5 is_stmt 1 view .LVU96
 473:./Library/stm32f4xx_rtc.c ****   
 371              		.loc 1 473 13 is_stmt 0 view .LVU97
 372 0026 9A68     		ldr	r2, [r3, #8]
 473:./Library/stm32f4xx_rtc.c ****   
 373              		.loc 1 473 43 view .LVU98
 374 0028 2168     		ldr	r1, [r4]
 473:./Library/stm32f4xx_rtc.c ****   
 375              		.loc 1 473 13 view .LVU99
 376 002a 0A43     		orrs	r2, r2, r1
 377 002c 9A60     		str	r2, [r3, #8]
 476:./Library/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 378              		.loc 1 476 5 is_stmt 1 view .LVU100
 476:./Library/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 379              		.loc 1 476 42 is_stmt 0 view .LVU101
 380 002e A268     		ldr	r2, [r4, #8]
 476:./Library/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 381              		.loc 1 476 15 view .LVU102
 382 0030 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 57


 477:./Library/stm32f4xx_rtc.c **** 
 383              		.loc 1 477 5 is_stmt 1 view .LVU103
 477:./Library/stm32f4xx_rtc.c **** 
 384              		.loc 1 477 15 is_stmt 0 view .LVU104
 385 0032 1A69     		ldr	r2, [r3, #16]
 477:./Library/stm32f4xx_rtc.c **** 
 386              		.loc 1 477 43 view .LVU105
 387 0034 6168     		ldr	r1, [r4, #4]
 477:./Library/stm32f4xx_rtc.c **** 
 388              		.loc 1 477 15 view .LVU106
 389 0036 42EA0142 		orr	r2, r2, r1, lsl #16
 390 003a 1A61     		str	r2, [r3, #16]
 480:./Library/stm32f4xx_rtc.c **** 
 391              		.loc 1 480 5 is_stmt 1 view .LVU107
 392 003c FFF7FEFF 		bl	RTC_ExitInitMode
 393              	.LVL24:
 482:./Library/stm32f4xx_rtc.c ****   }
 394              		.loc 1 482 5 view .LVU108
 482:./Library/stm32f4xx_rtc.c ****   }
 395              		.loc 1 482 12 is_stmt 0 view .LVU109
 396 0040 0120     		movs	r0, #1
 397 0042 E7E7     		b	.L24
 398              	.L28:
 399              		.align	2
 400              	.L27:
 401 0044 00280040 		.word	1073752064
 402              		.cfi_endproc
 403              	.LFE124:
 405              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 406              		.align	1
 407              		.global	RTC_WaitForSynchro
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	RTC_WaitForSynchro:
 413              	.LFB129:
 613:./Library/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 414              		.loc 1 613 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 8
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 82B0     		sub	sp, sp, #8
 420              	.LCFI4:
 421              		.cfi_def_cfa_offset 8
 614:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 422              		.loc 1 614 3 view .LVU111
 614:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 423              		.loc 1 614 17 is_stmt 0 view .LVU112
 424 0002 0023     		movs	r3, #0
 425 0004 0193     		str	r3, [sp, #4]
 615:./Library/stm32f4xx_rtc.c ****   uint32_t synchrostatus = 0x00;
 426              		.loc 1 615 3 is_stmt 1 view .LVU113
 427              	.LVL25:
 616:./Library/stm32f4xx_rtc.c **** 
 428              		.loc 1 616 3 view .LVU114
 619:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 58


 429              		.loc 1 619 3 view .LVU115
 619:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 430              		.loc 1 619 12 is_stmt 0 view .LVU116
 431 0006 114B     		ldr	r3, .L35
 432 0008 CA22     		movs	r2, #202
 433 000a 5A62     		str	r2, [r3, #36]
 620:./Library/stm32f4xx_rtc.c ****     
 434              		.loc 1 620 3 is_stmt 1 view .LVU117
 620:./Library/stm32f4xx_rtc.c ****     
 435              		.loc 1 620 12 is_stmt 0 view .LVU118
 436 000c 5322     		movs	r2, #83
 437 000e 5A62     		str	r2, [r3, #36]
 623:./Library/stm32f4xx_rtc.c ****     
 438              		.loc 1 623 3 is_stmt 1 view .LVU119
 623:./Library/stm32f4xx_rtc.c ****     
 439              		.loc 1 623 12 is_stmt 0 view .LVU120
 440 0010 DA68     		ldr	r2, [r3, #12]
 441 0012 22F0A002 		bic	r2, r2, #160
 442 0016 DA60     		str	r2, [r3, #12]
 443              	.LVL26:
 444              	.L31:
 626:./Library/stm32f4xx_rtc.c ****   {
 445              		.loc 1 626 3 is_stmt 1 discriminator 2 view .LVU121
 628:./Library/stm32f4xx_rtc.c ****     synchrocounter++;  
 446              		.loc 1 628 5 discriminator 2 view .LVU122
 628:./Library/stm32f4xx_rtc.c ****     synchrocounter++;  
 447              		.loc 1 628 24 is_stmt 0 discriminator 2 view .LVU123
 448 0018 0C4B     		ldr	r3, .L35
 449 001a DA68     		ldr	r2, [r3, #12]
 628:./Library/stm32f4xx_rtc.c ****     synchrocounter++;  
 450              		.loc 1 628 19 discriminator 2 view .LVU124
 451 001c 02F02002 		and	r2, r2, #32
 452              	.LVL27:
 629:./Library/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 453              		.loc 1 629 5 is_stmt 1 discriminator 2 view .LVU125
 629:./Library/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 454              		.loc 1 629 19 is_stmt 0 discriminator 2 view .LVU126
 455 0020 019B     		ldr	r3, [sp, #4]
 456 0022 0133     		adds	r3, r3, #1
 457 0024 0193     		str	r3, [sp, #4]
 630:./Library/stm32f4xx_rtc.c ****     
 458              		.loc 1 630 10 is_stmt 1 discriminator 2 view .LVU127
 630:./Library/stm32f4xx_rtc.c ****     
 459              		.loc 1 630 27 is_stmt 0 discriminator 2 view .LVU128
 460 0026 019B     		ldr	r3, [sp, #4]
 630:./Library/stm32f4xx_rtc.c ****     
 461              		.loc 1 630 3 discriminator 2 view .LVU129
 462 0028 B3F5003F 		cmp	r3, #131072
 463 002c 01D0     		beq	.L30
 630:./Library/stm32f4xx_rtc.c ****     
 464              		.loc 1 630 47 discriminator 1 view .LVU130
 465 002e 002A     		cmp	r2, #0
 466 0030 F2D0     		beq	.L31
 467              	.L30:
 632:./Library/stm32f4xx_rtc.c ****   {
 468              		.loc 1 632 3 is_stmt 1 view .LVU131
 632:./Library/stm32f4xx_rtc.c ****   {
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 59


 469              		.loc 1 632 11 is_stmt 0 view .LVU132
 470 0032 064B     		ldr	r3, .L35
 471 0034 DB68     		ldr	r3, [r3, #12]
 632:./Library/stm32f4xx_rtc.c ****   {
 472              		.loc 1 632 6 view .LVU133
 473 0036 13F0200F 		tst	r3, #32
 474 003a 05D0     		beq	.L33
 634:./Library/stm32f4xx_rtc.c ****   }
 475              		.loc 1 634 12 view .LVU134
 476 003c 0120     		movs	r0, #1
 477              	.L32:
 478              	.LVL28:
 642:./Library/stm32f4xx_rtc.c ****     
 479              		.loc 1 642 3 is_stmt 1 view .LVU135
 642:./Library/stm32f4xx_rtc.c ****     
 480              		.loc 1 642 12 is_stmt 0 view .LVU136
 481 003e 034B     		ldr	r3, .L35
 482 0040 FF22     		movs	r2, #255
 483              	.LVL29:
 642:./Library/stm32f4xx_rtc.c ****     
 484              		.loc 1 642 12 view .LVU137
 485 0042 5A62     		str	r2, [r3, #36]
 644:./Library/stm32f4xx_rtc.c **** }
 486              		.loc 1 644 3 is_stmt 1 view .LVU138
 645:./Library/stm32f4xx_rtc.c **** 
 487              		.loc 1 645 1 is_stmt 0 view .LVU139
 488 0044 02B0     		add	sp, sp, #8
 489              	.LCFI5:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 0
 492              		@ sp needed
 493 0046 7047     		bx	lr
 494              	.LVL30:
 495              	.L33:
 496              	.LCFI6:
 497              		.cfi_restore_state
 638:./Library/stm32f4xx_rtc.c ****   }        
 498              		.loc 1 638 12 view .LVU140
 499 0048 0020     		movs	r0, #0
 500 004a F8E7     		b	.L32
 501              	.L36:
 502              		.align	2
 503              	.L35:
 504 004c 00280040 		.word	1073752064
 505              		.cfi_endproc
 506              	.LFE129:
 508              		.section	.text.RTC_DeInit,"ax",%progbits
 509              		.align	1
 510              		.global	RTC_DeInit
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 515              	RTC_DeInit:
 516              	.LFB123:
 369:./Library/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 517              		.loc 1 369 1 is_stmt 1 view -0
 518              		.cfi_startproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 60


 519              		@ args = 0, pretend = 0, frame = 8
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521 0000 00B5     		push	{lr}
 522              	.LCFI7:
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 14, -4
 525 0002 83B0     		sub	sp, sp, #12
 526              	.LCFI8:
 527              		.cfi_def_cfa_offset 16
 370:./Library/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 528              		.loc 1 370 3 view .LVU142
 370:./Library/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 529              		.loc 1 370 17 is_stmt 0 view .LVU143
 530 0004 0023     		movs	r3, #0
 531 0006 0193     		str	r3, [sp, #4]
 371:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 532              		.loc 1 371 3 is_stmt 1 view .LVU144
 533              	.LVL31:
 372:./Library/stm32f4xx_rtc.c ****   
 534              		.loc 1 372 3 view .LVU145
 375:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 535              		.loc 1 375 3 view .LVU146
 375:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 536              		.loc 1 375 12 is_stmt 0 view .LVU147
 537 0008 214B     		ldr	r3, .L45
 538 000a CA22     		movs	r2, #202
 539 000c 5A62     		str	r2, [r3, #36]
 376:./Library/stm32f4xx_rtc.c **** 
 540              		.loc 1 376 3 is_stmt 1 view .LVU148
 376:./Library/stm32f4xx_rtc.c **** 
 541              		.loc 1 376 12 is_stmt 0 view .LVU149
 542 000e 5322     		movs	r2, #83
 543 0010 5A62     		str	r2, [r3, #36]
 379:./Library/stm32f4xx_rtc.c ****   {
 544              		.loc 1 379 3 is_stmt 1 view .LVU150
 379:./Library/stm32f4xx_rtc.c ****   {
 545              		.loc 1 379 7 is_stmt 0 view .LVU151
 546 0012 FFF7FEFF 		bl	RTC_EnterInitMode
 547              	.LVL32:
 379:./Library/stm32f4xx_rtc.c ****   {
 548              		.loc 1 379 6 view .LVU152
 549 0016 E0B1     		cbz	r0, .L38
 386:./Library/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 550              		.loc 1 386 5 is_stmt 1 view .LVU153
 386:./Library/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 551              		.loc 1 386 13 is_stmt 0 view .LVU154
 552 0018 1D4B     		ldr	r3, .L45
 553 001a 0022     		movs	r2, #0
 554 001c 1A60     		str	r2, [r3]
 387:./Library/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 555              		.loc 1 387 5 is_stmt 1 view .LVU155
 387:./Library/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 556              		.loc 1 387 13 is_stmt 0 view .LVU156
 557 001e 42F20112 		movw	r2, #8449
 558 0022 5A60     		str	r2, [r3, #4]
 389:./Library/stm32f4xx_rtc.c ****   
 559              		.loc 1 389 5 is_stmt 1 view .LVU157
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 61


 389:./Library/stm32f4xx_rtc.c ****   
 560              		.loc 1 389 13 is_stmt 0 view .LVU158
 561 0024 9A68     		ldr	r2, [r3, #8]
 562 0026 02F00702 		and	r2, r2, #7
 563 002a 9A60     		str	r2, [r3, #8]
 564              	.LVL33:
 565              	.L40:
 392:./Library/stm32f4xx_rtc.c ****     {
 566              		.loc 1 392 5 is_stmt 1 discriminator 2 view .LVU159
 394:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 567              		.loc 1 394 7 discriminator 2 view .LVU160
 394:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 568              		.loc 1 394 24 is_stmt 0 discriminator 2 view .LVU161
 569 002c 184B     		ldr	r3, .L45
 570 002e DA68     		ldr	r2, [r3, #12]
 394:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 571              		.loc 1 394 19 discriminator 2 view .LVU162
 572 0030 02F00402 		and	r2, r2, #4
 573              	.LVL34:
 395:./Library/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 574              		.loc 1 395 7 is_stmt 1 discriminator 2 view .LVU163
 395:./Library/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 575              		.loc 1 395 17 is_stmt 0 discriminator 2 view .LVU164
 576 0034 019B     		ldr	r3, [sp, #4]
 577 0036 0133     		adds	r3, r3, #1
 578 0038 0193     		str	r3, [sp, #4]
 396:./Library/stm32f4xx_rtc.c ****     
 579              		.loc 1 396 12 is_stmt 1 discriminator 2 view .LVU165
 396:./Library/stm32f4xx_rtc.c ****     
 580              		.loc 1 396 25 is_stmt 0 discriminator 2 view .LVU166
 581 003a 019B     		ldr	r3, [sp, #4]
 396:./Library/stm32f4xx_rtc.c ****     
 582              		.loc 1 396 5 discriminator 2 view .LVU167
 583 003c B3F5803F 		cmp	r3, #65536
 584 0040 01D0     		beq	.L39
 396:./Library/stm32f4xx_rtc.c ****     
 585              		.loc 1 396 46 discriminator 1 view .LVU168
 586 0042 002A     		cmp	r2, #0
 587 0044 F2D0     		beq	.L40
 588              	.L39:
 398:./Library/stm32f4xx_rtc.c ****     {
 589              		.loc 1 398 5 is_stmt 1 view .LVU169
 398:./Library/stm32f4xx_rtc.c ****     {
 590              		.loc 1 398 13 is_stmt 0 view .LVU170
 591 0046 124B     		ldr	r3, .L45
 592 0048 DB68     		ldr	r3, [r3, #12]
 398:./Library/stm32f4xx_rtc.c ****     {
 593              		.loc 1 398 8 view .LVU171
 594 004a 13F0040F 		tst	r3, #4
 595 004e 06D1     		bne	.L44
 400:./Library/stm32f4xx_rtc.c ****     }
 596              		.loc 1 400 14 view .LVU172
 597 0050 0020     		movs	r0, #0
 598              	.LVL35:
 599              	.L38:
 434:./Library/stm32f4xx_rtc.c ****   
 600              		.loc 1 434 3 is_stmt 1 view .LVU173
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 62


 434:./Library/stm32f4xx_rtc.c ****   
 601              		.loc 1 434 12 is_stmt 0 view .LVU174
 602 0052 0F4B     		ldr	r3, .L45
 603 0054 FF22     		movs	r2, #255
 604 0056 5A62     		str	r2, [r3, #36]
 436:./Library/stm32f4xx_rtc.c **** }
 605              		.loc 1 436 3 is_stmt 1 view .LVU175
 437:./Library/stm32f4xx_rtc.c **** 
 606              		.loc 1 437 1 is_stmt 0 view .LVU176
 607 0058 03B0     		add	sp, sp, #12
 608              	.LCFI9:
 609              		.cfi_remember_state
 610              		.cfi_def_cfa_offset 4
 611              		@ sp needed
 612 005a 5DF804FB 		ldr	pc, [sp], #4
 613              	.LVL36:
 614              	.L44:
 615              	.LCFI10:
 616              		.cfi_restore_state
 405:./Library/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 617              		.loc 1 405 7 is_stmt 1 view .LVU177
 405:./Library/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 618              		.loc 1 405 15 is_stmt 0 view .LVU178
 619 005e 0C4B     		ldr	r3, .L45
 620 0060 9A68     		ldr	r2, [r3, #8]
 621              	.LVL37:
 405:./Library/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 622              		.loc 1 405 15 view .LVU179
 623 0062 0022     		movs	r2, #0
 624 0064 9A60     		str	r2, [r3, #8]
 406:./Library/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 625              		.loc 1 406 7 is_stmt 1 view .LVU180
 406:./Library/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 626              		.loc 1 406 17 is_stmt 0 view .LVU181
 627 0066 4FF6FF71 		movw	r1, #65535
 628 006a 5961     		str	r1, [r3, #20]
 407:./Library/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 629              		.loc 1 407 7 is_stmt 1 view .LVU182
 407:./Library/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 630              		.loc 1 407 17 is_stmt 0 view .LVU183
 631 006c 0949     		ldr	r1, .L45+4
 632 006e 1961     		str	r1, [r3, #16]
 408:./Library/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 633              		.loc 1 408 7 is_stmt 1 view .LVU184
 408:./Library/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 634              		.loc 1 408 19 is_stmt 0 view .LVU185
 635 0070 9A61     		str	r2, [r3, #24]
 409:./Library/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 636              		.loc 1 409 7 is_stmt 1 view .LVU186
 409:./Library/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 637              		.loc 1 409 19 is_stmt 0 view .LVU187
 638 0072 DA61     		str	r2, [r3, #28]
 410:./Library/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)0x00000000;
 639              		.loc 1 410 7 is_stmt 1 view .LVU188
 410:./Library/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)0x00000000;
 640              		.loc 1 410 19 is_stmt 0 view .LVU189
 641 0074 1A62     		str	r2, [r3, #32]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 63


 411:./Library/stm32f4xx_rtc.c ****       RTC->CALR = (uint32_t)0x00000000;
 642              		.loc 1 411 7 is_stmt 1 view .LVU190
 411:./Library/stm32f4xx_rtc.c ****       RTC->CALR = (uint32_t)0x00000000;
 643              		.loc 1 411 19 is_stmt 0 view .LVU191
 644 0076 DA62     		str	r2, [r3, #44]
 412:./Library/stm32f4xx_rtc.c ****       RTC->ALRMASSR = (uint32_t)0x00000000;
 645              		.loc 1 412 7 is_stmt 1 view .LVU192
 412:./Library/stm32f4xx_rtc.c ****       RTC->ALRMASSR = (uint32_t)0x00000000;
 646              		.loc 1 412 17 is_stmt 0 view .LVU193
 647 0078 DA63     		str	r2, [r3, #60]
 413:./Library/stm32f4xx_rtc.c ****       RTC->ALRMBSSR = (uint32_t)0x00000000;
 648              		.loc 1 413 7 is_stmt 1 view .LVU194
 413:./Library/stm32f4xx_rtc.c ****       RTC->ALRMBSSR = (uint32_t)0x00000000;
 649              		.loc 1 413 21 is_stmt 0 view .LVU195
 650 007a 5A64     		str	r2, [r3, #68]
 414:./Library/stm32f4xx_rtc.c ****       
 651              		.loc 1 414 7 is_stmt 1 view .LVU196
 414:./Library/stm32f4xx_rtc.c ****       
 652              		.loc 1 414 21 is_stmt 0 view .LVU197
 653 007c 9A64     		str	r2, [r3, #72]
 417:./Library/stm32f4xx_rtc.c ****       
 654              		.loc 1 417 7 is_stmt 1 view .LVU198
 417:./Library/stm32f4xx_rtc.c ****       
 655              		.loc 1 417 16 is_stmt 0 view .LVU199
 656 007e DA60     		str	r2, [r3, #12]
 420:./Library/stm32f4xx_rtc.c ****   
 657              		.loc 1 420 7 is_stmt 1 view .LVU200
 420:./Library/stm32f4xx_rtc.c ****   
 658              		.loc 1 420 18 is_stmt 0 view .LVU201
 659 0080 1A64     		str	r2, [r3, #64]
 422:./Library/stm32f4xx_rtc.c ****       {
 660              		.loc 1 422 7 is_stmt 1 view .LVU202
 422:./Library/stm32f4xx_rtc.c ****       {
 661              		.loc 1 422 10 is_stmt 0 view .LVU203
 662 0082 FFF7FEFF 		bl	RTC_WaitForSynchro
 663              	.LVL38:
 422:./Library/stm32f4xx_rtc.c ****       {
 664              		.loc 1 422 9 view .LVU204
 665 0086 0028     		cmp	r0, #0
 666 0088 E3D0     		beq	.L38
 428:./Library/stm32f4xx_rtc.c ****       }
 667              		.loc 1 428 16 view .LVU205
 668 008a 0120     		movs	r0, #1
 669 008c E1E7     		b	.L38
 670              	.L46:
 671 008e 00BF     		.align	2
 672              	.L45:
 673 0090 00280040 		.word	1073752064
 674 0094 FF007F00 		.word	8323327
 675              		.cfi_endproc
 676              	.LFE123:
 678              		.section	.text.RTC_RefClockCmd,"ax",%progbits
 679              		.align	1
 680              		.global	RTC_RefClockCmd
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 64


 685              	RTC_RefClockCmd:
 686              	.LVL39:
 687              	.LFB130:
 656:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 688              		.loc 1 656 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 656:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 692              		.loc 1 656 1 is_stmt 0 view .LVU207
 693 0000 10B5     		push	{r4, lr}
 694              	.LCFI11:
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
 698 0002 0446     		mov	r4, r0
 657:./Library/stm32f4xx_rtc.c ****   
 699              		.loc 1 657 3 is_stmt 1 view .LVU208
 700              	.LVL40:
 660:./Library/stm32f4xx_rtc.c ****   
 701              		.loc 1 660 3 view .LVU209
 663:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 702              		.loc 1 663 3 view .LVU210
 663:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 703              		.loc 1 663 12 is_stmt 0 view .LVU211
 704 0004 0D4B     		ldr	r3, .L52
 705 0006 CA22     		movs	r2, #202
 706 0008 5A62     		str	r2, [r3, #36]
 664:./Library/stm32f4xx_rtc.c ****     
 707              		.loc 1 664 3 is_stmt 1 view .LVU212
 664:./Library/stm32f4xx_rtc.c ****     
 708              		.loc 1 664 12 is_stmt 0 view .LVU213
 709 000a 5322     		movs	r2, #83
 710 000c 5A62     		str	r2, [r3, #36]
 667:./Library/stm32f4xx_rtc.c ****   {
 711              		.loc 1 667 3 is_stmt 1 view .LVU214
 667:./Library/stm32f4xx_rtc.c ****   {
 712              		.loc 1 667 7 is_stmt 0 view .LVU215
 713 000e FFF7FEFF 		bl	RTC_EnterInitMode
 714              	.LVL41:
 667:./Library/stm32f4xx_rtc.c ****   {
 715              		.loc 1 667 6 view .LVU216
 716 0012 40B1     		cbz	r0, .L48
 673:./Library/stm32f4xx_rtc.c ****     {
 717              		.loc 1 673 5 is_stmt 1 view .LVU217
 673:./Library/stm32f4xx_rtc.c ****     {
 718              		.loc 1 673 8 is_stmt 0 view .LVU218
 719 0014 5CB1     		cbz	r4, .L49
 676:./Library/stm32f4xx_rtc.c ****     }
 720              		.loc 1 676 7 is_stmt 1 view .LVU219
 676:./Library/stm32f4xx_rtc.c ****     }
 721              		.loc 1 676 15 is_stmt 0 view .LVU220
 722 0016 094A     		ldr	r2, .L52
 723 0018 9368     		ldr	r3, [r2, #8]
 724 001a 43F01003 		orr	r3, r3, #16
 725 001e 9360     		str	r3, [r2, #8]
 726              	.L50:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 65


 684:./Library/stm32f4xx_rtc.c ****     
 727              		.loc 1 684 5 is_stmt 1 view .LVU221
 728 0020 FFF7FEFF 		bl	RTC_ExitInitMode
 729              	.LVL42:
 686:./Library/stm32f4xx_rtc.c ****   }
 730              		.loc 1 686 5 view .LVU222
 686:./Library/stm32f4xx_rtc.c ****   }
 731              		.loc 1 686 12 is_stmt 0 view .LVU223
 732 0024 0120     		movs	r0, #1
 733              	.LVL43:
 734              	.L48:
 690:./Library/stm32f4xx_rtc.c ****   
 735              		.loc 1 690 3 is_stmt 1 view .LVU224
 690:./Library/stm32f4xx_rtc.c ****   
 736              		.loc 1 690 12 is_stmt 0 view .LVU225
 737 0026 054B     		ldr	r3, .L52
 738 0028 FF22     		movs	r2, #255
 739 002a 5A62     		str	r2, [r3, #36]
 692:./Library/stm32f4xx_rtc.c **** }
 740              		.loc 1 692 3 is_stmt 1 view .LVU226
 693:./Library/stm32f4xx_rtc.c **** 
 741              		.loc 1 693 1 is_stmt 0 view .LVU227
 742 002c 10BD     		pop	{r4, pc}
 743              	.LVL44:
 744              	.L49:
 681:./Library/stm32f4xx_rtc.c ****     }
 745              		.loc 1 681 7 is_stmt 1 view .LVU228
 681:./Library/stm32f4xx_rtc.c ****     }
 746              		.loc 1 681 15 is_stmt 0 view .LVU229
 747 002e 034A     		ldr	r2, .L52
 748 0030 9368     		ldr	r3, [r2, #8]
 749 0032 23F01003 		bic	r3, r3, #16
 750 0036 9360     		str	r3, [r2, #8]
 751 0038 F2E7     		b	.L50
 752              	.L53:
 753 003a 00BF     		.align	2
 754              	.L52:
 755 003c 00280040 		.word	1073752064
 756              		.cfi_endproc
 757              	.LFE130:
 759              		.section	.text.RTC_BypassShadowCmd,"ax",%progbits
 760              		.align	1
 761              		.global	RTC_BypassShadowCmd
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 766              	RTC_BypassShadowCmd:
 767              	.LVL45:
 768              	.LFB131:
 704:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 769              		.loc 1 704 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 706:./Library/stm32f4xx_rtc.c **** 
 774              		.loc 1 706 3 view .LVU231
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 66


 709:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 775              		.loc 1 709 3 view .LVU232
 709:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 776              		.loc 1 709 12 is_stmt 0 view .LVU233
 777 0000 0A4B     		ldr	r3, .L57
 778 0002 CA22     		movs	r2, #202
 779 0004 5A62     		str	r2, [r3, #36]
 710:./Library/stm32f4xx_rtc.c ****   
 780              		.loc 1 710 3 is_stmt 1 view .LVU234
 710:./Library/stm32f4xx_rtc.c ****   
 781              		.loc 1 710 12 is_stmt 0 view .LVU235
 782 0006 5322     		movs	r2, #83
 783 0008 5A62     		str	r2, [r3, #36]
 712:./Library/stm32f4xx_rtc.c ****   {
 784              		.loc 1 712 3 is_stmt 1 view .LVU236
 712:./Library/stm32f4xx_rtc.c ****   {
 785              		.loc 1 712 6 is_stmt 0 view .LVU237
 786 000a 40B1     		cbz	r0, .L55
 715:./Library/stm32f4xx_rtc.c ****   }
 787              		.loc 1 715 5 is_stmt 1 view .LVU238
 715:./Library/stm32f4xx_rtc.c ****   }
 788              		.loc 1 715 13 is_stmt 0 view .LVU239
 789 000c 1A46     		mov	r2, r3
 790 000e 9B68     		ldr	r3, [r3, #8]
 791 0010 43F02003 		orr	r3, r3, #32
 792 0014 9360     		str	r3, [r2, #8]
 793              	.L56:
 724:./Library/stm32f4xx_rtc.c **** }
 794              		.loc 1 724 3 is_stmt 1 view .LVU240
 724:./Library/stm32f4xx_rtc.c **** }
 795              		.loc 1 724 12 is_stmt 0 view .LVU241
 796 0016 054B     		ldr	r3, .L57
 797 0018 FF22     		movs	r2, #255
 798 001a 5A62     		str	r2, [r3, #36]
 725:./Library/stm32f4xx_rtc.c **** 
 799              		.loc 1 725 1 view .LVU242
 800 001c 7047     		bx	lr
 801              	.L55:
 720:./Library/stm32f4xx_rtc.c ****   }
 802              		.loc 1 720 5 is_stmt 1 view .LVU243
 720:./Library/stm32f4xx_rtc.c ****   }
 803              		.loc 1 720 13 is_stmt 0 view .LVU244
 804 001e 034A     		ldr	r2, .L57
 805 0020 9368     		ldr	r3, [r2, #8]
 806 0022 03F0DF03 		and	r3, r3, #223
 807 0026 9360     		str	r3, [r2, #8]
 808 0028 F5E7     		b	.L56
 809              	.L58:
 810 002a 00BF     		.align	2
 811              	.L57:
 812 002c 00280040 		.word	1073752064
 813              		.cfi_endproc
 814              	.LFE131:
 816              		.section	.text.RTC_SetTime,"ax",%progbits
 817              		.align	1
 818              		.global	RTC_SetTime
 819              		.syntax unified
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 67


 820              		.thumb
 821              		.thumb_func
 823              	RTC_SetTime:
 824              	.LVL46:
 825              	.LFB132:
 759:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 826              		.loc 1 759 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 759:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 830              		.loc 1 759 1 is_stmt 0 view .LVU246
 831 0000 38B5     		push	{r3, r4, r5, lr}
 832              	.LCFI12:
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 3, -16
 835              		.cfi_offset 4, -12
 836              		.cfi_offset 5, -8
 837              		.cfi_offset 14, -4
 838 0002 0D46     		mov	r5, r1
 760:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 839              		.loc 1 760 3 is_stmt 1 view .LVU247
 840              	.LVL47:
 761:./Library/stm32f4xx_rtc.c ****     
 841              		.loc 1 761 3 view .LVU248
 764:./Library/stm32f4xx_rtc.c ****   
 842              		.loc 1 764 3 view .LVU249
 766:./Library/stm32f4xx_rtc.c ****   {
 843              		.loc 1 766 3 view .LVU250
 766:./Library/stm32f4xx_rtc.c ****   {
 844              		.loc 1 766 6 is_stmt 0 view .LVU251
 845 0004 0346     		mov	r3, r0
 846 0006 E8B9     		cbnz	r0, .L60
 768:./Library/stm32f4xx_rtc.c ****     {
 847              		.loc 1 768 5 is_stmt 1 view .LVU252
 768:./Library/stm32f4xx_rtc.c ****     {
 848              		.loc 1 768 13 is_stmt 0 view .LVU253
 849 0008 254A     		ldr	r2, .L70
 850 000a 9268     		ldr	r2, [r2, #8]
 768:./Library/stm32f4xx_rtc.c ****     {
 851              		.loc 1 768 8 view .LVU254
 852 000c 12F0400F 		tst	r2, #64
 853 0010 01D1     		bne	.L61
 775:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 854              		.loc 1 775 7 is_stmt 1 view .LVU255
 775:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 855              		.loc 1 775 31 is_stmt 0 view .LVU256
 856 0012 0022     		movs	r2, #0
 857 0014 CA70     		strb	r2, [r1, #3]
 858              	.L61:
 859              	.LVL48:
 792:./Library/stm32f4xx_rtc.c ****     }
 860              		.loc 1 792 7 is_stmt 1 view .LVU257
 794:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
 861              		.loc 1 794 5 view .LVU258
 795:./Library/stm32f4xx_rtc.c ****   }
 862              		.loc 1 795 5 view .LVU259
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 68


 799:./Library/stm32f4xx_rtc.c ****   {
 863              		.loc 1 799 3 view .LVU260
 799:./Library/stm32f4xx_rtc.c ****   {
 864              		.loc 1 799 6 is_stmt 0 view .LVU261
 865 0016 EBB1     		cbz	r3, .L62
 801:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 866              		.loc 1 801 5 is_stmt 1 view .LVU262
 801:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 867              		.loc 1 801 41 is_stmt 0 view .LVU263
 868 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 802:./Library/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 869              		.loc 1 802 40 view .LVU264
 870 001a 6C78     		ldrb	r4, [r5, #1]	@ zero_extendqisi2
 802:./Library/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 871              		.loc 1 802 55 view .LVU265
 872 001c 2402     		lsls	r4, r4, #8
 801:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 873              		.loc 1 801 61 view .LVU266
 874 001e 44EA0344 		orr	r4, r4, r3, lsl #16
 803:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 875              		.loc 1 803 39 view .LVU267
 876 0022 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 877              	.LVL49:
 802:./Library/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 878              		.loc 1 802 61 view .LVU268
 879 0024 0443     		orrs	r4, r4, r0
 804:./Library/stm32f4xx_rtc.c ****   }  
 880              		.loc 1 804 40 view .LVU269
 881 0026 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 801:./Library/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 882              		.loc 1 801 12 view .LVU270
 883 0028 44EA0044 		orr	r4, r4, r0, lsl #16
 884              	.LVL50:
 885              	.L63:
 815:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 886              		.loc 1 815 3 is_stmt 1 view .LVU271
 815:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 887              		.loc 1 815 12 is_stmt 0 view .LVU272
 888 002c 1C4B     		ldr	r3, .L70
 889 002e CA22     		movs	r2, #202
 890 0030 5A62     		str	r2, [r3, #36]
 816:./Library/stm32f4xx_rtc.c **** 
 891              		.loc 1 816 3 is_stmt 1 view .LVU273
 816:./Library/stm32f4xx_rtc.c **** 
 892              		.loc 1 816 12 is_stmt 0 view .LVU274
 893 0032 5322     		movs	r2, #83
 894 0034 5A62     		str	r2, [r3, #36]
 819:./Library/stm32f4xx_rtc.c ****   {
 895              		.loc 1 819 3 is_stmt 1 view .LVU275
 819:./Library/stm32f4xx_rtc.c ****   {
 896              		.loc 1 819 7 is_stmt 0 view .LVU276
 897 0036 FFF7FEFF 		bl	RTC_EnterInitMode
 898              	.LVL51:
 819:./Library/stm32f4xx_rtc.c ****   {
 899              		.loc 1 819 6 view .LVU277
 900 003a E0B9     		cbnz	r0, .L68
 901              	.LVL52:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 69


 902              	.L64:
 849:./Library/stm32f4xx_rtc.c ****     
 903              		.loc 1 849 3 is_stmt 1 view .LVU278
 849:./Library/stm32f4xx_rtc.c ****     
 904              		.loc 1 849 12 is_stmt 0 view .LVU279
 905 003c 184B     		ldr	r3, .L70
 906 003e FF22     		movs	r2, #255
 907 0040 5A62     		str	r2, [r3, #36]
 851:./Library/stm32f4xx_rtc.c **** }
 908              		.loc 1 851 3 is_stmt 1 view .LVU280
 852:./Library/stm32f4xx_rtc.c **** 
 909              		.loc 1 852 1 is_stmt 0 view .LVU281
 910 0042 38BD     		pop	{r3, r4, r5, pc}
 911              	.LVL53:
 912              	.L60:
 783:./Library/stm32f4xx_rtc.c ****     {
 913              		.loc 1 783 5 is_stmt 1 view .LVU282
 783:./Library/stm32f4xx_rtc.c ****     {
 914              		.loc 1 783 13 is_stmt 0 view .LVU283
 915 0044 164A     		ldr	r2, .L70
 916 0046 9268     		ldr	r2, [r2, #8]
 783:./Library/stm32f4xx_rtc.c ****     {
 917              		.loc 1 783 8 view .LVU284
 918 0048 12F0400F 		tst	r2, #64
 919 004c E3D1     		bne	.L61
 791:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 920              		.loc 1 791 7 is_stmt 1 view .LVU285
 791:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 921              		.loc 1 791 31 is_stmt 0 view .LVU286
 922 004e 0022     		movs	r2, #0
 923 0050 CA70     		strb	r2, [r1, #3]
 924 0052 E0E7     		b	.L61
 925              	.LVL54:
 926              	.L62:
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 927              		.loc 1 808 5 is_stmt 1 view .LVU287
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 928              		.loc 1 808 36 is_stmt 0 view .LVU288
 929 0054 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 930              	.LVL55:
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 931              		.loc 1 808 36 view .LVU289
 932 0056 FFF7FEFF 		bl	RTC_ByteToBcd2
 933              	.LVL56:
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 934              		.loc 1 808 78 view .LVU290
 935 005a 0404     		lsls	r4, r0, #16
 809:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 936              		.loc 1 809 31 view .LVU291
 937 005c 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 938 005e FFF7FEFF 		bl	RTC_ByteToBcd2
 939              	.LVL57:
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 940              		.loc 1 808 85 view .LVU292
 941 0062 44EA0024 		orr	r4, r4, r0, lsl #8
 810:./Library/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 942              		.loc 1 810 31 view .LVU293
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 70


 943 0066 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 944 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 945              	.LVL58:
 809:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 946              		.loc 1 809 81 view .LVU294
 947 006c 0443     		orrs	r4, r4, r0
 811:./Library/stm32f4xx_rtc.c ****   }  
 948              		.loc 1 811 46 view .LVU295
 949 006e E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 950              		.loc 1 808 12 view .LVU296
 951 0070 44EA0044 		orr	r4, r4, r0, lsl #16
 952              	.LVL59:
 808:./Library/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 953              		.loc 1 808 12 view .LVU297
 954 0074 DAE7     		b	.L63
 955              	.L68:
 826:./Library/stm32f4xx_rtc.c **** 
 956              		.loc 1 826 5 is_stmt 1 view .LVU298
 826:./Library/stm32f4xx_rtc.c **** 
 957              		.loc 1 826 15 is_stmt 0 view .LVU299
 958 0076 04F07F34 		and	r4, r4, #2139062143
 959              	.LVL60:
 826:./Library/stm32f4xx_rtc.c **** 
 960              		.loc 1 826 15 view .LVU300
 961 007a 24F0FE44 		bic	r4, r4, #2130706432
 826:./Library/stm32f4xx_rtc.c **** 
 962              		.loc 1 826 13 view .LVU301
 963 007e 084D     		ldr	r5, .L70
 964              	.LVL61:
 826:./Library/stm32f4xx_rtc.c **** 
 965              		.loc 1 826 13 view .LVU302
 966 0080 2C60     		str	r4, [r5]
 829:./Library/stm32f4xx_rtc.c **** 
 967              		.loc 1 829 5 is_stmt 1 view .LVU303
 968 0082 FFF7FEFF 		bl	RTC_ExitInitMode
 969              	.LVL62:
 832:./Library/stm32f4xx_rtc.c ****     {
 970              		.loc 1 832 5 view .LVU304
 832:./Library/stm32f4xx_rtc.c ****     {
 971              		.loc 1 832 13 is_stmt 0 view .LVU305
 972 0086 AB68     		ldr	r3, [r5, #8]
 832:./Library/stm32f4xx_rtc.c ****     {
 973              		.loc 1 832 8 view .LVU306
 974 0088 13F0200F 		tst	r3, #32
 975 008c 01D0     		beq	.L69
 845:./Library/stm32f4xx_rtc.c ****     }
 976              		.loc 1 845 14 view .LVU307
 977 008e 0120     		movs	r0, #1
 978 0090 D4E7     		b	.L64
 979              	.L69:
 834:./Library/stm32f4xx_rtc.c ****     {
 980              		.loc 1 834 5 is_stmt 1 view .LVU308
 834:./Library/stm32f4xx_rtc.c ****     {
 981              		.loc 1 834 8 is_stmt 0 view .LVU309
 982 0092 FFF7FEFF 		bl	RTC_WaitForSynchro
 983              	.LVL63:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 71


 834:./Library/stm32f4xx_rtc.c ****     {
 984              		.loc 1 834 7 view .LVU310
 985 0096 0028     		cmp	r0, #0
 986 0098 D0D0     		beq	.L64
 840:./Library/stm32f4xx_rtc.c ****     }
 987              		.loc 1 840 14 view .LVU311
 988 009a 0120     		movs	r0, #1
 989 009c CEE7     		b	.L64
 990              	.L71:
 991 009e 00BF     		.align	2
 992              	.L70:
 993 00a0 00280040 		.word	1073752064
 994              		.cfi_endproc
 995              	.LFE132:
 997              		.section	.text.RTC_TimeStructInit,"ax",%progbits
 998              		.align	1
 999              		.global	RTC_TimeStructInit
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	RTC_TimeStructInit:
 1005              	.LVL64:
 1006              	.LFB133:
 862:./Library/stm32f4xx_rtc.c ****   /* Time = 00h:00min:00sec */
 1007              		.loc 1 862 1 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		@ link register save eliminated.
 864:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 1012              		.loc 1 864 3 view .LVU313
 864:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 1013              		.loc 1 864 27 is_stmt 0 view .LVU314
 1014 0000 0023     		movs	r3, #0
 1015 0002 C370     		strb	r3, [r0, #3]
 865:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 1016              		.loc 1 865 3 is_stmt 1 view .LVU315
 865:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 1017              		.loc 1 865 29 is_stmt 0 view .LVU316
 1018 0004 0370     		strb	r3, [r0]
 866:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 1019              		.loc 1 866 3 is_stmt 1 view .LVU317
 866:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 1020              		.loc 1 866 31 is_stmt 0 view .LVU318
 1021 0006 4370     		strb	r3, [r0, #1]
 867:./Library/stm32f4xx_rtc.c **** }
 1022              		.loc 1 867 3 is_stmt 1 view .LVU319
 867:./Library/stm32f4xx_rtc.c **** }
 1023              		.loc 1 867 31 is_stmt 0 view .LVU320
 1024 0008 8370     		strb	r3, [r0, #2]
 868:./Library/stm32f4xx_rtc.c **** 
 1025              		.loc 1 868 1 view .LVU321
 1026 000a 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE133:
 1030              		.section	.text.RTC_GetTime,"ax",%progbits
 1031              		.align	1
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 72


 1032              		.global	RTC_GetTime
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1037              	RTC_GetTime:
 1038              	.LVL65:
 1039              	.LFB134:
 881:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1040              		.loc 1 881 1 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 881:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1044              		.loc 1 881 1 is_stmt 0 view .LVU323
 1045 0000 70B5     		push	{r4, r5, r6, lr}
 1046              	.LCFI13:
 1047              		.cfi_def_cfa_offset 16
 1048              		.cfi_offset 4, -16
 1049              		.cfi_offset 5, -12
 1050              		.cfi_offset 6, -8
 1051              		.cfi_offset 14, -4
 1052 0002 0C46     		mov	r4, r1
 882:./Library/stm32f4xx_rtc.c **** 
 1053              		.loc 1 882 3 is_stmt 1 view .LVU324
 1054              	.LVL66:
 885:./Library/stm32f4xx_rtc.c **** 
 1055              		.loc 1 885 3 view .LVU325
 888:./Library/stm32f4xx_rtc.c ****   
 1056              		.loc 1 888 3 view .LVU326
 888:./Library/stm32f4xx_rtc.c ****   
 1057              		.loc 1 888 26 is_stmt 0 view .LVU327
 1058 0004 0E4B     		ldr	r3, .L76
 1059 0006 1D68     		ldr	r5, [r3]
 1060              	.LVL67:
 891:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 1061              		.loc 1 891 3 is_stmt 1 view .LVU328
 891:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 1062              		.loc 1 891 31 is_stmt 0 view .LVU329
 1063 0008 C5F30642 		ubfx	r2, r5, #16, #7
 1064 000c C5F30541 		ubfx	r1, r5, #16, #6
 1065              	.LVL68:
 891:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 1066              		.loc 1 891 29 view .LVU330
 1067 0010 2170     		strb	r1, [r4]
 892:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1068              		.loc 1 892 3 is_stmt 1 view .LVU331
 892:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1069              		.loc 1 892 33 is_stmt 0 view .LVU332
 1070 0012 C5F30626 		ubfx	r6, r5, #8, #7
 892:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1071              		.loc 1 892 31 view .LVU333
 1072 0016 6670     		strb	r6, [r4, #1]
 893:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 1073              		.loc 1 893 3 is_stmt 1 view .LVU334
 893:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 1074              		.loc 1 893 33 is_stmt 0 view .LVU335
 1075 0018 05F07F05 		and	r5, r5, #127
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 73


 1076              	.LVL69:
 893:./Library/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 1077              		.loc 1 893 31 view .LVU336
 1078 001c A570     		strb	r5, [r4, #2]
 894:./Library/stm32f4xx_rtc.c **** 
 1079              		.loc 1 894 3 is_stmt 1 view .LVU337
 894:./Library/stm32f4xx_rtc.c **** 
 1080              		.loc 1 894 29 is_stmt 0 view .LVU338
 1081 001e 02F04003 		and	r3, r2, #64
 894:./Library/stm32f4xx_rtc.c **** 
 1082              		.loc 1 894 27 view .LVU339
 1083 0022 E370     		strb	r3, [r4, #3]
 897:./Library/stm32f4xx_rtc.c ****   {
 1084              		.loc 1 897 3 is_stmt 1 view .LVU340
 897:./Library/stm32f4xx_rtc.c ****   {
 1085              		.loc 1 897 6 is_stmt 0 view .LVU341
 1086 0024 58B9     		cbnz	r0, .L73
 900:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1087              		.loc 1 900 5 is_stmt 1 view .LVU342
 900:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1088              		.loc 1 900 42 is_stmt 0 view .LVU343
 1089 0026 0846     		mov	r0, r1
 1090              	.LVL70:
 900:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1091              		.loc 1 900 42 view .LVU344
 1092 0028 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1093              	.LVL71:
 900:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1094              		.loc 1 900 31 view .LVU345
 1095 002c 2070     		strb	r0, [r4]
 901:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 1096              		.loc 1 901 5 is_stmt 1 view .LVU346
 901:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 1097              		.loc 1 901 44 is_stmt 0 view .LVU347
 1098 002e 3046     		mov	r0, r6
 1099 0030 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1100              	.LVL72:
 901:./Library/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 1101              		.loc 1 901 33 view .LVU348
 1102 0034 6070     		strb	r0, [r4, #1]
 902:./Library/stm32f4xx_rtc.c ****   }
 1103              		.loc 1 902 5 is_stmt 1 view .LVU349
 902:./Library/stm32f4xx_rtc.c ****   }
 1104              		.loc 1 902 44 is_stmt 0 view .LVU350
 1105 0036 2846     		mov	r0, r5
 1106 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1107              	.LVL73:
 902:./Library/stm32f4xx_rtc.c ****   }
 1108              		.loc 1 902 33 view .LVU351
 1109 003c A070     		strb	r0, [r4, #2]
 1110              	.L73:
 904:./Library/stm32f4xx_rtc.c **** 
 1111              		.loc 1 904 1 view .LVU352
 1112 003e 70BD     		pop	{r4, r5, r6, pc}
 1113              	.LVL74:
 1114              	.L77:
 904:./Library/stm32f4xx_rtc.c **** 
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 74


 1115              		.loc 1 904 1 view .LVU353
 1116              		.align	2
 1117              	.L76:
 1118 0040 00280040 		.word	1073752064
 1119              		.cfi_endproc
 1120              	.LFE134:
 1122              		.section	.text.RTC_GetSubSecond,"ax",%progbits
 1123              		.align	1
 1124              		.global	RTC_GetSubSecond
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1129              	RTC_GetSubSecond:
 1130              	.LFB135:
 914:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1131              		.loc 1 914 1 is_stmt 1 view -0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              		@ link register save eliminated.
 915:./Library/stm32f4xx_rtc.c ****   
 1136              		.loc 1 915 3 view .LVU355
 1137              	.LVL75:
 918:./Library/stm32f4xx_rtc.c ****   
 1138              		.loc 1 918 3 view .LVU356
 918:./Library/stm32f4xx_rtc.c ****   
 1139              		.loc 1 918 10 is_stmt 0 view .LVU357
 1140 0000 014B     		ldr	r3, .L79
 1141 0002 986A     		ldr	r0, [r3, #40]
 1142              	.LVL76:
 921:./Library/stm32f4xx_rtc.c ****   
 1143              		.loc 1 921 3 is_stmt 1 view .LVU358
 1144 0004 5B68     		ldr	r3, [r3, #4]
 923:./Library/stm32f4xx_rtc.c **** }
 1145              		.loc 1 923 3 view .LVU359
 924:./Library/stm32f4xx_rtc.c **** 
 1146              		.loc 1 924 1 is_stmt 0 view .LVU360
 1147 0006 7047     		bx	lr
 1148              	.L80:
 1149              		.align	2
 1150              	.L79:
 1151 0008 00280040 		.word	1073752064
 1152              		.cfi_endproc
 1153              	.LFE135:
 1155              		.section	.text.RTC_SetDate,"ax",%progbits
 1156              		.align	1
 1157              		.global	RTC_SetDate
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1162              	RTC_SetDate:
 1163              	.LVL77:
 1164              	.LFB136:
 939:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1165              		.loc 1 939 1 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 75


 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 939:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1169              		.loc 1 939 1 is_stmt 0 view .LVU362
 1170 0000 38B5     		push	{r3, r4, r5, lr}
 1171              	.LCFI14:
 1172              		.cfi_def_cfa_offset 16
 1173              		.cfi_offset 3, -16
 1174              		.cfi_offset 4, -12
 1175              		.cfi_offset 5, -8
 1176              		.cfi_offset 14, -4
 1177 0002 0D46     		mov	r5, r1
 940:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 1178              		.loc 1 940 3 is_stmt 1 view .LVU363
 1179              	.LVL78:
 941:./Library/stm32f4xx_rtc.c ****   
 1180              		.loc 1 941 3 view .LVU364
 944:./Library/stm32f4xx_rtc.c **** 
 1181              		.loc 1 944 3 view .LVU365
 946:./Library/stm32f4xx_rtc.c ****   {
 1182              		.loc 1 946 3 view .LVU366
 946:./Library/stm32f4xx_rtc.c ****   {
 1183              		.loc 1 946 6 is_stmt 0 view .LVU367
 1184 0004 0246     		mov	r2, r0
 1185 0006 38B9     		cbnz	r0, .L82
 946:./Library/stm32f4xx_rtc.c ****   {
 1186              		.loc 1 946 57 discriminator 1 view .LVU368
 1187 0008 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 946:./Library/stm32f4xx_rtc.c ****   {
 1188              		.loc 1 946 38 discriminator 1 view .LVU369
 1189 000a 13F0100F 		tst	r3, #16
 1190 000e 03D0     		beq	.L82
 948:./Library/stm32f4xx_rtc.c ****   }  
 1191              		.loc 1 948 5 is_stmt 1 view .LVU370
 948:./Library/stm32f4xx_rtc.c ****   }  
 1192              		.loc 1 948 60 is_stmt 0 view .LVU371
 1193 0010 03F0EF03 		and	r3, r3, #239
 948:./Library/stm32f4xx_rtc.c ****   }  
 1194              		.loc 1 948 81 view .LVU372
 1195 0014 0A33     		adds	r3, r3, #10
 948:./Library/stm32f4xx_rtc.c ****   }  
 1196              		.loc 1 948 31 view .LVU373
 1197 0016 4B70     		strb	r3, [r1, #1]
 1198              	.L82:
 950:./Library/stm32f4xx_rtc.c ****   {
 1199              		.loc 1 950 3 is_stmt 1 view .LVU374
 1200              	.LVL79:
 962:./Library/stm32f4xx_rtc.c ****   }
 1201              		.loc 1 962 5 view .LVU375
 964:./Library/stm32f4xx_rtc.c **** 
 1202              		.loc 1 964 3 view .LVU376
 967:./Library/stm32f4xx_rtc.c ****   {
 1203              		.loc 1 967 3 view .LVU377
 967:./Library/stm32f4xx_rtc.c ****   {
 1204              		.loc 1 967 6 is_stmt 0 view .LVU378
 1205 0018 AAB1     		cbz	r2, .L83
 969:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1206              		.loc 1 969 5 is_stmt 1 view .LVU379
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 76


 969:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1207              		.loc 1 969 41 is_stmt 0 view .LVU380
 1208 001a EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
 970:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1209              		.loc 1 970 41 view .LVU381
 1210 001c 6C78     		ldrb	r4, [r5, #1]	@ zero_extendqisi2
 970:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1211              		.loc 1 970 54 view .LVU382
 1212 001e 2402     		lsls	r4, r4, #8
 969:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1213              		.loc 1 969 60 view .LVU383
 1214 0020 44EA0344 		orr	r4, r4, r3, lsl #16
 971:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 1215              		.loc 1 971 40 view .LVU384
 1216 0024 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1217              	.LVL80:
 970:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1218              		.loc 1 970 60 view .LVU385
 1219 0026 0443     		orrs	r4, r4, r0
 972:./Library/stm32f4xx_rtc.c ****   }  
 1220              		.loc 1 972 41 view .LVU386
 1221 0028 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 969:./Library/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1222              		.loc 1 969 12 view .LVU387
 1223 002a 44EA4034 		orr	r4, r4, r0, lsl #13
 1224              	.LVL81:
 1225              	.L84:
 983:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1226              		.loc 1 983 3 is_stmt 1 view .LVU388
 983:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1227              		.loc 1 983 12 is_stmt 0 view .LVU389
 1228 002e 184B     		ldr	r3, .L91
 1229 0030 CA22     		movs	r2, #202
 1230 0032 5A62     		str	r2, [r3, #36]
 984:./Library/stm32f4xx_rtc.c **** 
 1231              		.loc 1 984 3 is_stmt 1 view .LVU390
 984:./Library/stm32f4xx_rtc.c **** 
 1232              		.loc 1 984 12 is_stmt 0 view .LVU391
 1233 0034 5322     		movs	r2, #83
 1234 0036 5A62     		str	r2, [r3, #36]
 987:./Library/stm32f4xx_rtc.c ****   {
 1235              		.loc 1 987 3 is_stmt 1 view .LVU392
 987:./Library/stm32f4xx_rtc.c ****   {
 1236              		.loc 1 987 7 is_stmt 0 view .LVU393
 1237 0038 FFF7FEFF 		bl	RTC_EnterInitMode
 1238              	.LVL82:
 987:./Library/stm32f4xx_rtc.c ****   {
 1239              		.loc 1 987 6 view .LVU394
 1240 003c A0B9     		cbnz	r0, .L89
 1241              	.LVL83:
 1242              	.L85:
1017:./Library/stm32f4xx_rtc.c ****   
 1243              		.loc 1 1017 3 is_stmt 1 view .LVU395
1017:./Library/stm32f4xx_rtc.c ****   
 1244              		.loc 1 1017 12 is_stmt 0 view .LVU396
 1245 003e 144B     		ldr	r3, .L91
 1246 0040 FF22     		movs	r2, #255
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 77


 1247 0042 5A62     		str	r2, [r3, #36]
1019:./Library/stm32f4xx_rtc.c **** }
 1248              		.loc 1 1019 3 is_stmt 1 view .LVU397
1020:./Library/stm32f4xx_rtc.c **** 
 1249              		.loc 1 1020 1 is_stmt 0 view .LVU398
 1250 0044 38BD     		pop	{r3, r4, r5, pc}
 1251              	.LVL84:
 1252              	.L83:
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1253              		.loc 1 976 5 is_stmt 1 view .LVU399
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1254              		.loc 1 976 26 is_stmt 0 view .LVU400
 1255 0046 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 1256              	.LVL85:
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1257              		.loc 1 976 26 view .LVU401
 1258 0048 FFF7FEFF 		bl	RTC_ByteToBcd2
 1259              	.LVL86:
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1260              		.loc 1 976 67 view .LVU402
 1261 004c 0404     		lsls	r4, r0, #16
 977:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 1262              		.loc 1 977 26 view .LVU403
 1263 004e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1264 0050 FFF7FEFF 		bl	RTC_ByteToBcd2
 1265              	.LVL87:
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1266              		.loc 1 976 74 view .LVU404
 1267 0054 44EA0024 		orr	r4, r4, r0, lsl #8
 978:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 1268              		.loc 1 978 26 view .LVU405
 1269 0058 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1270 005a FFF7FEFF 		bl	RTC_ByteToBcd2
 1271              	.LVL88:
 977:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 1272              		.loc 1 977 74 view .LVU406
 1273 005e 0443     		orrs	r4, r4, r0
 979:./Library/stm32f4xx_rtc.c ****   }
 1274              		.loc 1 979 40 view .LVU407
 1275 0060 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1276              		.loc 1 976 12 view .LVU408
 1277 0062 44EA4034 		orr	r4, r4, r0, lsl #13
 1278              	.LVL89:
 976:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1279              		.loc 1 976 12 view .LVU409
 1280 0066 E2E7     		b	.L84
 1281              	.L89:
 994:./Library/stm32f4xx_rtc.c **** 
 1282              		.loc 1 994 5 is_stmt 1 view .LVU410
 994:./Library/stm32f4xx_rtc.c **** 
 1283              		.loc 1 994 15 is_stmt 0 view .LVU411
 1284 0068 24F07F44 		bic	r4, r4, #-16777216
 1285              	.LVL90:
 994:./Library/stm32f4xx_rtc.c **** 
 1286              		.loc 1 994 15 view .LVU412
 1287 006c 24F0C004 		bic	r4, r4, #192
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 78


 994:./Library/stm32f4xx_rtc.c **** 
 1288              		.loc 1 994 13 view .LVU413
 1289 0070 074D     		ldr	r5, .L91
 1290              	.LVL91:
 994:./Library/stm32f4xx_rtc.c **** 
 1291              		.loc 1 994 13 view .LVU414
 1292 0072 6C60     		str	r4, [r5, #4]
 997:./Library/stm32f4xx_rtc.c **** 
 1293              		.loc 1 997 5 is_stmt 1 view .LVU415
 1294 0074 FFF7FEFF 		bl	RTC_ExitInitMode
 1295              	.LVL92:
1000:./Library/stm32f4xx_rtc.c ****     {
 1296              		.loc 1 1000 5 view .LVU416
1000:./Library/stm32f4xx_rtc.c ****     {
 1297              		.loc 1 1000 13 is_stmt 0 view .LVU417
 1298 0078 AB68     		ldr	r3, [r5, #8]
1000:./Library/stm32f4xx_rtc.c ****     {
 1299              		.loc 1 1000 8 view .LVU418
 1300 007a 13F0200F 		tst	r3, #32
 1301 007e 01D0     		beq	.L90
1013:./Library/stm32f4xx_rtc.c ****     }
 1302              		.loc 1 1013 14 view .LVU419
 1303 0080 0120     		movs	r0, #1
 1304 0082 DCE7     		b	.L85
 1305              	.L90:
1002:./Library/stm32f4xx_rtc.c ****     {
 1306              		.loc 1 1002 5 is_stmt 1 view .LVU420
1002:./Library/stm32f4xx_rtc.c ****     {
 1307              		.loc 1 1002 8 is_stmt 0 view .LVU421
 1308 0084 FFF7FEFF 		bl	RTC_WaitForSynchro
 1309              	.LVL93:
1002:./Library/stm32f4xx_rtc.c ****     {
 1310              		.loc 1 1002 7 view .LVU422
 1311 0088 0028     		cmp	r0, #0
 1312 008a D8D0     		beq	.L85
1008:./Library/stm32f4xx_rtc.c ****     }
 1313              		.loc 1 1008 14 view .LVU423
 1314 008c 0120     		movs	r0, #1
 1315 008e D6E7     		b	.L85
 1316              	.L92:
 1317              		.align	2
 1318              	.L91:
 1319 0090 00280040 		.word	1073752064
 1320              		.cfi_endproc
 1321              	.LFE136:
 1323              		.section	.text.RTC_DateStructInit,"ax",%progbits
 1324              		.align	1
 1325              		.global	RTC_DateStructInit
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1330              	RTC_DateStructInit:
 1331              	.LVL94:
 1332              	.LFB137:
1030:./Library/stm32f4xx_rtc.c ****   /* Monday, January 01 xx00 */
 1333              		.loc 1 1030 1 is_stmt 1 view -0
 1334              		.cfi_startproc
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 79


 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
1032:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 1338              		.loc 1 1032 3 view .LVU425
1032:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 1339              		.loc 1 1032 31 is_stmt 0 view .LVU426
 1340 0000 0123     		movs	r3, #1
 1341 0002 0370     		strb	r3, [r0]
1033:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 1342              		.loc 1 1033 3 is_stmt 1 view .LVU427
1033:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 1343              		.loc 1 1033 28 is_stmt 0 view .LVU428
 1344 0004 8370     		strb	r3, [r0, #2]
1034:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 1345              		.loc 1 1034 3 is_stmt 1 view .LVU429
1034:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 1346              		.loc 1 1034 29 is_stmt 0 view .LVU430
 1347 0006 4370     		strb	r3, [r0, #1]
1035:./Library/stm32f4xx_rtc.c **** }
 1348              		.loc 1 1035 3 is_stmt 1 view .LVU431
1035:./Library/stm32f4xx_rtc.c **** }
 1349              		.loc 1 1035 28 is_stmt 0 view .LVU432
 1350 0008 0023     		movs	r3, #0
 1351 000a C370     		strb	r3, [r0, #3]
1036:./Library/stm32f4xx_rtc.c **** 
 1352              		.loc 1 1036 1 view .LVU433
 1353 000c 7047     		bx	lr
 1354              		.cfi_endproc
 1355              	.LFE137:
 1357              		.section	.text.RTC_GetDate,"ax",%progbits
 1358              		.align	1
 1359              		.global	RTC_GetDate
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1364              	RTC_GetDate:
 1365              	.LVL95:
 1366              	.LFB138:
1049:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1367              		.loc 1 1049 1 is_stmt 1 view -0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
1049:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1371              		.loc 1 1049 1 is_stmt 0 view .LVU435
 1372 0000 70B5     		push	{r4, r5, r6, lr}
 1373              	.LCFI15:
 1374              		.cfi_def_cfa_offset 16
 1375              		.cfi_offset 4, -16
 1376              		.cfi_offset 5, -12
 1377              		.cfi_offset 6, -8
 1378              		.cfi_offset 14, -4
1050:./Library/stm32f4xx_rtc.c **** 
 1379              		.loc 1 1050 3 is_stmt 1 view .LVU436
 1380              	.LVL96:
1053:./Library/stm32f4xx_rtc.c ****   
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 80


 1381              		.loc 1 1053 3 view .LVU437
1056:./Library/stm32f4xx_rtc.c **** 
 1382              		.loc 1 1056 3 view .LVU438
1056:./Library/stm32f4xx_rtc.c **** 
 1383              		.loc 1 1056 26 is_stmt 0 view .LVU439
 1384 0002 0E4B     		ldr	r3, .L97
 1385 0004 5B68     		ldr	r3, [r3, #4]
 1386              	.LVL97:
1059:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1387              		.loc 1 1059 3 is_stmt 1 view .LVU440
1059:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1388              		.loc 1 1059 30 is_stmt 0 view .LVU441
 1389 0006 C3F30742 		ubfx	r2, r3, #16, #8
1059:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1390              		.loc 1 1059 28 view .LVU442
 1391 000a CA70     		strb	r2, [r1, #3]
1060:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1392              		.loc 1 1060 3 is_stmt 1 view .LVU443
1060:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1393              		.loc 1 1060 31 is_stmt 0 view .LVU444
 1394 000c C3F30426 		ubfx	r6, r3, #8, #5
1060:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1395              		.loc 1 1060 29 view .LVU445
 1396 0010 4E70     		strb	r6, [r1, #1]
1061:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
 1397              		.loc 1 1061 3 is_stmt 1 view .LVU446
1061:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
 1398              		.loc 1 1061 30 is_stmt 0 view .LVU447
 1399 0012 03F03F05 		and	r5, r3, #63
1061:./Library/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
 1400              		.loc 1 1061 28 view .LVU448
 1401 0016 8D70     		strb	r5, [r1, #2]
1062:./Library/stm32f4xx_rtc.c **** 
 1402              		.loc 1 1062 3 is_stmt 1 view .LVU449
1062:./Library/stm32f4xx_rtc.c **** 
 1403              		.loc 1 1062 33 is_stmt 0 view .LVU450
 1404 0018 C3F34233 		ubfx	r3, r3, #13, #3
 1405              	.LVL98:
1062:./Library/stm32f4xx_rtc.c **** 
 1406              		.loc 1 1062 31 view .LVU451
 1407 001c 0B70     		strb	r3, [r1]
1065:./Library/stm32f4xx_rtc.c ****   {
 1408              		.loc 1 1065 3 is_stmt 1 view .LVU452
1065:./Library/stm32f4xx_rtc.c ****   {
 1409              		.loc 1 1065 6 is_stmt 0 view .LVU453
 1410 001e 60B9     		cbnz	r0, .L94
 1411 0020 0C46     		mov	r4, r1
1068:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1412              		.loc 1 1068 5 is_stmt 1 view .LVU454
1068:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1413              		.loc 1 1068 41 is_stmt 0 view .LVU455
 1414 0022 1046     		mov	r0, r2
 1415              	.LVL99:
1068:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1416              		.loc 1 1068 41 view .LVU456
 1417 0024 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1418              	.LVL100:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 81


1068:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1419              		.loc 1 1068 30 view .LVU457
 1420 0028 E070     		strb	r0, [r4, #3]
1069:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1421              		.loc 1 1069 5 is_stmt 1 view .LVU458
1069:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1422              		.loc 1 1069 42 is_stmt 0 view .LVU459
 1423 002a 3046     		mov	r0, r6
 1424 002c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1425              	.LVL101:
1069:./Library/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1426              		.loc 1 1069 31 view .LVU460
 1427 0030 6070     		strb	r0, [r4, #1]
1070:./Library/stm32f4xx_rtc.c ****   }
 1428              		.loc 1 1070 5 is_stmt 1 view .LVU461
1070:./Library/stm32f4xx_rtc.c ****   }
 1429              		.loc 1 1070 41 is_stmt 0 view .LVU462
 1430 0032 2846     		mov	r0, r5
 1431 0034 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1432              	.LVL102:
1070:./Library/stm32f4xx_rtc.c ****   }
 1433              		.loc 1 1070 30 view .LVU463
 1434 0038 A070     		strb	r0, [r4, #2]
 1435              	.LVL103:
 1436              	.L94:
1072:./Library/stm32f4xx_rtc.c **** 
 1437              		.loc 1 1072 1 view .LVU464
 1438 003a 70BD     		pop	{r4, r5, r6, pc}
 1439              	.L98:
 1440              		.align	2
 1441              	.L97:
 1442 003c 00280040 		.word	1073752064
 1443              		.cfi_endproc
 1444              	.LFE138:
 1446              		.section	.text.RTC_SetAlarm,"ax",%progbits
 1447              		.align	1
 1448              		.global	RTC_SetAlarm
 1449              		.syntax unified
 1450              		.thumb
 1451              		.thumb_func
 1453              	RTC_SetAlarm:
 1454              	.LVL104:
 1455              	.LFB139:
1109:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1456              		.loc 1 1109 1 is_stmt 1 view -0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
1109:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1460              		.loc 1 1109 1 is_stmt 0 view .LVU466
 1461 0000 70B5     		push	{r4, r5, r6, lr}
 1462              	.LCFI16:
 1463              		.cfi_def_cfa_offset 16
 1464              		.cfi_offset 4, -16
 1465              		.cfi_offset 5, -12
 1466              		.cfi_offset 6, -8
 1467              		.cfi_offset 14, -4
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 82


 1468 0002 0D46     		mov	r5, r1
 1469 0004 1646     		mov	r6, r2
1110:./Library/stm32f4xx_rtc.c ****   
 1470              		.loc 1 1110 3 is_stmt 1 view .LVU467
 1471              	.LVL105:
1113:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
 1472              		.loc 1 1113 3 view .LVU468
1114:./Library/stm32f4xx_rtc.c ****   assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
 1473              		.loc 1 1114 3 view .LVU469
1115:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
 1474              		.loc 1 1115 3 view .LVU470
1116:./Library/stm32f4xx_rtc.c **** 
 1475              		.loc 1 1116 3 view .LVU471
1118:./Library/stm32f4xx_rtc.c ****   {
 1476              		.loc 1 1118 3 view .LVU472
1118:./Library/stm32f4xx_rtc.c ****   {
 1477              		.loc 1 1118 6 is_stmt 0 view .LVU473
 1478 0006 0346     		mov	r3, r0
 1479 0008 30BB     		cbnz	r0, .L100
1120:./Library/stm32f4xx_rtc.c ****     {
 1480              		.loc 1 1120 5 is_stmt 1 view .LVU474
1120:./Library/stm32f4xx_rtc.c ****     {
 1481              		.loc 1 1120 13 is_stmt 0 view .LVU475
 1482 000a 254A     		ldr	r2, .L110
 1483              	.LVL106:
1120:./Library/stm32f4xx_rtc.c ****     {
 1484              		.loc 1 1120 13 view .LVU476
 1485 000c 9268     		ldr	r2, [r2, #8]
1120:./Library/stm32f4xx_rtc.c ****     {
 1486              		.loc 1 1120 8 view .LVU477
 1487 000e 12F0400F 		tst	r2, #64
 1488 0012 01D1     		bne	.L102
1127:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
 1489              		.loc 1 1127 7 is_stmt 1 view .LVU478
1127:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
 1490              		.loc 1 1127 46 is_stmt 0 view .LVU479
 1491 0014 0022     		movs	r2, #0
 1492 0016 F270     		strb	r2, [r6, #3]
1128:./Library/stm32f4xx_rtc.c ****     }
 1493              		.loc 1 1128 7 is_stmt 1 view .LVU480
1130:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
 1494              		.loc 1 1130 5 view .LVU481
1131:./Library/stm32f4xx_rtc.c ****     
 1495              		.loc 1 1131 5 view .LVU482
1133:./Library/stm32f4xx_rtc.c ****     {
 1496              		.loc 1 1133 5 view .LVU483
 1497              	.LVL107:
 1498              	.L102:
1167:./Library/stm32f4xx_rtc.c ****     }    
 1499              		.loc 1 1167 7 view .LVU484
1172:./Library/stm32f4xx_rtc.c ****   {
 1500              		.loc 1 1172 3 view .LVU485
1172:./Library/stm32f4xx_rtc.c ****   {
 1501              		.loc 1 1172 6 is_stmt 0 view .LVU486
 1502 0018 33B3     		cbz	r3, .L104
1174:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1503              		.loc 1 1174 5 is_stmt 1 view .LVU487
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 83


1174:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1504              		.loc 1 1174 57 is_stmt 0 view .LVU488
 1505 001a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
1175:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1506              		.loc 1 1175 57 view .LVU489
 1507 001c 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 1508              	.LVL108:
1175:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1509              		.loc 1 1175 71 view .LVU490
 1510 001e 0002     		lsls	r0, r0, #8
1174:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1511              		.loc 1 1174 76 view .LVU491
 1512 0020 40EA0340 		orr	r0, r0, r3, lsl #16
1176:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1513              		.loc 1 1176 56 view .LVU492
 1514 0024 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
1175:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1515              		.loc 1 1175 77 view .LVU493
 1516 0026 1843     		orrs	r0, r0, r3
1177:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1517              		.loc 1 1177 57 view .LVU494
 1518 0028 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
1176:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1519              		.loc 1 1176 70 view .LVU495
 1520 002a 40EA0340 		orr	r0, r0, r3, lsl #16
1178:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1521              		.loc 1 1178 42 view .LVU496
 1522 002e 337B     		ldrb	r3, [r6, #12]	@ zero_extendqisi2
1177:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1523              		.loc 1 1177 74 view .LVU497
 1524 0030 40EA0360 		orr	r0, r0, r3, lsl #24
1179:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
 1525              		.loc 1 1179 41 view .LVU498
 1526 0034 B368     		ldr	r3, [r6, #8]
1178:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1527              		.loc 1 1178 73 view .LVU499
 1528 0036 1843     		orrs	r0, r0, r3
1180:./Library/stm32f4xx_rtc.c ****   }  
 1529              		.loc 1 1180 41 view .LVU500
 1530 0038 7368     		ldr	r3, [r6, #4]
1174:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1531              		.loc 1 1174 12 view .LVU501
 1532 003a 1843     		orrs	r0, r0, r3
 1533              	.LVL109:
 1534              	.L105:
1194:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1535              		.loc 1 1194 3 is_stmt 1 view .LVU502
1194:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1536              		.loc 1 1194 12 is_stmt 0 view .LVU503
 1537 003c 184B     		ldr	r3, .L110
 1538 003e CA22     		movs	r2, #202
 1539 0040 5A62     		str	r2, [r3, #36]
1195:./Library/stm32f4xx_rtc.c **** 
 1540              		.loc 1 1195 3 is_stmt 1 view .LVU504
1195:./Library/stm32f4xx_rtc.c **** 
 1541              		.loc 1 1195 12 is_stmt 0 view .LVU505
 1542 0042 5322     		movs	r2, #83
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 84


 1543 0044 5A62     		str	r2, [r3, #36]
1198:./Library/stm32f4xx_rtc.c ****   {
 1544              		.loc 1 1198 3 is_stmt 1 view .LVU506
1198:./Library/stm32f4xx_rtc.c ****   {
 1545              		.loc 1 1198 6 is_stmt 0 view .LVU507
 1546 0046 B5F5807F 		cmp	r5, #256
 1547 004a 27D0     		beq	.L109
1204:./Library/stm32f4xx_rtc.c ****   }
 1548              		.loc 1 1204 5 is_stmt 1 view .LVU508
1204:./Library/stm32f4xx_rtc.c ****   }
 1549              		.loc 1 1204 17 is_stmt 0 view .LVU509
 1550 004c 144B     		ldr	r3, .L110
 1551 004e 1862     		str	r0, [r3, #32]
 1552              	.L107:
1208:./Library/stm32f4xx_rtc.c **** }
 1553              		.loc 1 1208 3 is_stmt 1 view .LVU510
1208:./Library/stm32f4xx_rtc.c **** }
 1554              		.loc 1 1208 12 is_stmt 0 view .LVU511
 1555 0050 134B     		ldr	r3, .L110
 1556 0052 FF22     		movs	r2, #255
 1557 0054 5A62     		str	r2, [r3, #36]
1209:./Library/stm32f4xx_rtc.c **** 
 1558              		.loc 1 1209 1 view .LVU512
 1559 0056 70BD     		pop	{r4, r5, r6, pc}
 1560              	.LVL110:
 1561              	.L100:
1144:./Library/stm32f4xx_rtc.c ****     {
 1562              		.loc 1 1144 5 is_stmt 1 view .LVU513
1144:./Library/stm32f4xx_rtc.c ****     {
 1563              		.loc 1 1144 13 is_stmt 0 view .LVU514
 1564 0058 114A     		ldr	r2, .L110
 1565              	.LVL111:
1144:./Library/stm32f4xx_rtc.c ****     {
 1566              		.loc 1 1144 13 view .LVU515
 1567 005a 9268     		ldr	r2, [r2, #8]
1144:./Library/stm32f4xx_rtc.c ****     {
 1568              		.loc 1 1144 8 view .LVU516
 1569 005c 12F0400F 		tst	r2, #64
 1570 0060 DAD1     		bne	.L102
1152:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
 1571              		.loc 1 1152 7 is_stmt 1 view .LVU517
1152:./Library/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
 1572              		.loc 1 1152 46 is_stmt 0 view .LVU518
 1573 0062 0022     		movs	r2, #0
 1574 0064 F270     		strb	r2, [r6, #3]
 1575              	.LVL112:
1153:./Library/stm32f4xx_rtc.c ****     }
 1576              		.loc 1 1153 7 is_stmt 1 view .LVU519
1156:./Library/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
 1577              		.loc 1 1156 5 view .LVU520
1157:./Library/stm32f4xx_rtc.c ****     
 1578              		.loc 1 1157 5 view .LVU521
1159:./Library/stm32f4xx_rtc.c ****     {
 1579              		.loc 1 1159 5 view .LVU522
 1580 0066 D7E7     		b	.L102
 1581              	.L104:
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 85


 1582              		.loc 1 1184 5 view .LVU523
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1583              		.loc 1 1184 26 is_stmt 0 view .LVU524
 1584 0068 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1585              	.LVL113:
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1586              		.loc 1 1184 26 view .LVU525
 1587 006a FFF7FEFF 		bl	RTC_ByteToBcd2
 1588              	.LVL114:
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1589              		.loc 1 1184 83 view .LVU526
 1590 006e 0404     		lsls	r4, r0, #16
1185:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1591              		.loc 1 1185 26 view .LVU527
 1592 0070 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 1593 0072 FFF7FEFF 		bl	RTC_ByteToBcd2
 1594              	.LVL115:
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1595              		.loc 1 1184 90 view .LVU528
 1596 0076 44EA0024 		orr	r4, r4, r0, lsl #8
1186:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1597              		.loc 1 1186 26 view .LVU529
 1598 007a B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 1599 007c FFF7FEFF 		bl	RTC_ByteToBcd2
 1600              	.LVL116:
1185:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1601              		.loc 1 1185 91 view .LVU530
 1602 0080 0443     		orrs	r4, r4, r0
1187:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1603              		.loc 1 1187 57 view .LVU531
 1604 0082 F078     		ldrb	r0, [r6, #3]	@ zero_extendqisi2
1186:./Library/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1605              		.loc 1 1186 86 view .LVU532
 1606 0084 44EA0044 		orr	r4, r4, r0, lsl #16
1188:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1607              		.loc 1 1188 26 view .LVU533
 1608 0088 307B     		ldrb	r0, [r6, #12]	@ zero_extendqisi2
 1609 008a FFF7FEFF 		bl	RTC_ByteToBcd2
 1610              	.LVL117:
1187:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1611              		.loc 1 1187 74 view .LVU534
 1612 008e 44EA0060 		orr	r0, r4, r0, lsl #24
1189:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
 1613              		.loc 1 1189 41 view .LVU535
 1614 0092 B468     		ldr	r4, [r6, #8]
1188:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1615              		.loc 1 1188 87 view .LVU536
 1616 0094 2043     		orrs	r0, r0, r4
1190:./Library/stm32f4xx_rtc.c ****   } 
 1617              		.loc 1 1190 41 view .LVU537
 1618 0096 7368     		ldr	r3, [r6, #4]
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1619              		.loc 1 1184 12 view .LVU538
 1620 0098 1843     		orrs	r0, r0, r3
 1621              	.LVL118:
1184:./Library/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1622              		.loc 1 1184 12 view .LVU539
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 86


 1623 009a CFE7     		b	.L105
 1624              	.L109:
1200:./Library/stm32f4xx_rtc.c ****   }
 1625              		.loc 1 1200 5 is_stmt 1 view .LVU540
1200:./Library/stm32f4xx_rtc.c ****   }
 1626              		.loc 1 1200 17 is_stmt 0 view .LVU541
 1627 009c D861     		str	r0, [r3, #28]
 1628 009e D7E7     		b	.L107
 1629              	.L111:
 1630              		.align	2
 1631              	.L110:
 1632 00a0 00280040 		.word	1073752064
 1633              		.cfi_endproc
 1634              	.LFE139:
 1636              		.section	.text.RTC_AlarmStructInit,"ax",%progbits
 1637              		.align	1
 1638              		.global	RTC_AlarmStructInit
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1643              	RTC_AlarmStructInit:
 1644              	.LVL119:
 1645              	.LFB140:
1220:./Library/stm32f4xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 1646              		.loc 1 1220 1 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              		@ link register save eliminated.
1222:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 1651              		.loc 1 1222 3 view .LVU543
1222:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 1652              		.loc 1 1222 42 is_stmt 0 view .LVU544
 1653 0000 0023     		movs	r3, #0
 1654 0002 C370     		strb	r3, [r0, #3]
1223:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
 1655              		.loc 1 1223 3 is_stmt 1 view .LVU545
1223:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
 1656              		.loc 1 1223 44 is_stmt 0 view .LVU546
 1657 0004 0370     		strb	r3, [r0]
1224:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
 1658              		.loc 1 1224 3 is_stmt 1 view .LVU547
1224:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
 1659              		.loc 1 1224 46 is_stmt 0 view .LVU548
 1660 0006 4370     		strb	r3, [r0, #1]
1225:./Library/stm32f4xx_rtc.c **** 
 1661              		.loc 1 1225 3 is_stmt 1 view .LVU549
1225:./Library/stm32f4xx_rtc.c **** 
 1662              		.loc 1 1225 46 is_stmt 0 view .LVU550
 1663 0008 8370     		strb	r3, [r0, #2]
1228:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 1664              		.loc 1 1228 3 is_stmt 1 view .LVU551
1228:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 1665              		.loc 1 1228 44 is_stmt 0 view .LVU552
 1666 000a 8360     		str	r3, [r0, #8]
1229:./Library/stm32f4xx_rtc.c **** 
 1667              		.loc 1 1229 3 is_stmt 1 view .LVU553
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 87


1229:./Library/stm32f4xx_rtc.c **** 
 1668              		.loc 1 1229 41 is_stmt 0 view .LVU554
 1669 000c 0122     		movs	r2, #1
 1670 000e 0273     		strb	r2, [r0, #12]
1232:./Library/stm32f4xx_rtc.c **** }
 1671              		.loc 1 1232 3 is_stmt 1 view .LVU555
1232:./Library/stm32f4xx_rtc.c **** }
 1672              		.loc 1 1232 34 is_stmt 0 view .LVU556
 1673 0010 4360     		str	r3, [r0, #4]
1233:./Library/stm32f4xx_rtc.c **** 
 1674              		.loc 1 1233 1 view .LVU557
 1675 0012 7047     		bx	lr
 1676              		.cfi_endproc
 1677              	.LFE140:
 1679              		.section	.text.RTC_GetAlarm,"ax",%progbits
 1680              		.align	1
 1681              		.global	RTC_GetAlarm
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1686              	RTC_GetAlarm:
 1687              	.LVL120:
 1688              	.LFB141:
1250:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1689              		.loc 1 1250 1 is_stmt 1 view -0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
1250:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1693              		.loc 1 1250 1 is_stmt 0 view .LVU559
 1694 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1695              	.LCFI17:
 1696              		.cfi_def_cfa_offset 24
 1697              		.cfi_offset 4, -24
 1698              		.cfi_offset 5, -20
 1699              		.cfi_offset 6, -16
 1700              		.cfi_offset 7, -12
 1701              		.cfi_offset 8, -8
 1702              		.cfi_offset 14, -4
 1703 0004 0546     		mov	r5, r0
 1704 0006 1446     		mov	r4, r2
1251:./Library/stm32f4xx_rtc.c **** 
 1705              		.loc 1 1251 3 is_stmt 1 view .LVU560
 1706              	.LVL121:
1254:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm)); 
 1707              		.loc 1 1254 3 view .LVU561
1255:./Library/stm32f4xx_rtc.c **** 
 1708              		.loc 1 1255 3 view .LVU562
1258:./Library/stm32f4xx_rtc.c ****   {
 1709              		.loc 1 1258 3 view .LVU563
1258:./Library/stm32f4xx_rtc.c ****   {
 1710              		.loc 1 1258 6 is_stmt 0 view .LVU564
 1711 0008 B1F5807F 		cmp	r1, #256
 1712 000c 2BD0     		beq	.L118
1264:./Library/stm32f4xx_rtc.c ****   }
 1713              		.loc 1 1264 5 is_stmt 1 view .LVU565
1264:./Library/stm32f4xx_rtc.c ****   }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 88


 1714              		.loc 1 1264 12 is_stmt 0 view .LVU566
 1715 000e 174B     		ldr	r3, .L119
 1716 0010 1B6A     		ldr	r3, [r3, #32]
 1717              	.LVL122:
 1718              	.L115:
1268:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
 1719              		.loc 1 1268 3 is_stmt 1 view .LVU567
1268:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
 1720              		.loc 1 1268 46 is_stmt 0 view .LVU568
 1721 0012 C3F30742 		ubfx	r2, r3, #16, #8
 1722              	.LVL123:
1268:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
 1723              		.loc 1 1268 46 view .LVU569
 1724 0016 C3F30540 		ubfx	r0, r3, #16, #6
 1725              	.LVL124:
1268:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
 1726              		.loc 1 1268 44 view .LVU570
 1727 001a 2070     		strb	r0, [r4]
1270:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
 1728              		.loc 1 1270 3 is_stmt 1 view .LVU571
1270:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
 1729              		.loc 1 1270 48 is_stmt 0 view .LVU572
 1730 001c C3F30627 		ubfx	r7, r3, #8, #7
1270:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
 1731              		.loc 1 1270 46 view .LVU573
 1732 0020 6770     		strb	r7, [r4, #1]
1272:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
 1733              		.loc 1 1272 3 is_stmt 1 view .LVU574
1272:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
 1734              		.loc 1 1272 48 is_stmt 0 view .LVU575
 1735 0022 03F07F06 		and	r6, r3, #127
1272:./Library/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
 1736              		.loc 1 1272 46 view .LVU576
 1737 0026 A670     		strb	r6, [r4, #2]
1274:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1738              		.loc 1 1274 3 is_stmt 1 view .LVU577
1274:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1739              		.loc 1 1274 44 is_stmt 0 view .LVU578
 1740 0028 02F04002 		and	r2, r2, #64
1274:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1741              		.loc 1 1274 42 view .LVU579
 1742 002c E270     		strb	r2, [r4, #3]
1275:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1743              		.loc 1 1275 3 is_stmt 1 view .LVU580
1275:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1744              		.loc 1 1275 43 is_stmt 0 view .LVU581
 1745 002e C3F30568 		ubfx	r8, r3, #24, #6
1275:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1746              		.loc 1 1275 41 view .LVU582
 1747 0032 84F80C80 		strb	r8, [r4, #12]
1276:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1748              		.loc 1 1276 3 is_stmt 1 view .LVU583
1276:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1749              		.loc 1 1276 46 is_stmt 0 view .LVU584
 1750 0036 03F08042 		and	r2, r3, #1073741824
1276:./Library/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1751              		.loc 1 1276 44 view .LVU585
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 89


 1752 003a A260     		str	r2, [r4, #8]
1277:./Library/stm32f4xx_rtc.c **** 
 1753              		.loc 1 1277 3 is_stmt 1 view .LVU586
1277:./Library/stm32f4xx_rtc.c **** 
 1754              		.loc 1 1277 36 is_stmt 0 view .LVU587
 1755 003c 03F08033 		and	r3, r3, #-2139062144
 1756              	.LVL125:
1277:./Library/stm32f4xx_rtc.c **** 
 1757              		.loc 1 1277 34 view .LVU588
 1758 0040 6360     		str	r3, [r4, #4]
1279:./Library/stm32f4xx_rtc.c ****   {
 1759              		.loc 1 1279 3 is_stmt 1 view .LVU589
1279:./Library/stm32f4xx_rtc.c ****   {
 1760              		.loc 1 1279 6 is_stmt 0 view .LVU590
 1761 0042 75B9     		cbnz	r5, .L113
1281:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
 1762              		.loc 1 1281 5 is_stmt 1 view .LVU591
1281:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
 1763              		.loc 1 1281 48 is_stmt 0 view .LVU592
 1764 0044 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1765              	.LVL126:
1281:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
 1766              		.loc 1 1281 46 view .LVU593
 1767 0048 2070     		strb	r0, [r4]
1283:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
 1768              		.loc 1 1283 5 is_stmt 1 view .LVU594
1283:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
 1769              		.loc 1 1283 50 is_stmt 0 view .LVU595
 1770 004a 3846     		mov	r0, r7
 1771 004c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1772              	.LVL127:
1283:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
 1773              		.loc 1 1283 48 view .LVU596
 1774 0050 6070     		strb	r0, [r4, #1]
1285:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
 1775              		.loc 1 1285 5 is_stmt 1 view .LVU597
1285:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
 1776              		.loc 1 1285 50 is_stmt 0 view .LVU598
 1777 0052 3046     		mov	r0, r6
 1778 0054 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1779              	.LVL128:
1285:./Library/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
 1780              		.loc 1 1285 48 view .LVU599
 1781 0058 A070     		strb	r0, [r4, #2]
1287:./Library/stm32f4xx_rtc.c ****   }  
 1782              		.loc 1 1287 5 is_stmt 1 view .LVU600
1287:./Library/stm32f4xx_rtc.c ****   }  
 1783              		.loc 1 1287 45 is_stmt 0 view .LVU601
 1784 005a 4046     		mov	r0, r8
 1785 005c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1786              	.LVL129:
1287:./Library/stm32f4xx_rtc.c ****   }  
 1787              		.loc 1 1287 43 view .LVU602
 1788 0060 2073     		strb	r0, [r4, #12]
 1789              	.L113:
1289:./Library/stm32f4xx_rtc.c **** 
 1790              		.loc 1 1289 1 view .LVU603
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 90


 1791 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1792              	.LVL130:
 1793              	.L118:
1260:./Library/stm32f4xx_rtc.c ****   }
 1794              		.loc 1 1260 5 is_stmt 1 view .LVU604
1260:./Library/stm32f4xx_rtc.c ****   }
 1795              		.loc 1 1260 12 is_stmt 0 view .LVU605
 1796 0066 014B     		ldr	r3, .L119
 1797 0068 DB69     		ldr	r3, [r3, #28]
 1798              	.LVL131:
1260:./Library/stm32f4xx_rtc.c ****   }
 1799              		.loc 1 1260 12 view .LVU606
 1800 006a D2E7     		b	.L115
 1801              	.L120:
 1802              		.align	2
 1803              	.L119:
 1804 006c 00280040 		.word	1073752064
 1805              		.cfi_endproc
 1806              	.LFE141:
 1808              		.section	.text.RTC_AlarmCmd,"ax",%progbits
 1809              		.align	1
 1810              		.global	RTC_AlarmCmd
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1815              	RTC_AlarmCmd:
 1816              	.LVL132:
 1817              	.LFB142:
1304:./Library/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 1818              		.loc 1 1304 1 is_stmt 1 view -0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 8
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
1304:./Library/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 1823              		.loc 1 1304 1 is_stmt 0 view .LVU608
 1824 0000 82B0     		sub	sp, sp, #8
 1825              	.LCFI18:
 1826              		.cfi_def_cfa_offset 8
1305:./Library/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
 1827              		.loc 1 1305 3 is_stmt 1 view .LVU609
1305:./Library/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
 1828              		.loc 1 1305 17 is_stmt 0 view .LVU610
 1829 0002 0023     		movs	r3, #0
 1830 0004 0193     		str	r3, [sp, #4]
1306:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 1831              		.loc 1 1306 3 is_stmt 1 view .LVU611
 1832              	.LVL133:
1307:./Library/stm32f4xx_rtc.c ****     
 1833              		.loc 1 1307 3 view .LVU612
1310:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1834              		.loc 1 1310 3 view .LVU613
1311:./Library/stm32f4xx_rtc.c **** 
 1835              		.loc 1 1311 3 view .LVU614
1314:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1836              		.loc 1 1314 3 view .LVU615
1314:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 91


 1837              		.loc 1 1314 12 is_stmt 0 view .LVU616
 1838 0006 164B     		ldr	r3, .L128
 1839 0008 CA22     		movs	r2, #202
 1840 000a 5A62     		str	r2, [r3, #36]
1315:./Library/stm32f4xx_rtc.c **** 
 1841              		.loc 1 1315 3 is_stmt 1 view .LVU617
1315:./Library/stm32f4xx_rtc.c **** 
 1842              		.loc 1 1315 12 is_stmt 0 view .LVU618
 1843 000c 5322     		movs	r2, #83
 1844 000e 5A62     		str	r2, [r3, #36]
1318:./Library/stm32f4xx_rtc.c ****   {
 1845              		.loc 1 1318 3 is_stmt 1 view .LVU619
1318:./Library/stm32f4xx_rtc.c ****   {
 1846              		.loc 1 1318 6 is_stmt 0 view .LVU620
 1847 0010 49B1     		cbz	r1, .L122
1320:./Library/stm32f4xx_rtc.c **** 
 1848              		.loc 1 1320 5 is_stmt 1 view .LVU621
1320:./Library/stm32f4xx_rtc.c **** 
 1849              		.loc 1 1320 13 is_stmt 0 view .LVU622
 1850 0012 1A46     		mov	r2, r3
 1851 0014 9B68     		ldr	r3, [r3, #8]
 1852 0016 1843     		orrs	r0, r0, r3
 1853              	.LVL134:
1320:./Library/stm32f4xx_rtc.c **** 
 1854              		.loc 1 1320 13 view .LVU623
 1855 0018 9060     		str	r0, [r2, #8]
1322:./Library/stm32f4xx_rtc.c ****   }
 1856              		.loc 1 1322 5 is_stmt 1 view .LVU624
 1857              	.LVL135:
1322:./Library/stm32f4xx_rtc.c ****   }
 1858              		.loc 1 1322 12 is_stmt 0 view .LVU625
 1859 001a 0120     		movs	r0, #1
 1860              	.LVL136:
 1861              	.L123:
1347:./Library/stm32f4xx_rtc.c ****   
 1862              		.loc 1 1347 3 is_stmt 1 view .LVU626
1347:./Library/stm32f4xx_rtc.c ****   
 1863              		.loc 1 1347 12 is_stmt 0 view .LVU627
 1864 001c 104B     		ldr	r3, .L128
 1865 001e FF22     		movs	r2, #255
 1866 0020 5A62     		str	r2, [r3, #36]
1349:./Library/stm32f4xx_rtc.c **** }
 1867              		.loc 1 1349 3 is_stmt 1 view .LVU628
1350:./Library/stm32f4xx_rtc.c **** 
 1868              		.loc 1 1350 1 is_stmt 0 view .LVU629
 1869 0022 02B0     		add	sp, sp, #8
 1870              	.LCFI19:
 1871              		.cfi_remember_state
 1872              		.cfi_def_cfa_offset 0
 1873              		@ sp needed
 1874 0024 7047     		bx	lr
 1875              	.LVL137:
 1876              	.L122:
 1877              	.LCFI20:
 1878              		.cfi_restore_state
1350:./Library/stm32f4xx_rtc.c **** 
 1879              		.loc 1 1350 1 view .LVU630
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 92


 1880 0026 8C46     		mov	ip, r1
1327:./Library/stm32f4xx_rtc.c ****    
 1881              		.loc 1 1327 5 is_stmt 1 view .LVU631
1327:./Library/stm32f4xx_rtc.c ****    
 1882              		.loc 1 1327 13 is_stmt 0 view .LVU632
 1883 0028 0D4A     		ldr	r2, .L128
 1884 002a 9368     		ldr	r3, [r2, #8]
 1885 002c 23EA0003 		bic	r3, r3, r0
 1886 0030 9360     		str	r3, [r2, #8]
 1887              	.LVL138:
 1888              	.L125:
1330:./Library/stm32f4xx_rtc.c ****     {
 1889              		.loc 1 1330 5 is_stmt 1 discriminator 2 view .LVU633
1332:./Library/stm32f4xx_rtc.c ****       alarmcounter++;  
 1890              		.loc 1 1332 7 discriminator 2 view .LVU634
1332:./Library/stm32f4xx_rtc.c ****       alarmcounter++;  
 1891              		.loc 1 1332 24 is_stmt 0 discriminator 2 view .LVU635
 1892 0032 0B4B     		ldr	r3, .L128
 1893 0034 DA68     		ldr	r2, [r3, #12]
1332:./Library/stm32f4xx_rtc.c ****       alarmcounter++;  
 1894              		.loc 1 1332 43 discriminator 2 view .LVU636
 1895 0036 010A     		lsrs	r1, r0, #8
1332:./Library/stm32f4xx_rtc.c ****       alarmcounter++;  
 1896              		.loc 1 1332 19 discriminator 2 view .LVU637
 1897 0038 02EA1022 		and	r2, r2, r0, lsr #8
 1898              	.LVL139:
1333:./Library/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 1899              		.loc 1 1333 7 is_stmt 1 discriminator 2 view .LVU638
1333:./Library/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 1900              		.loc 1 1333 19 is_stmt 0 discriminator 2 view .LVU639
 1901 003c 019B     		ldr	r3, [sp, #4]
 1902 003e 0133     		adds	r3, r3, #1
 1903 0040 0193     		str	r3, [sp, #4]
1334:./Library/stm32f4xx_rtc.c ****     
 1904              		.loc 1 1334 12 is_stmt 1 discriminator 2 view .LVU640
1334:./Library/stm32f4xx_rtc.c ****     
 1905              		.loc 1 1334 27 is_stmt 0 discriminator 2 view .LVU641
 1906 0042 019B     		ldr	r3, [sp, #4]
1334:./Library/stm32f4xx_rtc.c ****     
 1907              		.loc 1 1334 5 discriminator 2 view .LVU642
 1908 0044 B3F5803F 		cmp	r3, #65536
 1909 0048 01D0     		beq	.L124
1334:./Library/stm32f4xx_rtc.c ****     
 1910              		.loc 1 1334 48 discriminator 1 view .LVU643
 1911 004a 002A     		cmp	r2, #0
 1912 004c F1D0     		beq	.L125
 1913              	.L124:
1336:./Library/stm32f4xx_rtc.c ****     {
 1914              		.loc 1 1336 5 is_stmt 1 view .LVU644
1336:./Library/stm32f4xx_rtc.c ****     {
 1915              		.loc 1 1336 13 is_stmt 0 view .LVU645
 1916 004e 044B     		ldr	r3, .L128
 1917 0050 DB68     		ldr	r3, [r3, #12]
1336:./Library/stm32f4xx_rtc.c ****     {
 1918              		.loc 1 1336 8 view .LVU646
 1919 0052 1942     		tst	r1, r3
 1920 0054 01D1     		bne	.L126
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 93


1338:./Library/stm32f4xx_rtc.c ****     } 
 1921              		.loc 1 1338 14 view .LVU647
 1922 0056 6046     		mov	r0, ip
 1923              	.LVL140:
1338:./Library/stm32f4xx_rtc.c ****     } 
 1924              		.loc 1 1338 14 view .LVU648
 1925 0058 E0E7     		b	.L123
 1926              	.LVL141:
 1927              	.L126:
1342:./Library/stm32f4xx_rtc.c ****     }        
 1928              		.loc 1 1342 14 view .LVU649
 1929 005a 0120     		movs	r0, #1
 1930              	.LVL142:
1342:./Library/stm32f4xx_rtc.c ****     }        
 1931              		.loc 1 1342 14 view .LVU650
 1932 005c DEE7     		b	.L123
 1933              	.L129:
 1934 005e 00BF     		.align	2
 1935              	.L128:
 1936 0060 00280040 		.word	1073752064
 1937              		.cfi_endproc
 1938              	.LFE142:
 1940              		.section	.text.RTC_AlarmSubSecondConfig,"ax",%progbits
 1941              		.align	1
 1942              		.global	RTC_AlarmSubSecondConfig
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1947              	RTC_AlarmSubSecondConfig:
 1948              	.LVL143:
 1949              	.LFB143:
1398:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1950              		.loc 1 1398 1 is_stmt 1 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              		@ link register save eliminated.
1398:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1955              		.loc 1 1398 1 is_stmt 0 view .LVU652
 1956 0000 10B4     		push	{r4}
 1957              	.LCFI21:
 1958              		.cfi_def_cfa_offset 4
 1959              		.cfi_offset 4, -4
1399:./Library/stm32f4xx_rtc.c **** 
 1960              		.loc 1 1399 3 is_stmt 1 view .LVU653
 1961              	.LVL144:
1402:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(RTC_AlarmSubSecondValue));
 1962              		.loc 1 1402 3 view .LVU654
1403:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(RTC_AlarmSubSecondMask));
 1963              		.loc 1 1403 3 view .LVU655
1404:./Library/stm32f4xx_rtc.c ****   
 1964              		.loc 1 1404 3 view .LVU656
1407:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1965              		.loc 1 1407 3 view .LVU657
1407:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1966              		.loc 1 1407 12 is_stmt 0 view .LVU658
 1967 0002 094B     		ldr	r3, .L135
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 94


 1968 0004 CA24     		movs	r4, #202
 1969 0006 5C62     		str	r4, [r3, #36]
1408:./Library/stm32f4xx_rtc.c ****   
 1970              		.loc 1 1408 3 is_stmt 1 view .LVU659
1408:./Library/stm32f4xx_rtc.c ****   
 1971              		.loc 1 1408 12 is_stmt 0 view .LVU660
 1972 0008 5324     		movs	r4, #83
 1973 000a 5C62     		str	r4, [r3, #36]
1411:./Library/stm32f4xx_rtc.c ****   
 1974              		.loc 1 1411 3 is_stmt 1 view .LVU661
1411:./Library/stm32f4xx_rtc.c ****   
 1975              		.loc 1 1411 10 is_stmt 0 view .LVU662
 1976 000c 1143     		orrs	r1, r1, r2
 1977              	.LVL145:
1413:./Library/stm32f4xx_rtc.c ****   {
 1978              		.loc 1 1413 3 is_stmt 1 view .LVU663
1413:./Library/stm32f4xx_rtc.c ****   {
 1979              		.loc 1 1413 6 is_stmt 0 view .LVU664
 1980 000e B0F5807F 		cmp	r0, #256
 1981 0012 07D0     		beq	.L134
1421:./Library/stm32f4xx_rtc.c ****   }
 1982              		.loc 1 1421 5 is_stmt 1 view .LVU665
1421:./Library/stm32f4xx_rtc.c ****   }
 1983              		.loc 1 1421 19 is_stmt 0 view .LVU666
 1984 0014 044B     		ldr	r3, .L135
 1985 0016 9964     		str	r1, [r3, #72]
 1986              	.L132:
1425:./Library/stm32f4xx_rtc.c **** 
 1987              		.loc 1 1425 3 is_stmt 1 view .LVU667
1425:./Library/stm32f4xx_rtc.c **** 
 1988              		.loc 1 1425 12 is_stmt 0 view .LVU668
 1989 0018 034B     		ldr	r3, .L135
 1990 001a FF22     		movs	r2, #255
 1991              	.LVL146:
1425:./Library/stm32f4xx_rtc.c **** 
 1992              		.loc 1 1425 12 view .LVU669
 1993 001c 5A62     		str	r2, [r3, #36]
1427:./Library/stm32f4xx_rtc.c **** 
 1994              		.loc 1 1427 1 view .LVU670
 1995 001e 5DF8044B 		ldr	r4, [sp], #4
 1996              	.LCFI22:
 1997              		.cfi_remember_state
 1998              		.cfi_restore 4
 1999              		.cfi_def_cfa_offset 0
 2000 0022 7047     		bx	lr
 2001              	.LVL147:
 2002              	.L134:
 2003              	.LCFI23:
 2004              		.cfi_restore_state
1416:./Library/stm32f4xx_rtc.c ****   }
 2005              		.loc 1 1416 5 is_stmt 1 view .LVU671
1416:./Library/stm32f4xx_rtc.c ****   }
 2006              		.loc 1 1416 19 is_stmt 0 view .LVU672
 2007 0024 5964     		str	r1, [r3, #68]
 2008 0026 F7E7     		b	.L132
 2009              	.L136:
 2010              		.align	2
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 95


 2011              	.L135:
 2012 0028 00280040 		.word	1073752064
 2013              		.cfi_endproc
 2014              	.LFE143:
 2016              		.section	.text.RTC_GetAlarmSubSecond,"ax",%progbits
 2017              		.align	1
 2018              		.global	RTC_GetAlarmSubSecond
 2019              		.syntax unified
 2020              		.thumb
 2021              		.thumb_func
 2023              	RTC_GetAlarmSubSecond:
 2024              	.LVL148:
 2025              	.LFB144:
1439:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2026              		.loc 1 1439 1 is_stmt 1 view -0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              		@ link register save eliminated.
1440:./Library/stm32f4xx_rtc.c ****   
 2031              		.loc 1 1440 3 view .LVU674
1443:./Library/stm32f4xx_rtc.c ****   {
 2032              		.loc 1 1443 3 view .LVU675
1443:./Library/stm32f4xx_rtc.c ****   {
 2033              		.loc 1 1443 6 is_stmt 0 view .LVU676
 2034 0000 B0F5807F 		cmp	r0, #256
 2035 0004 04D0     		beq	.L140
1449:./Library/stm32f4xx_rtc.c ****   } 
 2036              		.loc 1 1449 5 is_stmt 1 view .LVU677
1449:./Library/stm32f4xx_rtc.c ****   } 
 2037              		.loc 1 1449 29 is_stmt 0 view .LVU678
 2038 0006 054B     		ldr	r3, .L141
 2039 0008 986C     		ldr	r0, [r3, #72]
 2040              	.LVL149:
1449:./Library/stm32f4xx_rtc.c ****   } 
 2041              		.loc 1 1449 12 view .LVU679
 2042 000a C0F30E00 		ubfx	r0, r0, #0, #15
 2043              	.LVL150:
1452:./Library/stm32f4xx_rtc.c **** }
 2044              		.loc 1 1452 3 is_stmt 1 view .LVU680
1453:./Library/stm32f4xx_rtc.c **** 
 2045              		.loc 1 1453 1 is_stmt 0 view .LVU681
 2046 000e 7047     		bx	lr
 2047              	.LVL151:
 2048              	.L140:
1445:./Library/stm32f4xx_rtc.c ****   }
 2049              		.loc 1 1445 5 is_stmt 1 view .LVU682
1445:./Library/stm32f4xx_rtc.c ****   }
 2050              		.loc 1 1445 29 is_stmt 0 view .LVU683
 2051 0010 024B     		ldr	r3, .L141
 2052 0012 586C     		ldr	r0, [r3, #68]
 2053              	.LVL152:
1445:./Library/stm32f4xx_rtc.c ****   }
 2054              		.loc 1 1445 12 view .LVU684
 2055 0014 C0F30E00 		ubfx	r0, r0, #0, #15
 2056              	.LVL153:
1445:./Library/stm32f4xx_rtc.c ****   }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 96


 2057              		.loc 1 1445 12 view .LVU685
 2058 0018 7047     		bx	lr
 2059              	.L142:
 2060 001a 00BF     		.align	2
 2061              	.L141:
 2062 001c 00280040 		.word	1073752064
 2063              		.cfi_endproc
 2064              	.LFE144:
 2066              		.section	.text.RTC_WakeUpClockConfig,"ax",%progbits
 2067              		.align	1
 2068              		.global	RTC_WakeUpClockConfig
 2069              		.syntax unified
 2070              		.thumb
 2071              		.thumb_func
 2073              	RTC_WakeUpClockConfig:
 2074              	.LVL154:
 2075              	.LFB145:
1488:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2076              		.loc 1 1488 1 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080              		@ link register save eliminated.
1490:./Library/stm32f4xx_rtc.c **** 
 2081              		.loc 1 1490 3 view .LVU687
1493:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2082              		.loc 1 1493 3 view .LVU688
1493:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2083              		.loc 1 1493 12 is_stmt 0 view .LVU689
 2084 0000 074B     		ldr	r3, .L144
 2085 0002 CA22     		movs	r2, #202
 2086 0004 5A62     		str	r2, [r3, #36]
1494:./Library/stm32f4xx_rtc.c **** 
 2087              		.loc 1 1494 3 is_stmt 1 view .LVU690
1494:./Library/stm32f4xx_rtc.c **** 
 2088              		.loc 1 1494 12 is_stmt 0 view .LVU691
 2089 0006 5322     		movs	r2, #83
 2090 0008 5A62     		str	r2, [r3, #36]
1497:./Library/stm32f4xx_rtc.c **** 
 2091              		.loc 1 1497 3 is_stmt 1 view .LVU692
1497:./Library/stm32f4xx_rtc.c **** 
 2092              		.loc 1 1497 11 is_stmt 0 view .LVU693
 2093 000a 9968     		ldr	r1, [r3, #8]
 2094 000c 21F00701 		bic	r1, r1, #7
 2095 0010 9960     		str	r1, [r3, #8]
1500:./Library/stm32f4xx_rtc.c ****   
 2096              		.loc 1 1500 3 is_stmt 1 view .LVU694
1500:./Library/stm32f4xx_rtc.c ****   
 2097              		.loc 1 1500 11 is_stmt 0 view .LVU695
 2098 0012 9A68     		ldr	r2, [r3, #8]
 2099 0014 0243     		orrs	r2, r2, r0
 2100 0016 9A60     		str	r2, [r3, #8]
1503:./Library/stm32f4xx_rtc.c **** }
 2101              		.loc 1 1503 3 is_stmt 1 view .LVU696
1503:./Library/stm32f4xx_rtc.c **** }
 2102              		.loc 1 1503 12 is_stmt 0 view .LVU697
 2103 0018 FF22     		movs	r2, #255
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 97


 2104 001a 5A62     		str	r2, [r3, #36]
1504:./Library/stm32f4xx_rtc.c **** 
 2105              		.loc 1 1504 1 view .LVU698
 2106 001c 7047     		bx	lr
 2107              	.L145:
 2108 001e 00BF     		.align	2
 2109              	.L144:
 2110 0020 00280040 		.word	1073752064
 2111              		.cfi_endproc
 2112              	.LFE145:
 2114              		.section	.text.RTC_SetWakeUpCounter,"ax",%progbits
 2115              		.align	1
 2116              		.global	RTC_SetWakeUpCounter
 2117              		.syntax unified
 2118              		.thumb
 2119              		.thumb_func
 2121              	RTC_SetWakeUpCounter:
 2122              	.LVL155:
 2123              	.LFB146:
1515:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2124              		.loc 1 1515 1 is_stmt 1 view -0
 2125              		.cfi_startproc
 2126              		@ args = 0, pretend = 0, frame = 0
 2127              		@ frame_needed = 0, uses_anonymous_args = 0
 2128              		@ link register save eliminated.
1517:./Library/stm32f4xx_rtc.c ****   
 2129              		.loc 1 1517 3 view .LVU700
1520:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2130              		.loc 1 1520 3 view .LVU701
1520:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2131              		.loc 1 1520 12 is_stmt 0 view .LVU702
 2132 0000 044B     		ldr	r3, .L147
 2133 0002 CA22     		movs	r2, #202
 2134 0004 5A62     		str	r2, [r3, #36]
1521:./Library/stm32f4xx_rtc.c ****   
 2135              		.loc 1 1521 3 is_stmt 1 view .LVU703
1521:./Library/stm32f4xx_rtc.c ****   
 2136              		.loc 1 1521 12 is_stmt 0 view .LVU704
 2137 0006 5322     		movs	r2, #83
 2138 0008 5A62     		str	r2, [r3, #36]
1524:./Library/stm32f4xx_rtc.c ****   
 2139              		.loc 1 1524 3 is_stmt 1 view .LVU705
1524:./Library/stm32f4xx_rtc.c ****   
 2140              		.loc 1 1524 13 is_stmt 0 view .LVU706
 2141 000a 5861     		str	r0, [r3, #20]
1527:./Library/stm32f4xx_rtc.c **** }
 2142              		.loc 1 1527 3 is_stmt 1 view .LVU707
1527:./Library/stm32f4xx_rtc.c **** }
 2143              		.loc 1 1527 12 is_stmt 0 view .LVU708
 2144 000c FF22     		movs	r2, #255
 2145 000e 5A62     		str	r2, [r3, #36]
1528:./Library/stm32f4xx_rtc.c **** 
 2146              		.loc 1 1528 1 view .LVU709
 2147 0010 7047     		bx	lr
 2148              	.L148:
 2149 0012 00BF     		.align	2
 2150              	.L147:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 98


 2151 0014 00280040 		.word	1073752064
 2152              		.cfi_endproc
 2153              	.LFE146:
 2155              		.section	.text.RTC_GetWakeUpCounter,"ax",%progbits
 2156              		.align	1
 2157              		.global	RTC_GetWakeUpCounter
 2158              		.syntax unified
 2159              		.thumb
 2160              		.thumb_func
 2162              	RTC_GetWakeUpCounter:
 2163              	.LFB147:
1536:./Library/stm32f4xx_rtc.c ****   /* Get the counter value */
 2164              		.loc 1 1536 1 is_stmt 1 view -0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 0
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 2168              		@ link register save eliminated.
1538:./Library/stm32f4xx_rtc.c **** }
 2169              		.loc 1 1538 3 view .LVU711
1538:./Library/stm32f4xx_rtc.c **** }
 2170              		.loc 1 1538 25 is_stmt 0 view .LVU712
 2171 0000 014B     		ldr	r3, .L150
 2172 0002 5869     		ldr	r0, [r3, #20]
1539:./Library/stm32f4xx_rtc.c **** 
 2173              		.loc 1 1539 1 view .LVU713
 2174 0004 80B2     		uxth	r0, r0
 2175 0006 7047     		bx	lr
 2176              	.L151:
 2177              		.align	2
 2178              	.L150:
 2179 0008 00280040 		.word	1073752064
 2180              		.cfi_endproc
 2181              	.LFE147:
 2183              		.section	.text.RTC_WakeUpCmd,"ax",%progbits
 2184              		.align	1
 2185              		.global	RTC_WakeUpCmd
 2186              		.syntax unified
 2187              		.thumb
 2188              		.thumb_func
 2190              	RTC_WakeUpCmd:
 2191              	.LVL156:
 2192              	.LFB148:
1548:./Library/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 2193              		.loc 1 1548 1 is_stmt 1 view -0
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 8
 2196              		@ frame_needed = 0, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
1548:./Library/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 2198              		.loc 1 1548 1 is_stmt 0 view .LVU715
 2199 0000 82B0     		sub	sp, sp, #8
 2200              	.LCFI24:
 2201              		.cfi_def_cfa_offset 8
1549:./Library/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 2202              		.loc 1 1549 3 is_stmt 1 view .LVU716
1549:./Library/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 2203              		.loc 1 1549 17 is_stmt 0 view .LVU717
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 99


 2204 0002 0023     		movs	r3, #0
 2205 0004 0193     		str	r3, [sp, #4]
1550:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2206              		.loc 1 1550 3 is_stmt 1 view .LVU718
 2207              	.LVL157:
1551:./Library/stm32f4xx_rtc.c ****   
 2208              		.loc 1 1551 3 view .LVU719
1554:./Library/stm32f4xx_rtc.c **** 
 2209              		.loc 1 1554 3 view .LVU720
1557:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2210              		.loc 1 1557 3 view .LVU721
1557:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2211              		.loc 1 1557 12 is_stmt 0 view .LVU722
 2212 0006 164B     		ldr	r3, .L159
 2213 0008 CA22     		movs	r2, #202
 2214 000a 5A62     		str	r2, [r3, #36]
1558:./Library/stm32f4xx_rtc.c **** 
 2215              		.loc 1 1558 3 is_stmt 1 view .LVU723
1558:./Library/stm32f4xx_rtc.c **** 
 2216              		.loc 1 1558 12 is_stmt 0 view .LVU724
 2217 000c 5322     		movs	r2, #83
 2218 000e 5A62     		str	r2, [r3, #36]
1560:./Library/stm32f4xx_rtc.c ****   {
 2219              		.loc 1 1560 3 is_stmt 1 view .LVU725
1560:./Library/stm32f4xx_rtc.c ****   {
 2220              		.loc 1 1560 6 is_stmt 0 view .LVU726
 2221 0010 50B1     		cbz	r0, .L153
1563:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;    
 2222              		.loc 1 1563 5 is_stmt 1 view .LVU727
1563:./Library/stm32f4xx_rtc.c ****     status = SUCCESS;    
 2223              		.loc 1 1563 13 is_stmt 0 view .LVU728
 2224 0012 1A46     		mov	r2, r3
 2225 0014 9B68     		ldr	r3, [r3, #8]
 2226 0016 43F48063 		orr	r3, r3, #1024
 2227 001a 9360     		str	r3, [r2, #8]
1564:./Library/stm32f4xx_rtc.c ****   }
 2228              		.loc 1 1564 5 is_stmt 1 view .LVU729
 2229              	.LVL158:
1564:./Library/stm32f4xx_rtc.c ****   }
 2230              		.loc 1 1564 12 is_stmt 0 view .LVU730
 2231 001c 0120     		movs	r0, #1
 2232              	.LVL159:
 2233              	.L154:
1588:./Library/stm32f4xx_rtc.c ****   
 2234              		.loc 1 1588 3 is_stmt 1 view .LVU731
1588:./Library/stm32f4xx_rtc.c ****   
 2235              		.loc 1 1588 12 is_stmt 0 view .LVU732
 2236 001e 104B     		ldr	r3, .L159
 2237 0020 FF22     		movs	r2, #255
 2238 0022 5A62     		str	r2, [r3, #36]
1590:./Library/stm32f4xx_rtc.c **** }
 2239              		.loc 1 1590 3 is_stmt 1 view .LVU733
1591:./Library/stm32f4xx_rtc.c **** 
 2240              		.loc 1 1591 1 is_stmt 0 view .LVU734
 2241 0024 02B0     		add	sp, sp, #8
 2242              	.LCFI25:
 2243              		.cfi_remember_state
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 100


 2244              		.cfi_def_cfa_offset 0
 2245              		@ sp needed
 2246 0026 7047     		bx	lr
 2247              	.LVL160:
 2248              	.L153:
 2249              	.LCFI26:
 2250              		.cfi_restore_state
1591:./Library/stm32f4xx_rtc.c **** 
 2251              		.loc 1 1591 1 view .LVU735
 2252 0028 0146     		mov	r1, r0
1569:./Library/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 2253              		.loc 1 1569 5 is_stmt 1 view .LVU736
1569:./Library/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 2254              		.loc 1 1569 13 is_stmt 0 view .LVU737
 2255 002a 0D4A     		ldr	r2, .L159
 2256 002c 9368     		ldr	r3, [r2, #8]
 2257 002e 23F48063 		bic	r3, r3, #1024
 2258 0032 9360     		str	r3, [r2, #8]
 2259              	.LVL161:
 2260              	.L156:
1571:./Library/stm32f4xx_rtc.c ****     {
 2261              		.loc 1 1571 5 is_stmt 1 discriminator 2 view .LVU738
1573:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 2262              		.loc 1 1573 7 discriminator 2 view .LVU739
1573:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 2263              		.loc 1 1573 24 is_stmt 0 discriminator 2 view .LVU740
 2264 0034 0A4B     		ldr	r3, .L159
 2265 0036 DA68     		ldr	r2, [r3, #12]
1573:./Library/stm32f4xx_rtc.c ****       wutcounter++;  
 2266              		.loc 1 1573 19 discriminator 2 view .LVU741
 2267 0038 02F00402 		and	r2, r2, #4
 2268              	.LVL162:
1574:./Library/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 2269              		.loc 1 1574 7 is_stmt 1 discriminator 2 view .LVU742
1574:./Library/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 2270              		.loc 1 1574 17 is_stmt 0 discriminator 2 view .LVU743
 2271 003c 019B     		ldr	r3, [sp, #4]
 2272 003e 0133     		adds	r3, r3, #1
 2273 0040 0193     		str	r3, [sp, #4]
1575:./Library/stm32f4xx_rtc.c ****     
 2274              		.loc 1 1575 12 is_stmt 1 discriminator 2 view .LVU744
1575:./Library/stm32f4xx_rtc.c ****     
 2275              		.loc 1 1575 25 is_stmt 0 discriminator 2 view .LVU745
 2276 0042 019B     		ldr	r3, [sp, #4]
1575:./Library/stm32f4xx_rtc.c ****     
 2277              		.loc 1 1575 5 discriminator 2 view .LVU746
 2278 0044 B3F5803F 		cmp	r3, #65536
 2279 0048 01D0     		beq	.L155
1575:./Library/stm32f4xx_rtc.c ****     
 2280              		.loc 1 1575 46 discriminator 1 view .LVU747
 2281 004a 002A     		cmp	r2, #0
 2282 004c F2D0     		beq	.L156
 2283              	.L155:
1577:./Library/stm32f4xx_rtc.c ****     {
 2284              		.loc 1 1577 5 is_stmt 1 view .LVU748
1577:./Library/stm32f4xx_rtc.c ****     {
 2285              		.loc 1 1577 13 is_stmt 0 view .LVU749
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 101


 2286 004e 044B     		ldr	r3, .L159
 2287 0050 DB68     		ldr	r3, [r3, #12]
1577:./Library/stm32f4xx_rtc.c ****     {
 2288              		.loc 1 1577 8 view .LVU750
 2289 0052 13F0040F 		tst	r3, #4
 2290 0056 01D1     		bne	.L157
1579:./Library/stm32f4xx_rtc.c ****     }
 2291              		.loc 1 1579 14 view .LVU751
 2292 0058 0846     		mov	r0, r1
 2293              	.LVL163:
1579:./Library/stm32f4xx_rtc.c ****     }
 2294              		.loc 1 1579 14 view .LVU752
 2295 005a E0E7     		b	.L154
 2296              	.LVL164:
 2297              	.L157:
1583:./Library/stm32f4xx_rtc.c ****     }    
 2298              		.loc 1 1583 14 view .LVU753
 2299 005c 0120     		movs	r0, #1
 2300              	.LVL165:
1583:./Library/stm32f4xx_rtc.c ****     }    
 2301              		.loc 1 1583 14 view .LVU754
 2302 005e DEE7     		b	.L154
 2303              	.L160:
 2304              		.align	2
 2305              	.L159:
 2306 0060 00280040 		.word	1073752064
 2307              		.cfi_endproc
 2308              	.LFE148:
 2310              		.section	.text.RTC_DayLightSavingConfig,"ax",%progbits
 2311              		.align	1
 2312              		.global	RTC_DayLightSavingConfig
 2313              		.syntax unified
 2314              		.thumb
 2315              		.thumb_func
 2317              	RTC_DayLightSavingConfig:
 2318              	.LVL166:
 2319              	.LFB149:
1625:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2320              		.loc 1 1625 1 is_stmt 1 view -0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
1625:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2325              		.loc 1 1625 1 is_stmt 0 view .LVU756
 2326 0000 10B4     		push	{r4}
 2327              	.LCFI27:
 2328              		.cfi_def_cfa_offset 4
 2329              		.cfi_offset 4, -4
1627:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(RTC_StoreOperation));
 2330              		.loc 1 1627 3 is_stmt 1 view .LVU757
1628:./Library/stm32f4xx_rtc.c **** 
 2331              		.loc 1 1628 3 view .LVU758
1631:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2332              		.loc 1 1631 3 view .LVU759
1631:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2333              		.loc 1 1631 12 is_stmt 0 view .LVU760
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 102


 2334 0002 094B     		ldr	r3, .L163
 2335 0004 CA22     		movs	r2, #202
 2336 0006 5A62     		str	r2, [r3, #36]
1632:./Library/stm32f4xx_rtc.c **** 
 2337              		.loc 1 1632 3 is_stmt 1 view .LVU761
1632:./Library/stm32f4xx_rtc.c **** 
 2338              		.loc 1 1632 12 is_stmt 0 view .LVU762
 2339 0008 5322     		movs	r2, #83
 2340 000a 5A62     		str	r2, [r3, #36]
1635:./Library/stm32f4xx_rtc.c **** 
 2341              		.loc 1 1635 3 is_stmt 1 view .LVU763
1635:./Library/stm32f4xx_rtc.c **** 
 2342              		.loc 1 1635 11 is_stmt 0 view .LVU764
 2343 000c 9C68     		ldr	r4, [r3, #8]
 2344 000e 24F48024 		bic	r4, r4, #262144
 2345 0012 9C60     		str	r4, [r3, #8]
1638:./Library/stm32f4xx_rtc.c **** 
 2346              		.loc 1 1638 3 is_stmt 1 view .LVU765
1638:./Library/stm32f4xx_rtc.c **** 
 2347              		.loc 1 1638 11 is_stmt 0 view .LVU766
 2348 0014 9A68     		ldr	r2, [r3, #8]
1638:./Library/stm32f4xx_rtc.c **** 
 2349              		.loc 1 1638 44 view .LVU767
 2350 0016 0843     		orrs	r0, r0, r1
 2351              	.LVL167:
1638:./Library/stm32f4xx_rtc.c **** 
 2352              		.loc 1 1638 11 view .LVU768
 2353 0018 0243     		orrs	r2, r2, r0
 2354 001a 9A60     		str	r2, [r3, #8]
1641:./Library/stm32f4xx_rtc.c **** }
 2355              		.loc 1 1641 3 is_stmt 1 view .LVU769
1641:./Library/stm32f4xx_rtc.c **** }
 2356              		.loc 1 1641 12 is_stmt 0 view .LVU770
 2357 001c FF22     		movs	r2, #255
 2358 001e 5A62     		str	r2, [r3, #36]
1642:./Library/stm32f4xx_rtc.c **** 
 2359              		.loc 1 1642 1 view .LVU771
 2360 0020 5DF8044B 		ldr	r4, [sp], #4
 2361              	.LCFI28:
 2362              		.cfi_restore 4
 2363              		.cfi_def_cfa_offset 0
 2364 0024 7047     		bx	lr
 2365              	.L164:
 2366 0026 00BF     		.align	2
 2367              	.L163:
 2368 0028 00280040 		.word	1073752064
 2369              		.cfi_endproc
 2370              	.LFE149:
 2372              		.section	.text.RTC_GetStoreOperation,"ax",%progbits
 2373              		.align	1
 2374              		.global	RTC_GetStoreOperation
 2375              		.syntax unified
 2376              		.thumb
 2377              		.thumb_func
 2379              	RTC_GetStoreOperation:
 2380              	.LFB150:
1652:./Library/stm32f4xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 103


 2381              		.loc 1 1652 1 is_stmt 1 view -0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              		@ link register save eliminated.
1653:./Library/stm32f4xx_rtc.c **** }
 2386              		.loc 1 1653 3 view .LVU773
1653:./Library/stm32f4xx_rtc.c **** }
 2387              		.loc 1 1653 14 is_stmt 0 view .LVU774
 2388 0000 024B     		ldr	r3, .L166
 2389 0002 9868     		ldr	r0, [r3, #8]
1654:./Library/stm32f4xx_rtc.c **** 
 2390              		.loc 1 1654 1 view .LVU775
 2391 0004 00F48020 		and	r0, r0, #262144
 2392 0008 7047     		bx	lr
 2393              	.L167:
 2394 000a 00BF     		.align	2
 2395              	.L166:
 2396 000c 00280040 		.word	1073752064
 2397              		.cfi_endproc
 2398              	.LFE150:
 2400              		.section	.text.RTC_OutputConfig,"ax",%progbits
 2401              		.align	1
 2402              		.global	RTC_OutputConfig
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2407              	RTC_OutputConfig:
 2408              	.LVL168:
 2409              	.LFB151:
1691:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2410              		.loc 1 1691 1 is_stmt 1 view -0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              		@ link register save eliminated.
1691:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2415              		.loc 1 1691 1 is_stmt 0 view .LVU777
 2416 0000 10B4     		push	{r4}
 2417              	.LCFI29:
 2418              		.cfi_def_cfa_offset 4
 2419              		.cfi_offset 4, -4
1693:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(RTC_OutputPolarity));
 2420              		.loc 1 1693 3 is_stmt 1 view .LVU778
1694:./Library/stm32f4xx_rtc.c **** 
 2421              		.loc 1 1694 3 view .LVU779
1697:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2422              		.loc 1 1697 3 view .LVU780
1697:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2423              		.loc 1 1697 12 is_stmt 0 view .LVU781
 2424 0002 094B     		ldr	r3, .L170
 2425 0004 CA22     		movs	r2, #202
 2426 0006 5A62     		str	r2, [r3, #36]
1698:./Library/stm32f4xx_rtc.c **** 
 2427              		.loc 1 1698 3 is_stmt 1 view .LVU782
1698:./Library/stm32f4xx_rtc.c **** 
 2428              		.loc 1 1698 12 is_stmt 0 view .LVU783
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 104


 2429 0008 5322     		movs	r2, #83
 2430 000a 5A62     		str	r2, [r3, #36]
1701:./Library/stm32f4xx_rtc.c **** 
 2431              		.loc 1 1701 3 is_stmt 1 view .LVU784
1701:./Library/stm32f4xx_rtc.c **** 
 2432              		.loc 1 1701 11 is_stmt 0 view .LVU785
 2433 000c 9C68     		ldr	r4, [r3, #8]
 2434 000e 24F4E004 		bic	r4, r4, #7340032
 2435 0012 9C60     		str	r4, [r3, #8]
1704:./Library/stm32f4xx_rtc.c **** 
 2436              		.loc 1 1704 3 is_stmt 1 view .LVU786
1704:./Library/stm32f4xx_rtc.c **** 
 2437              		.loc 1 1704 11 is_stmt 0 view .LVU787
 2438 0014 9A68     		ldr	r2, [r3, #8]
1704:./Library/stm32f4xx_rtc.c **** 
 2439              		.loc 1 1704 36 view .LVU788
 2440 0016 0843     		orrs	r0, r0, r1
 2441              	.LVL169:
1704:./Library/stm32f4xx_rtc.c **** 
 2442              		.loc 1 1704 11 view .LVU789
 2443 0018 0243     		orrs	r2, r2, r0
 2444 001a 9A60     		str	r2, [r3, #8]
1707:./Library/stm32f4xx_rtc.c **** }
 2445              		.loc 1 1707 3 is_stmt 1 view .LVU790
1707:./Library/stm32f4xx_rtc.c **** }
 2446              		.loc 1 1707 12 is_stmt 0 view .LVU791
 2447 001c FF22     		movs	r2, #255
 2448 001e 5A62     		str	r2, [r3, #36]
1708:./Library/stm32f4xx_rtc.c **** 
 2449              		.loc 1 1708 1 view .LVU792
 2450 0020 5DF8044B 		ldr	r4, [sp], #4
 2451              	.LCFI30:
 2452              		.cfi_restore 4
 2453              		.cfi_def_cfa_offset 0
 2454 0024 7047     		bx	lr
 2455              	.L171:
 2456 0026 00BF     		.align	2
 2457              	.L170:
 2458 0028 00280040 		.word	1073752064
 2459              		.cfi_endproc
 2460              	.LFE151:
 2462              		.section	.text.RTC_CoarseCalibConfig,"ax",%progbits
 2463              		.align	1
 2464              		.global	RTC_CoarseCalibConfig
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2469              	RTC_CoarseCalibConfig:
 2470              	.LVL170:
 2471              	.LFB152:
1745:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2472              		.loc 1 1745 1 is_stmt 1 view -0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
1745:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2476              		.loc 1 1745 1 is_stmt 0 view .LVU794
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 105


 2477 0000 38B5     		push	{r3, r4, r5, lr}
 2478              	.LCFI31:
 2479              		.cfi_def_cfa_offset 16
 2480              		.cfi_offset 3, -16
 2481              		.cfi_offset 4, -12
 2482              		.cfi_offset 5, -8
 2483              		.cfi_offset 14, -4
 2484 0002 0446     		mov	r4, r0
 2485 0004 0D46     		mov	r5, r1
1746:./Library/stm32f4xx_rtc.c ****    
 2486              		.loc 1 1746 3 is_stmt 1 view .LVU795
 2487              	.LVL171:
1749:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_VALUE(Value)); 
 2488              		.loc 1 1749 3 view .LVU796
1750:./Library/stm32f4xx_rtc.c **** 
 2489              		.loc 1 1750 3 view .LVU797
1753:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2490              		.loc 1 1753 3 view .LVU798
1753:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2491              		.loc 1 1753 12 is_stmt 0 view .LVU799
 2492 0006 094B     		ldr	r3, .L176
 2493 0008 CA22     		movs	r2, #202
 2494 000a 5A62     		str	r2, [r3, #36]
1754:./Library/stm32f4xx_rtc.c **** 
 2495              		.loc 1 1754 3 is_stmt 1 view .LVU800
1754:./Library/stm32f4xx_rtc.c **** 
 2496              		.loc 1 1754 12 is_stmt 0 view .LVU801
 2497 000c 5322     		movs	r2, #83
 2498 000e 5A62     		str	r2, [r3, #36]
1757:./Library/stm32f4xx_rtc.c ****   {
 2499              		.loc 1 1757 3 is_stmt 1 view .LVU802
1757:./Library/stm32f4xx_rtc.c ****   {
 2500              		.loc 1 1757 7 is_stmt 0 view .LVU803
 2501 0010 FFF7FEFF 		bl	RTC_EnterInitMode
 2502              	.LVL172:
1757:./Library/stm32f4xx_rtc.c ****   {
 2503              		.loc 1 1757 6 view .LVU804
 2504 0014 18B9     		cbnz	r0, .L175
 2505              	.LVL173:
 2506              	.L173:
1772:./Library/stm32f4xx_rtc.c ****   
 2507              		.loc 1 1772 3 is_stmt 1 view .LVU805
1772:./Library/stm32f4xx_rtc.c ****   
 2508              		.loc 1 1772 12 is_stmt 0 view .LVU806
 2509 0016 054B     		ldr	r3, .L176
 2510 0018 FF22     		movs	r2, #255
 2511 001a 5A62     		str	r2, [r3, #36]
1774:./Library/stm32f4xx_rtc.c **** }
 2512              		.loc 1 1774 3 is_stmt 1 view .LVU807
1775:./Library/stm32f4xx_rtc.c **** 
 2513              		.loc 1 1775 1 is_stmt 0 view .LVU808
 2514 001c 38BD     		pop	{r3, r4, r5, pc}
 2515              	.LVL174:
 2516              	.L175:
1764:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 2517              		.loc 1 1764 5 is_stmt 1 view .LVU809
1764:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 106


 2518              		.loc 1 1764 44 is_stmt 0 view .LVU810
 2519 001e 2C43     		orrs	r4, r4, r5
 2520              	.LVL175:
1764:./Library/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 2521              		.loc 1 1764 17 view .LVU811
 2522 0020 024B     		ldr	r3, .L176
 2523 0022 9C61     		str	r4, [r3, #24]
1766:./Library/stm32f4xx_rtc.c ****     
 2524              		.loc 1 1766 5 is_stmt 1 view .LVU812
 2525 0024 FFF7FEFF 		bl	RTC_ExitInitMode
 2526              	.LVL176:
1768:./Library/stm32f4xx_rtc.c ****   } 
 2527              		.loc 1 1768 5 view .LVU813
1768:./Library/stm32f4xx_rtc.c ****   } 
 2528              		.loc 1 1768 12 is_stmt 0 view .LVU814
 2529 0028 0120     		movs	r0, #1
 2530 002a F4E7     		b	.L173
 2531              	.L177:
 2532              		.align	2
 2533              	.L176:
 2534 002c 00280040 		.word	1073752064
 2535              		.cfi_endproc
 2536              	.LFE152:
 2538              		.section	.text.RTC_CoarseCalibCmd,"ax",%progbits
 2539              		.align	1
 2540              		.global	RTC_CoarseCalibCmd
 2541              		.syntax unified
 2542              		.thumb
 2543              		.thumb_func
 2545              	RTC_CoarseCalibCmd:
 2546              	.LVL177:
 2547              	.LFB153:
1786:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2548              		.loc 1 1786 1 is_stmt 1 view -0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
1786:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2552              		.loc 1 1786 1 is_stmt 0 view .LVU816
 2553 0000 10B5     		push	{r4, lr}
 2554              	.LCFI32:
 2555              		.cfi_def_cfa_offset 8
 2556              		.cfi_offset 4, -8
 2557              		.cfi_offset 14, -4
 2558 0002 0446     		mov	r4, r0
1787:./Library/stm32f4xx_rtc.c ****   
 2559              		.loc 1 1787 3 is_stmt 1 view .LVU817
 2560              	.LVL178:
1790:./Library/stm32f4xx_rtc.c **** 
 2561              		.loc 1 1790 3 view .LVU818
1793:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2562              		.loc 1 1793 3 view .LVU819
1793:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2563              		.loc 1 1793 12 is_stmt 0 view .LVU820
 2564 0004 0D4B     		ldr	r3, .L183
 2565 0006 CA22     		movs	r2, #202
 2566 0008 5A62     		str	r2, [r3, #36]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 107


1794:./Library/stm32f4xx_rtc.c ****   
 2567              		.loc 1 1794 3 is_stmt 1 view .LVU821
1794:./Library/stm32f4xx_rtc.c ****   
 2568              		.loc 1 1794 12 is_stmt 0 view .LVU822
 2569 000a 5322     		movs	r2, #83
 2570 000c 5A62     		str	r2, [r3, #36]
1797:./Library/stm32f4xx_rtc.c ****   {
 2571              		.loc 1 1797 3 is_stmt 1 view .LVU823
1797:./Library/stm32f4xx_rtc.c ****   {
 2572              		.loc 1 1797 7 is_stmt 0 view .LVU824
 2573 000e FFF7FEFF 		bl	RTC_EnterInitMode
 2574              	.LVL179:
1797:./Library/stm32f4xx_rtc.c ****   {
 2575              		.loc 1 1797 6 view .LVU825
 2576 0012 40B1     		cbz	r0, .L179
1803:./Library/stm32f4xx_rtc.c ****     {
 2577              		.loc 1 1803 5 is_stmt 1 view .LVU826
1803:./Library/stm32f4xx_rtc.c ****     {
 2578              		.loc 1 1803 8 is_stmt 0 view .LVU827
 2579 0014 5CB1     		cbz	r4, .L180
1806:./Library/stm32f4xx_rtc.c ****     }
 2580              		.loc 1 1806 7 is_stmt 1 view .LVU828
1806:./Library/stm32f4xx_rtc.c ****     }
 2581              		.loc 1 1806 15 is_stmt 0 view .LVU829
 2582 0016 094A     		ldr	r2, .L183
 2583 0018 9368     		ldr	r3, [r2, #8]
 2584 001a 43F08003 		orr	r3, r3, #128
 2585 001e 9360     		str	r3, [r2, #8]
 2586              	.L181:
1814:./Library/stm32f4xx_rtc.c ****     
 2587              		.loc 1 1814 5 is_stmt 1 view .LVU830
 2588 0020 FFF7FEFF 		bl	RTC_ExitInitMode
 2589              	.LVL180:
1816:./Library/stm32f4xx_rtc.c ****   } 
 2590              		.loc 1 1816 5 view .LVU831
1816:./Library/stm32f4xx_rtc.c ****   } 
 2591              		.loc 1 1816 12 is_stmt 0 view .LVU832
 2592 0024 0120     		movs	r0, #1
 2593              	.LVL181:
 2594              	.L179:
1820:./Library/stm32f4xx_rtc.c ****   
 2595              		.loc 1 1820 3 is_stmt 1 view .LVU833
1820:./Library/stm32f4xx_rtc.c ****   
 2596              		.loc 1 1820 12 is_stmt 0 view .LVU834
 2597 0026 054B     		ldr	r3, .L183
 2598 0028 FF22     		movs	r2, #255
 2599 002a 5A62     		str	r2, [r3, #36]
1822:./Library/stm32f4xx_rtc.c **** }
 2600              		.loc 1 1822 3 is_stmt 1 view .LVU835
1823:./Library/stm32f4xx_rtc.c **** 
 2601              		.loc 1 1823 1 is_stmt 0 view .LVU836
 2602 002c 10BD     		pop	{r4, pc}
 2603              	.LVL182:
 2604              	.L180:
1811:./Library/stm32f4xx_rtc.c ****     }
 2605              		.loc 1 1811 7 is_stmt 1 view .LVU837
1811:./Library/stm32f4xx_rtc.c ****     }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 108


 2606              		.loc 1 1811 15 is_stmt 0 view .LVU838
 2607 002e 034A     		ldr	r2, .L183
 2608 0030 9368     		ldr	r3, [r2, #8]
 2609 0032 23F08003 		bic	r3, r3, #128
 2610 0036 9360     		str	r3, [r2, #8]
 2611 0038 F2E7     		b	.L181
 2612              	.L184:
 2613 003a 00BF     		.align	2
 2614              	.L183:
 2615 003c 00280040 		.word	1073752064
 2616              		.cfi_endproc
 2617              	.LFE153:
 2619              		.section	.text.RTC_CalibOutputCmd,"ax",%progbits
 2620              		.align	1
 2621              		.global	RTC_CalibOutputCmd
 2622              		.syntax unified
 2623              		.thumb
 2624              		.thumb_func
 2626              	RTC_CalibOutputCmd:
 2627              	.LVL183:
 2628              	.LFB154:
1832:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2629              		.loc 1 1832 1 is_stmt 1 view -0
 2630              		.cfi_startproc
 2631              		@ args = 0, pretend = 0, frame = 0
 2632              		@ frame_needed = 0, uses_anonymous_args = 0
 2633              		@ link register save eliminated.
1834:./Library/stm32f4xx_rtc.c ****   
 2634              		.loc 1 1834 3 view .LVU840
1837:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2635              		.loc 1 1837 3 view .LVU841
1837:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2636              		.loc 1 1837 12 is_stmt 0 view .LVU842
 2637 0000 0A4B     		ldr	r3, .L188
 2638 0002 CA22     		movs	r2, #202
 2639 0004 5A62     		str	r2, [r3, #36]
1838:./Library/stm32f4xx_rtc.c ****   
 2640              		.loc 1 1838 3 is_stmt 1 view .LVU843
1838:./Library/stm32f4xx_rtc.c ****   
 2641              		.loc 1 1838 12 is_stmt 0 view .LVU844
 2642 0006 5322     		movs	r2, #83
 2643 0008 5A62     		str	r2, [r3, #36]
1840:./Library/stm32f4xx_rtc.c ****   {
 2644              		.loc 1 1840 3 is_stmt 1 view .LVU845
1840:./Library/stm32f4xx_rtc.c ****   {
 2645              		.loc 1 1840 6 is_stmt 0 view .LVU846
 2646 000a 40B1     		cbz	r0, .L186
1843:./Library/stm32f4xx_rtc.c ****   }
 2647              		.loc 1 1843 5 is_stmt 1 view .LVU847
1843:./Library/stm32f4xx_rtc.c ****   }
 2648              		.loc 1 1843 13 is_stmt 0 view .LVU848
 2649 000c 1A46     		mov	r2, r3
 2650 000e 9B68     		ldr	r3, [r3, #8]
 2651 0010 43F40003 		orr	r3, r3, #8388608
 2652 0014 9360     		str	r3, [r2, #8]
 2653              	.L187:
1852:./Library/stm32f4xx_rtc.c **** }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 109


 2654              		.loc 1 1852 3 is_stmt 1 view .LVU849
1852:./Library/stm32f4xx_rtc.c **** }
 2655              		.loc 1 1852 12 is_stmt 0 view .LVU850
 2656 0016 054B     		ldr	r3, .L188
 2657 0018 FF22     		movs	r2, #255
 2658 001a 5A62     		str	r2, [r3, #36]
1853:./Library/stm32f4xx_rtc.c **** 
 2659              		.loc 1 1853 1 view .LVU851
 2660 001c 7047     		bx	lr
 2661              	.L186:
1848:./Library/stm32f4xx_rtc.c ****   }
 2662              		.loc 1 1848 5 is_stmt 1 view .LVU852
1848:./Library/stm32f4xx_rtc.c ****   }
 2663              		.loc 1 1848 13 is_stmt 0 view .LVU853
 2664 001e 034A     		ldr	r2, .L188
 2665 0020 9368     		ldr	r3, [r2, #8]
 2666 0022 23F40003 		bic	r3, r3, #8388608
 2667 0026 9360     		str	r3, [r2, #8]
 2668 0028 F5E7     		b	.L187
 2669              	.L189:
 2670 002a 00BF     		.align	2
 2671              	.L188:
 2672 002c 00280040 		.word	1073752064
 2673              		.cfi_endproc
 2674              	.LFE154:
 2676              		.section	.text.RTC_CalibOutputConfig,"ax",%progbits
 2677              		.align	1
 2678              		.global	RTC_CalibOutputConfig
 2679              		.syntax unified
 2680              		.thumb
 2681              		.thumb_func
 2683              	RTC_CalibOutputConfig:
 2684              	.LVL184:
 2685              	.LFB155:
1864:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 2686              		.loc 1 1864 1 is_stmt 1 view -0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 0
 2689              		@ frame_needed = 0, uses_anonymous_args = 0
 2690              		@ link register save eliminated.
1866:./Library/stm32f4xx_rtc.c **** 
 2691              		.loc 1 1866 3 view .LVU855
1869:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2692              		.loc 1 1869 3 view .LVU856
1869:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2693              		.loc 1 1869 12 is_stmt 0 view .LVU857
 2694 0000 074B     		ldr	r3, .L191
 2695 0002 CA22     		movs	r2, #202
 2696 0004 5A62     		str	r2, [r3, #36]
1870:./Library/stm32f4xx_rtc.c ****   
 2697              		.loc 1 1870 3 is_stmt 1 view .LVU858
1870:./Library/stm32f4xx_rtc.c ****   
 2698              		.loc 1 1870 12 is_stmt 0 view .LVU859
 2699 0006 5322     		movs	r2, #83
 2700 0008 5A62     		str	r2, [r3, #36]
1873:./Library/stm32f4xx_rtc.c **** 
 2701              		.loc 1 1873 3 is_stmt 1 view .LVU860
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 110


1873:./Library/stm32f4xx_rtc.c **** 
 2702              		.loc 1 1873 11 is_stmt 0 view .LVU861
 2703 000a 9968     		ldr	r1, [r3, #8]
 2704 000c 21F40021 		bic	r1, r1, #524288
 2705 0010 9960     		str	r1, [r3, #8]
1876:./Library/stm32f4xx_rtc.c **** 
 2706              		.loc 1 1876 3 is_stmt 1 view .LVU862
1876:./Library/stm32f4xx_rtc.c **** 
 2707              		.loc 1 1876 11 is_stmt 0 view .LVU863
 2708 0012 9A68     		ldr	r2, [r3, #8]
 2709 0014 0243     		orrs	r2, r2, r0
 2710 0016 9A60     		str	r2, [r3, #8]
1879:./Library/stm32f4xx_rtc.c **** }
 2711              		.loc 1 1879 3 is_stmt 1 view .LVU864
1879:./Library/stm32f4xx_rtc.c **** }
 2712              		.loc 1 1879 12 is_stmt 0 view .LVU865
 2713 0018 FF22     		movs	r2, #255
 2714 001a 5A62     		str	r2, [r3, #36]
1880:./Library/stm32f4xx_rtc.c **** 
 2715              		.loc 1 1880 1 view .LVU866
 2716 001c 7047     		bx	lr
 2717              	.L192:
 2718 001e 00BF     		.align	2
 2719              	.L191:
 2720 0020 00280040 		.word	1073752064
 2721              		.cfi_endproc
 2722              	.LFE155:
 2724              		.section	.text.RTC_SmoothCalibConfig,"ax",%progbits
 2725              		.align	1
 2726              		.global	RTC_SmoothCalibConfig
 2727              		.syntax unified
 2728              		.thumb
 2729              		.thumb_func
 2731              	RTC_SmoothCalibConfig:
 2732              	.LVL185:
 2733              	.LFB156:
1902:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2734              		.loc 1 1902 1 is_stmt 1 view -0
 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 0
 2737              		@ frame_needed = 0, uses_anonymous_args = 0
 2738              		@ link register save eliminated.
1902:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2739              		.loc 1 1902 1 is_stmt 0 view .LVU868
 2740 0000 10B4     		push	{r4}
 2741              	.LCFI33:
 2742              		.cfi_def_cfa_offset 4
 2743              		.cfi_offset 4, -4
1903:./Library/stm32f4xx_rtc.c ****   uint32_t recalpfcount = 0;
 2744              		.loc 1 1903 3 is_stmt 1 view .LVU869
 2745              	.LVL186:
1904:./Library/stm32f4xx_rtc.c **** 
 2746              		.loc 1 1904 3 view .LVU870
1907:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(RTC_SmoothCalibPlusPulses));
 2747              		.loc 1 1907 3 view .LVU871
1908:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(RTC_SmouthCalibMinusPulsesValue));
 2748              		.loc 1 1908 3 view .LVU872
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 111


1909:./Library/stm32f4xx_rtc.c **** 
 2749              		.loc 1 1909 3 view .LVU873
1912:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2750              		.loc 1 1912 3 view .LVU874
1912:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2751              		.loc 1 1912 12 is_stmt 0 view .LVU875
 2752 0002 134B     		ldr	r3, .L201
 2753 0004 CA24     		movs	r4, #202
 2754 0006 5C62     		str	r4, [r3, #36]
1913:./Library/stm32f4xx_rtc.c ****   
 2755              		.loc 1 1913 3 is_stmt 1 view .LVU876
1913:./Library/stm32f4xx_rtc.c ****   
 2756              		.loc 1 1913 12 is_stmt 0 view .LVU877
 2757 0008 5324     		movs	r4, #83
 2758 000a 5C62     		str	r4, [r3, #36]
1916:./Library/stm32f4xx_rtc.c ****   {
 2759              		.loc 1 1916 3 is_stmt 1 view .LVU878
1916:./Library/stm32f4xx_rtc.c ****   {
 2760              		.loc 1 1916 11 is_stmt 0 view .LVU879
 2761 000c DB68     		ldr	r3, [r3, #12]
1916:./Library/stm32f4xx_rtc.c ****   {
 2762              		.loc 1 1916 6 view .LVU880
 2763 000e 13F4803F 		tst	r3, #65536
 2764 0012 0FD1     		bne	.L198
 2765              	.LVL187:
 2766              	.L195:
1926:./Library/stm32f4xx_rtc.c ****   {
 2767              		.loc 1 1926 3 is_stmt 1 view .LVU881
1926:./Library/stm32f4xx_rtc.c ****   {
 2768              		.loc 1 1926 11 is_stmt 0 view .LVU882
 2769 0014 0E4B     		ldr	r3, .L201
 2770 0016 DB68     		ldr	r3, [r3, #12]
1926:./Library/stm32f4xx_rtc.c ****   {
 2771              		.loc 1 1926 6 view .LVU883
 2772 0018 13F4803F 		tst	r3, #65536
 2773 001c 15D1     		bne	.L199
1929:./Library/stm32f4xx_rtc.c **** 
 2774              		.loc 1 1929 5 is_stmt 1 view .LVU884
1929:./Library/stm32f4xx_rtc.c **** 
 2775              		.loc 1 1929 60 is_stmt 0 view .LVU885
 2776 001e 0843     		orrs	r0, r0, r1
 2777              	.LVL188:
1929:./Library/stm32f4xx_rtc.c **** 
 2778              		.loc 1 1929 17 view .LVU886
 2779 0020 1043     		orrs	r0, r0, r2
1929:./Library/stm32f4xx_rtc.c **** 
 2780              		.loc 1 1929 15 view .LVU887
 2781 0022 0B4B     		ldr	r3, .L201
 2782 0024 D863     		str	r0, [r3, #60]
1931:./Library/stm32f4xx_rtc.c ****   }
 2783              		.loc 1 1931 5 is_stmt 1 view .LVU888
 2784              	.LVL189:
1931:./Library/stm32f4xx_rtc.c ****   }
 2785              		.loc 1 1931 12 is_stmt 0 view .LVU889
 2786 0026 0120     		movs	r0, #1
 2787              	.LVL190:
 2788              	.L197:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 112


1939:./Library/stm32f4xx_rtc.c ****   
 2789              		.loc 1 1939 3 is_stmt 1 view .LVU890
1939:./Library/stm32f4xx_rtc.c ****   
 2790              		.loc 1 1939 12 is_stmt 0 view .LVU891
 2791 0028 094B     		ldr	r3, .L201
 2792 002a FF22     		movs	r2, #255
 2793              	.LVL191:
1939:./Library/stm32f4xx_rtc.c ****   
 2794              		.loc 1 1939 12 view .LVU892
 2795 002c 5A62     		str	r2, [r3, #36]
1941:./Library/stm32f4xx_rtc.c **** }
 2796              		.loc 1 1941 3 is_stmt 1 view .LVU893
1942:./Library/stm32f4xx_rtc.c **** 
 2797              		.loc 1 1942 1 is_stmt 0 view .LVU894
 2798 002e 5DF8044B 		ldr	r4, [sp], #4
 2799              	.LCFI34:
 2800              		.cfi_remember_state
 2801              		.cfi_restore 4
 2802              		.cfi_def_cfa_offset 0
 2803 0032 7047     		bx	lr
 2804              	.LVL192:
 2805              	.L198:
 2806              	.LCFI35:
 2807              		.cfi_restore_state
1904:./Library/stm32f4xx_rtc.c **** 
 2808              		.loc 1 1904 12 view .LVU895
 2809 0034 0023     		movs	r3, #0
 2810              	.LVL193:
 2811              	.L194:
1919:./Library/stm32f4xx_rtc.c ****     {
 2812              		.loc 1 1919 11 is_stmt 1 view .LVU896
1919:./Library/stm32f4xx_rtc.c ****     {
 2813              		.loc 1 1919 17 is_stmt 0 view .LVU897
 2814 0036 064C     		ldr	r4, .L201
 2815 0038 E468     		ldr	r4, [r4, #12]
1919:./Library/stm32f4xx_rtc.c ****     {
 2816              		.loc 1 1919 11 view .LVU898
 2817 003a 14F4803F 		tst	r4, #65536
 2818 003e E9D0     		beq	.L195
1919:./Library/stm32f4xx_rtc.c ****     {
 2819              		.loc 1 1919 52 discriminator 1 view .LVU899
 2820 0040 B3F5003F 		cmp	r3, #131072
 2821 0044 E6D0     		beq	.L195
1921:./Library/stm32f4xx_rtc.c ****     }
 2822              		.loc 1 1921 7 is_stmt 1 view .LVU900
1921:./Library/stm32f4xx_rtc.c ****     }
 2823              		.loc 1 1921 19 is_stmt 0 view .LVU901
 2824 0046 0133     		adds	r3, r3, #1
 2825              	.LVL194:
1921:./Library/stm32f4xx_rtc.c ****     }
 2826              		.loc 1 1921 19 view .LVU902
 2827 0048 F5E7     		b	.L194
 2828              	.LVL195:
 2829              	.L199:
1935:./Library/stm32f4xx_rtc.c ****   }
 2830              		.loc 1 1935 12 view .LVU903
 2831 004a 0020     		movs	r0, #0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 113


 2832              	.LVL196:
1935:./Library/stm32f4xx_rtc.c ****   }
 2833              		.loc 1 1935 12 view .LVU904
 2834 004c ECE7     		b	.L197
 2835              	.L202:
 2836 004e 00BF     		.align	2
 2837              	.L201:
 2838 0050 00280040 		.word	1073752064
 2839              		.cfi_endproc
 2840              	.LFE156:
 2842              		.section	.text.RTC_TimeStampCmd,"ax",%progbits
 2843              		.align	1
 2844              		.global	RTC_TimeStampCmd
 2845              		.syntax unified
 2846              		.thumb
 2847              		.thumb_func
 2849              	RTC_TimeStampCmd:
 2850              	.LVL197:
 2851              	.LFB157:
1976:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2852              		.loc 1 1976 1 is_stmt 1 view -0
 2853              		.cfi_startproc
 2854              		@ args = 0, pretend = 0, frame = 0
 2855              		@ frame_needed = 0, uses_anonymous_args = 0
 2856              		@ link register save eliminated.
1977:./Library/stm32f4xx_rtc.c **** 
 2857              		.loc 1 1977 3 view .LVU906
1980:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2858              		.loc 1 1980 3 view .LVU907
1981:./Library/stm32f4xx_rtc.c **** 
 2859              		.loc 1 1981 3 view .LVU908
1984:./Library/stm32f4xx_rtc.c **** 
 2860              		.loc 1 1984 3 view .LVU909
1984:./Library/stm32f4xx_rtc.c **** 
 2861              		.loc 1 1984 26 is_stmt 0 view .LVU910
 2862 0000 0A4B     		ldr	r3, .L206
 2863 0002 9B68     		ldr	r3, [r3, #8]
1984:./Library/stm32f4xx_rtc.c **** 
 2864              		.loc 1 1984 10 view .LVU911
 2865 0004 23F40063 		bic	r3, r3, #2048
 2866 0008 23F00803 		bic	r3, r3, #8
 2867              	.LVL198:
1987:./Library/stm32f4xx_rtc.c ****   {
 2868              		.loc 1 1987 3 is_stmt 1 view .LVU912
1987:./Library/stm32f4xx_rtc.c ****   {
 2869              		.loc 1 1987 6 is_stmt 0 view .LVU913
 2870 000c 59B1     		cbz	r1, .L204
1989:./Library/stm32f4xx_rtc.c ****   }
 2871              		.loc 1 1989 5 is_stmt 1 view .LVU914
1989:./Library/stm32f4xx_rtc.c ****   }
 2872              		.loc 1 1989 12 is_stmt 0 view .LVU915
 2873 000e 0343     		orrs	r3, r3, r0
 2874              	.LVL199:
1989:./Library/stm32f4xx_rtc.c ****   }
 2875              		.loc 1 1989 12 view .LVU916
 2876 0010 43F40063 		orr	r3, r3, #2048
 2877              	.LVL200:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 114


 2878              	.L205:
1997:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2879              		.loc 1 1997 3 is_stmt 1 view .LVU917
1997:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2880              		.loc 1 1997 12 is_stmt 0 view .LVU918
 2881 0014 054A     		ldr	r2, .L206
 2882 0016 CA21     		movs	r1, #202
 2883              	.LVL201:
1997:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2884              		.loc 1 1997 12 view .LVU919
 2885 0018 5162     		str	r1, [r2, #36]
1998:./Library/stm32f4xx_rtc.c **** 
 2886              		.loc 1 1998 3 is_stmt 1 view .LVU920
1998:./Library/stm32f4xx_rtc.c **** 
 2887              		.loc 1 1998 12 is_stmt 0 view .LVU921
 2888 001a 5321     		movs	r1, #83
 2889 001c 5162     		str	r1, [r2, #36]
2001:./Library/stm32f4xx_rtc.c **** 
 2890              		.loc 1 2001 3 is_stmt 1 view .LVU922
2001:./Library/stm32f4xx_rtc.c **** 
 2891              		.loc 1 2001 11 is_stmt 0 view .LVU923
 2892 001e 9360     		str	r3, [r2, #8]
2004:./Library/stm32f4xx_rtc.c **** }
 2893              		.loc 1 2004 3 is_stmt 1 view .LVU924
2004:./Library/stm32f4xx_rtc.c **** }
 2894              		.loc 1 2004 12 is_stmt 0 view .LVU925
 2895 0020 FF23     		movs	r3, #255
 2896              	.LVL202:
2004:./Library/stm32f4xx_rtc.c **** }
 2897              		.loc 1 2004 12 view .LVU926
 2898 0022 5362     		str	r3, [r2, #36]
 2899              	.LVL203:
2005:./Library/stm32f4xx_rtc.c **** 
 2900              		.loc 1 2005 1 view .LVU927
 2901 0024 7047     		bx	lr
 2902              	.LVL204:
 2903              	.L204:
1993:./Library/stm32f4xx_rtc.c ****   }
 2904              		.loc 1 1993 5 is_stmt 1 view .LVU928
1993:./Library/stm32f4xx_rtc.c ****   }
 2905              		.loc 1 1993 12 is_stmt 0 view .LVU929
 2906 0026 0343     		orrs	r3, r3, r0
 2907              	.LVL205:
1993:./Library/stm32f4xx_rtc.c ****   }
 2908              		.loc 1 1993 12 view .LVU930
 2909 0028 F4E7     		b	.L205
 2910              	.L207:
 2911 002a 00BF     		.align	2
 2912              	.L206:
 2913 002c 00280040 		.word	1073752064
 2914              		.cfi_endproc
 2915              	.LFE157:
 2917              		.section	.text.RTC_GetTimeStamp,"ax",%progbits
 2918              		.align	1
 2919              		.global	RTC_GetTimeStamp
 2920              		.syntax unified
 2921              		.thumb
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 115


 2922              		.thumb_func
 2924              	RTC_GetTimeStamp:
 2925              	.LVL206:
 2926              	.LFB158:
2021:./Library/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
 2927              		.loc 1 2021 1 is_stmt 1 view -0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
2021:./Library/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
 2931              		.loc 1 2021 1 is_stmt 0 view .LVU932
 2932 0000 38B5     		push	{r3, r4, r5, lr}
 2933              	.LCFI36:
 2934              		.cfi_def_cfa_offset 16
 2935              		.cfi_offset 3, -16
 2936              		.cfi_offset 4, -12
 2937              		.cfi_offset 5, -8
 2938              		.cfi_offset 14, -4
 2939 0002 0D46     		mov	r5, r1
 2940 0004 1446     		mov	r4, r2
2022:./Library/stm32f4xx_rtc.c **** 
 2941              		.loc 1 2022 3 is_stmt 1 view .LVU933
 2942              	.LVL207:
2025:./Library/stm32f4xx_rtc.c **** 
 2943              		.loc 1 2025 3 view .LVU934
2028:./Library/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 2944              		.loc 1 2028 3 view .LVU935
2028:./Library/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 2945              		.loc 1 2028 27 is_stmt 0 view .LVU936
 2946 0006 1C4A     		ldr	r2, .L211
 2947              	.LVL208:
2028:./Library/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 2948              		.loc 1 2028 27 view .LVU937
 2949 0008 136B     		ldr	r3, [r2, #48]
 2950              	.LVL209:
2029:./Library/stm32f4xx_rtc.c **** 
 2951              		.loc 1 2029 3 is_stmt 1 view .LVU938
2029:./Library/stm32f4xx_rtc.c **** 
 2952              		.loc 1 2029 27 is_stmt 0 view .LVU939
 2953 000a 526B     		ldr	r2, [r2, #52]
 2954              	.LVL210:
2032:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 2955              		.loc 1 2032 3 is_stmt 1 view .LVU940
2032:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 2956              		.loc 1 2032 36 is_stmt 0 view .LVU941
 2957 000c C3F30641 		ubfx	r1, r3, #16, #7
 2958              	.LVL211:
2032:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 2959              		.loc 1 2032 36 view .LVU942
 2960 0010 C3F3054C 		ubfx	ip, r3, #16, #6
2032:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 2961              		.loc 1 2032 34 view .LVU943
 2962 0014 85F800C0 		strb	ip, [r5]
2033:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 2963              		.loc 1 2033 3 is_stmt 1 view .LVU944
2033:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 2964              		.loc 1 2033 38 is_stmt 0 view .LVU945
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 116


 2965 0018 C3F3062C 		ubfx	ip, r3, #8, #7
2033:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 2966              		.loc 1 2033 36 view .LVU946
 2967 001c 85F801C0 		strb	ip, [r5, #1]
2034:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 2968              		.loc 1 2034 3 is_stmt 1 view .LVU947
2034:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 2969              		.loc 1 2034 38 is_stmt 0 view .LVU948
 2970 0020 03F07F03 		and	r3, r3, #127
 2971              	.LVL212:
2034:./Library/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 2972              		.loc 1 2034 36 view .LVU949
 2973 0024 AB70     		strb	r3, [r5, #2]
2035:./Library/stm32f4xx_rtc.c **** 
 2974              		.loc 1 2035 3 is_stmt 1 view .LVU950
2035:./Library/stm32f4xx_rtc.c **** 
 2975              		.loc 1 2035 34 is_stmt 0 view .LVU951
 2976 0026 01F04003 		and	r3, r1, #64
2035:./Library/stm32f4xx_rtc.c **** 
 2977              		.loc 1 2035 32 view .LVU952
 2978 002a EB70     		strb	r3, [r5, #3]
2038:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 2979              		.loc 1 2038 3 is_stmt 1 view .LVU953
2038:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 2980              		.loc 1 2038 33 is_stmt 0 view .LVU954
 2981 002c 0023     		movs	r3, #0
 2982 002e E370     		strb	r3, [r4, #3]
2039:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 2983              		.loc 1 2039 3 is_stmt 1 view .LVU955
2039:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 2984              		.loc 1 2039 36 is_stmt 0 view .LVU956
 2985 0030 C2F30423 		ubfx	r3, r2, #8, #5
2039:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 2986              		.loc 1 2039 34 view .LVU957
 2987 0034 6370     		strb	r3, [r4, #1]
2040:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 2988              		.loc 1 2040 3 is_stmt 1 view .LVU958
2040:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 2989              		.loc 1 2040 35 is_stmt 0 view .LVU959
 2990 0036 02F03F03 		and	r3, r2, #63
2040:./Library/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 2991              		.loc 1 2040 33 view .LVU960
 2992 003a A370     		strb	r3, [r4, #2]
2041:./Library/stm32f4xx_rtc.c **** 
 2993              		.loc 1 2041 3 is_stmt 1 view .LVU961
2041:./Library/stm32f4xx_rtc.c **** 
 2994              		.loc 1 2041 38 is_stmt 0 view .LVU962
 2995 003c C2F34232 		ubfx	r2, r2, #13, #3
 2996              	.LVL213:
2041:./Library/stm32f4xx_rtc.c **** 
 2997              		.loc 1 2041 36 view .LVU963
 2998 0040 2270     		strb	r2, [r4]
2044:./Library/stm32f4xx_rtc.c ****   {
 2999              		.loc 1 2044 3 is_stmt 1 view .LVU964
2044:./Library/stm32f4xx_rtc.c ****   {
 3000              		.loc 1 2044 6 is_stmt 0 view .LVU965
 3001 0042 B8B9     		cbnz	r0, .L208
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 117


2047:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3002              		.loc 1 2047 5 is_stmt 1 view .LVU966
2047:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3003              		.loc 1 2047 47 is_stmt 0 view .LVU967
 3004 0044 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 3005              	.LVL214:
2047:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3006              		.loc 1 2047 47 view .LVU968
 3007 0046 FFF7FEFF 		bl	RTC_Bcd2ToByte
 3008              	.LVL215:
2047:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3009              		.loc 1 2047 36 view .LVU969
 3010 004a 2870     		strb	r0, [r5]
2048:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 3011              		.loc 1 2048 5 is_stmt 1 view .LVU970
2048:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 3012              		.loc 1 2048 49 is_stmt 0 view .LVU971
 3013 004c 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 3014 004e FFF7FEFF 		bl	RTC_Bcd2ToByte
 3015              	.LVL216:
2048:./Library/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 3016              		.loc 1 2048 38 view .LVU972
 3017 0052 6870     		strb	r0, [r5, #1]
2049:./Library/stm32f4xx_rtc.c **** 
 3018              		.loc 1 2049 5 is_stmt 1 view .LVU973
2049:./Library/stm32f4xx_rtc.c **** 
 3019              		.loc 1 2049 49 is_stmt 0 view .LVU974
 3020 0054 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 3021 0056 FFF7FEFF 		bl	RTC_Bcd2ToByte
 3022              	.LVL217:
2049:./Library/stm32f4xx_rtc.c **** 
 3023              		.loc 1 2049 38 view .LVU975
 3024 005a A870     		strb	r0, [r5, #2]
2052:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 3025              		.loc 1 2052 5 is_stmt 1 view .LVU976
2052:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 3026              		.loc 1 2052 47 is_stmt 0 view .LVU977
 3027 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3028 005e FFF7FEFF 		bl	RTC_Bcd2ToByte
 3029              	.LVL218:
2052:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 3030              		.loc 1 2052 36 view .LVU978
 3031 0062 6070     		strb	r0, [r4, #1]
2053:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 3032              		.loc 1 2053 5 is_stmt 1 view .LVU979
2053:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 3033              		.loc 1 2053 46 is_stmt 0 view .LVU980
 3034 0064 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 3035 0066 FFF7FEFF 		bl	RTC_Bcd2ToByte
 3036              	.LVL219:
2053:./Library/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 3037              		.loc 1 2053 35 view .LVU981
 3038 006a A070     		strb	r0, [r4, #2]
2054:./Library/stm32f4xx_rtc.c ****   }
 3039              		.loc 1 2054 5 is_stmt 1 view .LVU982
2054:./Library/stm32f4xx_rtc.c ****   }
 3040              		.loc 1 2054 49 is_stmt 0 view .LVU983
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 118


 3041 006c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 3042 006e FFF7FEFF 		bl	RTC_Bcd2ToByte
 3043              	.LVL220:
2054:./Library/stm32f4xx_rtc.c ****   }
 3044              		.loc 1 2054 38 view .LVU984
 3045 0072 2070     		strb	r0, [r4]
 3046              	.L208:
2056:./Library/stm32f4xx_rtc.c **** 
 3047              		.loc 1 2056 1 view .LVU985
 3048 0074 38BD     		pop	{r3, r4, r5, pc}
 3049              	.LVL221:
 3050              	.L212:
2056:./Library/stm32f4xx_rtc.c **** 
 3051              		.loc 1 2056 1 view .LVU986
 3052 0076 00BF     		.align	2
 3053              	.L211:
 3054 0078 00280040 		.word	1073752064
 3055              		.cfi_endproc
 3056              	.LFE158:
 3058              		.section	.text.RTC_GetTimeStampSubSecond,"ax",%progbits
 3059              		.align	1
 3060              		.global	RTC_GetTimeStampSubSecond
 3061              		.syntax unified
 3062              		.thumb
 3063              		.thumb_func
 3065              	RTC_GetTimeStampSubSecond:
 3066              	.LFB159:
2064:./Library/stm32f4xx_rtc.c ****   /* Get timestamp sub seconds values from the correspondent registers */
 3067              		.loc 1 2064 1 is_stmt 1 view -0
 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 0
 3070              		@ frame_needed = 0, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
2066:./Library/stm32f4xx_rtc.c **** }
 3072              		.loc 1 2066 3 view .LVU988
2066:./Library/stm32f4xx_rtc.c **** }
 3073              		.loc 1 2066 10 is_stmt 0 view .LVU989
 3074 0000 014B     		ldr	r3, .L214
 3075 0002 986B     		ldr	r0, [r3, #56]
2067:./Library/stm32f4xx_rtc.c **** 
 3076              		.loc 1 2067 1 view .LVU990
 3077 0004 7047     		bx	lr
 3078              	.L215:
 3079 0006 00BF     		.align	2
 3080              	.L214:
 3081 0008 00280040 		.word	1073752064
 3082              		.cfi_endproc
 3083              	.LFE159:
 3085              		.section	.text.RTC_TamperTriggerConfig,"ax",%progbits
 3086              		.align	1
 3087              		.global	RTC_TamperTriggerConfig
 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3092              	RTC_TamperTriggerConfig:
 3093              	.LVL222:
 3094              	.LFB160:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 119


2099:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3095              		.loc 1 2099 1 is_stmt 1 view -0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
 3099              		@ link register save eliminated.
2101:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(RTC_TamperTrigger));
 3100              		.loc 1 2101 3 view .LVU992
2102:./Library/stm32f4xx_rtc.c ****  
 3101              		.loc 1 2102 3 view .LVU993
2104:./Library/stm32f4xx_rtc.c ****   {  
 3102              		.loc 1 2104 3 view .LVU994
2104:./Library/stm32f4xx_rtc.c ****   {  
 3103              		.loc 1 2104 6 is_stmt 0 view .LVU995
 3104 0000 29B9     		cbnz	r1, .L217
2107:./Library/stm32f4xx_rtc.c ****   }
 3105              		.loc 1 2107 5 is_stmt 1 view .LVU996
2107:./Library/stm32f4xx_rtc.c ****   }
 3106              		.loc 1 2107 16 is_stmt 0 view .LVU997
 3107 0002 064A     		ldr	r2, .L219
 3108 0004 136C     		ldr	r3, [r2, #64]
 3109 0006 23EA4000 		bic	r0, r3, r0, lsl #1
 3110              	.LVL223:
2107:./Library/stm32f4xx_rtc.c ****   }
 3111              		.loc 1 2107 16 view .LVU998
 3112 000a 1064     		str	r0, [r2, #64]
 3113 000c 7047     		bx	lr
 3114              	.LVL224:
 3115              	.L217:
2112:./Library/stm32f4xx_rtc.c ****   }  
 3116              		.loc 1 2112 5 is_stmt 1 view .LVU999
2112:./Library/stm32f4xx_rtc.c ****   }  
 3117              		.loc 1 2112 16 is_stmt 0 view .LVU1000
 3118 000e 034A     		ldr	r2, .L219
 3119 0010 136C     		ldr	r3, [r2, #64]
 3120 0012 43EA4000 		orr	r0, r3, r0, lsl #1
 3121              	.LVL225:
2112:./Library/stm32f4xx_rtc.c ****   }  
 3122              		.loc 1 2112 16 view .LVU1001
 3123 0016 1064     		str	r0, [r2, #64]
2114:./Library/stm32f4xx_rtc.c **** 
 3124              		.loc 1 2114 1 view .LVU1002
 3125 0018 7047     		bx	lr
 3126              	.L220:
 3127 001a 00BF     		.align	2
 3128              	.L219:
 3129 001c 00280040 		.word	1073752064
 3130              		.cfi_endproc
 3131              	.LFE160:
 3133              		.section	.text.RTC_TamperCmd,"ax",%progbits
 3134              		.align	1
 3135              		.global	RTC_TamperCmd
 3136              		.syntax unified
 3137              		.thumb
 3138              		.thumb_func
 3140              	RTC_TamperCmd:
 3141              	.LVL226:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 120


 3142              	.LFB161:
2125:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3143              		.loc 1 2125 1 is_stmt 1 view -0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 0
 3146              		@ frame_needed = 0, uses_anonymous_args = 0
 3147              		@ link register save eliminated.
2127:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3148              		.loc 1 2127 3 view .LVU1004
2128:./Library/stm32f4xx_rtc.c ****   
 3149              		.loc 1 2128 3 view .LVU1005
2130:./Library/stm32f4xx_rtc.c ****   {
 3150              		.loc 1 2130 3 view .LVU1006
2130:./Library/stm32f4xx_rtc.c ****   {
 3151              		.loc 1 2130 6 is_stmt 0 view .LVU1007
 3152 0000 21B1     		cbz	r1, .L222
2133:./Library/stm32f4xx_rtc.c ****   }
 3153              		.loc 1 2133 5 is_stmt 1 view .LVU1008
2133:./Library/stm32f4xx_rtc.c ****   }
 3154              		.loc 1 2133 16 is_stmt 0 view .LVU1009
 3155 0002 054A     		ldr	r2, .L224
 3156 0004 136C     		ldr	r3, [r2, #64]
 3157 0006 1843     		orrs	r0, r0, r3
 3158              	.LVL227:
2133:./Library/stm32f4xx_rtc.c ****   }
 3159              		.loc 1 2133 16 view .LVU1010
 3160 0008 1064     		str	r0, [r2, #64]
 3161 000a 7047     		bx	lr
 3162              	.LVL228:
 3163              	.L222:
2138:./Library/stm32f4xx_rtc.c ****   }  
 3164              		.loc 1 2138 5 is_stmt 1 view .LVU1011
2138:./Library/stm32f4xx_rtc.c ****   }  
 3165              		.loc 1 2138 16 is_stmt 0 view .LVU1012
 3166 000c 024A     		ldr	r2, .L224
 3167 000e 136C     		ldr	r3, [r2, #64]
 3168 0010 23EA0000 		bic	r0, r3, r0
 3169              	.LVL229:
2138:./Library/stm32f4xx_rtc.c ****   }  
 3170              		.loc 1 2138 16 view .LVU1013
 3171 0014 1064     		str	r0, [r2, #64]
2140:./Library/stm32f4xx_rtc.c **** 
 3172              		.loc 1 2140 1 view .LVU1014
 3173 0016 7047     		bx	lr
 3174              	.L225:
 3175              		.align	2
 3176              	.L224:
 3177 0018 00280040 		.word	1073752064
 3178              		.cfi_endproc
 3179              	.LFE161:
 3181              		.section	.text.RTC_TamperFilterConfig,"ax",%progbits
 3182              		.align	1
 3183              		.global	RTC_TamperFilterConfig
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3188              	RTC_TamperFilterConfig:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 121


 3189              	.LVL230:
 3190              	.LFB162:
2156:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3191              		.loc 1 2156 1 is_stmt 1 view -0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 0
 3194              		@ frame_needed = 0, uses_anonymous_args = 0
 3195              		@ link register save eliminated.
2158:./Library/stm32f4xx_rtc.c ****    
 3196              		.loc 1 2158 3 view .LVU1016
2161:./Library/stm32f4xx_rtc.c **** 
 3197              		.loc 1 2161 3 view .LVU1017
2161:./Library/stm32f4xx_rtc.c **** 
 3198              		.loc 1 2161 14 is_stmt 0 view .LVU1018
 3199 0000 044B     		ldr	r3, .L227
 3200 0002 196C     		ldr	r1, [r3, #64]
 3201 0004 21F4C051 		bic	r1, r1, #6144
 3202 0008 1964     		str	r1, [r3, #64]
2164:./Library/stm32f4xx_rtc.c **** }
 3203              		.loc 1 2164 3 is_stmt 1 view .LVU1019
2164:./Library/stm32f4xx_rtc.c **** }
 3204              		.loc 1 2164 14 is_stmt 0 view .LVU1020
 3205 000a 1A6C     		ldr	r2, [r3, #64]
 3206 000c 0243     		orrs	r2, r2, r0
 3207 000e 1A64     		str	r2, [r3, #64]
2165:./Library/stm32f4xx_rtc.c **** 
 3208              		.loc 1 2165 1 view .LVU1021
 3209 0010 7047     		bx	lr
 3210              	.L228:
 3211 0012 00BF     		.align	2
 3212              	.L227:
 3213 0014 00280040 		.word	1073752064
 3214              		.cfi_endproc
 3215              	.LFE162:
 3217              		.section	.text.RTC_TamperSamplingFreqConfig,"ax",%progbits
 3218              		.align	1
 3219              		.global	RTC_TamperSamplingFreqConfig
 3220              		.syntax unified
 3221              		.thumb
 3222              		.thumb_func
 3224              	RTC_TamperSamplingFreqConfig:
 3225              	.LVL231:
 3226              	.LFB163:
2190:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3227              		.loc 1 2190 1 is_stmt 1 view -0
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 0
 3230              		@ frame_needed = 0, uses_anonymous_args = 0
 3231              		@ link register save eliminated.
2192:./Library/stm32f4xx_rtc.c ****  
 3232              		.loc 1 2192 3 view .LVU1023
2195:./Library/stm32f4xx_rtc.c **** 
 3233              		.loc 1 2195 3 view .LVU1024
2195:./Library/stm32f4xx_rtc.c **** 
 3234              		.loc 1 2195 14 is_stmt 0 view .LVU1025
 3235 0000 044B     		ldr	r3, .L230
 3236 0002 196C     		ldr	r1, [r3, #64]
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 122


 3237 0004 21F4E061 		bic	r1, r1, #1792
 3238 0008 1964     		str	r1, [r3, #64]
2198:./Library/stm32f4xx_rtc.c **** }
 3239              		.loc 1 2198 3 is_stmt 1 view .LVU1026
2198:./Library/stm32f4xx_rtc.c **** }
 3240              		.loc 1 2198 14 is_stmt 0 view .LVU1027
 3241 000a 1A6C     		ldr	r2, [r3, #64]
 3242 000c 0243     		orrs	r2, r2, r0
 3243 000e 1A64     		str	r2, [r3, #64]
2199:./Library/stm32f4xx_rtc.c **** 
 3244              		.loc 1 2199 1 view .LVU1028
 3245 0010 7047     		bx	lr
 3246              	.L231:
 3247 0012 00BF     		.align	2
 3248              	.L230:
 3249 0014 00280040 		.word	1073752064
 3250              		.cfi_endproc
 3251              	.LFE163:
 3253              		.section	.text.RTC_TamperPinsPrechargeDuration,"ax",%progbits
 3254              		.align	1
 3255              		.global	RTC_TamperPinsPrechargeDuration
 3256              		.syntax unified
 3257              		.thumb
 3258              		.thumb_func
 3260              	RTC_TamperPinsPrechargeDuration:
 3261              	.LVL232:
 3262              	.LFB164:
2213:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3263              		.loc 1 2213 1 is_stmt 1 view -0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 0
 3266              		@ frame_needed = 0, uses_anonymous_args = 0
 3267              		@ link register save eliminated.
2215:./Library/stm32f4xx_rtc.c ****    
 3268              		.loc 1 2215 3 view .LVU1030
2218:./Library/stm32f4xx_rtc.c **** 
 3269              		.loc 1 2218 3 view .LVU1031
2218:./Library/stm32f4xx_rtc.c **** 
 3270              		.loc 1 2218 14 is_stmt 0 view .LVU1032
 3271 0000 044B     		ldr	r3, .L233
 3272 0002 196C     		ldr	r1, [r3, #64]
 3273 0004 21F4C041 		bic	r1, r1, #24576
 3274 0008 1964     		str	r1, [r3, #64]
2221:./Library/stm32f4xx_rtc.c **** }
 3275              		.loc 1 2221 3 is_stmt 1 view .LVU1033
2221:./Library/stm32f4xx_rtc.c **** }
 3276              		.loc 1 2221 14 is_stmt 0 view .LVU1034
 3277 000a 1A6C     		ldr	r2, [r3, #64]
 3278 000c 0243     		orrs	r2, r2, r0
 3279 000e 1A64     		str	r2, [r3, #64]
2222:./Library/stm32f4xx_rtc.c **** 
 3280              		.loc 1 2222 1 view .LVU1035
 3281 0010 7047     		bx	lr
 3282              	.L234:
 3283 0012 00BF     		.align	2
 3284              	.L233:
 3285 0014 00280040 		.word	1073752064
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 123


 3286              		.cfi_endproc
 3287              	.LFE164:
 3289              		.section	.text.RTC_TimeStampOnTamperDetectionCmd,"ax",%progbits
 3290              		.align	1
 3291              		.global	RTC_TimeStampOnTamperDetectionCmd
 3292              		.syntax unified
 3293              		.thumb
 3294              		.thumb_func
 3296              	RTC_TimeStampOnTamperDetectionCmd:
 3297              	.LVL233:
 3298              	.LFB165:
2233:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3299              		.loc 1 2233 1 is_stmt 1 view -0
 3300              		.cfi_startproc
 3301              		@ args = 0, pretend = 0, frame = 0
 3302              		@ frame_needed = 0, uses_anonymous_args = 0
 3303              		@ link register save eliminated.
2235:./Library/stm32f4xx_rtc.c ****    
 3304              		.loc 1 2235 3 view .LVU1037
2237:./Library/stm32f4xx_rtc.c ****   {
 3305              		.loc 1 2237 3 view .LVU1038
2237:./Library/stm32f4xx_rtc.c ****   {
 3306              		.loc 1 2237 6 is_stmt 0 view .LVU1039
 3307 0000 28B1     		cbz	r0, .L236
2240:./Library/stm32f4xx_rtc.c ****   }
 3308              		.loc 1 2240 5 is_stmt 1 view .LVU1040
2240:./Library/stm32f4xx_rtc.c ****   }
 3309              		.loc 1 2240 16 is_stmt 0 view .LVU1041
 3310 0002 064A     		ldr	r2, .L238
 3311 0004 136C     		ldr	r3, [r2, #64]
 3312 0006 43F08003 		orr	r3, r3, #128
 3313 000a 1364     		str	r3, [r2, #64]
 3314 000c 7047     		bx	lr
 3315              	.L236:
2245:./Library/stm32f4xx_rtc.c ****   }
 3316              		.loc 1 2245 5 is_stmt 1 view .LVU1042
2245:./Library/stm32f4xx_rtc.c ****   }
 3317              		.loc 1 2245 16 is_stmt 0 view .LVU1043
 3318 000e 034A     		ldr	r2, .L238
 3319 0010 136C     		ldr	r3, [r2, #64]
 3320 0012 23F08003 		bic	r3, r3, #128
 3321 0016 1364     		str	r3, [r2, #64]
2247:./Library/stm32f4xx_rtc.c **** 
 3322              		.loc 1 2247 1 view .LVU1044
 3323 0018 7047     		bx	lr
 3324              	.L239:
 3325 001a 00BF     		.align	2
 3326              	.L238:
 3327 001c 00280040 		.word	1073752064
 3328              		.cfi_endproc
 3329              	.LFE165:
 3331              		.section	.text.RTC_TamperPullUpCmd,"ax",%progbits
 3332              		.align	1
 3333              		.global	RTC_TamperPullUpCmd
 3334              		.syntax unified
 3335              		.thumb
 3336              		.thumb_func
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 124


 3338              	RTC_TamperPullUpCmd:
 3339              	.LVL234:
 3340              	.LFB166:
2256:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3341              		.loc 1 2256 1 is_stmt 1 view -0
 3342              		.cfi_startproc
 3343              		@ args = 0, pretend = 0, frame = 0
 3344              		@ frame_needed = 0, uses_anonymous_args = 0
 3345              		@ link register save eliminated.
2258:./Library/stm32f4xx_rtc.c ****   
 3346              		.loc 1 2258 3 view .LVU1046
2260:./Library/stm32f4xx_rtc.c ****   {
 3347              		.loc 1 2260 2 view .LVU1047
2260:./Library/stm32f4xx_rtc.c ****   {
 3348              		.loc 1 2260 5 is_stmt 0 view .LVU1048
 3349 0000 28B1     		cbz	r0, .L241
2263:./Library/stm32f4xx_rtc.c ****   }
 3350              		.loc 1 2263 5 is_stmt 1 view .LVU1049
2263:./Library/stm32f4xx_rtc.c ****   }
 3351              		.loc 1 2263 16 is_stmt 0 view .LVU1050
 3352 0002 064A     		ldr	r2, .L243
 3353 0004 136C     		ldr	r3, [r2, #64]
 3354 0006 23F40043 		bic	r3, r3, #32768
 3355 000a 1364     		str	r3, [r2, #64]
 3356 000c 7047     		bx	lr
 3357              	.L241:
2268:./Library/stm32f4xx_rtc.c ****   } 
 3358              		.loc 1 2268 5 is_stmt 1 view .LVU1051
2268:./Library/stm32f4xx_rtc.c ****   } 
 3359              		.loc 1 2268 16 is_stmt 0 view .LVU1052
 3360 000e 034A     		ldr	r2, .L243
 3361 0010 136C     		ldr	r3, [r2, #64]
 3362 0012 43F40043 		orr	r3, r3, #32768
 3363 0016 1364     		str	r3, [r2, #64]
2270:./Library/stm32f4xx_rtc.c **** 
 3364              		.loc 1 2270 1 view .LVU1053
 3365 0018 7047     		bx	lr
 3366              	.L244:
 3367 001a 00BF     		.align	2
 3368              	.L243:
 3369 001c 00280040 		.word	1073752064
 3370              		.cfi_endproc
 3371              	.LFE166:
 3373              		.section	.text.RTC_WriteBackupRegister,"ax",%progbits
 3374              		.align	1
 3375              		.global	RTC_WriteBackupRegister
 3376              		.syntax unified
 3377              		.thumb
 3378              		.thumb_func
 3380              	RTC_WriteBackupRegister:
 3381              	.LVL235:
 3382              	.LFB167:
2297:./Library/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3383              		.loc 1 2297 1 is_stmt 1 view -0
 3384              		.cfi_startproc
 3385              		@ args = 0, pretend = 0, frame = 8
 3386              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 125


 3387              		@ link register save eliminated.
2297:./Library/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3388              		.loc 1 2297 1 is_stmt 0 view .LVU1055
 3389 0000 82B0     		sub	sp, sp, #8
 3390              	.LCFI37:
 3391              		.cfi_def_cfa_offset 8
2298:./Library/stm32f4xx_rtc.c ****   
 3392              		.loc 1 2298 3 is_stmt 1 view .LVU1056
2298:./Library/stm32f4xx_rtc.c ****   
 3393              		.loc 1 2298 17 is_stmt 0 view .LVU1057
 3394 0002 0023     		movs	r3, #0
 3395 0004 0193     		str	r3, [sp, #4]
2301:./Library/stm32f4xx_rtc.c **** 
 3396              		.loc 1 2301 3 is_stmt 1 view .LVU1058
2303:./Library/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3397              		.loc 1 2303 3 view .LVU1059
2303:./Library/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3398              		.loc 1 2303 7 is_stmt 0 view .LVU1060
 3399 0006 054B     		ldr	r3, .L247
 3400 0008 0193     		str	r3, [sp, #4]
2304:./Library/stm32f4xx_rtc.c **** 
 3401              		.loc 1 2304 3 is_stmt 1 view .LVU1061
2304:./Library/stm32f4xx_rtc.c **** 
 3402              		.loc 1 2304 7 is_stmt 0 view .LVU1062
 3403 000a 019B     		ldr	r3, [sp, #4]
 3404 000c 03EB8003 		add	r3, r3, r0, lsl #2
 3405 0010 0193     		str	r3, [sp, #4]
2307:./Library/stm32f4xx_rtc.c **** }
 3406              		.loc 1 2307 3 is_stmt 1 view .LVU1063
2307:./Library/stm32f4xx_rtc.c **** }
 3407              		.loc 1 2307 4 is_stmt 0 view .LVU1064
 3408 0012 019B     		ldr	r3, [sp, #4]
2307:./Library/stm32f4xx_rtc.c **** }
 3409              		.loc 1 2307 25 view .LVU1065
 3410 0014 1960     		str	r1, [r3]
2308:./Library/stm32f4xx_rtc.c **** 
 3411              		.loc 1 2308 1 view .LVU1066
 3412 0016 02B0     		add	sp, sp, #8
 3413              	.LCFI38:
 3414              		.cfi_def_cfa_offset 0
 3415              		@ sp needed
 3416 0018 7047     		bx	lr
 3417              	.L248:
 3418 001a 00BF     		.align	2
 3419              	.L247:
 3420 001c 50280040 		.word	1073752144
 3421              		.cfi_endproc
 3422              	.LFE167:
 3424              		.section	.text.RTC_ReadBackupRegister,"ax",%progbits
 3425              		.align	1
 3426              		.global	RTC_ReadBackupRegister
 3427              		.syntax unified
 3428              		.thumb
 3429              		.thumb_func
 3431              	RTC_ReadBackupRegister:
 3432              	.LVL236:
 3433              	.LFB168:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 126


2318:./Library/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3434              		.loc 1 2318 1 is_stmt 1 view -0
 3435              		.cfi_startproc
 3436              		@ args = 0, pretend = 0, frame = 8
 3437              		@ frame_needed = 0, uses_anonymous_args = 0
 3438              		@ link register save eliminated.
2318:./Library/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3439              		.loc 1 2318 1 is_stmt 0 view .LVU1068
 3440 0000 82B0     		sub	sp, sp, #8
 3441              	.LCFI39:
 3442              		.cfi_def_cfa_offset 8
2319:./Library/stm32f4xx_rtc.c ****   
 3443              		.loc 1 2319 3 is_stmt 1 view .LVU1069
2319:./Library/stm32f4xx_rtc.c ****   
 3444              		.loc 1 2319 17 is_stmt 0 view .LVU1070
 3445 0002 0023     		movs	r3, #0
 3446 0004 0193     		str	r3, [sp, #4]
2322:./Library/stm32f4xx_rtc.c **** 
 3447              		.loc 1 2322 3 is_stmt 1 view .LVU1071
2324:./Library/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3448              		.loc 1 2324 3 view .LVU1072
2324:./Library/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3449              		.loc 1 2324 7 is_stmt 0 view .LVU1073
 3450 0006 054B     		ldr	r3, .L251
 3451 0008 0193     		str	r3, [sp, #4]
2325:./Library/stm32f4xx_rtc.c ****   
 3452              		.loc 1 2325 3 is_stmt 1 view .LVU1074
2325:./Library/stm32f4xx_rtc.c ****   
 3453              		.loc 1 2325 7 is_stmt 0 view .LVU1075
 3454 000a 019B     		ldr	r3, [sp, #4]
 3455 000c 03EB8003 		add	r3, r3, r0, lsl #2
 3456 0010 0193     		str	r3, [sp, #4]
2328:./Library/stm32f4xx_rtc.c **** }
 3457              		.loc 1 2328 3 is_stmt 1 view .LVU1076
2328:./Library/stm32f4xx_rtc.c **** }
 3458              		.loc 1 2328 12 is_stmt 0 view .LVU1077
 3459 0012 019B     		ldr	r3, [sp, #4]
2328:./Library/stm32f4xx_rtc.c **** }
 3460              		.loc 1 2328 11 view .LVU1078
 3461 0014 1868     		ldr	r0, [r3]
 3462              	.LVL237:
2329:./Library/stm32f4xx_rtc.c **** 
 3463              		.loc 1 2329 1 view .LVU1079
 3464 0016 02B0     		add	sp, sp, #8
 3465              	.LCFI40:
 3466              		.cfi_def_cfa_offset 0
 3467              		@ sp needed
 3468 0018 7047     		bx	lr
 3469              	.L252:
 3470 001a 00BF     		.align	2
 3471              	.L251:
 3472 001c 50280040 		.word	1073752144
 3473              		.cfi_endproc
 3474              	.LFE168:
 3476              		.section	.text.RTC_TamperPinSelection,"ax",%progbits
 3477              		.align	1
 3478              		.global	RTC_TamperPinSelection
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 127


 3479              		.syntax unified
 3480              		.thumb
 3481              		.thumb_func
 3483              	RTC_TamperPinSelection:
 3484              	.LVL238:
 3485              	.LFB169:
2357:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3486              		.loc 1 2357 1 is_stmt 1 view -0
 3487              		.cfi_startproc
 3488              		@ args = 0, pretend = 0, frame = 0
 3489              		@ frame_needed = 0, uses_anonymous_args = 0
 3490              		@ link register save eliminated.
2359:./Library/stm32f4xx_rtc.c ****   
 3491              		.loc 1 2359 3 view .LVU1081
2361:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
 3492              		.loc 1 2361 3 view .LVU1082
2361:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
 3493              		.loc 1 2361 14 is_stmt 0 view .LVU1083
 3494 0000 044B     		ldr	r3, .L254
 3495 0002 196C     		ldr	r1, [r3, #64]
 3496 0004 21F48031 		bic	r1, r1, #65536
 3497 0008 1964     		str	r1, [r3, #64]
2362:./Library/stm32f4xx_rtc.c **** }
 3498              		.loc 1 2362 3 is_stmt 1 view .LVU1084
2362:./Library/stm32f4xx_rtc.c **** }
 3499              		.loc 1 2362 14 is_stmt 0 view .LVU1085
 3500 000a 1A6C     		ldr	r2, [r3, #64]
 3501 000c 0243     		orrs	r2, r2, r0
 3502 000e 1A64     		str	r2, [r3, #64]
2363:./Library/stm32f4xx_rtc.c **** 
 3503              		.loc 1 2363 1 view .LVU1086
 3504 0010 7047     		bx	lr
 3505              	.L255:
 3506 0012 00BF     		.align	2
 3507              	.L254:
 3508 0014 00280040 		.word	1073752064
 3509              		.cfi_endproc
 3510              	.LFE169:
 3512              		.section	.text.RTC_TimeStampPinSelection,"ax",%progbits
 3513              		.align	1
 3514              		.global	RTC_TimeStampPinSelection
 3515              		.syntax unified
 3516              		.thumb
 3517              		.thumb_func
 3519              	RTC_TimeStampPinSelection:
 3520              	.LVL239:
 3521              	.LFB170:
2374:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3522              		.loc 1 2374 1 is_stmt 1 view -0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              		@ link register save eliminated.
2376:./Library/stm32f4xx_rtc.c ****   
 3527              		.loc 1 2376 3 view .LVU1088
2378:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
 3528              		.loc 1 2378 3 view .LVU1089
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 128


2378:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
 3529              		.loc 1 2378 14 is_stmt 0 view .LVU1090
 3530 0000 044B     		ldr	r3, .L257
 3531 0002 196C     		ldr	r1, [r3, #64]
 3532 0004 21F40031 		bic	r1, r1, #131072
 3533 0008 1964     		str	r1, [r3, #64]
2379:./Library/stm32f4xx_rtc.c **** }
 3534              		.loc 1 2379 3 is_stmt 1 view .LVU1091
2379:./Library/stm32f4xx_rtc.c **** }
 3535              		.loc 1 2379 14 is_stmt 0 view .LVU1092
 3536 000a 1A6C     		ldr	r2, [r3, #64]
 3537 000c 0243     		orrs	r2, r2, r0
 3538 000e 1A64     		str	r2, [r3, #64]
2380:./Library/stm32f4xx_rtc.c **** 
 3539              		.loc 1 2380 1 view .LVU1093
 3540 0010 7047     		bx	lr
 3541              	.L258:
 3542 0012 00BF     		.align	2
 3543              	.L257:
 3544 0014 00280040 		.word	1073752064
 3545              		.cfi_endproc
 3546              	.LFE170:
 3548              		.section	.text.RTC_OutputTypeConfig,"ax",%progbits
 3549              		.align	1
 3550              		.global	RTC_OutputTypeConfig
 3551              		.syntax unified
 3552              		.thumb
 3553              		.thumb_func
 3555              	RTC_OutputTypeConfig:
 3556              	.LVL240:
 3557              	.LFB171:
2393:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3558              		.loc 1 2393 1 is_stmt 1 view -0
 3559              		.cfi_startproc
 3560              		@ args = 0, pretend = 0, frame = 0
 3561              		@ frame_needed = 0, uses_anonymous_args = 0
 3562              		@ link register save eliminated.
2395:./Library/stm32f4xx_rtc.c ****   
 3563              		.loc 1 2395 3 view .LVU1095
2397:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
 3564              		.loc 1 2397 3 view .LVU1096
2397:./Library/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
 3565              		.loc 1 2397 14 is_stmt 0 view .LVU1097
 3566 0000 044B     		ldr	r3, .L260
 3567 0002 196C     		ldr	r1, [r3, #64]
 3568 0004 21F48021 		bic	r1, r1, #262144
 3569 0008 1964     		str	r1, [r3, #64]
2398:./Library/stm32f4xx_rtc.c **** }
 3570              		.loc 1 2398 3 is_stmt 1 view .LVU1098
2398:./Library/stm32f4xx_rtc.c **** }
 3571              		.loc 1 2398 14 is_stmt 0 view .LVU1099
 3572 000a 1A6C     		ldr	r2, [r3, #64]
 3573 000c 0243     		orrs	r2, r2, r0
 3574 000e 1A64     		str	r2, [r3, #64]
2399:./Library/stm32f4xx_rtc.c **** 
 3575              		.loc 1 2399 1 view .LVU1100
 3576 0010 7047     		bx	lr
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 129


 3577              	.L261:
 3578 0012 00BF     		.align	2
 3579              	.L260:
 3580 0014 00280040 		.word	1073752064
 3581              		.cfi_endproc
 3582              	.LFE171:
 3584              		.section	.text.RTC_SynchroShiftConfig,"ax",%progbits
 3585              		.align	1
 3586              		.global	RTC_SynchroShiftConfig
 3587              		.syntax unified
 3588              		.thumb
 3589              		.thumb_func
 3591              	RTC_SynchroShiftConfig:
 3592              	.LVL241:
 3593              	.LFB172:
2431:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3594              		.loc 1 2431 1 is_stmt 1 view -0
 3595              		.cfi_startproc
 3596              		@ args = 0, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
2431:./Library/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3598              		.loc 1 2431 1 is_stmt 0 view .LVU1102
 3599 0000 08B5     		push	{r3, lr}
 3600              	.LCFI41:
 3601              		.cfi_def_cfa_offset 8
 3602              		.cfi_offset 3, -8
 3603              		.cfi_offset 14, -4
2432:./Library/stm32f4xx_rtc.c ****   uint32_t shpfcount = 0;
 3604              		.loc 1 2432 3 is_stmt 1 view .LVU1103
 3605              	.LVL242:
2433:./Library/stm32f4xx_rtc.c **** 
 3606              		.loc 1 2433 3 view .LVU1104
2436:./Library/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_SUBFS(RTC_ShiftSubFS));
 3607              		.loc 1 2436 3 view .LVU1105
2437:./Library/stm32f4xx_rtc.c **** 
 3608              		.loc 1 2437 3 view .LVU1106
2440:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3609              		.loc 1 2440 3 view .LVU1107
2440:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3610              		.loc 1 2440 12 is_stmt 0 view .LVU1108
 3611 0002 164B     		ldr	r3, .L273
 3612 0004 CA22     		movs	r2, #202
 3613 0006 5A62     		str	r2, [r3, #36]
2441:./Library/stm32f4xx_rtc.c ****   
 3614              		.loc 1 2441 3 is_stmt 1 view .LVU1109
2441:./Library/stm32f4xx_rtc.c ****   
 3615              		.loc 1 2441 12 is_stmt 0 view .LVU1110
 3616 0008 5322     		movs	r2, #83
 3617 000a 5A62     		str	r2, [r3, #36]
2444:./Library/stm32f4xx_rtc.c ****   {
 3618              		.loc 1 2444 3 is_stmt 1 view .LVU1111
2444:./Library/stm32f4xx_rtc.c ****   {
 3619              		.loc 1 2444 11 is_stmt 0 view .LVU1112
 3620 000c DB68     		ldr	r3, [r3, #12]
2444:./Library/stm32f4xx_rtc.c ****   {
 3621              		.loc 1 2444 6 view .LVU1113
 3622 000e 13F0080F 		tst	r3, #8
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 130


 3623 0012 0BD1     		bne	.L267
 3624              	.LVL243:
 3625              	.L264:
2454:./Library/stm32f4xx_rtc.c ****   {
 3626              		.loc 1 2454 3 is_stmt 1 view .LVU1114
2454:./Library/stm32f4xx_rtc.c ****   {
 3627              		.loc 1 2454 11 is_stmt 0 view .LVU1115
 3628 0014 114B     		ldr	r3, .L273
 3629 0016 DB68     		ldr	r3, [r3, #12]
2454:./Library/stm32f4xx_rtc.c ****   {
 3630              		.loc 1 2454 6 view .LVU1116
 3631 0018 13F0080F 		tst	r3, #8
 3632 001c 19D1     		bne	.L268
2457:./Library/stm32f4xx_rtc.c ****     {
 3633              		.loc 1 2457 5 is_stmt 1 view .LVU1117
2457:./Library/stm32f4xx_rtc.c ****     {
 3634              		.loc 1 2457 12 is_stmt 0 view .LVU1118
 3635 001e 0F4B     		ldr	r3, .L273
 3636 0020 9B68     		ldr	r3, [r3, #8]
2457:./Library/stm32f4xx_rtc.c ****     {
 3637              		.loc 1 2457 7 view .LVU1119
 3638 0022 13F0100F 		tst	r3, #16
 3639 0026 0CD0     		beq	.L272
2473:./Library/stm32f4xx_rtc.c ****     }
 3640              		.loc 1 2473 14 view .LVU1120
 3641 0028 0020     		movs	r0, #0
 3642              	.LVL244:
2473:./Library/stm32f4xx_rtc.c ****     }
 3643              		.loc 1 2473 14 view .LVU1121
 3644 002a 13E0     		b	.L266
 3645              	.LVL245:
 3646              	.L267:
2433:./Library/stm32f4xx_rtc.c **** 
 3647              		.loc 1 2433 12 view .LVU1122
 3648 002c 0023     		movs	r3, #0
 3649              	.LVL246:
 3650              	.L263:
2447:./Library/stm32f4xx_rtc.c ****     {
 3651              		.loc 1 2447 11 is_stmt 1 view .LVU1123
2447:./Library/stm32f4xx_rtc.c ****     {
 3652              		.loc 1 2447 17 is_stmt 0 view .LVU1124
 3653 002e 0B4A     		ldr	r2, .L273
 3654 0030 D268     		ldr	r2, [r2, #12]
2447:./Library/stm32f4xx_rtc.c ****     {
 3655              		.loc 1 2447 11 view .LVU1125
 3656 0032 12F0080F 		tst	r2, #8
 3657 0036 EDD0     		beq	.L264
2447:./Library/stm32f4xx_rtc.c ****     {
 3658              		.loc 1 2447 49 discriminator 1 view .LVU1126
 3659 0038 B3F5805F 		cmp	r3, #4096
 3660 003c EAD0     		beq	.L264
2449:./Library/stm32f4xx_rtc.c ****     }
 3661              		.loc 1 2449 7 is_stmt 1 view .LVU1127
2449:./Library/stm32f4xx_rtc.c ****     }
 3662              		.loc 1 2449 16 is_stmt 0 view .LVU1128
 3663 003e 0133     		adds	r3, r3, #1
 3664              	.LVL247:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 131


2449:./Library/stm32f4xx_rtc.c ****     }
 3665              		.loc 1 2449 16 view .LVU1129
 3666 0040 F5E7     		b	.L263
 3667              	.LVL248:
 3668              	.L272:
2460:./Library/stm32f4xx_rtc.c ****     
 3669              		.loc 1 2460 7 is_stmt 1 view .LVU1130
2460:./Library/stm32f4xx_rtc.c ****     
 3670              		.loc 1 2460 58 is_stmt 0 view .LVU1131
 3671 0042 0143     		orrs	r1, r1, r0
 3672              	.LVL249:
2460:./Library/stm32f4xx_rtc.c ****     
 3673              		.loc 1 2460 19 view .LVU1132
 3674 0044 054B     		ldr	r3, .L273
 3675 0046 D962     		str	r1, [r3, #44]
2462:./Library/stm32f4xx_rtc.c ****       {
 3676              		.loc 1 2462 7 is_stmt 1 view .LVU1133
2462:./Library/stm32f4xx_rtc.c ****       {
 3677              		.loc 1 2462 10 is_stmt 0 view .LVU1134
 3678 0048 FFF7FEFF 		bl	RTC_WaitForSynchro
 3679              	.LVL250:
2462:./Library/stm32f4xx_rtc.c ****       {
 3680              		.loc 1 2462 9 view .LVU1135
 3681 004c 10B1     		cbz	r0, .L266
2468:./Library/stm32f4xx_rtc.c ****       }
 3682              		.loc 1 2468 16 view .LVU1136
 3683 004e 0120     		movs	r0, #1
 3684 0050 00E0     		b	.L266
 3685              	.LVL251:
 3686              	.L268:
2478:./Library/stm32f4xx_rtc.c ****   }
 3687              		.loc 1 2478 12 view .LVU1137
 3688 0052 0020     		movs	r0, #0
 3689              	.LVL252:
 3690              	.L266:
2482:./Library/stm32f4xx_rtc.c ****   
 3691              		.loc 1 2482 3 is_stmt 1 view .LVU1138
2482:./Library/stm32f4xx_rtc.c ****   
 3692              		.loc 1 2482 12 is_stmt 0 view .LVU1139
 3693 0054 014B     		ldr	r3, .L273
 3694 0056 FF22     		movs	r2, #255
 3695 0058 5A62     		str	r2, [r3, #36]
2484:./Library/stm32f4xx_rtc.c **** }
 3696              		.loc 1 2484 3 is_stmt 1 view .LVU1140
2485:./Library/stm32f4xx_rtc.c **** 
 3697              		.loc 1 2485 1 is_stmt 0 view .LVU1141
 3698 005a 08BD     		pop	{r3, pc}
 3699              	.L274:
 3700              		.align	2
 3701              	.L273:
 3702 005c 00280040 		.word	1073752064
 3703              		.cfi_endproc
 3704              	.LFE172:
 3706              		.section	.text.RTC_ITConfig,"ax",%progbits
 3707              		.align	1
 3708              		.global	RTC_ITConfig
 3709              		.syntax unified
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 132


 3710              		.thumb
 3711              		.thumb_func
 3713              	RTC_ITConfig:
 3714              	.LVL253:
 3715              	.LFB173:
2551:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3716              		.loc 1 2551 1 is_stmt 1 view -0
 3717              		.cfi_startproc
 3718              		@ args = 0, pretend = 0, frame = 0
 3719              		@ frame_needed = 0, uses_anonymous_args = 0
 3720              		@ link register save eliminated.
2553:./Library/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3721              		.loc 1 2553 3 view .LVU1143
2554:./Library/stm32f4xx_rtc.c **** 
 3722              		.loc 1 2554 3 view .LVU1144
2557:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3723              		.loc 1 2557 3 view .LVU1145
2557:./Library/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3724              		.loc 1 2557 12 is_stmt 0 view .LVU1146
 3725 0000 104B     		ldr	r3, .L278
 3726 0002 CA22     		movs	r2, #202
 3727 0004 5A62     		str	r2, [r3, #36]
2558:./Library/stm32f4xx_rtc.c **** 
 3728              		.loc 1 2558 3 is_stmt 1 view .LVU1147
2558:./Library/stm32f4xx_rtc.c **** 
 3729              		.loc 1 2558 12 is_stmt 0 view .LVU1148
 3730 0006 5322     		movs	r2, #83
 3731 0008 5A62     		str	r2, [r3, #36]
2560:./Library/stm32f4xx_rtc.c ****   {
 3732              		.loc 1 2560 3 is_stmt 1 view .LVU1149
2560:./Library/stm32f4xx_rtc.c ****   {
 3733              		.loc 1 2560 6 is_stmt 0 view .LVU1150
 3734 000a 69B1     		cbz	r1, .L276
2563:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3735              		.loc 1 2563 5 is_stmt 1 view .LVU1151
2563:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3736              		.loc 1 2563 13 is_stmt 0 view .LVU1152
 3737 000c 9A68     		ldr	r2, [r3, #8]
2563:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3738              		.loc 1 2563 16 view .LVU1153
 3739 000e 20F00401 		bic	r1, r0, #4
 3740              	.LVL254:
2563:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3741              		.loc 1 2563 13 view .LVU1154
 3742 0012 0A43     		orrs	r2, r2, r1
 3743 0014 9A60     		str	r2, [r3, #8]
2565:./Library/stm32f4xx_rtc.c ****   }
 3744              		.loc 1 2565 5 is_stmt 1 view .LVU1155
2565:./Library/stm32f4xx_rtc.c ****   }
 3745              		.loc 1 2565 16 is_stmt 0 view .LVU1156
 3746 0016 1A6C     		ldr	r2, [r3, #64]
2565:./Library/stm32f4xx_rtc.c ****   }
 3747              		.loc 1 2565 19 view .LVU1157
 3748 0018 00F00400 		and	r0, r0, #4
 3749              	.LVL255:
2565:./Library/stm32f4xx_rtc.c ****   }
 3750              		.loc 1 2565 16 view .LVU1158
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 133


 3751 001c 1043     		orrs	r0, r0, r2
 3752 001e 1864     		str	r0, [r3, #64]
 3753              	.L277:
2575:./Library/stm32f4xx_rtc.c **** }
 3754              		.loc 1 2575 3 is_stmt 1 view .LVU1159
2575:./Library/stm32f4xx_rtc.c **** }
 3755              		.loc 1 2575 12 is_stmt 0 view .LVU1160
 3756 0020 084B     		ldr	r3, .L278
 3757 0022 FF22     		movs	r2, #255
 3758 0024 5A62     		str	r2, [r3, #36]
2576:./Library/stm32f4xx_rtc.c **** 
 3759              		.loc 1 2576 1 view .LVU1161
 3760 0026 7047     		bx	lr
 3761              	.LVL256:
 3762              	.L276:
2570:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3763              		.loc 1 2570 5 is_stmt 1 view .LVU1162
2570:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3764              		.loc 1 2570 13 is_stmt 0 view .LVU1163
 3765 0028 064B     		ldr	r3, .L278
 3766 002a 9A68     		ldr	r2, [r3, #8]
2570:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3767              		.loc 1 2570 35 view .LVU1164
 3768 002c 20F00401 		bic	r1, r0, #4
 3769              	.LVL257:
2570:./Library/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3770              		.loc 1 2570 13 view .LVU1165
 3771 0030 22EA0102 		bic	r2, r2, r1
 3772 0034 9A60     		str	r2, [r3, #8]
2572:./Library/stm32f4xx_rtc.c ****   }
 3773              		.loc 1 2572 5 is_stmt 1 view .LVU1166
2572:./Library/stm32f4xx_rtc.c ****   }
 3774              		.loc 1 2572 16 is_stmt 0 view .LVU1167
 3775 0036 1A6C     		ldr	r2, [r3, #64]
2572:./Library/stm32f4xx_rtc.c ****   }
 3776              		.loc 1 2572 38 view .LVU1168
 3777 0038 00F00400 		and	r0, r0, #4
 3778              	.LVL258:
2572:./Library/stm32f4xx_rtc.c ****   }
 3779              		.loc 1 2572 16 view .LVU1169
 3780 003c 22EA0000 		bic	r0, r2, r0
 3781 0040 1864     		str	r0, [r3, #64]
 3782 0042 EDE7     		b	.L277
 3783              	.L279:
 3784              		.align	2
 3785              	.L278:
 3786 0044 00280040 		.word	1073752064
 3787              		.cfi_endproc
 3788              	.LFE173:
 3790              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 3791              		.align	1
 3792              		.global	RTC_GetFlagStatus
 3793              		.syntax unified
 3794              		.thumb
 3795              		.thumb_func
 3797              	RTC_GetFlagStatus:
 3798              	.LVL259:
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 134


 3799              	.LFB174:
2600:./Library/stm32f4xx_rtc.c ****   FlagStatus bitstatus = RESET;
 3800              		.loc 1 2600 1 is_stmt 1 view -0
 3801              		.cfi_startproc
 3802              		@ args = 0, pretend = 0, frame = 0
 3803              		@ frame_needed = 0, uses_anonymous_args = 0
 3804              		@ link register save eliminated.
2601:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 3805              		.loc 1 2601 3 view .LVU1171
2602:./Library/stm32f4xx_rtc.c ****   
 3806              		.loc 1 2602 3 view .LVU1172
2605:./Library/stm32f4xx_rtc.c ****   
 3807              		.loc 1 2605 3 view .LVU1173
2608:./Library/stm32f4xx_rtc.c ****   
 3808              		.loc 1 2608 3 view .LVU1174
2608:./Library/stm32f4xx_rtc.c ****   
 3809              		.loc 1 2608 26 is_stmt 0 view .LVU1175
 3810 0000 074B     		ldr	r3, .L283
 3811 0002 DB68     		ldr	r3, [r3, #12]
2608:./Library/stm32f4xx_rtc.c ****   
 3812              		.loc 1 2608 10 view .LVU1176
 3813 0004 23F07F43 		bic	r3, r3, #-16777216
 3814 0008 23F47E03 		bic	r3, r3, #16646144
 3815 000c 23F40043 		bic	r3, r3, #32768
 3816 0010 23F08003 		bic	r3, r3, #128
 3817              	.LVL260:
2611:./Library/stm32f4xx_rtc.c ****   {
 3818              		.loc 1 2611 3 is_stmt 1 view .LVU1177
2611:./Library/stm32f4xx_rtc.c ****   {
 3819              		.loc 1 2611 6 is_stmt 0 view .LVU1178
 3820 0014 0342     		tst	r3, r0
 3821 0016 01D0     		beq	.L282
2613:./Library/stm32f4xx_rtc.c ****   }
 3822              		.loc 1 2613 15 view .LVU1179
 3823 0018 0120     		movs	r0, #1
 3824              	.LVL261:
2613:./Library/stm32f4xx_rtc.c ****   }
 3825              		.loc 1 2613 15 view .LVU1180
 3826 001a 7047     		bx	lr
 3827              	.LVL262:
 3828              	.L282:
2617:./Library/stm32f4xx_rtc.c ****   }
 3829              		.loc 1 2617 15 view .LVU1181
 3830 001c 0020     		movs	r0, #0
 3831              	.LVL263:
2619:./Library/stm32f4xx_rtc.c **** }
 3832              		.loc 1 2619 3 is_stmt 1 view .LVU1182
2620:./Library/stm32f4xx_rtc.c **** 
 3833              		.loc 1 2620 1 is_stmt 0 view .LVU1183
 3834 001e 7047     		bx	lr
 3835              	.L284:
 3836              		.align	2
 3837              	.L283:
 3838 0020 00280040 		.word	1073752064
 3839              		.cfi_endproc
 3840              	.LFE174:
 3842              		.section	.text.RTC_ClearFlag,"ax",%progbits
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 135


 3843              		.align	1
 3844              		.global	RTC_ClearFlag
 3845              		.syntax unified
 3846              		.thumb
 3847              		.thumb_func
 3849              	RTC_ClearFlag:
 3850              	.LVL264:
 3851              	.LFB175:
2637:./Library/stm32f4xx_rtc.c ****   /* Check the parameters */
 3852              		.loc 1 2637 1 is_stmt 1 view -0
 3853              		.cfi_startproc
 3854              		@ args = 0, pretend = 0, frame = 0
 3855              		@ frame_needed = 0, uses_anonymous_args = 0
 3856              		@ link register save eliminated.
2639:./Library/stm32f4xx_rtc.c **** 
 3857              		.loc 1 2639 3 view .LVU1185
2642:./Library/stm32f4xx_rtc.c **** }
 3858              		.loc 1 2642 3 view .LVU1186
2642:./Library/stm32f4xx_rtc.c **** }
 3859              		.loc 1 2642 63 is_stmt 0 view .LVU1187
 3860 0000 80B2     		uxth	r0, r0
 3861              	.LVL265:
2642:./Library/stm32f4xx_rtc.c **** }
 3862              		.loc 1 2642 63 view .LVU1188
 3863 0002 40F08003 		orr	r3, r0, #128
2642:./Library/stm32f4xx_rtc.c **** }
 3864              		.loc 1 2642 93 view .LVU1189
 3865 0006 044A     		ldr	r2, .L286
 3866 0008 D068     		ldr	r0, [r2, #12]
2642:./Library/stm32f4xx_rtc.c **** }
 3867              		.loc 1 2642 79 view .LVU1190
 3868 000a 00F08000 		and	r0, r0, #128
2642:./Library/stm32f4xx_rtc.c **** }
 3869              		.loc 1 2642 14 view .LVU1191
 3870 000e 60EA0300 		orn	r0, r0, r3
2642:./Library/stm32f4xx_rtc.c **** }
 3871              		.loc 1 2642 12 view .LVU1192
 3872 0012 D060     		str	r0, [r2, #12]
2643:./Library/stm32f4xx_rtc.c **** 
 3873              		.loc 1 2643 1 view .LVU1193
 3874 0014 7047     		bx	lr
 3875              	.L287:
 3876 0016 00BF     		.align	2
 3877              	.L286:
 3878 0018 00280040 		.word	1073752064
 3879              		.cfi_endproc
 3880              	.LFE175:
 3882              		.section	.text.RTC_GetITStatus,"ax",%progbits
 3883              		.align	1
 3884              		.global	RTC_GetITStatus
 3885              		.syntax unified
 3886              		.thumb
 3887              		.thumb_func
 3889              	RTC_GetITStatus:
 3890              	.LVL266:
 3891              	.LFB176:
2658:./Library/stm32f4xx_rtc.c ****   ITStatus bitstatus = RESET;
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 136


 3892              		.loc 1 2658 1 is_stmt 1 view -0
 3893              		.cfi_startproc
 3894              		@ args = 0, pretend = 0, frame = 0
 3895              		@ frame_needed = 0, uses_anonymous_args = 0
 3896              		@ link register save eliminated.
2659:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0, enablestatus = 0;
 3897              		.loc 1 2659 3 view .LVU1195
2660:./Library/stm32f4xx_rtc.c ****  
 3898              		.loc 1 2660 3 view .LVU1196
2663:./Library/stm32f4xx_rtc.c ****   
 3899              		.loc 1 2663 3 view .LVU1197
2666:./Library/stm32f4xx_rtc.c ****  
 3900              		.loc 1 2666 3 view .LVU1198
2666:./Library/stm32f4xx_rtc.c ****  
 3901              		.loc 1 2666 26 is_stmt 0 view .LVU1199
 3902 0000 0B49     		ldr	r1, .L292
 3903 0002 0B6C     		ldr	r3, [r1, #64]
2666:./Library/stm32f4xx_rtc.c ****  
 3904              		.loc 1 2666 10 view .LVU1200
 3905 0004 03F00403 		and	r3, r3, #4
 3906              	.LVL267:
2669:./Library/stm32f4xx_rtc.c ****   
 3907              		.loc 1 2669 3 is_stmt 1 view .LVU1201
2669:./Library/stm32f4xx_rtc.c ****   
 3908              		.loc 1 2669 33 is_stmt 0 view .LVU1202
 3909 0008 8A68     		ldr	r2, [r1, #8]
2669:./Library/stm32f4xx_rtc.c ****   
 3910              		.loc 1 2669 38 view .LVU1203
 3911 000a 0240     		ands	r2, r2, r0
2669:./Library/stm32f4xx_rtc.c ****   
 3912              		.loc 1 2669 58 view .LVU1204
 3913 000c 03EAD03C 		and	ip, r3, r0, lsr #15
2669:./Library/stm32f4xx_rtc.c ****   
 3914              		.loc 1 2669 48 view .LVU1205
 3915 0010 42EA0C02 		orr	r2, r2, ip
2669:./Library/stm32f4xx_rtc.c ****   
 3916              		.loc 1 2669 86 view .LVU1206
 3917 0014 03EA1043 		and	r3, r3, r0, lsr #16
 3918              	.LVL268:
2672:./Library/stm32f4xx_rtc.c ****   
 3919              		.loc 1 2672 3 is_stmt 1 view .LVU1207
2672:./Library/stm32f4xx_rtc.c ****   
 3920              		.loc 1 2672 27 is_stmt 0 view .LVU1208
 3921 0018 C968     		ldr	r1, [r1, #12]
2672:./Library/stm32f4xx_rtc.c ****   
 3922              		.loc 1 2672 10 view .LVU1209
 3923 001a 01EA1010 		and	r0, r1, r0, lsr #4
 3924              	.LVL269:
2675:./Library/stm32f4xx_rtc.c ****   {
 3925              		.loc 1 2675 3 is_stmt 1 view .LVU1210
2675:./Library/stm32f4xx_rtc.c ****   {
 3926              		.loc 1 2675 6 is_stmt 0 view .LVU1211
 3927 001e 1343     		orrs	r3, r2, r3
 3928              	.LVL270:
2675:./Library/stm32f4xx_rtc.c ****   {
 3929              		.loc 1 2675 6 view .LVU1212
 3930 0020 02D0     		beq	.L290
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 137


2675:./Library/stm32f4xx_rtc.c ****   {
 3931              		.loc 1 2675 53 discriminator 1 view .LVU1213
 3932 0022 80B2     		uxth	r0, r0
 3933              	.LVL271:
2675:./Library/stm32f4xx_rtc.c ****   {
 3934              		.loc 1 2675 41 discriminator 1 view .LVU1214
 3935 0024 10B9     		cbnz	r0, .L291
 3936 0026 7047     		bx	lr
 3937              	.LVL272:
 3938              	.L290:
2681:./Library/stm32f4xx_rtc.c ****   }
 3939              		.loc 1 2681 15 view .LVU1215
 3940 0028 0020     		movs	r0, #0
 3941              	.LVL273:
2681:./Library/stm32f4xx_rtc.c ****   }
 3942              		.loc 1 2681 15 view .LVU1216
 3943 002a 7047     		bx	lr
 3944              	.L291:
2677:./Library/stm32f4xx_rtc.c ****   }
 3945              		.loc 1 2677 15 view .LVU1217
 3946 002c 0120     		movs	r0, #1
 3947              	.LVL274:
2683:./Library/stm32f4xx_rtc.c **** }
 3948              		.loc 1 2683 3 is_stmt 1 view .LVU1218
2684:./Library/stm32f4xx_rtc.c **** 
 3949              		.loc 1 2684 1 is_stmt 0 view .LVU1219
 3950 002e 7047     		bx	lr
 3951              	.L293:
 3952              		.align	2
 3953              	.L292:
 3954 0030 00280040 		.word	1073752064
 3955              		.cfi_endproc
 3956              	.LFE176:
 3958              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 3959              		.align	1
 3960              		.global	RTC_ClearITPendingBit
 3961              		.syntax unified
 3962              		.thumb
 3963              		.thumb_func
 3965              	RTC_ClearITPendingBit:
 3966              	.LVL275:
 3967              	.LFB177:
2699:./Library/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 3968              		.loc 1 2699 1 is_stmt 1 view -0
 3969              		.cfi_startproc
 3970              		@ args = 0, pretend = 0, frame = 0
 3971              		@ frame_needed = 0, uses_anonymous_args = 0
 3972              		@ link register save eliminated.
2700:./Library/stm32f4xx_rtc.c **** 
 3973              		.loc 1 2700 3 view .LVU1221
2703:./Library/stm32f4xx_rtc.c **** 
 3974              		.loc 1 2703 3 view .LVU1222
2706:./Library/stm32f4xx_rtc.c **** 
 3975              		.loc 1 2706 3 view .LVU1223
2709:./Library/stm32f4xx_rtc.c **** }
 3976              		.loc 1 2709 3 view .LVU1224
2709:./Library/stm32f4xx_rtc.c **** }
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 138


 3977              		.loc 1 2709 61 is_stmt 0 view .LVU1225
 3978 0000 C0F30F10 		ubfx	r0, r0, #4, #16
 3979              	.LVL276:
2709:./Library/stm32f4xx_rtc.c **** }
 3980              		.loc 1 2709 61 view .LVU1226
 3981 0004 40F08003 		orr	r3, r0, #128
2709:./Library/stm32f4xx_rtc.c **** }
 3982              		.loc 1 2709 91 view .LVU1227
 3983 0008 034A     		ldr	r2, .L295
 3984 000a D068     		ldr	r0, [r2, #12]
2709:./Library/stm32f4xx_rtc.c **** }
 3985              		.loc 1 2709 77 view .LVU1228
 3986 000c 00F08000 		and	r0, r0, #128
2709:./Library/stm32f4xx_rtc.c **** }
 3987              		.loc 1 2709 14 view .LVU1229
 3988 0010 60EA0300 		orn	r0, r0, r3
2709:./Library/stm32f4xx_rtc.c **** }
 3989              		.loc 1 2709 12 view .LVU1230
 3990 0014 D060     		str	r0, [r2, #12]
2710:./Library/stm32f4xx_rtc.c **** 
 3991              		.loc 1 2710 1 view .LVU1231
 3992 0016 7047     		bx	lr
 3993              	.L296:
 3994              		.align	2
 3995              	.L295:
 3996 0018 00280040 		.word	1073752064
 3997              		.cfi_endproc
 3998              	.LFE177:
 4000              		.text
 4001              	.Letext0:
 4002              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 4003              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 4004              		.file 4 "./CORE/stm32f4xx.h"
 4005              		.file 5 "./Library/stm32f4xx_rtc.h"
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 139


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_rtc.c
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:20     .text.RTC_ByteToBcd2:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:25     .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:75     .text.RTC_Bcd2ToByte:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:80     .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:108    .text.RTC_StructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:114    .text.RTC_StructInit:0000000000000000 RTC_StructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:140    .text.RTC_WriteProtectionCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:146    .text.RTC_WriteProtectionCmd:0000000000000000 RTC_WriteProtectionCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:179    .text.RTC_WriteProtectionCmd:0000000000000018 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:184    .text.RTC_EnterInitMode:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:190    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:278    .text.RTC_EnterInitMode:000000000000004c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:283    .text.RTC_ExitInitMode:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:289    .text.RTC_ExitInitMode:0000000000000000 RTC_ExitInitMode
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:307    .text.RTC_ExitInitMode:000000000000000c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:312    .text.RTC_Init:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:318    .text.RTC_Init:0000000000000000 RTC_Init
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:401    .text.RTC_Init:0000000000000044 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:406    .text.RTC_WaitForSynchro:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:412    .text.RTC_WaitForSynchro:0000000000000000 RTC_WaitForSynchro
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:504    .text.RTC_WaitForSynchro:000000000000004c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:509    .text.RTC_DeInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:515    .text.RTC_DeInit:0000000000000000 RTC_DeInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:673    .text.RTC_DeInit:0000000000000090 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:679    .text.RTC_RefClockCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:685    .text.RTC_RefClockCmd:0000000000000000 RTC_RefClockCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:755    .text.RTC_RefClockCmd:000000000000003c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:760    .text.RTC_BypassShadowCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:766    .text.RTC_BypassShadowCmd:0000000000000000 RTC_BypassShadowCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:812    .text.RTC_BypassShadowCmd:000000000000002c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:817    .text.RTC_SetTime:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:823    .text.RTC_SetTime:0000000000000000 RTC_SetTime
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:993    .text.RTC_SetTime:00000000000000a0 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:998    .text.RTC_TimeStructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1004   .text.RTC_TimeStructInit:0000000000000000 RTC_TimeStructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1031   .text.RTC_GetTime:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1037   .text.RTC_GetTime:0000000000000000 RTC_GetTime
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1118   .text.RTC_GetTime:0000000000000040 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1123   .text.RTC_GetSubSecond:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1129   .text.RTC_GetSubSecond:0000000000000000 RTC_GetSubSecond
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1151   .text.RTC_GetSubSecond:0000000000000008 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1156   .text.RTC_SetDate:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1162   .text.RTC_SetDate:0000000000000000 RTC_SetDate
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1319   .text.RTC_SetDate:0000000000000090 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1324   .text.RTC_DateStructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1330   .text.RTC_DateStructInit:0000000000000000 RTC_DateStructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1358   .text.RTC_GetDate:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1364   .text.RTC_GetDate:0000000000000000 RTC_GetDate
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1442   .text.RTC_GetDate:000000000000003c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1447   .text.RTC_SetAlarm:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1453   .text.RTC_SetAlarm:0000000000000000 RTC_SetAlarm
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1632   .text.RTC_SetAlarm:00000000000000a0 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1637   .text.RTC_AlarmStructInit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1643   .text.RTC_AlarmStructInit:0000000000000000 RTC_AlarmStructInit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1680   .text.RTC_GetAlarm:0000000000000000 $t
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 140


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1686   .text.RTC_GetAlarm:0000000000000000 RTC_GetAlarm
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1804   .text.RTC_GetAlarm:000000000000006c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1809   .text.RTC_AlarmCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1815   .text.RTC_AlarmCmd:0000000000000000 RTC_AlarmCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1936   .text.RTC_AlarmCmd:0000000000000060 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1941   .text.RTC_AlarmSubSecondConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:1947   .text.RTC_AlarmSubSecondConfig:0000000000000000 RTC_AlarmSubSecondConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2012   .text.RTC_AlarmSubSecondConfig:0000000000000028 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2017   .text.RTC_GetAlarmSubSecond:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2023   .text.RTC_GetAlarmSubSecond:0000000000000000 RTC_GetAlarmSubSecond
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2062   .text.RTC_GetAlarmSubSecond:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2067   .text.RTC_WakeUpClockConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2073   .text.RTC_WakeUpClockConfig:0000000000000000 RTC_WakeUpClockConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2110   .text.RTC_WakeUpClockConfig:0000000000000020 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2115   .text.RTC_SetWakeUpCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2121   .text.RTC_SetWakeUpCounter:0000000000000000 RTC_SetWakeUpCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2151   .text.RTC_SetWakeUpCounter:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2156   .text.RTC_GetWakeUpCounter:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2162   .text.RTC_GetWakeUpCounter:0000000000000000 RTC_GetWakeUpCounter
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2179   .text.RTC_GetWakeUpCounter:0000000000000008 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2184   .text.RTC_WakeUpCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2190   .text.RTC_WakeUpCmd:0000000000000000 RTC_WakeUpCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2306   .text.RTC_WakeUpCmd:0000000000000060 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2311   .text.RTC_DayLightSavingConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2317   .text.RTC_DayLightSavingConfig:0000000000000000 RTC_DayLightSavingConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2368   .text.RTC_DayLightSavingConfig:0000000000000028 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2373   .text.RTC_GetStoreOperation:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2379   .text.RTC_GetStoreOperation:0000000000000000 RTC_GetStoreOperation
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2396   .text.RTC_GetStoreOperation:000000000000000c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2401   .text.RTC_OutputConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2407   .text.RTC_OutputConfig:0000000000000000 RTC_OutputConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2458   .text.RTC_OutputConfig:0000000000000028 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2463   .text.RTC_CoarseCalibConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2469   .text.RTC_CoarseCalibConfig:0000000000000000 RTC_CoarseCalibConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2534   .text.RTC_CoarseCalibConfig:000000000000002c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2539   .text.RTC_CoarseCalibCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2545   .text.RTC_CoarseCalibCmd:0000000000000000 RTC_CoarseCalibCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2615   .text.RTC_CoarseCalibCmd:000000000000003c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2620   .text.RTC_CalibOutputCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2626   .text.RTC_CalibOutputCmd:0000000000000000 RTC_CalibOutputCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2672   .text.RTC_CalibOutputCmd:000000000000002c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2677   .text.RTC_CalibOutputConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2683   .text.RTC_CalibOutputConfig:0000000000000000 RTC_CalibOutputConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2720   .text.RTC_CalibOutputConfig:0000000000000020 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2725   .text.RTC_SmoothCalibConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2731   .text.RTC_SmoothCalibConfig:0000000000000000 RTC_SmoothCalibConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2838   .text.RTC_SmoothCalibConfig:0000000000000050 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2843   .text.RTC_TimeStampCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2849   .text.RTC_TimeStampCmd:0000000000000000 RTC_TimeStampCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2913   .text.RTC_TimeStampCmd:000000000000002c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2918   .text.RTC_GetTimeStamp:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:2924   .text.RTC_GetTimeStamp:0000000000000000 RTC_GetTimeStamp
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3054   .text.RTC_GetTimeStamp:0000000000000078 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3059   .text.RTC_GetTimeStampSubSecond:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3065   .text.RTC_GetTimeStampSubSecond:0000000000000000 RTC_GetTimeStampSubSecond
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3081   .text.RTC_GetTimeStampSubSecond:0000000000000008 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3086   .text.RTC_TamperTriggerConfig:0000000000000000 $t
ARM GAS  /var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s 			page 141


/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3092   .text.RTC_TamperTriggerConfig:0000000000000000 RTC_TamperTriggerConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3129   .text.RTC_TamperTriggerConfig:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3134   .text.RTC_TamperCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3140   .text.RTC_TamperCmd:0000000000000000 RTC_TamperCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3177   .text.RTC_TamperCmd:0000000000000018 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3182   .text.RTC_TamperFilterConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3188   .text.RTC_TamperFilterConfig:0000000000000000 RTC_TamperFilterConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3213   .text.RTC_TamperFilterConfig:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3218   .text.RTC_TamperSamplingFreqConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3224   .text.RTC_TamperSamplingFreqConfig:0000000000000000 RTC_TamperSamplingFreqConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3249   .text.RTC_TamperSamplingFreqConfig:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3254   .text.RTC_TamperPinsPrechargeDuration:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3260   .text.RTC_TamperPinsPrechargeDuration:0000000000000000 RTC_TamperPinsPrechargeDuration
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3285   .text.RTC_TamperPinsPrechargeDuration:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3290   .text.RTC_TimeStampOnTamperDetectionCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3296   .text.RTC_TimeStampOnTamperDetectionCmd:0000000000000000 RTC_TimeStampOnTamperDetectionCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3327   .text.RTC_TimeStampOnTamperDetectionCmd:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3332   .text.RTC_TamperPullUpCmd:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3338   .text.RTC_TamperPullUpCmd:0000000000000000 RTC_TamperPullUpCmd
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3369   .text.RTC_TamperPullUpCmd:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3374   .text.RTC_WriteBackupRegister:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3380   .text.RTC_WriteBackupRegister:0000000000000000 RTC_WriteBackupRegister
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3420   .text.RTC_WriteBackupRegister:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3425   .text.RTC_ReadBackupRegister:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3431   .text.RTC_ReadBackupRegister:0000000000000000 RTC_ReadBackupRegister
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3472   .text.RTC_ReadBackupRegister:000000000000001c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3477   .text.RTC_TamperPinSelection:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3483   .text.RTC_TamperPinSelection:0000000000000000 RTC_TamperPinSelection
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3508   .text.RTC_TamperPinSelection:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3513   .text.RTC_TimeStampPinSelection:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3519   .text.RTC_TimeStampPinSelection:0000000000000000 RTC_TimeStampPinSelection
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3544   .text.RTC_TimeStampPinSelection:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3549   .text.RTC_OutputTypeConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3555   .text.RTC_OutputTypeConfig:0000000000000000 RTC_OutputTypeConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3580   .text.RTC_OutputTypeConfig:0000000000000014 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3585   .text.RTC_SynchroShiftConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3591   .text.RTC_SynchroShiftConfig:0000000000000000 RTC_SynchroShiftConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3702   .text.RTC_SynchroShiftConfig:000000000000005c $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3707   .text.RTC_ITConfig:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3713   .text.RTC_ITConfig:0000000000000000 RTC_ITConfig
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3786   .text.RTC_ITConfig:0000000000000044 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3791   .text.RTC_GetFlagStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3797   .text.RTC_GetFlagStatus:0000000000000000 RTC_GetFlagStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3838   .text.RTC_GetFlagStatus:0000000000000020 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3843   .text.RTC_ClearFlag:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3849   .text.RTC_ClearFlag:0000000000000000 RTC_ClearFlag
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3878   .text.RTC_ClearFlag:0000000000000018 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3883   .text.RTC_GetITStatus:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3889   .text.RTC_GetITStatus:0000000000000000 RTC_GetITStatus
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3954   .text.RTC_GetITStatus:0000000000000030 $d
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3959   .text.RTC_ClearITPendingBit:0000000000000000 $t
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3965   .text.RTC_ClearITPendingBit:0000000000000000 RTC_ClearITPendingBit
/var/folders/yl/_q9l42k90g1g4mdhbs226msm0000gn/T//ccBRXCcd.s:3996   .text.RTC_ClearITPendingBit:0000000000000018 $d

NO UNDEFINED SYMBOLS
